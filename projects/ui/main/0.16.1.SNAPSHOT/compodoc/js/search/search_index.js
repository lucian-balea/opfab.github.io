var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.279,1,2.379]],["body/classes/AcceptLogIn.html",[0,0.546,1,3.707,2,0.497,3,0.022,4,0.022,5,0.026,6,2.179,7,1.632,8,1.062,9,4.058,10,1.601,11,1.54,12,3.244,13,3.189,14,0.959,15,0.16,16,0.361,17,0.883,18,1.488,19,1.219,20,0.19,21,0.259,22,1.094,23,3.931,24,0.21,25,6.077,26,0.287,27,0.005,28,0.282,29,0.287,30,4.206,31,0.443,32,0.386,33,3.305,34,0.085,35,0.368,36,3.188,37,1.88,38,2.212,39,1.88,40,0.061,41,0.578,42,2.129,43,3.25,44,1.153,45,2.179,46,3.531,47,2.715,48,3.785,49,3.004,50,4.725,51,4.048,52,3.531,53,2.231,54,3.456,55,2.616,56,3.456,57,3.303,58,3.531,59,3.531,60,1.427,61,3.531,62,2.231,63,3.25,64,3.56,65,3.611,66,1.916,67,2.231,68,1.955,69,1.811,70,0.975,71,2.288,72,2.882,73,1.108,74,2.231,75,2.231,76,1.995,77,3.25,78,2.231,79,2.231,80,3.25,81,3.071,82,1.88,83,1.476,84,1.916,85,0.847,86,1.916,87,1.955,88,1.632,89,2.288,90,2.288,91,3.305,92,3.224,93,1.882,94,3.224,95,1.363,96,1.363,97,1.274,98,2.288,99,2.288,100,2.231,101,2.037,102,2.288,103,2.037,104,1.659,105,2.231,106,2.179,107,3.147,108,2.231,109,3.008,110,1.339,111,2.037,112,2.231,113,0.571,114,2.288,115,2.231,116,2.288,117,2.231,118,1.555,119,2.288,120,2.288,121,2.288,122,2.824,123,2.288,124,2.288,125,2.288,126,2.179,127,0.002,128,0.003,129,0.002]],["title/classes/AcceptLogOut.html",[0,0.279,58,2.483]],["body/classes/AcceptLogOut.html",[0,0.547,1,3.408,2,0.504,3,0.022,4,0.022,5,0.026,6,2.206,7,1.652,8,1.063,9,4.073,10,1.122,11,1.08,12,3.248,13,3.207,14,0.961,15,0.162,16,0.364,17,0.826,18,1.313,19,1.222,20,0.189,21,0.307,23,2.908,24,0.18,27,0.005,31,0.449,32,0.391,33,2.317,34,0.086,35,0.372,36,3.211,37,1.903,38,2.232,39,1.903,40,0.061,41,0.586,42,2.156,43,3.273,44,1.167,45,2.194,46,3.556,47,2.74,48,3.812,49,3.05,50,4.743,51,4.071,52,3.556,53,2.259,54,3.48,55,2.639,56,3.48,57,3.322,58,3.89,59,3.556,60,1.439,61,3.556,62,2.259,63,3.273,64,3.581,65,3.636,66,1.94,67,2.259,68,1.979,69,1.833,70,0.987,71,2.317,72,2.908,73,1.122,74,2.259,75,2.259,76,2.02,77,3.273,78,2.259,79,2.259,80,3.273,81,3.093,82,1.903,83,1.483,84,1.94,85,0.851,86,1.94,87,1.979,88,1.652,89,2.317,90,2.317,91,3.335,92,3.253,93,1.899,94,3.253,95,1.366,96,1.366,97,1.276,98,2.317,99,2.317,100,2.259,101,2.063,102,2.317,103,2.063,104,1.68,105,2.259,106,2.206,107,3.721,108,2.259,109,3.035,110,1.351,111,2.063,112,2.259,113,0.578,114,3.335,115,3.253,116,3.335,117,3.253,118,1.574,119,2.317,120,2.317,121,2.317,122,2.85,123,2.317,124,2.317,125,2.317,126,2.206,127,0.002,128,0.003,129,0.002,130,6.132]],["title/classes/AcceptLogOutSuccess.html",[0,0.279,59,2.483]],["body/classes/AcceptLogOutSuccess.html",[0,0.548,1,3.418,2,0.506,3,0.022,4,0.022,5,0.026,6,2.218,7,1.661,8,1.064,9,4.079,10,1.128,11,1.085,12,3.25,13,3.215,14,0.962,15,0.163,16,0.366,17,0.828,18,1.317,19,1.223,20,0.189,21,0.183,23,2.92,24,0.126,27,0.005,31,0.451,32,0.393,33,2.329,34,0.086,35,0.374,36,3.22,37,1.913,38,2.24,39,1.913,40,0.061,41,0.589,42,2.167,43,3.283,44,1.174,45,2.201,46,3.567,47,2.751,48,3.823,49,3.016,50,4.75,51,4.081,52,3.567,53,2.272,54,3.491,55,2.65,56,3.491,57,3.331,58,3.567,59,3.9,60,1.445,61,3.567,62,2.272,63,3.283,64,3.59,65,3.647,66,1.951,67,2.272,68,1.99,69,1.843,70,0.993,71,2.329,72,2.92,73,1.128,74,2.272,75,2.272,76,2.031,77,3.283,78,2.272,79,2.272,80,3.283,81,3.102,82,1.913,83,1.486,84,1.951,85,0.853,86,1.951,87,1.99,88,1.661,89,2.329,90,2.329,91,3.348,92,3.266,93,1.906,94,3.266,95,1.367,96,1.367,97,1.277,98,2.329,99,2.329,100,2.272,101,2.074,102,2.329,103,2.074,104,1.689,105,2.272,106,2.218,107,3.188,108,2.272,109,3.567,110,1.588,111,2.074,112,2.272,113,0.581,114,2.329,115,2.272,116,2.329,117,2.272,118,2.276,119,3.348,120,2.329,121,2.329,122,2.861,123,2.329,124,2.329,125,2.329,126,2.218,127,0.002,128,0.003,129,0.002,131,4.282]],["title/classes/Action.html",[0,0.279,8,0.521]],["body/classes/Action.html",[0,0.527,2,0.541,3,0.024,4,0.024,5,0.028,8,0.67,11,1.635,17,0.454,19,1.307,20,0.162,21,0.41,24,0.134,26,0.312,27,0.005,28,0.501,29,0.312,32,0.592,34,0.089,40,0.061,41,0.887,70,1.06,85,1.057,95,1.265,96,1.265,97,1.182,127,0.003,128,0.003,129,0.002,132,2.702,133,4.105,134,4.943,135,5.626,136,3.608,137,4.658,138,2.925,139,5.106,140,5.106,141,5.106,142,4.289,143,3.474,144,4.575,145,2.37,146,0.998,147,3.342,148,1.867,149,2.126,150,0.935,151,5.106,152,2.17,153,1.457,154,2.883,155,2.877,156,2.877,157,2.877,158,2.554,159,2.877,160,4.289,161,2.785,162,2.877,163,2.702,164,4.058,165,2.112,166,3.194,167,2.702,168,4.058,169,1.586,170,2.348,171,2.21,172,2.72,173,1.969,174,2.785,175,2.877,176,2.554,177,3.928,178,3.928,179,2.992,180,2.877,181,2.166,182,2.877,183,2.785,184,2.785,185,2.9,186,2.877,187,2.877,188,2.877,189,1.934,190,2.488,191,2.625,192,2.877,193,2.877,194,2.877,195,2.877,196,2.702,197,2.999,198,2.877,199,1.13,200,2.625,201,2.785,202,2.044,203,2.785,204,2.427,205,2.488,206,1.9,207,2.877,208,2.877,209,3.05,210,2.877,211,2.877,212,2.877,213,4.058,214,2.877,215,2.877,216,2.877,217,2.877,218,3.928,219,1.359,220,1.359,221,2.785,222,2.785,223,2.785,224,2.126,225,1.9,226,2.877,227,2.877,228,2.146,229,2.877,230,2.554,231,3.928,232,2.877,233,2.877]],["title/components/ActionComponent.html",[234,1,235,1.718]],["body/components/ActionComponent.html",[0,0.276,3,0.026,4,0.035,5,0.042,8,0.987,14,0.667,15,0.189,16,0.406,17,0.493,20,0.18,21,0.292,24,0.279,26,0.339,27,0.005,28,0.564,29,0.339,34,0.105,40,0.03,44,1.362,73,1.309,85,0.932,95,0.674,96,0.674,97,0.63,127,0.002,128,0.003,129,0.002,136,2.934,146,1.057,149,2.308,205,4.576,219,1.476,220,2.03,225,3.663,234,1.557,235,2.881,236,2.272,237,1.753,238,2.138,239,1.78,240,1.78,241,4.967,242,2.843,243,1.676,244,3.592,245,3.113,246,7.811,247,2.411,248,6.833,249,2.325,250,7.009,251,1.584,252,3.16,253,6.98,254,3.382,255,7.811,256,7.319,257,6.481,258,4.967,259,7.549,260,7.811,261,6.833,262,6.833,263,4.967,264,4.967,265,4.967,266,4.967,267,4.967,268,1.564,269,2.199,270,4.967,271,0.896,272,1.652,273,2.702,274,3.024,275,2.573,276,4.457,277,4.457,278,6.833,279,4.967,280,4.967,281,4.967,282,4.967,283,4.967,284,6.833,285,1.78,286,1.753,287,1.78,288,1.78,289,1.78,290,1.78,291,1.517,292,1.582,293,1.78,294,1.78,295,1.78,296,1.727,297,1.652,298,1.753,299,1.78,300,1.78,301,1.78,302,1.137,303,1.78,304,1.538,305,2.449,306,2.411,307,1.605,308,3.015,309,1.78,310,1.78,311,1.701,312,1.78,313,1.701,314,2.419,315,2.449,316,1.701,317,2.449,318,1.701,319,1.78,320,1.676,321,1.78,322,1.701,323,1.78,324,3.015,325,1.701,326,1.78,327,1.652,328,2.449,329,1.701,330,1.676,331,1.652,332,1.753,333,1.78,334,1.701,335,2.411,336,1.78,337,1.727,338,1.628,339,2.449,340,1.701,341,1.78,342,3.015,343,1.652,344,1.78,345,1.701,346,1.701,347,1.753,348,1.676,349,1.78,350,1.701,351,1.701,352,1.78,353,1.676,354,1.78,355,1.701,356,1.78,357,1.727,358,1.701,359,1.676,360,1.78,361,1.701,362,1.456,363,1.78,364,1.701,365,2.411,366,1.701,367,2.799,368,1.701,369,1.78,370,1.701,371,1.78,372,1.701,373,1.78,374,1.652,375,1.701,376,1.676,377,1.701,378,1.701,379,1.873,380,1.701,381,1.78,382,1.701,383,1.701,384,1.701,385,1.259,386,1.676,387,1.676,388,1.78,389,1.676,390,1.78,391,1.676,392,1.753,393,1.78]],["title/classes/ActionStatus.html",[0,0.279,185,1.946]],["body/classes/ActionStatus.html",[0,0.529,2,0.548,3,0.024,4,0.024,5,0.028,8,0.481,11,1.65,17,0.459,19,1.308,20,0.155,21,0.411,24,0.136,26,0.316,27,0.005,28,0.504,29,0.316,32,0.597,34,0.09,40,0.061,41,0.895,70,1.074,85,1.054,95,1.269,96,1.269,97,1.186,127,0.003,128,0.003,129,0.002,132,2.736,134,3.963,135,5.587,136,3.618,137,4.684,138,2.901,139,5.134,140,5.134,141,5.134,142,2.658,143,2.153,146,1.007,147,3.372,148,1.891,149,2.153,150,0.947,151,5.134,152,2.197,153,1.476,154,2.909,155,2.914,156,2.914,157,2.914,158,2.587,159,2.914,160,4.318,161,2.821,162,2.914,163,2.736,164,4.094,165,2.121,166,3.222,167,2.736,168,4.094,169,1.597,170,2.369,171,2.229,172,2.739,173,1.994,174,2.821,175,2.914,176,2.587,177,3.963,178,3.963,179,3.003,180,2.914,181,2.175,182,2.914,183,2.821,184,2.821,185,3.167,186,2.914,187,2.914,188,2.914,189,1.958,190,2.52,191,2.658,192,2.914,193,2.914,194,2.914,195,2.914,196,2.736,197,3.025,198,2.914,199,1.144,200,2.658,201,2.821,202,2.07,203,2.821,204,2.458,205,2.52,206,1.924,207,2.914,208,2.914,209,3.071,210,2.914,211,2.914,212,2.914,213,4.094,214,2.914,215,2.914,216,2.914,217,2.914,218,3.963,219,1.376,220,1.376,221,2.821,222,2.821,223,2.821,224,2.153,225,1.924,226,2.914,227,2.914,228,2.165,229,2.914,230,2.587,231,3.963,232,2.914,233,2.914,394,4.157,395,4.633]],["title/classes/AddActionsAppear.html",[0,0.279,396,2.729]],["body/classes/AddActionsAppear.html",[0,0.544,2,0.625,3,0.027,4,0.027,5,0.032,8,1.035,14,0.965,15,0.201,16,0.423,17,0.707,18,1.666,19,1.23,20,0.192,21,0.225,22,1.374,24,0.237,26,0.361,27,0.005,28,0.354,29,0.361,31,0.556,32,0.484,34,0.085,35,0.462,40,0.061,41,0.726,60,1.673,70,1.224,83,1.718,85,0.949,95,1.327,96,1.327,97,1.24,113,1.288,127,0.002,128,0.003,129,0.002,146,1.611,148,2.156,171,2.44,199,1.305,396,4.695,397,3.119,398,7.125,399,5.282,400,4.481,401,3.031,402,4.386,403,1.922,404,4.081,405,2.685,406,4.501,407,4.501,408,2.06,409,4.278,410,4.176,411,4.501,412,4.501,413,1.845,414,1.288,415,1.339,416,1.507,417,1.507,418,2.049,419,3.119,420,1.487,421,1.636,422,3.322,423,3.322,424,3.322,425,3.322,426,3.322,427,3.322,428,3.322,429,3.322,430,3.216]],["title/classes/AddLightCardFailure.html",[0,0.279,431,2.242]],["body/classes/AddLightCardFailure.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.43,432,3.567,433,1.881,434,1.84,435,5.91,436,4.048,437,2.863,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881]],["title/classes/AddThirdActions.html",[0,0.279,461,2.242]],["body/classes/AddThirdActions.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.43,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,2.863,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,502,5.91,503,4.048]],["title/components/AppComponent.html",[234,1,311,1.718]],["body/components/AppComponent.html",[0,0.23,3,0.021,4,0.031,5,0.037,8,0.624,12,2.437,14,0.587,15,0.158,16,0.357,17,0.77,19,0.872,20,0.178,21,0.302,24,0.272,26,0.411,27,0.005,28,0.552,29,0.411,31,0.817,32,0.712,34,0.112,35,0.362,40,0.025,44,1.939,45,2.37,47,2.686,73,1.092,85,0.793,93,2.403,110,1.954,127,0.002,128,0.003,129,0.002,138,2.563,146,0.93,165,0.985,172,2.575,179,2.817,191,4.059,219,1.231,220,1.786,234,1.41,235,1.419,236,1.999,237,1.462,238,1.784,239,1.485,240,1.485,242,2.575,243,1.398,244,3.557,245,2.739,247,2.122,249,2.265,251,1.393,252,2.915,268,1.376,269,1.692,271,0.747,285,1.485,286,1.462,287,1.485,288,1.485,289,1.485,290,1.485,291,1.265,292,1.32,293,1.485,294,1.485,295,1.485,296,1.44,297,1.378,298,1.462,299,1.485,300,1.485,301,1.485,302,0.948,303,1.485,304,1.283,305,2.154,306,2.122,307,1.339,308,2.781,309,1.485,310,1.485,311,2.658,312,1.485,313,1.419,314,2.191,315,2.154,316,1.419,317,2.154,318,1.419,319,1.485,320,1.398,321,1.485,322,1.419,323,1.485,324,2.781,325,1.419,326,1.485,327,1.378,328,2.154,329,1.419,330,1.398,331,1.378,332,1.462,333,1.485,334,1.419,335,2.122,336,1.485,337,1.44,338,1.358,339,2.154,340,1.419,341,1.485,342,2.781,343,1.378,344,1.485,345,1.419,346,1.419,347,1.462,348,1.398,349,1.485,350,1.419,351,1.419,352,1.485,353,1.398,354,1.485,355,1.419,356,1.485,357,1.44,358,1.419,359,1.398,360,1.485,361,1.419,362,1.214,363,1.485,364,1.419,365,2.122,366,1.419,367,2.535,368,1.419,369,1.485,370,1.419,371,1.485,372,1.419,373,1.485,374,1.378,375,1.419,376,1.398,377,1.419,378,1.419,379,1.648,380,1.419,381,1.485,382,1.419,383,1.419,384,1.419,385,1.05,386,1.398,387,1.398,388,1.485,389,1.398,390,1.485,391,1.398,392,1.462,393,1.485,454,1.283,467,2.541,474,2.794,504,4.144,505,4.684,506,7.074,507,6.011,508,7.074,509,5.512,510,7.074,511,5.811,512,7.76,513,5.997,514,6.011,515,1.462,516,6.946,517,7.074,518,4.95,519,6.011,520,6.011,521,6.011,522,4.684,523,4.076,524,6.011,525,4.144,526,5.512,527,6.011,528,4.684,529,5.394,530,4.441,531,3.449,532,6.011,533,4.144,534,4.144,535,4.144,536,4.144,537,1.939,538,4.144,539,4.144,540,4.239,541,4.144,542,2.922,543,2.803,544,1.151,545,1.151,546,1.182,547,3.061,548,4.144,549,3.718,550,3.229,551,3.781,552,3.438,553,1.965,554,4.144,555,4.144,556,2.146,557,3.718,558,3.27,559,1.151,560,4.144,561,4.144,562,4.144,563,4.144,564,4.144,565,4.144,566,4.144,567,3.229,568,4.144,569,4.144,570,4.239,571,4.144,572,4.144,573,4.144,574,2.378,575,4.144,576,4.144,577,4.144,578,1.926,579,4.144,580,4.144,581,4.144,582,4.144,583,4.144,584,3.915,585,6.011,586,6.011,587,6.011,588,3.438,589,2.922,590,3.229,591,3.718,592,2.523,593,2.447,594,3.229,595,4.144,596,2.922,597,4.144,598,3.718,599,4.144,600,3.229]],["title/modules/AppModule.html",[601,2.2,602,3.706]],["body/modules/AppModule.html",[0,0.314,3,0.029,4,0.038,5,0.046,17,0.56,27,0.005,34,0.125,40,0.035,57,2.387,73,1.488,127,0.003,128,0.003,129,0.003,271,1.018,273,3.071,274,3.438,275,4.591,285,2.023,286,1.993,287,2.023,288,2.023,289,2.023,290,2.023,291,1.724,292,1.798,293,2.023,294,2.023,295,2.023,296,1.963,297,1.878,298,1.993,299,2.023,300,2.023,301,2.023,302,1.292,303,2.023,304,1.748,311,3.476,334,3.241,351,3.241,355,3.241,359,3.194,361,3.241,368,3.241,526,4.399,542,5.253,543,3.819,601,2.476,602,7.814,603,2.858,604,3.24,605,5.075,606,4.399,607,2.995,608,5.066,609,5.066,610,5.066,611,5.066,612,6.992,613,6.808,614,6.808,615,6.402,616,4.399,617,3.438,618,5.646,619,4.052,620,7.449,621,4.052,622,7.449,623,5.646,624,7.449,625,2.924,626,4.685,627,6.684,628,7.449,629,3.334,630,5.804,631,5.804,632,2.858,633,5.646,634,5.804,635,5.646,636,3.819,637,5.646,638,5.646,639,5.066,640,5.646,641,4.171,642,2.795,643,2.795,644,6.684,645,4.684,646,4.684,647,3.819,648,4.684,649,5.804,650,4.684,651,5.646,652,5.646,653,4.684,654,4.684,655,4.684,656,5.646,657,5.646,658,5.646,659,5.066,660,5.646,661,5.646,662,5.066,663,5.646,664,5.646,665,3.551,666,3.677,667,3.677,668,5.646,669,5.646,670,5.646,671,5.646,672,5.646,673,5.646,674,4.171,675,4.399]],["title/modules/AppRoutingModule.html",[601,2.2,612,3.706]],["body/modules/AppRoutingModule.html",[0,0.326,3,0.03,4,0.039,5,0.047,8,0.608,12,1.839,17,0.581,27,0.005,34,0.101,40,0.052,63,2.668,64,2.668,68,2.721,73,1.543,82,2.616,127,0.003,128,0.004,129,0.003,165,2.347,179,2.781,197,2.721,199,1.446,206,3.168,234,1.167,269,1.648,271,1.056,285,2.098,286,2.066,287,2.098,288,2.098,289,2.098,290,2.098,291,1.788,292,1.865,293,2.098,294,2.098,295,2.098,296,2.035,297,1.947,298,2.066,299,2.098,300,2.098,301,2.098,302,1.34,303,2.098,314,1.813,359,2.574,505,4.562,558,3.185,603,2.963,607,3.106,612,5.636,619,3.185,621,4.149,627,5.254,639,5.254,676,5.855,677,4.326,678,7.629,679,5.166,680,5.636,681,5.855,682,3.359,683,8.485,684,4.259,685,8.485,686,6.329,687,7.293,688,8.99,689,5.855,690,5.855,691,7.005,692,7.005,693,5.855,694,5.855,695,4.858,696,5.855,697,5.855,698,2.567,699,5.855,700,5.855,701,4.858,702,4.858,703,3.813,704,5.855,705,5.855,706,5.855,707,5.254,708,5.855,709,4.798,710,4.858,711,3.951,712,4.858,713,5.855,714,5.855,715,5.855,716,4.562,717,4.858,718,5.855,719,5.855,720,5.855,721,8.485,722,5.855,723,7.629,724,5.855,725,2.616,726,5.855,727,3.961,728,3.682,729,3.961,730,5.855,731,5.855,732,5.855,733,5.855,734,5.855,735,5.855,736,5.855,737,7.629,738,5.855,739,3.458,740,5.855,741,4.858,742,5.855,743,5.855]],["title/interfaces/AppState.html",[545,1.393,744,1.946]],["body/interfaces/AppState.html",[3,0.027,4,0.027,5,0.033,12,2.838,15,0.203,16,0.425,20,0.189,27,0.005,34,0.127,35,0.465,40,0.055,49,2.878,110,1.784,127,0.002,128,0.003,129,0.002,146,1.398,165,2.059,200,4.11,314,2.798,338,2.962,362,2.648,379,2.477,420,2.016,545,1.99,679,5.666,684,5.045,698,3.962,744,2.065,745,2.896,746,5.323,747,4.794,748,7.184,749,7.184,750,7.184,751,7.184,752,7.184,753,7.184,754,8.658,755,7.184,756,7.184,757,7.184,758,7.184,759,5.323,760,5.051,761,4.148,762,4.777,763,9.899,764,7.163,765,5.323,766,7.163,767,7.163,768,2.757,769,2.824,770,7.163,771,5.323,772,5.943,773,5.323,774,5.943,775,5.323,776,5.323,777,5.943,778,5.323,779,7.163,780,4.777,781,7.163,782,5.323,783,7.163,784,5.323,785,5.323,786,7.163,787,5.323,788,7.163,789,5.323,790,7.163,791,5.323,792,7.163,793,5.323,794,7.163,795,5.323,796,7.163,797,5.323,798,5.323,799,5.323,800,4.361,801,5.323,802,5.323,803,5.323,804,5.943,805,5.323,806,5.323,807,5.323,808,5.943,809,5.323,810,5.323,811,4.777,812,5.943,813,5.323,814,5.323,815,5.323,816,5.943,817,5.323,818,5.323,819,5.943,820,5.323,821,5.323,822,5.943,823,5.323,824,7.163,825,5.323,826,5.323,827,5.943,828,5.323,829,5.581,830,5.323,831,4.777,832,4.777,833,5.323,834,7.163,835,4.777,836,4.777,837,5.323]],["title/classes/ApplyFilter.html",[0,0.279,838,2.962]],["body/classes/ApplyFilter.html",[0,0.47,2,0.815,3,0.036,4,0.036,5,0.042,8,0.99,14,0.894,15,0.263,16,0.502,17,0.839,18,1.529,19,1.177,20,0.196,21,0.294,22,1.793,24,0.269,26,0.471,27,0.005,28,0.462,29,0.471,31,0.726,32,0.632,34,0.109,35,0.602,40,0.058,41,0.948,44,1.889,45,2.583,83,1.506,95,1.147,96,1.147,97,1.072,127,0.003,128,0.004,129,0.003,138,1.993,150,1.409,385,2.319,434,2.411,684,4.722,838,5.634,839,5.369,840,8.457,841,6.891,842,7.589,843,4.662,844,4.488,845,5.149,846,4.334,847,5.369,848,3.954,849,5.718,850,6.184,851,4.334,852,5.964,853,6.184,854,6.184,855,5.718]],["title/injectables/ArchiveEffects.html",[822,4.162,856,1.393]],["body/injectables/ArchiveEffects.html",[0,0.308,3,0.029,4,0.029,5,0.034,8,0.858,10,1.94,11,1.866,15,0.212,16,0.437,20,0.156,21,0.237,24,0.243,26,0.379,27,0.005,28,0.372,29,0.379,31,0.776,32,0.675,34,0.121,35,0.485,40,0.034,70,2.227,93,2.28,95,0.753,96,0.753,97,0.703,104,3.26,110,2.075,113,1.194,127,0.003,128,0.003,129,0.003,150,1.134,165,2.093,169,2.071,181,2.147,202,4.094,209,3.592,220,2.187,249,1.94,271,1,314,2.28,385,1.866,413,1.27,438,1.671,439,1.718,440,1.694,515,1.958,537,2.511,544,1.541,545,1.541,546,1.583,559,1.541,578,4.376,711,5.115,822,6.108,856,2.045,857,2.432,858,5.547,859,8.264,860,8.264,861,5.733,862,5.547,863,6.504,864,7.363,865,5.737,866,4.88,867,6.108,868,7.363,869,7.363,870,7.363,871,7.363,872,7.363,873,6.208,874,5.598,875,7.899,876,4.005,877,5.547,878,7.363,879,7.363,880,7.363,881,5.122,882,7.363,883,7.363,884,7.363,885,7.363,886,6.607,887,5.547,888,3.017,889,2.873,890,4.322,891,2.432,892,2.631,893,4.098,894,1.958,895,3.613,896,3.377,897,3.276,898,4.602,899,5.547,900,4.978,901,3.489,902,3.377,903,5.547]],["title/components/ArchiveFiltersComponent.html",[234,1,313,1.718]],["body/components/ArchiveFiltersComponent.html",[0,0.221,3,0.02,4,0.03,5,0.036,14,0.569,15,0.151,16,0.346,17,0.393,20,0.17,21,0.169,24,0.269,26,0.271,27,0.005,28,0.509,29,0.271,31,0.418,32,0.633,34,0.111,35,0.347,40,0.046,41,0.545,44,1.087,73,1.045,85,0.595,88,2.949,110,1.865,127,0.004,128,0.003,129,0.002,138,1.147,143,1.844,146,0.901,150,1.554,161,4.201,165,2.133,166,1.964,169,1.464,179,1.3,181,2.233,209,2.816,219,1.179,220,2.259,234,1.375,235,1.359,236,1.937,237,1.4,238,1.708,239,1.422,240,1.422,242,2.511,243,1.339,244,3.548,245,2.653,247,2.055,249,1.045,251,1.35,252,2.855,268,1.333,269,1.942,271,0.715,273,2.158,274,2.415,275,2.055,285,1.422,286,1.4,287,1.422,288,1.422,289,1.422,290,1.422,291,1.778,292,1.264,293,1.422,294,1.422,295,1.422,296,1.379,297,1.319,298,1.4,299,1.422,300,1.422,301,1.422,302,0.908,303,1.422,304,1.229,305,2.087,306,3.087,307,1.282,308,2.724,309,1.422,310,1.422,311,1.359,312,1.422,313,2.603,314,2.956,315,2.087,316,1.359,317,2.087,318,1.359,319,1.422,320,1.339,321,1.422,322,1.359,323,1.422,324,2.724,325,1.359,326,1.422,327,1.319,328,2.087,329,1.359,330,1.339,331,1.319,332,1.4,333,1.422,334,1.359,335,2.055,336,1.422,337,1.379,338,1.3,339,2.087,340,1.359,341,1.422,342,2.724,343,1.319,344,1.422,345,1.359,346,1.359,347,1.4,348,1.339,349,1.422,350,1.359,351,1.359,352,1.422,353,1.339,354,1.422,355,1.359,356,1.422,357,1.379,358,1.359,359,1.339,360,1.422,361,1.359,362,1.163,363,1.422,364,1.359,365,2.055,366,1.359,367,2.472,368,1.359,369,1.422,370,1.359,371,1.422,372,1.359,373,1.422,374,1.319,375,1.359,376,2.732,377,1.359,378,1.359,379,2.219,380,1.359,381,1.422,382,1.359,383,1.359,384,1.359,385,1.476,386,1.339,387,1.339,388,1.422,389,1.339,390,1.422,391,1.339,392,1.4,393,1.422,515,1.4,537,2.509,544,1.102,545,1.102,546,1.132,553,1.882,556,2.055,559,1.102,578,1.844,589,4.107,600,5.923,632,2.008,866,2.343,881,4.404,886,3.56,904,6.564,905,7.722,906,3.56,907,6.899,908,5.225,909,6.899,910,6.899,911,4.201,912,4.866,913,7.602,914,5.165,915,5.823,916,3.967,917,3.967,918,4.244,919,3.967,920,5.823,921,3.967,922,3.967,923,3.967,924,3.967,925,3.091,926,5.501,927,3.967,928,3.292,929,3.967,930,3.967,931,5.225,932,5.225,933,2.415,934,5.225,935,3.56,936,5.225,937,3.56,938,5.225,939,3.56,940,5.225,941,3.56,942,5.225,943,3.967,944,3.967,945,2.798,946,3.967,947,1.773,948,3.967,949,3.967,950,3.967,951,5.823,952,3.967,953,3.967,954,3.967,955,3.967,956,3.292,957,3.56,958,3.56,959,3.56,960,3.967,961,3.967,962,3.967,963,3.967,964,3.967,965,5.823,966,3.967,967,3.967,968,3.967,969,3.967,970,3.967,971,3.967,972,3.967,973,3.967,974,3.967,975,5.823,976,3.56,977,6.191,978,5.225,979,3.56,980,3.967,981,3.967,982,3.091,983,3.967]],["title/components/ArchiveListComponent.html",[234,1,316,1.718]],["body/components/ArchiveListComponent.html",[0,0.283,3,0.026,4,0.036,5,0.042,14,0.679,15,0.194,17,0.785,20,0.168,21,0.217,24,0.25,26,0.348,27,0.005,28,0.569,29,0.348,34,0.112,35,0.445,40,0.031,44,1.395,73,1.341,110,2.024,127,0.002,128,0.003,129,0.002,137,2.92,146,1.075,219,1.512,220,2.525,225,3.285,234,1.577,235,1.743,236,2.31,237,1.796,238,2.191,239,1.824,240,1.824,242,2.879,243,1.717,244,3.597,245,3.166,247,2.452,251,1.611,252,3.192,254,3.439,268,1.165,269,1.956,271,0.918,285,1.824,286,1.796,287,1.824,288,1.824,289,1.824,290,1.824,291,1.554,292,1.621,293,1.824,294,1.824,295,1.824,296,1.769,297,1.692,298,1.796,299,1.824,300,1.824,301,1.824,302,1.165,303,1.824,304,1.576,305,2.49,306,2.452,307,1.644,308,3.046,309,1.824,310,1.824,311,1.743,312,1.824,313,1.743,314,3.039,315,2.49,316,2.911,317,2.49,318,1.743,319,1.824,320,1.717,321,1.824,322,1.743,323,1.824,324,3.046,325,1.743,326,1.824,327,1.692,328,2.49,329,1.743,330,1.717,331,1.692,332,1.796,333,1.824,334,1.743,335,2.452,336,1.824,337,1.769,338,1.668,339,2.49,340,1.743,341,1.824,342,3.046,343,1.692,344,1.824,345,1.743,346,1.743,347,1.796,348,1.717,349,1.824,350,1.743,351,1.743,352,1.824,353,1.717,354,1.824,355,1.743,356,1.824,357,1.769,358,1.743,359,1.717,360,1.824,361,1.743,362,1.492,363,1.824,364,1.743,365,2.452,366,1.743,367,2.835,368,1.743,369,1.824,370,1.743,371,1.824,372,1.743,373,1.824,374,1.692,375,1.743,376,1.717,377,1.743,378,1.743,379,1.904,380,1.743,381,1.824,382,1.743,383,1.743,384,1.743,385,1.29,386,1.717,387,1.717,388,1.824,389,1.717,390,1.824,391,1.717,392,1.796,393,1.824,438,2.383,439,1.576,440,1.554,454,1.576,457,3.405,481,3.405,515,1.796,537,2.168,544,1.414,545,1.414,546,1.452,559,1.414,592,4.23,593,4.103,594,3.966,684,3.879,891,2.232,894,1.796,904,6.274,984,7.382,985,4.567,986,7.098,987,6.234,988,6.234,989,5.09,990,5.09,991,2.841,992,4.567,993,4.567,994,3.966,995,5.413,996,3.966,997,3.966,998,4.223]],["title/components/ArchiveListPageComponent.html",[234,1,318,1.718]],["body/components/ArchiveListPageComponent.html",[0,0.261,3,0.024,4,0.034,5,0.04,14,0.641,15,0.179,16,0.39,17,0.465,20,0.169,21,0.2,24,0.263,26,0.448,27,0.005,28,0.579,29,0.448,34,0.112,35,0.41,40,0.029,44,1.285,73,1.235,110,1.973,127,0.002,128,0.003,129,0.002,146,1.016,219,1.393,220,3.073,225,1.947,234,1.51,235,1.605,236,2.183,237,1.654,238,2.018,239,1.68,240,1.68,242,2.757,243,1.582,244,3.582,245,2.991,247,2.316,251,1.521,252,3.082,268,1.502,269,2.31,271,0.845,285,1.68,286,1.654,287,1.68,288,1.68,289,1.68,290,1.68,291,1.432,292,1.493,293,1.68,294,1.68,295,1.68,296,1.63,297,1.559,298,1.654,299,1.68,300,1.68,301,1.68,302,1.073,303,1.68,304,1.452,305,2.352,306,2.316,307,1.515,308,2.941,309,1.68,310,1.68,311,1.605,312,1.68,313,1.605,314,2.99,315,2.352,316,1.605,317,2.352,318,2.81,319,1.68,320,1.582,321,1.68,322,1.605,323,1.68,324,2.941,325,1.605,326,1.68,327,1.559,328,2.352,329,1.605,330,1.582,331,1.559,332,1.654,333,1.68,334,1.605,335,2.316,336,1.68,337,1.63,338,1.536,339,2.352,340,1.605,341,1.68,342,2.941,343,1.559,344,1.68,345,1.605,346,1.605,347,1.654,348,1.582,349,1.68,350,1.605,351,1.605,352,1.68,353,1.582,354,1.68,355,1.605,356,1.68,357,1.63,358,1.605,359,1.582,360,1.68,361,1.605,362,1.374,363,1.68,364,1.605,365,2.316,366,1.605,367,2.714,368,1.605,369,1.68,370,1.605,371,1.68,372,1.605,373,1.68,374,1.559,375,1.605,376,1.582,377,1.605,378,1.605,379,1.799,380,1.605,381,1.68,382,1.605,383,1.605,384,1.605,385,1.188,386,1.582,387,1.582,388,1.68,389,1.582,390,1.68,391,1.582,392,1.654,393,1.68,454,1.452,515,1.654,537,2.519,544,1.302,545,1.302,546,1.337,553,2.223,559,1.302,578,2.179,711,3.4,725,2.095,891,2.056,894,1.654,897,2.768,898,3.889,904,6.482,911,4.611,912,6.092,956,3.889,957,4.206,958,4.206,959,4.206,984,7.626,991,2.617,993,4.206,999,8.248,1000,4.688,1001,7.574,1002,6.564,1003,7.574,1004,6.564,1005,6.564,1006,4.688,1007,6.564,1008,4.688,1009,6.564,1010,4.688,1011,4.688,1012,4.688,1013,3.463,1014,4.688,1015,3.889,1016,4.688,1017,3.306,1018,4.688,1019,4.688,1020,6.314,1021,6.564,1022,6.564,1023,6.564,1024,6.564,1025,6.564]],["title/classes/ArchiveQuerySuccess.html",[0,0.279,896,3.054]],["body/classes/ArchiveQuerySuccess.html",[0,0.531,2,0.688,3,0.03,4,0.03,5,0.036,8,1.023,10,2.002,14,0.949,15,0.222,16,0.451,17,0.754,18,1.666,19,1.216,20,0.195,21,0.248,22,1.514,24,0.249,26,0.397,27,0.005,28,0.39,29,0.397,31,0.613,32,0.534,34,0.101,35,0.509,40,0.06,41,0.8,83,1.699,85,0.595,95,1.319,96,1.319,97,1.232,113,1.148,127,0.004,128,0.004,129,0.003,146,1.176,150,1.553,209,2.375,228,1.935,302,1.332,314,2.955,385,1.475,410,3.935,413,1.936,414,1.419,415,1.475,416,1.66,417,1.66,434,2.229,438,1.753,439,1.802,440,1.777,454,1.802,456,2.221,485,2.334,531,3.339,711,4.646,866,4.996,881,3.165,895,3.79,896,5.461,897,4.996,901,3.66,902,5.151,1026,3.79,1027,7.598,1028,5.819,1029,5.358,1030,5.321,1031,3.79,1032,5.151,1033,4.104,1034,4.104,1035,4.104,1036,3.936,1037,4.104,1038,4.104,1039,3.936]],["title/interfaces/ArchiveState.html",[744,1.946,748,4.162]],["body/interfaces/ArchiveState.html",[3,0.037,4,0.037,5,0.044,15,0.277,16,0.518,20,0.184,27,0.005,34,0.112,40,0.053,85,0.957,127,0.003,128,0.004,129,0.003,138,2.707,150,1.985,165,1.726,170,2.642,179,2.38,181,2.129,438,2.187,439,2.248,440,2.217,485,3.986,584,6.471,711,5.03,744,2.817,745,3.949,748,7.766,844,4.729,881,5.404,901,4.566,1036,6.721,1040,7.26,1041,7.26,1042,7.26,1043,7.26,1044,7.26,1045,2.864]],["title/components/ArchivesComponent.html",[234,1,320,1.693]],["body/components/ArchivesComponent.html",[0,0.295,3,0.027,4,0.037,5,0.044,14,0.697,15,0.202,16,0.424,17,0.526,20,0.171,21,0.226,24,0.254,26,0.362,27,0.005,28,0.579,29,0.362,34,0.113,35,0.463,40,0.032,44,1.453,73,1.397,110,2.048,127,0.002,128,0.003,129,0.002,146,1.105,150,1.083,219,1.575,220,2.122,234,1.61,235,1.815,236,2.375,237,1.87,238,2.281,239,1.899,240,1.899,242,2.939,243,1.788,244,3.604,245,3.254,247,2.52,251,1.655,252,3.246,268,1.213,269,1.492,271,0.956,285,1.899,286,1.87,287,1.899,288,1.899,289,1.899,290,1.899,291,1.619,292,1.688,293,1.899,294,1.899,295,1.899,296,1.842,297,1.762,298,1.87,299,1.899,300,1.899,301,1.899,302,1.213,303,1.899,304,1.641,305,2.559,306,2.52,307,1.712,308,3.097,309,1.899,310,1.899,311,1.815,312,1.899,313,1.815,314,2.501,315,2.559,316,1.815,317,2.559,318,1.815,319,1.899,320,2.916,321,1.899,322,1.815,323,1.899,324,3.097,325,1.815,326,1.899,327,1.762,328,2.559,329,1.815,330,1.788,331,1.762,332,1.87,333,1.899,334,1.815,335,2.52,336,1.899,337,1.842,338,1.737,339,2.559,340,1.815,341,1.899,342,3.097,343,1.762,344,1.899,345,1.815,346,1.815,347,1.87,348,1.788,349,1.899,350,1.815,351,1.815,352,1.899,353,1.788,354,1.899,355,1.815,356,1.899,357,1.842,358,1.815,359,1.788,360,1.899,361,1.815,362,1.553,363,1.899,364,1.815,365,2.52,366,1.815,367,2.894,368,1.815,369,1.899,370,1.815,371,1.899,372,1.815,373,1.899,374,1.762,375,1.815,376,1.788,377,1.815,378,1.815,379,1.957,380,1.815,381,1.899,382,1.815,383,1.815,384,1.815,385,1.343,386,1.788,387,1.788,388,1.899,389,1.788,390,1.899,391,1.788,392,1.87,393,1.899,438,1.596,439,1.641,440,1.619,454,1.641,457,3.477,481,3.477,515,1.87,537,2.473,544,1.472,545,1.472,546,1.512,559,1.472,686,5.925,891,2.324,894,1.87,900,4.755,991,2.959,992,4.755,1015,4.397,1017,3.737,1046,5.3,1047,8.077,1048,7.141,1049,7.141,1050,5.3,1051,5.3,1052,5.3,1053,4.397,1054,5.3,1055,4.755,1056,5.3]],["title/modules/ArchivesModule.html",[601,2.2,1057,3.908]],["body/modules/ArchivesModule.html",[0,0.341,3,0.032,4,0.041,5,0.048,17,0.608,27,0.005,34,0.123,40,0.038,57,2.593,73,1.617,127,0.003,128,0.004,129,0.003,220,2.336,271,1.106,273,3.337,274,3.735,275,4.072,285,2.198,286,2.165,287,2.198,288,2.198,289,2.198,290,2.198,291,1.874,292,1.954,293,2.198,294,2.198,295,2.198,296,2.133,297,2.04,298,2.165,299,2.198,300,2.198,301,2.198,302,1.404,303,2.198,304,1.9,313,3.315,316,3.315,318,3.315,320,3.266,340,3.315,364,3.315,601,2.69,603,3.105,604,3.52,605,5.282,606,3.623,607,3.255,616,4.643,617,3.735,619,4.277,621,4.277,626,4.945,629,3.623,630,6.126,631,6.126,632,3.105,634,6.126,636,4.15,641,5.809,642,3.036,643,3.036,686,5.09,905,5.09,984,6.523,999,5.505,1057,8.205,1058,5.505,1059,5.505,1060,5.505,1061,7.151,1062,6.826,1063,6.135,1064,9.461,1065,6.135,1066,5.505,1067,5.505,1068,6.135,1069,5.505,1070,5.505,1071,7.055,1072,5.505,1073,5.505,1074,5.505]],["title/modules/ArchivesRoutingModule.html",[601,2.2,1061,3.706]],["body/modules/ArchivesRoutingModule.html",[0,0.378,3,0.035,4,0.043,5,0.051,17,0.675,27,0.005,34,0.119,40,0.042,73,1.793,127,0.003,128,0.004,129,0.003,165,1.617,234,1.893,271,1.227,285,2.438,286,2.401,287,2.438,288,2.438,289,2.438,290,2.438,291,2.077,292,2.167,293,2.438,294,2.438,295,2.438,296,2.365,297,2.262,298,2.401,299,2.438,300,2.438,301,2.438,302,1.557,303,2.438,320,2.831,327,3.025,343,2.79,490,3.202,603,3.443,607,3.609,619,3.7,621,4.564,677,5.026,680,6.199,681,5.925,682,3.903,687,7.341,691,5.3,692,6.537,702,5.644,1061,6.199,1066,6.104,1075,6.803,1076,6.104,1077,6.104,1078,5.3,1079,5.644,1080,6.104,1081,8.163,1082,6.104,1083,6.104,1084,6.104,1085,6.104,1086,5.3]],["title/classes/AuthObject.html",[0,0.279,1087,3.538]],["body/classes/AuthObject.html",[0,0.451,2,0.267,3,0.012,4,0.012,5,0.014,7,0.877,8,0.234,9,2.186,12,2.832,13,1.528,14,0.366,15,0.086,16,0.222,17,0.969,18,0.626,20,0.145,21,0.238,23,3.637,24,0.182,26,0.256,27,0.005,28,0.321,29,0.328,31,0.238,34,0.106,35,0.197,36,2.981,37,1.01,38,1.363,40,0.047,41,0.311,43,1.029,47,1.674,49,1.193,55,0.973,63,3.494,64,2.543,66,1.029,68,1.05,72,3.351,73,2.021,76,2.647,77,1.706,80,1.706,81,4.083,82,1.01,84,3.494,85,1.011,86,4.067,87,3.564,88,2.165,101,1.094,103,2.703,104,3.27,110,1.787,111,1.094,113,0.651,122,1.741,127,0.001,128,0.002,129,0.001,138,2.137,145,1.17,150,0.462,165,2.243,169,2.114,170,2.031,171,1.283,172,1.746,179,1.572,181,2.177,189,0.955,190,1.229,204,2.545,206,0.938,209,1.528,228,2.697,249,2.419,269,2.484,271,0.407,291,1.465,297,1.856,302,1.277,331,0.751,379,1.696,385,0.573,403,0.822,414,0.913,420,0.636,451,0.835,454,0.7,470,0.785,511,3.936,518,3.454,523,1.072,537,2.026,540,1.593,544,0.628,545,0.628,546,0.645,553,1.072,556,1.17,558,4.594,559,1.332,570,2.641,578,2.23,592,2.28,625,1.17,647,1.528,665,2.356,666,2.439,667,3.124,698,2.104,703,3.635,725,1.674,727,3.245,729,3.245,739,3.296,744,2.165,747,1.987,768,1.17,769,1.199,856,1.04,891,1.642,892,1.072,894,0.797,947,2.144,991,1.261,1020,2.641,1045,0.891,1087,4.363,1088,1.593,1089,3.51,1090,5.219,1091,4.571,1092,4.571,1093,2.259,1094,2.259,1095,2.259,1096,2.259,1097,2.259,1098,2.259,1099,3.116,1100,1.593,1101,1.528,1102,1.472,1103,3.51,1104,1.528,1105,1.669,1106,5.845,1107,1.593,1108,1.17,1109,1.261,1110,4.123,1111,2.767,1112,2.767,1113,2.767,1114,3.936,1115,2.767,1116,1.669,1117,1.669,1118,1.669,1119,1.669,1120,1.334,1121,1.593,1122,2.767,1123,1.593,1124,1.669,1125,1.669,1126,3.544,1127,1.669,1128,1.669,1129,1.669,1130,1.669,1131,1.669,1132,1.669,1133,1.669,1134,1.669,1135,1.669,1136,1.669,1137,5.408,1138,1.669,1139,4.982,1140,1.669,1141,1.593,1142,1.261,1143,1.669,1144,1.669,1145,1.669,1146,1.669,1147,2.767,1148,1.669,1149,1.669,1150,4.571,1151,1.593,1152,1.669,1153,1.669,1154,1.669,1155,1.669,1156,1.669,1157,1.669,1158,1.669,1159,1.669,1160,3.124,1161,1.296,1162,1.669,1163,1.334,1164,1.669,1165,5.219,1166,5.461,1167,2.767,1168,4.571,1169,1.669,1170,3.544,1171,1.669,1172,2.767,1173,1.669,1174,4.123,1175,2.767,1176,1.669,1177,1.669,1178,1.669,1179,1.669,1180,1.669,1181,1.669,1182,2.767,1183,1.669,1184,2.767,1185,2.767,1186,1.669,1187,1.669,1188,2.641,1189,1.669,1190,2.767,1191,1.669,1192,1.669,1193,1.593,1194,3.124,1195,1.669,1196,1.528,1197,1.669,1198,1.669,1199,1.669,1200,2.767,1201,1.669,1202,3.544,1203,1.669,1204,5.213,1205,3.544,1206,3.544,1207,3.544,1208,3.544,1209,3.544,1210,3.383,1211,1.669,1212,1.669,1213,1.669,1214,1.669,1215,2.767,1216,2.641,1217,2.767,1218,1.593,1219,2.609,1220,2.641,1221,2.767,1222,2.037,1223,1.669,1224,3.544,1225,2.753,1226,2.767,1227,1.669,1228,2.767,1229,1.669,1230,2.641,1231,1.669,1232,2.767,1233,1.669,1234,1.669,1235,2.767,1236,2.767,1237,1.669,1238,1.669,1239,1.669,1240,1.669,1241,1.669,1242,1.669,1243,1.669,1244,2.767,1245,1.669,1246,1.669,1247,1.669,1248,1.669,1249,1.669,1250,1.669,1251,1.669,1252,0.955,1253,1.669,1254,1.669,1255,1.669,1256,1.669,1257,1.669,1258,1.669,1259,1.669,1260,4.571,1261,4.123,1262,1.669,1263,1.669,1264,3.936,1265,1.669,1266,1.593,1267,1.669,1268,1.669,1269,2.833,1270,1.669,1271,2.767,1272,1.669,1273,2.767,1274,1.669,1275,1.528,1276,1.669,1277,1.669,1278,1.669,1279,1.669,1280,1.669,1281,1.669,1282,1.528,1283,1.669,1284,2.356,1285,1.669,1286,1.669,1287,1.669,1288,1.669,1289,1.669,1290,1.669,1291,1.669,1292,1.669,1293,1.669,1294,1.669,1295,1.669,1296,1.669,1297,1.669,1298,1.669,1299,2.767,1300,1.669,1301,1.669,1302,3.544,1303,2.767,1304,1.669,1305,1.669,1306,2.767,1307,2.767,1308,1.669,1309,1.669,1310,1.669,1311,1.669,1312,1.669,1313,1.669,1314,1.669,1315,3.544,1316,2.767,1317,1.593,1318,1.669,1319,1.669,1320,1.669,1321,1.528,1322,1.669,1323,1.669,1324,1.669,1325,1.669,1326,1.669,1327,1.669,1328,2.641,1329,1.669,1330,1.669,1331,1.669,1332,2.767,1333,2.767,1334,1.669,1335,1.669,1336,1.669,1337,1.669,1338,1.669,1339,1.669,1340,1.669,1341,1.669,1342,1.669,1343,1.669,1344,1.669,1345,1.421,1346,1.669,1347,3.544,1348,1.669,1349,2.767,1350,1.669,1351,1.669,1352,1.669,1353,1.669,1354,1.669,1355,1.669,1356,1.669,1357,1.669,1358,1.669,1359,1.669,1360,1.593,1361,1.669,1362,1.669,1363,1.669,1364,1.669,1365,1.669,1366,1.669,1367,1.669,1368,1.669,1369,1.669,1370,1.669,1371,1.669,1372,1.669,1373,1.669,1374,1.669,1375,1.669,1376,1.669,1377,1.229,1378,2.324,1379,3.544,1380,2.753,1381,2.767,1382,1.669,1383,1.669,1384,1.261,1385,1.669,1386,1.669,1387,1.593,1388,1.669,1389,1.669,1390,1.669,1391,1.199,1392,1.669,1393,1.669,1394,1.669,1395,4.123,1396,1.669,1397,3.936,1398,1.669,1399,1.669,1400,1.669,1401,3.245,1402,1.593,1403,1.669,1404,1.593,1405,1.669,1406,2.767,1407,2.641,1408,1.706,1409,1.669,1410,1.593,1411,1.669,1412,1.669,1413,2.641,1414,2.212,1415,1.669,1416,1.669,1417,1.593,1418,2.767,1419,1.669,1420,2.767,1421,1.669,1422,1.472,1423,1.669,1424,1.669,1425,1.669,1426,1.669,1427,1.669,1428,1.669,1429,1.669,1430,1.669,1431,2.767,1432,1.669,1433,1.669,1434,1.669,1435,1.669,1436,1.669]],["title/interfaces/AuthState.html",[744,1.946,749,4.162]],["body/interfaces/AuthState.html",[3,0.035,4,0.035,5,0.042,15,0.259,16,0.498,20,0.194,27,0.005,34,0.1,36,4.36,37,3.04,38,3.73,39,3.04,40,0.051,73,2.571,81,4.199,84,4.445,85,1.075,86,4.445,87,4.534,88,3.53,127,0.003,128,0.004,129,0.003,138,2.631,165,1.617,170,3.664,179,2.23,181,1.659,744,2.639,745,3.7,749,7.548,1437,6.803,1438,7.601,1439,9.756,1440,7.601,1441,6.803,1442,6.803]],["title/injectables/AuthenticationEffects.html",[777,4.162,856,1.393]],["body/injectables/AuthenticationEffects.html",[0,0.132,1,3.012,3,0.012,4,0.012,5,0.014,7,1.512,8,0.981,11,1.457,12,3.002,13,3.075,15,0.09,16,0.231,18,1.259,20,0.177,21,0.101,24,0.247,26,0.493,27,0.005,28,0.505,29,0.339,31,0.822,32,0.691,34,0.111,35,0.207,38,2.925,39,1.059,40,0.014,42,1.199,45,1.19,46,2.455,47,2.568,49,2.727,51,2.018,52,2.455,54,3.495,56,3.495,58,4.076,59,2.455,61,2.455,63,2.618,64,2.26,70,1.747,73,1.799,74,2.067,81,3.459,85,0.507,88,1.512,93,2.114,95,0.529,96,0.529,97,0.494,100,2.067,104,3.248,105,2.067,107,2.018,108,2.067,110,1.72,112,2.067,113,0.673,115,3.049,117,2.067,126,4.434,127,0.002,128,0.002,129,0.001,136,0.89,142,3.297,143,2.671,149,1.101,150,1.75,152,1.124,165,1.911,169,2.13,172,1.805,181,2.398,191,3.297,197,1.811,199,0.962,202,4.348,204,3.049,209,1.59,249,1.986,251,0.903,268,1.135,269,0.667,271,0.427,402,2.698,403,2.091,415,0.601,446,2.217,490,1.487,515,0.836,518,4.207,523,3.238,526,1.846,528,3.036,537,2.711,544,1.082,545,0.658,546,0.676,550,1.846,552,1.966,553,1.124,558,3.713,559,0.658,588,3.232,590,3.036,636,1.603,642,1.173,643,1.173,679,5.119,682,1.36,684,2.175,710,4.116,711,3.536,717,4.768,727,4.618,739,2.301,741,3.232,777,3.232,856,1.082,857,1.039,861,4.908,863,5.044,865,3.036,867,3.232,876,4.099,888,1.289,889,1.227,890,1.846,891,2.175,892,3.422,893,1.751,894,0.836,911,2.372,925,3.036,991,4.028,1013,1.751,1017,2.748,1045,0.935,1089,5.288,1102,1.543,1120,1.399,1137,2.748,1160,2.537,1193,2.748,1194,2.537,1196,4.618,1218,2.748,1252,3.185,1264,2.748,1328,1.671,1377,1.289,1378,2.403,1380,2.235,1402,4.052,1443,2.37,1444,5.746,1445,4.961,1446,4.961,1447,5.746,1448,4.961,1449,3.896,1450,5.746,1451,5.746,1452,4.477,1453,3.049,1454,3.498,1455,2.37,1456,3.896,1457,3.896,1458,3.896,1459,3.896,1460,2.635,1461,3.887,1462,3.896,1463,2.45,1464,3.896,1465,4.961,1466,2.37,1467,3.896,1468,3.896,1469,2.37,1470,3.896,1471,2.37,1472,3.896,1473,3.896,1474,2.37,1475,6.252,1476,6.827,1477,3.896,1478,5.319,1479,3.896,1480,3.896,1481,3.896,1482,4.324,1483,3.896,1484,3.896,1485,3.896,1486,3.896,1487,3.896,1488,3.896,1489,6.827,1490,5.746,1491,5.746,1492,5.746,1493,5.746,1494,6.827,1495,5.746,1496,5.986,1497,3.896,1498,3.896,1499,3.896,1500,3.896,1501,3.896,1502,3.896,1503,3.896,1504,4.88,1505,3.896,1506,3.896,1507,3.896,1508,3.496,1509,3.896,1510,3.896,1511,3.896,1512,3.896,1513,2.37,1514,3.896,1515,3.232,1516,2.878,1517,3.896,1518,3.896,1519,3.896,1520,2.537,1521,3.036,1522,2.45,1523,3.896,1524,3.896,1525,3.12,1526,6.827,1527,3.896,1528,2.37,1529,3.896,1530,3.896,1531,3.896,1532,4.961,1533,3.896,1534,3.896,1535,3.896,1536,3.896,1537,3.896,1538,3.896,1539,3.896,1540,2.37,1541,3.896,1542,5.156,1543,2.37,1544,2.537,1545,3.896,1546,3.896,1547,3.896,1548,6.349,1549,2.37,1550,3.896,1551,3.896,1552,3.896,1553,4.961,1554,3.896,1555,3.896,1556,2.45,1557,3.896,1558,3.896,1559,2.37,1560,3.896,1561,2.372,1562,3.896,1563,3.896,1564,2.37,1565,1.603,1566,2.37,1567,1.751,1568,1.603,1569,1.49,1570,1.751,1571,2.37,1572,2.37,1573,4.135,1574,6.349,1575,2.37,1576,2.37,1577,2.37,1578,2.37,1579,2.37,1580,1.846,1581,2.37,1582,2.37,1583,2.37,1584,2.37,1585,2.37,1586,2.37,1587,3.896,1588,2.37,1589,2.37,1590,3.896,1591,2.37,1592,2.37,1593,2.37,1594,2.37,1595,2.37,1596,2.37,1597,2.37]],["title/interfaces/AuthenticationModeHandler.html",[744,1.946,1139,3.538]],["body/interfaces/AuthenticationModeHandler.html",[0,0.441,3,0.012,4,0.012,5,0.014,7,0.883,8,0.236,9,1.717,12,2.837,13,1.538,14,0.368,15,0.087,17,0.937,18,0.63,20,0.127,21,0.206,23,3.647,24,0.165,26,0.329,27,0.005,28,0.376,29,0.257,31,0.24,34,0.107,35,0.199,36,2.155,37,1.017,38,1.371,40,0.047,41,0.313,43,1.037,47,1.684,49,1.2,55,0.98,63,3.503,64,2.554,66,1.037,68,1.058,72,3.362,73,2.026,76,2.287,77,1.717,80,1.717,81,4.088,82,1.017,84,2.83,85,1.003,86,3.856,87,3.574,88,2.175,101,1.102,103,2.715,104,3.206,110,1.792,111,1.102,113,0.654,122,1.751,127,0.001,128,0.002,129,0.001,138,2.223,150,0.465,165,2.246,169,2.116,170,2.04,171,1.29,172,1.755,179,1.58,181,2.181,189,0.962,190,1.238,204,2.558,206,1.565,209,1.538,228,2.465,249,2.423,251,0.873,268,1.283,269,2.588,271,0.41,291,1.472,297,1.864,302,1.283,331,0.757,379,1.703,385,0.577,403,0.828,414,1.176,420,0.641,451,0.841,454,0.705,470,0.791,511,4.381,518,3.468,523,1.079,537,2.032,540,1.605,544,0.632,545,0.632,546,0.649,553,1.079,556,1.179,558,4.604,559,1.339,570,2.657,578,2.241,592,2.294,625,1.179,647,1.539,665,2.37,666,2.454,667,3.14,698,2.114,703,3.651,725,1.684,727,3.262,729,3.262,739,3.31,744,2.41,745,1.238,747,1.999,768,1.179,769,1.207,856,1.047,891,1.652,892,1.079,894,0.803,947,2.155,991,1.27,1020,2.657,1045,0.898,1087,3.953,1088,1.605,1089,3.032,1090,4.946,1091,2.784,1092,1.681,1099,3.13,1100,1.605,1101,1.539,1102,1.482,1103,3.526,1104,1.539,1105,1.681,1106,5.858,1107,1.605,1108,1.179,1109,1.27,1110,4.141,1111,2.784,1112,2.784,1113,2.784,1114,3.953,1115,2.784,1116,1.681,1117,1.681,1118,1.681,1119,1.681,1120,1.344,1121,1.605,1122,2.784,1123,1.605,1124,1.681,1125,1.681,1126,3.562,1127,1.681,1128,1.681,1129,1.681,1130,1.681,1131,1.681,1132,1.681,1133,1.681,1134,1.681,1135,1.681,1136,1.681,1137,5.589,1138,1.681,1139,5.228,1140,1.681,1141,1.605,1142,1.27,1143,1.681,1144,1.681,1145,1.681,1146,1.681,1147,2.784,1148,1.681,1149,1.681,1150,4.589,1151,1.605,1152,1.681,1153,1.681,1154,1.681,1155,1.681,1156,1.681,1157,1.681,1158,1.681,1159,1.681,1160,3.14,1161,1.306,1162,1.681,1163,1.344,1164,1.681,1165,5.236,1166,5.477,1167,2.784,1168,4.589,1169,1.681,1170,3.562,1171,1.681,1172,2.784,1173,1.681,1174,4.141,1175,2.784,1176,1.681,1177,1.681,1178,1.681,1179,1.681,1180,1.681,1181,1.681,1182,2.784,1183,1.681,1184,2.784,1185,2.784,1186,1.681,1187,1.681,1188,2.657,1189,1.681,1190,2.784,1191,1.681,1192,1.681,1193,1.605,1194,3.14,1195,1.681,1196,1.539,1197,1.681,1198,1.681,1199,1.681,1200,2.784,1201,1.681,1202,3.562,1203,1.681,1204,5.228,1205,3.562,1206,3.562,1207,3.562,1208,3.562,1209,3.562,1210,3.4,1211,1.681,1212,1.681,1213,1.681,1214,1.681,1215,2.784,1216,2.657,1217,2.784,1218,1.605,1219,2.623,1220,2.657,1221,2.784,1222,2.049,1223,1.681,1224,3.562,1225,2.766,1226,2.784,1227,1.681,1228,2.784,1229,1.681,1230,2.657,1231,1.681,1232,2.784,1233,1.681,1234,1.681,1235,2.784,1236,2.784,1237,1.681,1238,1.681,1239,1.681,1240,1.681,1241,1.681,1242,1.681,1243,1.681,1244,2.784,1245,1.681,1246,1.681,1247,1.681,1248,1.681,1249,1.681,1250,1.681,1251,1.681,1252,0.962,1253,1.681,1254,1.681,1255,1.681,1256,1.681,1257,1.681,1258,1.681,1259,1.681,1260,4.589,1261,5.236,1262,1.681,1263,1.681,1264,3.953,1265,1.681,1266,1.605,1267,1.681,1268,1.681,1269,2.847,1270,1.681,1271,2.784,1272,1.681,1273,2.784,1274,1.681,1275,1.539,1276,1.681,1277,1.681,1278,1.681,1279,1.681,1280,1.681,1281,1.681,1282,1.539,1283,1.681,1284,2.37,1285,1.681,1286,1.681,1287,1.681,1288,1.681,1289,1.681,1290,1.681,1291,1.681,1292,1.681,1293,1.681,1294,1.681,1295,1.681,1296,1.681,1297,1.681,1298,1.681,1299,2.784,1300,1.681,1301,1.681,1302,3.562,1303,2.784,1304,1.681,1305,1.681,1306,2.784,1307,2.784,1308,1.681,1309,1.681,1310,1.681,1311,1.681,1312,1.681,1313,1.681,1314,1.681,1315,3.562,1316,2.784,1317,1.605,1318,1.681,1319,1.681,1320,1.681,1321,1.539,1322,1.681,1323,1.681,1324,1.681,1325,1.681,1326,1.681,1327,1.681,1328,2.657,1329,1.681,1330,1.681,1331,1.681,1332,2.784,1333,2.784,1334,1.681,1335,1.681,1336,1.681,1337,1.681,1338,1.681,1339,1.681,1340,1.681,1341,1.681,1342,1.681,1343,1.681,1344,1.681,1345,1.431,1346,1.681,1347,3.562,1348,1.681,1349,2.784,1350,1.681,1351,1.681,1352,1.681,1353,1.681,1354,1.681,1355,1.681,1356,1.681,1357,1.681,1358,1.681,1359,1.681,1360,1.605,1361,1.681,1362,1.681,1363,1.681,1364,1.681,1365,1.681,1366,1.681,1367,1.681,1368,1.681,1369,1.681,1370,1.681,1371,1.681,1372,1.681,1373,1.681,1374,1.681,1375,1.681,1376,1.681,1377,1.238,1378,2.335,1379,3.562,1380,2.766,1381,2.784,1382,1.681,1383,1.681,1384,1.27,1385,1.681,1386,1.681,1387,1.605,1388,1.681,1389,1.681,1390,1.681,1391,1.207,1392,1.681,1393,3.562,1394,1.681,1395,4.589,1396,1.681,1397,4.998,1398,1.681,1399,1.681,1400,1.681,1401,3.262,1402,1.605,1403,1.681,1404,1.605,1405,1.681,1406,2.784,1407,2.657,1408,1.717,1409,1.681,1410,1.605,1411,1.681,1412,2.784,1413,2.657,1414,2.225,1415,1.681,1416,1.681,1417,1.605,1418,2.784,1419,1.681,1420,2.784,1421,1.681,1422,1.482,1423,1.681,1424,1.681,1425,1.681,1426,1.681,1427,1.681,1428,1.681,1429,1.681,1430,1.681,1431,2.784,1432,1.681,1433,1.681,1434,1.681,1435,1.681,1436,1.681,1598,3.126,1599,2.276,1600,2.276,1601,2.276,1602,2.276,1603,1.888,1604,2.276]],["title/components/BaseSettingComponent.html",[234,1,322,1.718]],["body/components/BaseSettingComponent.html",[0,0.225,3,0.021,4,0.021,5,0.025,14,0.578,15,0.155,16,0.351,17,0.693,20,0.179,21,0.173,24,0.292,26,0.558,27,0.005,28,0.605,29,0.558,31,0.623,32,0.782,34,0.113,35,0.354,40,0.025,44,1.111,85,0.785,97,0.514,110,1.879,127,0.002,128,0.003,129,0.002,138,2.019,146,0.915,150,0.828,165,0.963,169,1.482,170,1.475,181,1.442,189,1.713,197,1.883,219,1.204,220,1.757,225,3.189,234,1.531,235,1.388,236,1.967,237,1.43,239,1.452,240,1.452,242,2.542,243,1.367,244,3.552,247,2.087,249,2.426,251,1.371,252,2.884,254,2.927,268,2.066,269,2.299,271,0.731,291,2.345,292,2.224,304,1.255,305,2.119,306,2.087,307,1.309,308,2.752,309,1.452,310,1.452,311,1.388,312,1.452,313,1.388,314,2.163,315,2.119,316,1.388,317,2.119,318,1.388,319,1.452,320,1.367,321,1.452,322,2.63,323,3.155,324,2.752,325,1.388,326,1.452,327,1.347,328,2.119,329,1.388,330,1.367,331,1.347,332,1.43,333,1.452,334,1.388,335,2.087,336,1.452,337,1.409,338,1.328,339,2.119,340,1.388,341,1.452,342,2.752,343,1.347,344,1.452,345,1.388,346,1.388,347,1.43,348,1.367,349,1.452,350,1.388,351,1.388,352,1.452,353,1.367,354,1.452,355,1.388,356,1.452,357,1.409,358,1.388,359,1.367,360,1.452,361,1.388,362,1.188,363,1.452,364,1.388,365,2.087,366,1.388,367,2.503,368,1.388,369,1.452,370,1.388,371,1.452,372,1.388,373,1.452,374,1.347,375,1.388,376,1.367,377,1.388,378,1.388,379,1.621,380,1.388,381,1.452,382,1.388,383,1.388,384,1.388,385,1.499,386,1.367,387,1.367,388,1.452,389,1.367,390,1.452,391,1.367,392,1.43,393,1.452,515,1.43,544,1.125,545,1.125,546,1.156,553,1.922,556,2.099,578,1.883,632,2.051,698,2.593,894,1.43,911,2.467,918,4.287,1108,2.099,1120,2.393,1252,2.5,1269,3.492,1345,2.548,1391,3.138,1605,9.999,1606,7.387,1607,3.157,1608,4.124,1609,6.209,1610,4.608,1611,4.925,1612,4.252,1613,6.848,1614,4.925,1615,4.925,1616,4.171,1617,4.534,1618,5.415,1619,4.171,1620,4.925,1621,4.925,1622,4.925,1623,5.914,1624,4.052,1625,3.636,1626,3.636,1627,2.857,1628,4.052,1629,2.857,1630,4.052,1631,4.052,1632,4.171,1633,5.136,1634,4.052,1635,2.857,1636,4.052,1637,4.052,1638,4.052,1639,2.857,1640,4.052,1641,4.052,1642,4.052,1643,4.052,1644,3.636,1645,2.325,1646,3.362,1647,3.636,1648,3.636,1649,3.157,1650,4.608,1651,2.994,1652,2.857,1653,3.636,1654,2.857,1655,4.052,1656,4.052,1657,4.052,1658,3.636,1659,2.857,1660,4.052,1661,4.052,1662,5.914,1663,4.052,1664,5.307,1665,4.052,1666,4.052,1667,4.052,1668,4.052,1669,4.608,1670,4.052,1671,3.157,1672,4.052,1673,3.157,1674,4.052,1675,4.052,1676,4.052,1677,4.052,1678,4.052,1679,4.052,1680,4.052,1681,3.157,1682,3.157,1683,4.052,1684,4.052,1685,4.052,1686,4.052,1687,4.052,1688,4.052,1689,4.052,1690,4.052,1691,4.052,1692,3.636,1693,4.052,1694,4.608]],["title/directives/CalcHeightDirective.html",[307,1.621,387,1.693]],["body/directives/CalcHeightDirective.html",[0,0.312,3,0.029,4,0.029,5,0.034,15,0.214,16,0.44,20,0.179,21,0.239,24,0.283,26,0.506,27,0.005,28,0.497,29,0.506,32,0.514,34,0.099,40,0.034,85,1.012,97,0.711,127,0.003,128,0.003,129,0.003,165,1.975,169,1.763,181,1.367,225,3.671,242,2.04,243,1.892,244,2.502,249,2.489,251,1.719,254,3.67,268,1.283,269,1.578,271,1.011,292,2.816,302,1.283,306,2.617,307,2.684,386,1.892,387,2.983,467,3.134,477,2.211,544,1.557,559,1.557,592,3.413,593,5.689,712,4.651,717,4.651,894,1.979,995,4.368,1045,2.211,1521,4.368,1695,9.78,1696,5.606,1697,8.307,1698,7.414,1699,9.633,1700,9.633,1701,9.193,1702,5.229,1703,6.473,1704,5.606,1705,7.932,1706,7.414,1707,7.414,1708,5.606,1709,5.606,1710,5.606,1711,5.606,1712,7.414,1713,5.606,1714,4.368,1715,5.031,1716,5.606,1717,5.606,1718,5.606,1719,5.606,1720,5.606,1721,5.606,1722,5.606,1723,5.031,1724,5.031,1725,5.606,1726,7.454,1727,7.414,1728,5.606,1729,5.031,1730,5.606,1731,5.606,1732,5.606,1733,5.606,1734,7.414,1735,5.606,1736,9.193,1737,5.606,1738,5.606,1739,5.606,1740,8.307,1741,5.606,1742,5.606,1743,5.606,1744,6.653,1745,5.606,1746,5.606,1747,5.606,1748,5.606,1749,5.606,1750,6.653,1751,5.606,1752,5.606,1753,5.606,1754,7.414,1755,5.606,1756,5.606,1757,7.414,1758,8.307,1759,5.606,1760,5.606,1761,5.606,1762,7.414,1763,5.606,1764,5.606,1765,5.606,1766,5.606,1767,4.651,1768,7.414,1769,7.414,1770,5.606,1771,5.606,1772,5.606,1773,5.606,1774,5.606]],["title/classes/Card.html",[0,0.279,146,0.776]],["body/classes/Card.html",[0,0.441,2,0.734,3,0.032,4,0.032,5,0.038,11,2.211,19,1.304,20,0.117,21,0.372,24,0.182,26,0.424,27,0.005,28,0.416,29,0.424,34,0.094,40,0.053,41,0.853,85,1.088,95,1.075,96,1.075,97,1.004,127,0.003,128,0.004,129,0.003,136,3.752,145,5.175,146,1.226,147,4.76,149,2.885,166,4.318,171,2.988,176,4.871,228,3.422,238,2.672,439,1.922,440,1.896,451,3.225,513,6.217,596,4.377,1775,5.15,1776,5.57,1777,5.152,1778,6.153,1779,6.446,1780,6.446,1781,6.446,1782,6.427,1783,6.798,1784,6.798,1785,6.446,1786,6.446,1787,6.207,1788,6.172,1789,7.238,1790,4.836,1791,4.043,1792,5.57,1793,5.15]],["title/components/CardComponent.html",[234,1,325,1.718]],["body/components/CardComponent.html",[0,0.197,3,0.018,4,0.028,5,0.033,8,0.875,14,0.523,15,0.135,16,0.318,17,0.805,20,0.178,21,0.151,24,0.288,26,0.441,27,0.005,28,0.544,29,0.441,31,0.757,32,0.592,34,0.114,35,0.31,40,0.022,44,0.971,47,1.584,70,1.789,73,0.934,82,1.584,85,0.982,88,1.375,93,1.097,95,0.481,96,0.481,97,0.449,110,1.913,127,0.002,128,0.002,129,0.002,138,1.548,143,2.488,146,1.442,147,1.836,150,0.724,165,1.835,169,1.952,172,1.29,174,2.158,179,2.357,181,1.306,196,2.093,219,1.917,220,1.591,225,2.68,228,2.146,234,1.286,235,1.214,236,1.78,237,1.251,238,1.525,239,1.27,240,1.27,242,2.348,243,1.196,244,3.522,245,2.439,247,1.89,249,2.341,251,1.241,252,2.701,254,2.65,256,6.994,268,1.929,269,2.024,271,0.639,272,1.179,285,1.27,286,1.251,287,1.27,288,1.27,289,1.27,290,1.27,291,1.082,292,2.586,293,1.27,294,1.27,295,1.27,296,1.232,297,1.179,298,1.251,299,1.27,300,1.27,301,1.27,302,0.811,303,1.27,304,1.097,305,1.919,306,1.89,307,1.145,308,2.577,309,1.27,310,1.27,311,1.214,312,1.27,313,1.214,314,1.998,315,1.919,316,1.214,317,1.919,318,1.214,319,1.27,320,1.196,321,1.27,322,1.214,323,1.27,324,2.577,325,2.462,326,1.27,327,1.179,328,1.919,329,1.214,330,1.196,331,1.179,332,1.251,333,1.27,334,1.214,335,1.89,336,1.27,337,1.232,338,1.162,339,1.919,340,1.214,341,1.27,342,2.577,343,1.179,344,1.27,345,1.214,346,1.214,347,1.251,348,1.196,349,1.27,350,1.214,351,1.214,352,1.27,353,1.196,354,1.27,355,1.214,356,1.27,357,1.232,358,1.214,359,1.196,360,1.27,361,1.214,362,1.039,363,1.27,364,1.214,365,1.89,366,1.214,367,2.312,368,1.214,369,1.27,370,1.214,371,1.27,372,1.214,373,1.27,374,1.179,375,1.214,376,1.196,377,1.214,378,1.214,379,2.116,380,1.214,381,1.27,382,1.214,383,1.214,384,1.214,385,0.898,386,1.196,387,1.196,388,1.27,389,1.196,390,1.27,391,1.196,392,1.251,393,1.27,396,1.928,438,2.808,439,1.097,440,1.082,454,2.227,456,1.353,490,1.353,509,5.028,513,2.397,544,0.984,545,0.984,546,1.011,547,2.618,553,1.681,556,1.836,559,0.984,567,4.172,578,1.647,589,2.499,642,1.754,643,1.754,679,4.943,682,2.033,739,2.093,747,2.84,894,1.251,912,4.551,914,4.246,933,2.158,947,1.584,982,2.761,1161,2.033,1377,1.928,1378,3.483,1380,3.072,1414,2.093,1453,3.423,1454,4.378,1482,3.702,1608,3.81,1612,3.928,1613,4.365,1617,4.246,1652,2.499,1664,3.18,1785,2.618,1791,2.308,1794,3.544,1795,6.453,1796,5.354,1797,5.79,1798,5.79,1799,6.453,1800,6.453,1801,5.354,1802,7.19,1803,5.354,1804,7.19,1805,6.453,1806,3.367,1807,3.544,1808,5.354,1809,3.544,1810,3.544,1811,5.354,1812,3.544,1813,3.544,1814,5.354,1815,3.544,1816,3.544,1817,3.544,1818,3.544,1819,3.544,1820,3.544,1821,3.544,1822,3.544,1823,3.544,1824,3.544,1825,3.544,1826,3.544,1827,3.18,1828,3.544,1829,2.94,1830,3.18,1831,3.544,1832,3.18,1833,3.544,1834,4.804,1835,3.544,1836,2.761,1837,2.94,1838,2.761,1839,3.18,1840,3.544,1841,3.544,1842,3.544,1843,3.544,1844,6.453,1845,3.544,1846,3.544,1847,3.544,1848,3.544,1849,3.544,1850,3.18,1851,3.544,1852,3.544,1853,3.544,1854,3.544,1855,3.544,1856,3.544,1857,5.354,1858,3.544,1859,3.544,1860,3.544,1861,2.94,1862,3.544,1863,3.544,1864,3.18,1865,3.544,1866,3.544,1867,3.544,1868,3.544,1869,3.544,1870,3.544,1871,3.544,1872,5.354,1873,5.354,1874,3.544,1875,3.956,1876,3.544,1877,3.544,1878,3.544,1879,3.544,1880,6.452,1881,3.544,1882,5.354,1883,3.544,1884,3.544,1885,3.544,1886,3.544,1887,3.544,1888,3.544,1889,3.544]],["title/components/CardDetailsComponent.html",[234,1,327,1.668]],["body/components/CardDetailsComponent.html",[0,0.269,3,0.025,4,0.025,5,0.03,11,1.699,14,0.655,15,0.184,16,0.398,20,0.171,21,0.206,24,0.265,26,0.33,27,0.005,28,0.557,29,0.33,34,0.114,35,0.422,40,0.03,44,1.324,110,1.992,113,0.655,127,0.002,128,0.003,129,0.002,146,1.553,147,3.987,148,1.971,153,2.135,154,2.159,165,1.594,170,1.758,172,1.758,176,4.876,219,1.435,220,1.991,234,1.534,235,1.654,236,2.229,237,1.705,239,1.731,240,1.731,242,2.801,243,1.63,244,3.587,247,2.366,249,1.766,251,1.554,252,3.123,268,1.534,269,1.887,271,0.871,304,1.496,305,2.402,306,2.366,307,1.561,308,2.979,309,1.731,310,1.731,311,1.654,312,1.731,313,1.654,314,2.384,315,2.402,316,1.654,317,2.402,318,1.654,319,1.731,320,1.63,321,1.731,322,1.654,323,1.731,324,2.979,325,1.654,326,1.731,327,2.765,328,2.402,329,1.654,330,1.63,331,1.606,332,1.705,333,1.731,334,1.654,335,2.366,336,1.731,337,1.679,338,1.583,339,2.402,340,1.654,341,1.731,342,2.979,343,1.606,344,1.731,345,1.654,346,1.654,347,1.705,348,1.63,349,1.731,350,1.654,351,1.654,352,1.731,353,1.63,354,1.731,355,1.654,356,1.731,357,1.679,358,1.654,359,1.63,360,1.731,361,1.654,362,1.416,363,1.731,364,1.654,365,2.366,366,1.654,367,2.758,368,1.654,369,1.731,370,1.654,371,1.731,372,1.654,373,1.731,374,1.606,375,1.654,376,1.63,377,1.654,378,1.654,379,1.837,380,1.654,381,1.731,382,1.654,383,1.654,384,1.654,385,1.224,386,1.63,387,1.63,388,1.731,389,1.63,390,1.731,391,1.63,392,1.705,393,1.731,455,2.885,490,1.844,509,5.997,515,1.705,545,1.342,546,1.378,547,3.569,559,1.342,567,5.222,578,2.245,679,5.643,682,2.772,1078,7.221,1544,3.146,1569,3.038,1659,3.407,1829,4.008,1832,4.335,1836,3.764,1837,4.008,1838,3.764,1839,4.335,1861,4.008,1890,9.268,1891,4.831,1892,6.014,1893,8.314,1894,5.174,1895,6.703,1896,4.831,1897,4.831,1898,4.831,1899,4.831,1900,4.831,1901,3.268,1902,4.335,1903,4.831,1904,4.831,1905,4.335,1906,6.703,1907,6.703,1908,4.831,1909,4.831,1910,4.335,1911,4.831,1912,4.831,1913,3.407,1914,4.008,1915,4.335,1916,4.335,1917,4.335]],["title/injectables/CardEffects.html",[772,4.162,856,1.393]],["body/injectables/CardEffects.html",[0,0.315,3,0.029,4,0.029,5,0.035,8,0.588,15,0.216,16,0.443,20,0.168,21,0.242,24,0.261,26,0.387,27,0.005,28,0.38,29,0.387,31,0.88,32,0.766,34,0.119,35,0.495,40,0.035,70,2.239,95,0.769,96,0.769,97,0.718,104,3.294,110,2.088,127,0.003,128,0.003,129,0.003,146,1.535,148,2.312,150,1.707,169,2.125,181,2.31,202,4.316,249,1.968,271,1.022,401,3.251,402,4.542,404,2.868,406,3.164,407,3.164,409,3.006,411,3.164,412,3.164,443,2.439,455,2.439,515,2,537,2.647,544,1.574,545,1.574,546,1.616,559,1.574,578,4.126,772,6.195,856,2.074,857,2.485,861,5.782,863,6.999,874,5.624,876,4.542,888,3.082,889,2.935,890,4.415,891,2.485,892,2.688,894,2,1408,2.582,1569,3.564,1570,4.186,1902,5.085,1918,5.666,1919,8.351,1920,8.351,1921,8.351,1922,5.666,1923,7.467,1924,5.666,1925,7.467,1926,6.26,1927,7.467,1928,7.965,1929,7.467,1930,6.26,1931,7.467,1932,5.666,1933,6.7,1934,7.467,1935,7.467,1936,7.467,1937,5.666,1938,4.701,1939,4.701,1940,4.701]],["title/interfaces/CardFeedState.html",[744,1.946,752,4.162]],["body/interfaces/CardFeedState.html",[3,0.03,4,0.03,5,0.035,7,2.238,11,2.413,15,0.22,16,0.449,20,0.176,27,0.005,34,0.107,38,3.253,40,0.06,85,0.973,113,1.259,127,0.004,128,0.004,129,0.003,138,2.436,146,1.169,150,1.827,165,1.796,169,1.969,170,2.1,171,2.588,179,1.891,181,1.407,206,3.853,385,2.136,438,3.121,439,1.787,440,1.762,442,2.629,468,3.313,477,2.98,485,3.892,490,2.884,584,6.318,684,5.315,744,2.238,745,3.138,752,6.99,843,3.903,844,3.758,845,3.513,846,3.629,881,5.277,1045,2.276,1521,5.887,1580,5.887,1941,5.77,1942,6.78,1943,8.327,1944,8.705,1945,8.022,1946,6.269,1947,7.556,1948,6.78,1949,6.78,1950,6.269,1951,6.78,1952,7.556,1953,7.556,1954,4.6,1955,7.556,1956,7.556,1957,5.77,1958,5.77,1959,9.279,1960,5.77,1961,5.77,1962,5.77,1963,5.77,1964,5.77,1965,5.77,1966,5.77,1967,5.77,1968,5.77,1969,5.77,1970,5.77,1971,5.77,1972,5.77,1973,5.77,1974,5.77,1975,5.77,1976,5.77,1977,5.177,1978,5.77,1979,5.77,1980,5.177]],["title/components/CardListComponent.html",[234,1,329,1.718]],["body/components/CardListComponent.html",[0,0.268,3,0.025,4,0.034,5,0.041,14,0.653,15,0.183,16,0.397,17,0.762,20,0.171,21,0.205,24,0.272,26,0.329,27,0.005,28,0.556,29,0.329,34,0.113,35,0.42,40,0.029,44,1.319,73,1.268,110,1.989,127,0.002,128,0.003,129,0.002,137,2.761,138,1.391,146,1.483,165,1.144,172,1.751,219,1.429,220,2.466,225,3.189,234,1.531,235,1.648,236,2.223,237,1.698,238,2.071,239,1.724,240,1.724,242,2.795,243,1.624,244,3.587,245,3.045,247,2.359,251,1.549,252,3.117,254,3.308,268,1.53,269,2.162,271,0.867,285,1.724,286,1.698,287,1.724,288,1.724,289,1.724,290,1.724,291,1.469,292,1.532,293,1.724,294,1.724,295,1.724,296,1.672,297,1.6,298,1.698,299,1.724,300,1.724,301,1.724,302,1.101,303,1.724,304,1.49,305,2.395,306,2.359,307,1.554,308,2.974,309,1.724,310,1.724,311,1.648,312,1.724,313,1.648,314,2.378,315,2.395,316,1.648,317,2.395,318,1.648,319,1.724,320,1.624,321,1.724,322,1.648,323,1.724,324,2.974,325,1.648,326,1.724,327,1.6,328,2.395,329,2.842,330,1.624,331,1.6,332,1.698,333,1.724,334,1.648,335,2.359,336,1.724,337,1.672,338,1.577,339,2.395,340,1.648,341,1.724,342,2.974,343,1.6,344,1.724,345,1.648,346,1.648,347,1.698,348,1.624,349,1.724,350,1.648,351,1.648,352,1.724,353,1.624,354,1.724,355,1.648,356,1.724,357,1.672,358,1.648,359,1.624,360,1.724,361,1.648,362,1.41,363,1.724,364,1.648,365,2.359,366,1.648,367,2.752,368,1.648,369,1.724,370,1.648,371,1.724,372,3.171,373,1.724,374,1.6,375,1.648,376,1.624,377,1.648,378,1.648,379,1.832,380,1.648,381,1.724,382,1.648,383,1.648,384,1.648,385,1.219,386,1.624,387,1.624,388,1.724,389,1.624,390,1.724,391,1.624,392,1.698,393,1.724,396,2.617,438,2.313,439,1.49,440,1.469,457,3.306,481,3.306,515,1.698,537,2.105,544,1.336,545,1.336,546,1.373,547,3.555,559,1.336,578,2.236,592,4.069,593,3.947,594,3.749,684,3.732,985,4.317,986,6.892,987,5.998,988,4.317,994,3.749,995,5.208,996,3.749,997,3.749,998,3.992,1702,4.714,1703,5.984,1829,3.992,1830,4.317,1836,3.749,1837,3.992,1838,3.749,1954,4.069,1981,6.443,1982,7.825,1983,5.545,1984,5.984,1985,6.684,1986,5.196,1987,4.317,1988,4.811,1989,4.317,1990,4.317,1991,4.317,1992,3.992,1993,4.811,1994,4.811]],["title/classes/CardOperation.html",[0,0.279,1995,4.162]],["body/classes/CardOperation.html",[0,0.382,2,0.813,3,0.035,4,0.035,5,0.042,10,1.811,14,0.824,15,0.262,19,1.207,20,0.189,21,0.36,24,0.248,26,0.577,27,0.005,28,0.566,29,0.577,32,0.838,34,0.082,40,0.052,41,0.945,85,1.031,95,0.932,96,0.932,97,0.871,127,0.003,128,0.004,129,0.003,143,3.194,145,4.373,169,1.792,224,4.247,228,3.388,251,1.957,268,1.573,418,2.666,438,2.871,440,2.099,456,2.623,490,3.488,1995,7.908,1996,8.2,1997,6.166,1998,8.442,1999,6.872,2000,9.139,2001,7.908,2002,9.139,2003,6.872,2004,6.872,2005,6.872,2006,6.872,2007,6.872,2008,6.872,2009,6.872,2010,5.701]],["title/injectables/CardOperationEffects.html",[774,4.162,856,1.393]],["body/injectables/CardOperationEffects.html",[0,0.25,3,0.023,4,0.023,5,0.028,8,0.883,12,2.531,15,0.172,16,0.379,18,1.066,20,0.167,21,0.192,24,0.237,26,0.307,27,0.005,28,0.302,29,0.307,31,0.995,32,0.68,34,0.118,35,0.393,40,0.028,49,2.567,70,2.106,82,2.85,93,1.975,95,0.611,96,0.611,97,0.571,104,2.922,110,1.947,113,1.259,127,0.002,128,0.004,129,0.002,146,1.436,150,1.514,166,3.157,169,2.107,171,2.185,181,2.385,202,4.06,220,1.895,249,1.681,271,0.812,385,1.141,404,3.75,413,1.03,431,3.311,443,1.937,448,3.189,456,2.435,458,3.311,459,3.443,460,2.011,468,3.534,481,2.746,485,2.559,490,2.435,501,2.092,515,1.589,522,4.97,537,2.49,544,1.25,545,1.25,546,1.284,559,1.25,578,4.106,774,5.292,838,5.024,845,2.74,846,2.831,847,3.507,856,1.772,857,1.974,861,5.249,873,6.231,874,5.61,875,7.232,876,4.03,888,2.448,889,2.331,890,3.507,891,1.974,892,3.514,893,3.325,894,1.589,1045,2.516,1252,4.047,1345,4.66,1377,3.47,1378,3.904,1482,5.07,1516,5.955,1568,3.045,1569,2.831,1570,3.325,1580,4.97,1652,3.174,1946,5.292,2001,3.734,2011,8.508,2012,4.501,2013,7.409,2014,4.501,2015,5.292,2016,6.379,2017,6.379,2018,8.06,2019,6.379,2020,6.379,2021,6.379,2022,6.379,2023,6.379,2024,6.379,2025,5.724,2026,6.379,2027,6.379,2028,4.501,2029,7.232,2030,7.232,2031,4.97,2032,6.379,2033,6.379,2034,6.379,2035,8.06,2036,6.379,2037,6.379,2038,6.379,2039,6.379,2040,6.379,2041,6.379,2042,6.379,2043,6.379,2044,4.501,2045,6.379,2046,6.379,2047,6.379,2048,5.292,2049,6.379,2050,6.379,2051,6.379,2052,4.501,2053,3.325,2054,4.501,2055,4.501,2056,4.039,2057,4.039,2058,2.583,2059,3.325]],["title/injectables/CardService.html",[856,1.393,861,3.267]],["body/injectables/CardService.html",[0,0.251,3,0.023,4,0.033,5,0.028,15,0.172,16,0.379,17,0.735,19,1.206,20,0.179,21,0.192,24,0.287,26,0.604,27,0.005,28,0.592,29,0.604,31,0.475,32,0.585,34,0.118,38,2.323,40,0.028,55,1.939,81,1.939,85,1,86,2.053,113,1.094,127,0.002,128,0.003,129,0.002,143,2.094,146,0.697,148,1.839,150,1.515,165,1.917,169,2.032,171,2.186,181,2.156,199,1.113,209,3.025,228,2.939,249,2.125,251,1.48,268,2.08,269,1.268,271,0.812,273,2.451,292,2.361,404,3.231,409,3.386,438,1.357,439,1.395,440,1.376,490,2.436,518,4.502,537,2.703,544,1.251,559,1.251,625,2.334,709,2.834,711,2.334,725,2.013,768,2.334,769,2.39,856,1.773,857,1.976,861,4.157,881,2.451,901,2.834,914,5.367,933,2.743,1099,4.935,1103,5.716,1104,3.048,1123,4.501,1204,3.177,1220,3.177,1321,4.318,1360,3.177,1387,4.501,1452,5.776,1460,3.048,1995,3.738,2056,4.043,2057,4.043,2060,4.505,2061,7.413,2062,7.413,2063,7.413,2064,7.413,2065,6.383,2066,6.383,2067,8.063,2068,8.063,2069,6.383,2070,3.048,2071,6.409,2072,6.383,2073,6.383,2074,4.505,2075,6.383,2076,8.511,2077,4.505,2078,6.383,2079,4.505,2080,6.383,2081,4.505,2082,6.383,2083,4.505,2084,4.505,2085,6.383,2086,8.511,2087,4.505,2088,7.413,2089,4.505,2090,4.505,2091,4.505,2092,3.048,2093,3.738,2094,5.296,2095,3.738,2096,4.505,2097,6.383,2098,4.505,2099,4.505,2100,4.505,2101,4.505,2102,4.505,2103,4.505,2104,4.505,2105,4.505,2106,4.505,2107,6.69,2108,4.505,2109,4.505,2110,4.505,2111,4.505,2112,4.505,2113,4.505,2114,4.505,2115,4.043,2116,4.505,2117,4.505,2118,4.043,2119,4.505,2120,4.505,2121,4.505,2122,4.505,2123,4.505,2124,4.043,2125,4.505,2126,4.505,2127,4.505,2128,6.383,2129,4.505,2130,4.043,2131,4.505,2132,6.383,2133,3.51,2134,4.043,2135,4.505,2136,4.043,2137,4.505,2138,4.505,2139,4.505,2140,4.505,2141,4.505,2142,4.505,2143,4.505,2144,4.505,2145,4.505,2146,4.505,2147,4.505,2148,4.505,2149,3.738,2150,6.383,2151,4.505,2152,4.505,2153,4.505,2154,4.505,2155,4.505,2156,4.505,2157,4.505,2158,4.505,2159,4.505,2160,4.505,2161,4.505,2162,4.505,2163,4.043,2164,4.505,2165,4.505,2166,3.329,2167,4.505]],["title/interfaces/CardState.html",[744,1.946,750,4.162]],["body/interfaces/CardState.html",[3,0.038,4,0.038,5,0.045,15,0.284,16,0.526,20,0.185,27,0.005,34,0.089,40,0.054,85,1.037,113,1.357,127,0.003,128,0.004,129,0.003,138,2.735,146,1.515,148,3.037,165,1.769,170,3.224,179,2.439,468,4.386,584,6.515,744,2.887,745,4.048,750,7.849,1798,8.975,2168,7.442,2169,7.442]],["title/modules/CardsModule.html",[601,2.2,1062,3.538]],["body/modules/CardsModule.html",[0,0.319,3,0.03,4,0.039,5,0.046,17,0.569,24,0.168,27,0.005,34,0.122,40,0.035,57,2.424,73,1.511,127,0.003,128,0.003,129,0.003,169,1.217,224,3.498,235,3.255,251,1.329,268,1.313,271,1.034,273,3.119,274,3.491,275,3.898,285,2.055,286,2.024,287,2.055,288,2.055,289,2.055,290,2.055,291,1.751,292,1.827,293,2.055,294,2.055,295,2.055,296,1.994,297,1.907,298,2.024,299,2.055,300,2.055,301,2.055,302,1.313,303,2.055,304,1.776,325,3.484,327,3.383,330,3.468,343,3.383,345,3.484,601,2.515,603,2.903,604,3.29,605,5.114,606,5.267,607,4.457,615,6.43,616,4.444,617,3.491,619,4.094,621,4.569,626,4.733,629,3.387,634,5.864,641,5.56,642,2.838,643,2.838,1062,7.457,1078,4.468,1079,4.758,1894,4.202,2170,5.146,2171,5.146,2172,5.735,2173,5.146,2174,5.146,2175,7.022,2176,5.735,2177,7.526,2178,6.97,2179,5.735,2180,6.97,2181,5.735,2182,5.146,2183,5.735,2184,5.735,2185,5.146,2186,5.146,2187,5.146,2188,5.735,2189,5.735,2190,4.468,2191,5.146]],["title/classes/CheckAuthenticationStatus.html",[0,0.279,46,2.483]],["body/classes/CheckAuthenticationStatus.html",[0,0.548,1,3.422,2,0.507,3,0.022,4,0.022,5,0.026,6,2.222,7,1.664,8,1.061,9,3.962,10,1.13,11,1.087,12,3.25,13,2.944,14,0.962,15,0.164,16,0.366,17,0.828,18,1.318,19,1.223,20,0.189,21,0.183,23,2.923,24,0.126,27,0.005,31,0.452,32,0.393,33,2.333,34,0.086,35,0.375,36,3.224,37,1.917,38,2.243,39,1.917,40,0.061,41,0.59,42,2.171,43,3.287,44,1.176,45,2.203,46,3.903,47,2.754,48,3.827,49,3.018,50,4.753,51,4.084,52,3.571,53,2.276,54,3.494,55,2.653,56,3.494,57,3.333,58,3.571,59,3.571,60,1.447,61,3.571,62,2.276,63,3.287,64,3.593,65,3.651,66,1.954,67,2.276,68,1.994,69,1.846,70,0.994,71,2.333,72,2.923,73,1.13,74,2.276,75,2.276,76,2.035,77,3.287,78,2.276,79,2.276,80,3.287,81,3.105,82,1.917,83,1.487,84,1.954,85,0.854,86,1.954,87,1.994,88,1.664,89,2.333,90,2.333,91,3.924,92,3.827,93,2.234,94,3.827,95,1.367,96,1.367,97,1.277,98,2.333,99,2.333,100,3.27,101,2.078,102,2.333,103,2.078,104,1.692,105,2.276,106,2.222,107,3.192,108,2.276,109,3.051,110,1.358,111,2.078,112,2.276,113,0.582,114,2.333,115,2.276,116,2.333,117,2.276,118,1.586,119,2.333,120,2.333,121,2.333,122,2.864,123,2.333,124,2.333,125,2.333,126,2.222,127,0.002,128,0.003,129,0.002,2192,4.29]],["title/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.279,61,2.483]],["body/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.548,1,3.432,2,0.51,3,0.022,4,0.022,5,0.026,6,2.234,8,1.062,9,3.969,10,1.137,11,1.093,12,3.245,13,2.953,14,0.963,15,0.164,16,0.367,17,0.83,18,1.321,19,1.224,20,0.189,21,0.184,23,2.935,24,0.127,27,0.005,31,0.454,32,0.396,33,2.346,34,0.086,35,0.377,36,3.233,37,1.927,38,2.252,39,1.927,40,0.061,41,0.593,42,2.183,43,3.297,44,1.182,45,2.21,46,3.581,47,2.765,48,3.839,49,3.021,50,4.76,51,4.095,52,3.581,53,2.288,54,3.505,55,2.663,56,3.505,57,3.342,58,3.581,59,3.581,60,1.453,61,3.913,62,2.288,63,3.297,64,3.602,65,3.662,66,1.965,67,2.288,68,2.004,69,1.857,70,1,71,2.346,72,2.935,73,1.137,74,2.288,75,2.288,76,2.046,77,3.297,78,2.288,79,2.288,80,3.297,81,3.115,82,1.927,83,1.49,84,1.965,85,0.856,86,1.965,87,2.004,88,1.673,89,2.346,90,2.346,91,3.366,92,3.283,93,1.916,94,3.283,95,1.368,96,1.368,97,1.278,98,2.346,99,2.346,100,2.288,101,2.089,102,2.346,103,2.089,104,1.701,105,2.288,106,2.234,107,3.205,108,2.288,109,3.063,110,1.364,111,2.089,112,2.288,113,0.585,114,2.346,115,2.288,116,2.346,117,2.288,118,1.594,119,2.346,120,3.366,121,2.346,122,2.876,123,2.346,124,2.346,125,2.346,126,2.234,127,0.002,128,0.003,129,0.002,2193,4.313]],["title/classes/CheckTokenResponse.html",[0,0.279,1404,3.538]],["body/classes/CheckTokenResponse.html",[0,0.451,2,0.268,3,0.012,4,0.012,5,0.014,7,0.878,8,0.235,9,1.708,12,2.804,13,1.53,14,0.366,15,0.086,16,0.223,17,0.962,18,0.627,20,0.14,21,0.238,23,3.639,24,0.164,26,0.256,27,0.005,28,0.322,29,0.483,31,0.238,34,0.106,35,0.198,36,2.146,37,1.011,38,1.365,40,0.047,41,0.311,43,1.031,47,1.676,49,1.194,55,0.974,63,3.496,64,2.545,66,1.031,68,1.052,72,3.353,73,2.022,76,2.278,77,1.708,80,1.708,81,4.125,82,1.011,84,2.821,85,1.011,86,4.068,87,3.566,88,2.167,101,1.096,103,2.706,104,3.271,110,1.788,111,1.096,113,0.652,122,1.743,127,0.001,128,0.002,129,0.001,138,2.139,145,2.487,150,0.462,165,2.243,169,2.115,170,2.033,171,1.284,172,1.748,179,1.574,181,2.178,189,0.956,190,1.231,204,2.548,206,0.94,209,1.53,228,2.698,249,2.42,269,2.485,271,0.408,291,1.467,297,1.858,302,1.417,331,0.752,379,1.697,385,0.573,403,0.823,414,0.915,420,0.637,451,0.836,454,0.701,470,0.787,511,3.939,518,3.457,523,1.073,537,2.027,540,1.596,544,0.628,545,0.628,546,0.645,553,1.073,556,1.172,558,4.596,559,1.334,570,2.645,578,2.232,592,2.283,625,1.172,647,1.531,665,2.358,666,2.442,667,3.128,698,2.106,703,3.638,725,1.676,727,3.248,729,3.248,739,3.299,744,2.167,747,1.989,768,1.172,769,1.2,856,1.042,891,1.644,892,1.073,894,0.798,947,2.146,991,1.263,1020,2.645,1045,0.892,1087,3.939,1088,1.596,1089,3.02,1090,5.223,1091,2.77,1092,1.672,1099,3.119,1100,1.596,1101,1.531,1102,1.474,1103,3.513,1104,1.531,1105,1.672,1106,5.959,1107,1.596,1108,1.172,1109,1.263,1110,4.127,1111,2.77,1112,2.77,1113,2.77,1114,3.939,1115,2.77,1116,1.672,1117,1.672,1118,1.672,1119,1.672,1120,1.336,1121,1.596,1122,2.77,1123,1.596,1124,1.672,1125,1.672,1126,3.548,1127,1.672,1128,1.672,1129,1.672,1130,1.672,1131,1.672,1132,1.672,1133,1.672,1134,1.672,1135,1.672,1136,1.672,1137,5.411,1138,1.672,1139,4.985,1140,1.672,1141,1.596,1142,1.263,1143,1.672,1144,1.672,1145,1.672,1146,1.672,1147,2.77,1148,1.672,1149,1.672,1150,4.575,1151,1.596,1152,1.672,1153,1.672,1154,1.672,1155,1.672,1156,1.672,1157,1.672,1158,1.672,1159,1.672,1160,3.128,1161,1.298,1162,1.672,1163,1.336,1164,1.672,1165,5.223,1166,5.465,1167,2.77,1168,4.575,1169,1.672,1170,3.548,1171,1.672,1172,2.77,1173,1.672,1174,4.127,1175,4.575,1176,1.672,1177,1.672,1178,1.672,1179,1.672,1180,1.672,1181,1.672,1182,2.77,1183,1.672,1184,4.932,1185,2.77,1186,1.672,1187,1.672,1188,2.645,1189,1.672,1190,2.77,1191,1.672,1192,1.672,1193,1.596,1194,3.638,1195,1.672,1196,1.531,1197,1.672,1198,1.672,1199,1.672,1200,2.77,1201,1.672,1202,3.548,1203,1.672,1204,5.216,1205,3.548,1206,3.548,1207,3.548,1208,3.548,1209,3.548,1210,3.387,1211,1.672,1212,1.672,1213,1.672,1214,1.672,1215,2.77,1216,2.645,1217,2.77,1218,1.596,1219,2.612,1220,2.645,1221,2.77,1222,2.04,1223,1.672,1224,3.548,1225,2.755,1226,2.77,1227,1.672,1228,2.77,1229,1.672,1230,2.645,1231,1.672,1232,2.77,1233,1.672,1234,1.672,1235,2.77,1236,2.77,1237,1.672,1238,1.672,1239,1.672,1240,1.672,1241,1.672,1242,1.672,1243,1.672,1244,2.77,1245,1.672,1246,1.672,1247,1.672,1248,1.672,1249,1.672,1250,1.672,1251,1.672,1252,0.956,1253,1.672,1254,1.672,1255,1.672,1256,1.672,1257,1.672,1258,1.672,1259,1.672,1260,4.575,1261,4.127,1262,1.672,1263,1.672,1264,3.939,1265,1.672,1266,1.596,1267,1.672,1268,1.672,1269,2.836,1270,1.672,1271,2.77,1272,1.672,1273,2.77,1274,1.672,1275,1.531,1276,1.672,1277,1.672,1278,1.672,1279,1.672,1280,1.672,1281,1.672,1282,1.531,1283,1.672,1284,2.358,1285,1.672,1286,1.672,1287,1.672,1288,1.672,1289,1.672,1290,1.672,1291,1.672,1292,1.672,1293,1.672,1294,1.672,1295,1.672,1296,1.672,1297,1.672,1298,1.672,1299,2.77,1300,1.672,1301,1.672,1302,3.548,1303,2.77,1304,1.672,1305,1.672,1306,2.77,1307,2.77,1308,1.672,1309,1.672,1310,1.672,1311,1.672,1312,1.672,1313,1.672,1314,1.672,1315,3.548,1316,2.77,1317,1.596,1318,1.672,1319,1.672,1320,1.672,1321,1.531,1322,1.672,1323,1.672,1324,1.672,1325,1.672,1326,1.672,1327,1.672,1328,2.645,1329,1.672,1330,1.672,1331,1.672,1332,2.77,1333,2.77,1334,1.672,1335,1.672,1336,1.672,1337,1.672,1338,1.672,1339,1.672,1340,1.672,1341,1.672,1342,1.672,1343,1.672,1344,1.672,1345,1.423,1346,1.672,1347,3.548,1348,1.672,1349,2.77,1350,1.672,1351,1.672,1352,1.672,1353,1.672,1354,1.672,1355,1.672,1356,1.672,1357,1.672,1358,1.672,1359,1.672,1360,1.596,1361,1.672,1362,1.672,1363,1.672,1364,1.672,1365,1.672,1366,1.672,1367,1.672,1368,1.672,1369,1.672,1370,1.672,1371,1.672,1372,1.672,1373,1.672,1374,1.672,1375,1.672,1376,1.672,1377,1.231,1378,2.326,1379,3.548,1380,2.755,1381,2.77,1382,1.672,1383,1.672,1384,1.263,1385,1.672,1386,1.672,1387,1.596,1388,1.672,1389,1.672,1390,1.672,1391,1.2,1392,1.672,1393,1.672,1394,1.672,1395,4.127,1396,1.672,1397,3.939,1398,1.672,1399,1.672,1400,1.672,1401,3.779,1402,2.645,1403,2.77,1404,2.645,1405,1.672,1406,2.77,1407,2.645,1408,1.708,1409,1.672,1410,1.596,1411,1.672,1412,1.672,1413,2.645,1414,2.214,1415,1.672,1416,1.672,1417,1.596,1418,2.77,1419,1.672,1420,2.77,1421,1.672,1422,1.474,1423,1.672,1424,1.672,1425,1.672,1426,1.672,1427,1.672,1428,1.672,1429,1.672,1430,1.672,1431,2.77,1432,1.672,1433,1.672,1434,1.672,1435,1.672,1436,1.672,2194,2.263,2195,2.263,2196,2.263,2197,2.263,2198,2.263]],["title/classes/ClearCard.html",[0,0.279,402,2.729]],["body/classes/ClearCard.html",[0,0.546,2,0.64,3,0.028,4,0.028,5,0.033,8,1.039,14,0.97,15,0.206,16,0.43,18,1.621,19,1.235,20,0.191,24,0.159,27,0.005,31,0.57,32,0.496,34,0.086,35,0.473,40,0.061,41,0.744,60,1.699,70,1.254,83,1.727,85,0.834,95,1.333,96,1.333,97,1.246,113,1.295,127,0.003,128,0.003,129,0.003,146,1.615,148,2.207,171,2.479,199,1.336,396,4.438,397,3.194,400,3.402,401,3.103,402,4.74,403,1.968,404,4.13,405,2.703,406,4.556,407,4.556,408,2.093,409,4.329,410,4.226,411,4.556,412,4.556,413,1.868,414,1.319,415,1.371,416,1.543,417,1.543,418,2.098,419,3.194,420,1.522,421,1.675,422,4.553,423,3.402,424,3.402,425,3.402,426,3.402,427,3.402,428,3.402,429,3.402,430,3.293,2199,5.408]],["title/classes/ClearLightCardSelection.html",[0,0.279,455,2.159]],["body/classes/ClearLightCardSelection.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,2.783,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.332,456,3.274,457,1.774,458,3.152,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.152,467,1.743,468,1.808,469,3.152,470,1.433,471,3.152,472,1.955,473,3.152,474,1.916,475,3.152,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,1.997,483,1.997,484,1.997,485,1.654,486,2.901,487,1.997,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,1.997,497,1.997,498,1.997,499,1.997,500,1.997,501,1.916,2200,5.989]],["title/injectables/ConfigEffects.html",[812,4.162,856,1.393]],["body/injectables/ConfigEffects.html",[0,0.308,3,0.029,4,0.029,5,0.034,8,0.576,15,0.212,16,0.437,20,0.167,21,0.237,24,0.259,26,0.503,27,0.005,28,0.493,29,0.503,31,0.584,32,0.509,34,0.12,35,0.485,38,2.679,40,0.034,70,2.227,95,0.753,96,0.753,97,0.703,104,3.614,110,2.075,127,0.003,128,0.003,129,0.003,150,1.134,169,1.868,181,2.147,202,4.094,228,2.748,249,2.532,251,1.707,268,1.27,269,1.561,271,1,385,1.406,405,2.545,515,1.958,537,2.511,544,1.541,545,1.541,546,1.583,551,5.198,552,4.602,556,2.873,559,1.541,578,3.422,642,2.746,643,2.746,747,4.384,811,4.978,812,6.108,856,2.045,857,2.432,874,5.051,876,4.005,888,3.017,889,2.873,891,2.432,892,2.631,893,4.098,894,1.958,1045,2.188,1161,4.224,1252,3.721,1408,2.527,1453,4.384,1454,5.359,1460,4.98,1482,5.051,1525,3.489,1565,3.753,1926,5.192,1930,5.192,1938,4.602,1939,4.602,1940,4.602,2201,5.547,2202,8.264,2203,8.264,2204,7.363,2205,6.504,2206,8.264,2207,5.547,2208,7.363,2209,5.547,2210,7.363,2211,7.363,2212,7.363,2213,7.363,2214,7.363,2215,7.363,2216,5.547,2217,7.899,2218,6.607,2219,5.547,2220,8.45,2221,6.607,2222,4.978,2223,4.978,2224,4.978,2225,3.613,2226,5.547,2227,4.978,2228,5.547,2229,5.547,2230,5.547,2231,7.363,2232,7.363,2233,7.363,2234,7.363,2235,5.547,2236,5.547,2237,5.547]],["title/injectables/ConfigService.html",[856,1.393,2205,3.706]],["body/injectables/ConfigService.html",[0,0.401,3,0.037,4,0.037,5,0.044,15,0.275,16,0.516,20,0.165,21,0.308,24,0.274,26,0.493,27,0.005,28,0.483,29,0.493,34,0.12,35,0.631,40,0.044,85,0.889,110,2.246,127,0.003,128,0.004,129,0.003,169,1.532,249,2.554,251,2.016,268,1.652,271,1.301,537,2.559,544,2.004,545,2.004,546,2.059,559,2.004,625,3.738,768,3.738,769,3.828,856,2.416,857,3.164,1099,5.626,2070,4.881,2205,6.426,2238,7.216,2239,9.336,2240,9.692,2241,8.697,2242,7.216,2243,7.216,2244,7.216,2245,7.216]],["title/interfaces/ConfigState.html",[744,1.946,751,4.162]],["body/interfaces/ConfigState.html",[3,0.038,4,0.038,5,0.045,15,0.28,16,0.522,20,0.189,27,0.005,40,0.058,85,0.962,113,1.352,127,0.003,128,0.004,129,0.003,138,2.926,165,2.091,170,2.675,179,2.882,228,3.129,574,5.72,584,6.493,744,2.852,745,3.998,747,5.174,751,7.807,1045,2.899,2220,8.945,2227,6.595,2246,7.35,2247,6.595,2248,7.35,2249,7.35]],["title/components/ConfirmModalComponent.html",[234,1,330,1.693]],["body/components/ConfirmModalComponent.html",[0,0.292,3,0.027,4,0.027,5,0.032,8,1.024,10,1.869,15,0.2,16,0.421,17,0.703,20,0.163,21,0.224,24,0.264,26,0.358,27,0.005,28,0.577,29,0.358,34,0.085,40,0.043,41,0.721,44,1.438,45,2.83,83,0.934,127,0.002,128,0.003,129,0.002,146,1.098,181,1.73,219,1.559,220,2.107,234,1.792,235,1.797,236,2.359,237,1.852,239,1.88,240,1.88,243,1.771,244,3.6,247,2.503,251,1.644,268,1.839,269,2.262,271,0.946,273,2.854,274,3.194,275,2.718,304,1.625,305,2.542,306,2.503,307,1.695,308,3.084,309,1.88,310,1.88,311,1.797,312,1.88,313,1.797,314,2.488,315,2.542,316,1.797,317,2.542,318,1.797,319,1.88,320,1.771,321,1.88,322,1.797,323,1.88,324,3.084,325,1.797,326,1.88,327,1.745,328,2.542,329,1.797,330,2.905,331,2.862,332,3.344,333,1.88,334,1.797,335,2.503,336,1.88,337,1.824,338,1.72,339,2.542,340,1.797,341,1.88,342,3.084,343,1.745,344,1.88,345,1.797,346,1.797,347,1.852,348,1.771,349,1.88,350,1.797,351,1.797,352,1.88,353,1.771,354,1.88,355,1.797,356,1.88,357,1.824,358,1.797,359,1.771,360,1.88,361,1.797,362,1.538,363,1.88,364,1.797,365,2.503,366,1.797,367,2.88,368,1.797,369,1.88,370,1.797,371,1.88,372,1.797,373,1.88,374,1.745,375,1.797,376,1.771,377,1.797,378,1.797,379,2.359,380,1.797,381,1.88,382,1.797,383,1.797,384,1.797,385,1.33,386,1.771,387,1.771,388,1.88,389,1.771,390,1.88,391,1.771,392,1.852,393,1.88,531,4.939,1282,4.798,1516,6.359,1750,6.365,1917,4.708,2134,6.365,2190,7.22,2250,8.315,2251,4.708,2252,7.093,2253,7.724,2254,7.724,2255,5.247,2256,8.991,2257,5.247,2258,5.247,2259,5.247,2260,5.247,2261,5.247,2262,5.247,2263,5.247,2264,5.247,2265,5.247,2266,4.353,2267,5.247,2268,7.724,2269,7.093,2270,7.093,2271,7.093]],["title/classes/CreateUserApplication.html",[0,0.279,2272,3.054]],["body/classes/CreateUserApplication.html",[0,0.529,2,0.681,3,0.03,4,0.03,5,0.035,8,1.021,14,0.947,15,0.22,16,0.448,17,0.749,18,1.663,19,1.213,20,0.195,21,0.246,22,1.499,24,0.247,26,0.394,27,0.005,28,0.386,29,0.394,31,0.607,32,0.529,34,0.09,35,0.504,40,0.06,41,0.792,49,3.343,60,1.353,83,1.695,95,1.291,96,1.291,97,1.207,113,1.316,127,0.003,128,0.004,129,0.003,413,1.927,414,1.405,415,1.461,416,1.644,417,1.644,434,2.219,523,4.4,1109,3.217,1142,4.701,1222,4.107,2058,3.306,2272,5.44,2273,3.753,2274,7.55,2275,5.763,2276,5.324,2277,5.126,2278,5.126,2279,5.126,2280,5.126,2281,3.134,2282,3.753,2283,4.064,2284,4.064,2285,4.064,2286,4.064,2287,4.064,2288,3.753]],["title/classes/CreateUserApplicationOnFailure.html",[0,0.279,2280,3.054]],["body/classes/CreateUserApplicationOnFailure.html",[0,0.529,2,0.681,3,0.03,4,0.03,5,0.035,8,1.021,14,0.947,15,0.22,16,0.448,17,0.749,18,1.663,19,1.213,20,0.195,21,0.246,22,1.499,24,0.247,26,0.394,27,0.005,28,0.386,29,0.394,31,0.607,32,0.529,34,0.09,35,0.504,40,0.06,41,0.792,49,3.343,60,1.353,83,1.695,95,1.291,96,1.291,97,1.207,113,1.316,127,0.003,128,0.004,129,0.003,413,1.927,414,1.405,415,1.461,416,1.644,417,1.644,434,2.219,523,4.4,1109,3.217,1142,4.701,1222,4.107,2058,3.306,2272,5.126,2273,3.753,2276,4.064,2277,5.126,2278,5.126,2279,5.126,2280,5.44,2281,3.134,2282,3.753,2283,4.064,2284,4.064,2285,4.064,2286,5.324,2287,4.064,2288,3.753,2289,7.55,2290,5.763]],["title/classes/CreateUserApplicationOnSuccess.html",[0,0.279,2279,3.054]],["body/classes/CreateUserApplicationOnSuccess.html",[0,0.529,2,0.681,3,0.03,4,0.03,5,0.035,8,1.021,14,0.947,15,0.22,16,0.448,17,0.749,18,1.663,19,1.213,20,0.195,21,0.246,22,1.499,24,0.247,26,0.394,27,0.005,28,0.386,29,0.394,31,0.607,32,0.529,34,0.09,35,0.504,40,0.06,41,0.792,49,3.343,60,1.353,83,1.695,95,1.291,96,1.291,97,1.207,113,1.316,127,0.003,128,0.004,129,0.003,413,1.927,414,1.405,415,1.461,416,1.644,417,1.644,434,2.219,523,4.4,1109,3.217,1142,4.701,1222,4.107,2058,3.306,2272,5.126,2273,3.753,2276,4.064,2277,5.126,2278,5.126,2279,5.44,2280,5.126,2281,3.134,2282,3.753,2283,4.064,2284,4.064,2285,5.324,2286,4.064,2287,4.064,2288,3.753,2291,7.55,2292,5.763]],["title/components/CustomLogoComponent.html",[234,1,334,1.718]],["body/components/CustomLogoComponent.html",[0,0.244,3,0.023,4,0.032,5,0.038,14,0.611,15,0.167,16,0.372,17,0.869,20,0.184,21,0.187,24,0.288,26,0.299,27,0.005,28,0.534,29,0.299,31,0.659,32,0.402,34,0.075,40,0.027,44,1.202,73,1.155,83,0.781,85,0.64,127,0.002,128,0.003,129,0.002,138,1.81,146,0.969,169,0.931,219,1.303,220,1.86,225,3.498,228,3.236,234,1.456,235,1.502,236,2.082,237,1.547,238,1.887,239,1.571,240,1.571,242,2.658,243,1.48,244,3.569,245,2.853,247,2.21,249,1.924,251,1.451,252,2.992,254,3.099,268,1.671,269,1.762,271,0.791,285,1.571,286,1.547,287,1.571,288,1.571,289,1.571,290,1.571,291,1.339,292,1.397,293,1.571,294,1.571,295,1.571,296,1.524,297,1.458,298,1.547,299,1.571,300,1.571,301,1.571,302,1.004,303,1.571,304,1.358,305,2.244,306,2.21,307,1.417,308,2.854,309,1.571,310,1.571,311,1.502,312,1.571,313,1.502,314,2.261,315,2.244,316,1.502,317,2.244,318,1.502,319,1.571,320,1.48,321,1.571,322,1.502,323,1.571,324,2.854,325,1.502,326,1.571,327,1.458,328,2.244,329,1.502,330,1.48,331,1.458,332,1.547,333,1.571,334,2.728,335,3.36,336,1.571,337,1.524,338,1.437,339,2.244,340,1.502,341,1.571,342,2.854,343,1.458,344,1.571,345,1.502,346,1.502,347,1.547,348,1.48,349,1.571,350,1.502,351,1.502,352,1.571,353,1.48,354,1.571,355,1.502,356,1.571,357,1.524,358,1.502,359,1.48,360,1.571,361,1.502,362,1.285,363,1.571,364,1.502,365,2.21,366,1.502,367,2.617,368,1.502,369,1.571,370,1.502,371,1.571,372,1.502,373,1.571,374,1.458,375,1.502,376,1.48,377,1.502,378,1.502,379,1.716,380,1.502,381,1.571,382,1.502,383,1.502,384,1.502,385,1.111,386,1.48,387,1.48,388,1.571,389,1.48,390,1.571,391,1.48,392,1.547,393,1.571,542,3.092,543,2.966,574,2.516,593,4.312,662,8.872,716,3.416,848,2.516,912,3.092,947,1.959,1378,2.124,1875,5.395,2293,9.887,2294,4.385,2295,7.303,2296,7.303,2297,6.261,2298,7.303,2299,7.303,2300,7.965,2301,7.303,2302,7.303,2303,7.965,2304,7.965,2305,7.965,2306,6.553,2307,4.385,2308,6.989,2309,6.261,2310,4.385,2311,4.385,2312,4.385,2313,4.385,2314,4.385,2315,6.553,2316,4.385,2317,4.385,2318,4.385,2319,4.385,2320,4.385,2321,4.385,2322,6.261,2323,6.261,2324,6.261,2325,4.385,2326,7.303,2327,7.303,2328,4.385,2329,4.385,2330,4.385,2331,6.261,2332,5.885,2333,4.385,2334,4.385,2335,7.147,2336,7.147,2337,6.553,2338,4.385,2339,4.385,2340,4.385,2341,3.935,2342,4.385,2343,4.385]],["title/injectables/CustomRouterEffects.html",[800,3.054,856,1.393]],["body/injectables/CustomRouterEffects.html",[0,0.271,3,0.025,4,0.025,5,0.03,8,0.802,15,0.367,16,0.4,18,1.126,20,0.176,21,0.208,24,0.257,26,0.528,27,0.005,28,0.452,29,0.333,31,0.879,32,0.765,34,0.117,35,0.426,40,0.03,70,2.228,110,2.047,127,0.002,128,0.003,129,0.002,150,0.996,153,2.657,165,2.154,169,2.133,172,2.453,181,2.418,202,4.295,249,1.283,271,0.878,362,2.445,385,1.234,404,2.465,409,2.584,453,2.176,455,3.328,515,1.719,537,2.694,544,1.353,545,1.353,546,1.389,559,1.353,695,5.593,760,3.435,800,4.104,856,1.872,857,2.136,863,6.995,876,4.538,888,2.649,889,2.523,892,2.31,894,1.719,898,4.041,1032,2.965,1475,5.593,1556,4.24,1561,4.104,1568,3.295,1569,3.063,1570,3.598,1926,6.39,2025,6.049,2344,9.061,2345,4.87,2346,7.73,2347,7.73,2348,7.73,2349,5.434,2350,4.87,2351,6.741,2352,9.468,2353,7.73,2354,6.741,2355,6.741,2356,4.87,2357,9.061,2358,9.289,2359,6.741,2360,9.061,2361,9.061,2362,6.741,2363,9.468,2364,6.741,2365,4.87,2366,6.741,2367,6.741,2368,4.87,2369,6.741,2370,6.741,2371,6.741,2372,4.39,2373,6.741,2374,6.741,2375,4.87,2376,7.73,2377,6.049,2378,6.741,2379,8.343,2380,6.741,2381,4.39,2382,5.434,2383,3.868,2384,6.049,2385,4.435,2386,4.104,2387,4.39,2388,4.104,2389,4.87,2390,4.87,2391,3.598]],["title/classes/CustomRouterStateSerializer.html",[0,0.279,2392,3.908]],["body/classes/CustomRouterStateSerializer.html",[0,0.441,2,0.736,3,0.032,4,0.041,5,0.038,11,2.214,13,3.238,14,0.775,15,0.237,19,1.077,20,0.15,21,0.266,24,0.233,26,0.628,27,0.005,28,0.532,29,0.542,34,0.095,40,0.053,85,0.636,93,1.927,95,0.844,96,0.844,97,0.789,110,1.749,127,0.003,128,0.004,129,0.003,165,2.187,169,1.684,172,3.348,181,1.518,199,1.96,209,4.236,224,2.892,249,2.302,251,1.839,268,1.999,379,1.706,451,2.301,470,2.163,679,3.789,682,3.571,728,3.914,760,4.389,761,6.806,1030,3.914,1045,2.455,1219,3.385,1284,3.914,1378,3.014,2386,4.831,2392,6.182,2393,5.584,2394,7.632,2395,7.934,2396,7.934,2397,7.12,2398,8.255,2399,6.223,2400,7.12,2401,7.884,2402,6.223,2403,7.12,2404,5.584,2405,5.584,2406,8.255,2407,5.584,2408,5.163,2409,5.584,2410,7.247,2411,5.584,2412,5.584,2413,6.583,2414,5.584,2415,5.584,2416,5.584,2417,5.584,2418,5.584,2419,5.584,2420,5.584,2421,5.584,2422,5.584,2423,5.584,2424,5.584,2425,5.584]],["title/classes/DateTimeNgb.html",[0,0.279,928,4.162]],["body/classes/DateTimeNgb.html",[0,0.31,2,0.659,3,0.029,4,0.029,5,0.034,15,0.213,20,0.14,21,0.238,24,0.27,26,0.504,27,0.005,28,0.495,29,0.504,32,0.76,34,0.066,40,0.054,85,1.011,88,3.732,95,0.756,96,0.756,97,0.707,127,0.004,128,0.003,129,0.003,145,3.825,165,2.097,169,2.136,170,3.21,206,3.662,228,2.456,249,1.469,251,1.712,268,2.019,273,3.032,274,3.393,275,2.887,379,2.637,709,4.645,725,2.491,928,6.127,931,8.461,932,7.914,1045,3.267,1407,3.93,1954,4.496,1992,4.624,2133,6.454,2166,4.118,2426,9.429,2427,5.573,2428,8.283,2429,7.317,2430,8.819,2431,8.819,2432,6.627,2433,5.573,2434,5.573,2435,5.573,2436,5.573,2437,5.573,2438,7.385,2439,5.573,2440,5.573,2441,7.385,2442,5.573,2443,5.573,2444,5.573,2445,5.573,2446,4.624,2447,5.573,2448,5.573,2449,5.573,2450,8.283,2451,8.283,2452,6.454,2453,8.283,2454,7.433,2455,7.385,2456,7.385,2457,3.93,2458,5.573,2459,5.573,2460,5.573,2461,5.573,2462,5.573,2463,5.573,2464,5.573,2465,5.001,2466,5.573,2467,5.573,2468,5.573,2469,5.573,2470,5.573,2471,5.001,2472,5.001,2473,5.001,2474,5.573,2475,5.573]],["title/components/DatetimeFilterComponent.html",[234,1,340,1.718]],["body/components/DatetimeFilterComponent.html",[0,0.205,3,0.019,4,0.028,5,0.034,14,0.539,15,0.141,16,0.328,17,0.847,20,0.176,21,0.282,24,0.279,26,0.563,27,0.005,28,0.602,29,0.6,31,0.773,32,0.673,34,0.066,38,1.343,40,0.023,44,1.011,73,0.972,85,0.564,88,2.141,92,2.928,95,1.192,96,1.192,97,1.114,127,0.002,128,0.003,129,0.002,138,1.912,146,0.854,169,0.783,170,2.406,179,2.167,181,2.01,197,1.715,206,1.532,219,1.096,220,1.64,225,2.292,234,1.318,235,1.264,236,1.835,237,1.302,238,1.588,239,1.322,240,1.322,242,1.343,243,1.245,244,3.531,245,2.514,247,1.948,251,1.279,254,2.732,268,1.956,269,2.676,271,0.665,285,1.322,286,1.948,287,1.322,288,1.322,289,1.322,290,1.322,291,1.127,292,1.175,293,1.322,294,1.322,295,1.322,296,1.283,297,1.227,298,1.302,299,1.322,300,1.322,301,1.322,302,0.845,303,1.322,304,1.143,305,1.978,306,1.948,307,1.192,308,2.629,309,1.322,310,1.322,311,1.264,312,1.322,313,1.264,314,2.047,315,1.978,316,1.264,317,1.978,318,1.264,319,1.322,320,1.245,321,1.322,322,1.264,323,1.322,324,2.629,325,1.264,326,1.322,327,1.227,328,1.978,329,1.264,330,1.245,331,1.227,332,1.302,333,1.322,334,1.264,335,1.948,336,1.322,337,1.283,338,1.209,339,1.978,340,3.009,341,3.148,342,2.629,343,1.227,344,1.322,345,1.264,346,1.264,347,1.302,348,1.245,349,1.322,350,1.264,351,1.264,352,1.322,353,1.245,354,1.322,355,1.264,356,1.322,357,1.283,358,1.264,359,1.245,360,1.322,361,1.264,362,1.081,363,1.322,364,1.264,365,2.909,366,1.264,367,2.369,368,1.264,369,1.322,370,1.264,371,1.322,372,1.264,373,1.322,374,1.227,375,1.264,376,1.245,377,1.264,378,1.264,379,2.462,380,1.264,381,1.322,382,1.264,383,1.264,384,1.264,385,1.676,386,1.245,387,1.245,388,1.322,389,1.245,390,1.322,391,1.245,392,1.302,393,1.322,589,3.892,600,4.3,606,3.259,632,1.868,674,5.421,904,6.768,918,4.386,926,4.94,947,3.818,976,3.311,977,4.952,978,4.952,979,3.311,1045,3.251,1072,8.611,1073,8.611,1194,2.403,1196,2.496,2092,2.496,2471,3.311,2472,5.932,2473,5.932,2476,2.726,2477,6.611,2478,6.611,2479,6.611,2480,7.338,2481,7.855,2482,6.611,2483,5.932,2484,4.077,2485,7.338,2486,5.485,2487,6.611,2488,5.519,2489,6.088,2490,5.519,2491,5.519,2492,5.519,2493,5.519,2494,5.932,2495,3.69,2496,3.311,2497,5.519,2498,3.69,2499,3.69,2500,5.519,2501,3.69,2502,6.611,2503,5.519,2504,3.69,2505,3.69,2506,3.69,2507,5.519,2508,5.519,2509,6.584,2510,3.69,2511,6.611,2512,5.519,2513,3.311,2514,5.932,2515,3.69,2516,3.69,2517,3.311,2518,3.061,2519,2.726,2520,3.69,2521,3.69,2522,2.602,2523,3.69,2524,3.69,2525,3.69,2526,3.69,2527,3.69,2528,3.69,2529,3.69,2530,3.69,2531,3.69,2532,5.519,2533,3.69,2534,4.952,2535,3.69,2536,3.69,2537,3.311,2538,3.69,2539,3.69,2540,3.69,2541,3.69]],["title/classes/DelayedLightCardUpdate.html",[0,0.279,473,2.242]],["body/classes/DelayedLightCardUpdate.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.43,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,2.863,500,1.961,501,1.881,2542,5.91,2543,4.048]],["title/classes/Detail.html",[0,0.279,147,2.598]],["body/classes/Detail.html",[0,0.461,2,0.79,3,0.034,4,0.034,5,0.041,11,1.693,19,1.312,20,0.126,21,0.385,24,0.196,26,0.456,27,0.005,28,0.447,29,0.456,34,0.099,40,0.055,41,0.918,85,1.078,95,1.125,96,1.125,97,1.052,127,0.003,128,0.004,129,0.003,136,3.715,146,1.033,147,4.673,149,3.104,166,3.305,171,2.287,176,3.728,228,3.138,238,3.884,439,2.068,440,2.04,451,2.469,513,6.384,596,4.71,1775,5.541,1777,3.944,1778,4.71,1779,4.934,1780,4.934,1781,4.934,1782,5.877,1783,5.203,1784,5.203,1785,4.934,1786,4.934,1788,5.203,1789,8.206,1790,5.203,1791,4.35,1792,8.096,1793,7.486,2544,6.678,2545,6.678]],["title/components/DetailComponent.html",[234,1,343,1.668]],["body/components/DetailComponent.html",[0,0.205,3,0.019,4,0.019,5,0.023,8,0.887,11,1.4,14,0.539,15,0.141,16,0.328,17,0.656,19,0.816,20,0.176,21,0.158,24,0.288,26,0.501,27,0.005,28,0.573,29,0.501,31,0.582,32,0.507,34,0.114,35,0.323,40,0.023,44,1.012,85,0.676,94,1.959,110,1.884,127,0.002,128,0.003,129,0.002,135,3.168,136,2.757,146,1.415,147,4.551,148,1.507,149,1.716,153,2.503,154,1.65,165,2.175,169,1.404,171,1.265,172,1.344,179,1.81,181,1.79,199,0.912,219,1.097,220,1.641,225,2.747,234,1.463,235,1.265,236,1.836,237,1.303,239,1.979,240,1.323,242,2.407,243,1.246,244,3.532,247,1.949,249,2.626,251,1.28,252,2.757,254,2.733,268,2.011,269,2.529,271,0.666,272,1.228,286,1.303,304,1.144,305,2.37,306,2.591,307,1.193,308,2.63,309,1.323,310,1.323,311,1.265,312,1.323,313,1.265,314,2.048,315,1.979,316,1.265,317,1.979,318,1.265,319,1.323,320,1.246,321,1.323,322,1.265,323,1.323,324,2.63,325,1.265,326,1.323,327,1.228,328,1.979,329,1.265,330,1.246,331,1.228,332,1.303,333,1.323,334,1.265,335,1.949,336,1.323,337,1.284,338,1.21,339,1.979,340,1.265,341,1.323,342,2.63,343,2.441,344,1.323,345,1.265,346,1.265,347,1.303,348,1.246,349,1.323,350,1.265,351,1.265,352,1.323,353,1.246,354,1.323,355,1.265,356,1.323,357,1.284,358,1.265,359,1.246,360,1.323,361,1.265,362,1.082,363,1.323,364,1.265,365,1.949,366,1.265,367,2.37,368,1.265,369,1.323,370,1.265,371,1.323,372,1.265,373,1.323,374,1.228,375,1.265,376,1.246,377,1.265,378,1.265,379,1.514,380,1.265,381,1.323,382,1.265,383,1.265,384,1.265,385,0.936,386,1.246,387,1.246,388,1.323,389,1.246,390,1.323,391,1.246,392,1.303,393,1.323,456,1.409,542,2.604,543,2.498,544,1.026,545,1.026,546,1.053,559,1.026,588,4.582,642,1.828,643,1.828,741,3.064,851,4.16,1045,1.457,1120,2.181,1345,2.323,1453,3.509,1454,4.469,1705,6.587,1777,2.181,1778,3.894,1806,3.473,1864,3.314,1894,4.098,1901,2.498,1905,3.314,1910,3.314,1915,3.314,1916,3.314,2092,3.735,2175,5.423,2186,3.314,2308,6.09,2332,2.728,2383,2.119,2489,5.488,2546,3.693,2547,5.522,2548,6.614,2549,6.614,2550,6.614,2551,6.659,2552,5.522,2553,5.522,2554,5.522,2555,7.34,2556,7.34,2557,6.587,2558,7.34,2559,6.614,2560,3.693,2561,5.154,2562,5.488,2563,5.935,2564,5.522,2565,3.693,2566,3.693,2567,5.522,2568,6.614,2569,8.245,2570,3.693,2571,3.693,2572,3.693,2573,5.522,2574,3.693,2575,3.693,2576,3.693,2577,3.693,2578,3.693,2579,3.693,2580,6.614,2581,3.693,2582,3.693,2583,3.693,2584,4.303,2585,3.693,2586,3.693,2587,3.693,2588,3.314,2589,3.693,2590,3.314,2591,2.877,2592,3.314,2593,4.582,2594,3.693,2595,3.314,2596,5.522,2597,5.522,2598,3.693,2599,3.693,2600,3.693,2601,3.693,2602,3.693,2603,3.693,2604,3.693,2605,3.693,2606,3.693,2607,3.693,2608,3.693,2609,3.693,2610,3.693,2611,3.693,2612,4.955,2613,5.522,2614,3.693,2615,3.693,2616,3.693,2617,3.693,2618,3.693,2619,3.693,2620,3.693,2621,3.693,2622,3.693,2623,3.693,2624,3.693,2625,3.693,2626,5.522,2627,3.693,2628,3.314,2629,3.693,2630,3.693,2631,3.693,2632,3.693,2633,3.693,2634,3.693,2635,3.693,2636,3.693,2637,5.522,2638,3.693,2639,5.522,2640,3.693,2641,5.522,2642,3.693,2643,3.693,2644,3.693,2645,3.693,2646,3.693,2647,3.693,2648,3.693,2649,3.693,2650,3.693,2651,3.314,2652,3.314,2653,3.693,2654,3.693]],["title/classes/DetailContext.html",[0,0.279,2591,3.908]],["body/classes/DetailContext.html",[0,0.433,2,0.92,3,0.04,4,0.04,5,0.048,19,0.96,20,0.147,21,0.332,24,0.229,26,0.532,27,0.005,28,0.521,29,0.532,34,0.108,40,0.048,127,0.004,128,0.004,129,0.004,146,1.537,148,3.176,2446,6.458,2551,8.059,2591,7.088,2593,6.458,2595,6.984,2655,9.097,2656,6.984,2657,7.784,2658,7.784,2659,7.784]],["title/components/DetailsComponent.html",[234,1,345,1.718]],["body/components/DetailsComponent.html",[0,0.251,3,0.023,4,0.033,5,0.039,14,0.623,15,0.172,16,0.379,17,0.633,20,0.176,21,0.316,24,0.287,26,0.436,27,0.005,28,0.57,29,0.436,34,0.096,40,0.028,44,1.235,49,1.435,73,1.187,85,0.653,127,0.002,128,0.003,129,0.002,137,2.585,138,1.303,146,1.437,147,3.306,148,1.839,169,0.956,176,4.935,179,1.477,219,1.339,220,1.896,225,2.651,234,1.478,235,1.543,236,2.123,237,1.59,238,1.939,239,1.615,240,1.615,243,1.52,244,3.574,245,2.908,247,2.253,249,2.329,251,1.48,254,3.159,256,6.15,268,1.948,269,2.558,271,0.812,285,1.615,286,1.59,287,1.615,288,1.615,289,1.615,290,1.615,291,1.376,292,1.435,293,1.615,294,1.615,295,1.615,296,1.566,297,1.498,298,1.59,299,1.615,300,1.615,301,1.615,302,1.031,303,1.615,304,1.395,305,2.287,306,2.253,307,1.456,308,2.889,309,1.615,310,1.615,311,1.543,312,1.615,313,1.543,314,2.296,315,2.287,316,1.543,317,2.287,318,1.543,319,1.615,320,1.52,321,1.615,322,1.543,323,1.615,324,2.889,325,1.543,326,1.615,327,1.498,328,2.287,329,1.543,330,1.52,331,1.498,332,1.59,333,1.615,334,1.543,335,2.253,336,1.615,337,1.566,338,1.477,339,2.287,340,1.543,341,1.615,342,2.889,343,2.83,344,1.615,345,2.761,346,1.543,347,1.59,348,1.52,349,1.615,350,1.543,351,1.543,352,1.615,353,1.52,354,1.615,355,1.543,356,1.615,357,1.566,358,1.543,359,1.52,360,1.615,361,1.543,362,1.32,363,1.615,364,1.543,365,2.253,366,1.543,367,2.656,368,1.543,369,1.615,370,1.543,371,1.615,372,3.113,373,1.615,374,1.498,375,1.543,376,1.52,377,1.543,378,1.543,379,1.75,380,1.543,381,1.615,382,1.543,383,1.543,384,1.543,385,1.142,386,1.52,387,1.52,388,1.615,389,1.52,390,1.615,391,1.52,392,1.59,393,1.615,593,2.661,851,2.834,876,2.451,911,2.743,947,2.013,994,3.51,995,4.973,996,3.51,997,3.51,998,3.738,1045,1.777,1561,2.743,1702,4.501,1703,5.776,1797,6.652,1806,4.015,1827,4.043,1834,5.728,1892,5.728,1954,3.886,1983,5.296,1984,7.081,1986,5.014,1987,4.043,1989,4.043,1990,4.043,1991,4.043,1992,3.738,2489,6.15,2557,5.728,2588,7.235,2628,4.043,2660,4.505,2661,6.15,2662,7.413,2663,6.383,2664,8.063,2665,6.383,2666,4.505,2667,4.505,2668,6.383,2669,4.505,2670,4.505,2671,6.383,2672,4.505,2673,4.505,2674,7.413,2675,6.383,2676,4.505,2677,4.505,2678,4.505,2679,4.505,2680,6.383,2681,4.505,2682,4.505,2683,4.505,2684,4.505,2685,5.728,2686,2.39,2687,6.383,2688,4.505,2689,4.505,2690,4.505,2691,4.505,2692,4.505,2693,6.383,2694,4.505,2695,4.505,2696,6.383]],["title/directives/DraggableDirective.html",[307,1.621,389,1.693]],["body/directives/DraggableDirective.html",[0,0.321,3,0.03,4,0.03,5,0.035,15,0.22,16,0.449,20,0.16,24,0.285,27,0.005,31,0.608,32,0.53,34,0.069,40,0.035,73,1.522,127,0.003,128,0.004,129,0.003,169,1.789,179,2.931,181,2.056,219,1.716,243,1.949,244,2.552,249,2.222,269,2.518,271,1.042,307,2.443,386,1.949,389,2.552,419,3.411,454,1.789,558,4.585,947,4.336,1163,4.465,1266,4.074,1397,5.333,1478,7.421,1702,5.333,1714,4.501,2010,4.793,2092,7.011,2612,5.183,2686,3.065,2697,7.669,2698,8.832,2699,5.777,2700,7.562,2701,8.43,2702,6.785,2703,8.43,2704,8.43,2705,8.43,2706,7.562,2707,7.562,2708,7.562,2709,8.707,2710,5.777,2711,5.777,2712,5.777,2713,6.994,2714,5.777,2715,9.524,2716,5.777,2717,10.185,2718,5.333,2719,5.777,2720,5.777,2721,5.777,2722,5.777,2723,5.777,2724,8.025,2725,5.777,2726,5.777,2727,9.524,2728,5.777,2729,5.777,2730,5.777,2731,5.777,2732,5.777,2733,5.777,2734,5.777,2735,5.777,2736,5.777,2737,5.777,2738,5.183,2739,6.785,2740,5.777,2741,5.777,2742,5.777,2743,5.777,2744,5.777]],["title/components/EmailSettingComponent.html",[234,1,346,1.718]],["body/components/EmailSettingComponent.html",[0,0.232,3,0.022,4,0.022,5,0.025,14,0.59,15,0.159,16,0.359,20,0.186,21,0.178,24,0.302,26,0.607,27,0.005,28,0.631,29,0.607,31,0.636,32,0.79,34,0.099,35,0.364,40,0.025,44,1.143,85,0.726,110,1.898,127,0.002,128,0.003,129,0.002,138,2.49,146,0.934,165,0.991,169,0.885,181,1.017,197,1.938,219,1.794,220,1.794,225,2.507,234,1.415,235,1.428,236,2.008,237,1.471,239,1.494,240,1.494,242,2.584,243,1.407,244,3.558,247,2.131,249,2.269,251,1.4,252,2.666,254,2.989,268,2.227,269,2.424,271,0.752,291,1.844,292,1.328,304,1.291,305,2.164,306,2.131,307,1.347,308,2.789,309,1.494,310,1.494,311,1.428,312,1.494,313,1.428,314,2.198,315,2.164,316,1.428,317,2.164,318,1.428,319,1.494,320,1.407,321,1.494,322,3.421,323,1.494,324,2.789,325,1.428,326,1.494,327,1.386,328,2.164,329,1.428,330,1.407,331,1.386,332,1.471,333,1.494,334,1.428,335,2.131,336,1.494,337,1.449,338,1.366,339,2.164,340,1.428,341,1.494,342,2.789,343,1.386,344,1.494,345,1.428,346,2.665,347,2.915,348,1.407,349,1.494,350,1.428,351,1.428,352,1.494,353,1.407,354,1.494,355,1.428,356,1.494,357,1.449,358,1.428,359,1.407,360,1.494,361,1.428,362,1.222,363,1.494,364,1.428,365,2.131,366,1.428,367,2.544,368,1.428,369,1.494,370,1.428,371,1.494,372,1.428,373,1.494,374,1.386,375,1.428,376,1.407,377,3.224,378,1.428,379,1.655,380,1.428,381,1.494,382,1.428,383,1.428,384,1.428,385,1.057,386,1.407,387,1.407,388,1.494,389,1.407,390,1.494,391,1.407,392,1.471,393,1.494,515,1.471,545,1.158,546,1.189,632,2.11,918,3.371,1269,3.566,1391,3.203,1607,3.248,1608,4.192,1609,5.488,1610,4.705,1611,4.258,1612,3.676,1613,6.79,1614,4.258,1615,6.073,1616,5.488,1617,4.192,1618,5.006,1619,5.488,1620,4.258,1621,4.258,1622,4.258,1626,3.741,1627,2.94,1629,2.94,1632,4.258,1633,4.895,1635,4.258,1639,4.258,1654,2.94,1954,3.676,1986,6.894,2486,6.853,2519,5.245,2745,7.782,2746,6.983,2747,7.97,2748,5.418,2749,6.038,2750,4.169,2751,4.169,2752,3.08,2753,3.08,2754,3.08,2755,4.169,2756,4.169,2757,4.169,2758,4.169,2759,3.08,2760,3.08,2761,3.08,2762,3.08,2763,3.08,2764,3.08,2765,3.08,2766,3.08,2767,3.08,2768,3.08,2769,3.08,2770,3.08,2771,3.08,2772,3.459,2773,3.08,2774,3.08,2775,4.169,2776,4.169,2777,4.169,2778,4.705,2779,5.01,2780,5.01]],["title/classes/EmptyLightCards.html",[0,0.279,446,2.242]],["body/classes/EmptyLightCards.html",[0,0.56,2,0.49,3,0.021,4,0.021,5,0.025,8,1.063,10,2.171,11,1.049,12,1.3,14,0.988,15,0.158,16,0.357,18,1.571,19,1.252,20,0.193,21,0.378,24,0.122,27,0.005,31,0.436,32,0.38,34,0.093,35,0.362,40,0.062,41,0.569,45,1.264,60,0.972,70,1.909,83,1.673,85,0.793,93,1.282,95,1.292,96,1.292,97,1.207,113,1.202,118,1.531,127,0.002,128,0.003,129,0.002,146,1.489,150,0.846,153,1.913,185,2.331,199,1.023,272,1.377,302,1.375,403,1.507,405,2.243,408,1.737,413,1.618,414,1.01,415,1.049,416,1.181,417,1.181,418,1.606,420,1.165,421,1.282,431,3.16,432,2.792,433,1.924,437,2.005,438,2.588,439,1.282,440,1.264,441,1.964,442,1.886,443,1.782,444,3.221,445,4.778,446,3.466,447,1.815,448,3.044,449,2.792,450,1.964,451,1.531,452,3.16,453,3.16,454,1.282,455,3.044,456,3.279,457,1.782,458,3.16,459,1.924,460,3.16,461,3.16,462,1.964,463,1.964,464,3.16,465,3.1,466,3.16,467,1.75,468,1.815,469,3.16,470,1.439,471,3.16,472,1.964,473,3.16,474,1.924,475,3.16,476,1.719,477,1.633,478,2.005,479,2.91,480,2.005,481,1.782,482,2.005,483,2.005,484,2.005,485,1.661,486,2.005,487,2.005,488,2.005,489,2.005,490,1.58,491,2.005,492,2.005,493,2.005,494,1.964,495,1.964,496,2.005,497,2.005,498,2.005,499,2.005,500,2.005,501,1.924,2781,4.14]],["title/classes/FailToUpdateTimeReference.html",[0,0.279,2782,3.267]],["body/classes/FailToUpdateTimeReference.html",[0,0.51,2,0.729,3,0.032,4,0.032,5,0.038,7,2.392,8,1.006,10,2.292,14,0.895,15,0.235,16,0.468,17,0.863,18,1.584,19,1.169,20,0.191,21,0.263,22,1.604,24,0.255,26,0.421,27,0.005,28,0.413,29,0.421,31,0.65,32,0.566,34,0.109,35,0.539,38,2.871,39,2.756,40,0.059,41,0.848,55,2.654,69,2.654,83,1.632,88,2.392,93,2.443,109,3.904,113,1.18,127,0.003,128,0.004,129,0.003,228,2.051,236,2.051,379,2.657,408,1.783,434,2.292,470,2.144,523,3.742,530,5.828,848,3.538,1391,3.272,1408,3.594,1461,4.172,1544,5.138,1913,5.563,2782,5.665,2783,4.349,2784,5.563,2785,6.146,2786,7.143,2787,5.828,2788,6.146,2789,7.888,2790,6.167,2791,6.146,2792,4.016,2793,4.349,2794,3.754,2795,4.349,2796,4.805,2797,5.414,2798,4.805,2799,5.563,2800,4.805,2801,6.426,2802,6.426,2803,4.805,2804,4.805,2805,6.146,2806,4.556,2807,4.172,2808,4.805,2809,4.805,2810,4.556,2811,4.805,2812,4.172,2813,4.556,2814,5.138,2815,4.805,2816,4.805,2817,4.556]],["title/components/FeedComponent.html",[234,1,348,1.693]],["body/components/FeedComponent.html",[0,0.27,3,0.025,4,0.035,5,0.041,14,0.657,15,0.185,16,0.399,17,0.482,20,0.171,21,0.207,24,0.266,26,0.332,27,0.005,28,0.558,29,0.332,34,0.116,35,0.424,40,0.03,44,1.331,73,1.28,110,1.995,127,0.002,128,0.003,129,0.002,138,1.945,146,1.041,219,1.443,220,1.998,234,1.539,235,1.663,236,2.237,237,1.714,238,2.09,239,1.74,240,1.74,242,2.809,243,1.638,244,3.588,245,3.065,247,2.374,249,1.28,251,1.559,252,3.129,268,1.54,269,1.893,271,0.875,285,1.74,286,1.714,287,1.74,288,1.74,289,1.74,290,1.74,291,1.483,292,1.547,293,1.74,294,1.74,295,1.74,296,2.683,297,1.615,298,1.714,299,1.74,300,1.74,301,1.74,302,1.111,303,1.74,304,1.504,305,2.41,306,2.374,307,1.569,308,2.986,309,1.74,310,1.74,311,1.663,312,1.74,313,1.663,314,2.39,315,2.41,316,1.663,317,2.41,318,1.663,319,1.74,320,1.638,321,1.74,322,1.663,323,1.74,324,2.986,325,1.663,326,1.74,327,1.615,328,2.41,329,1.663,330,1.638,331,1.615,332,1.714,333,1.74,334,1.663,335,2.374,336,1.74,337,1.688,338,1.591,339,2.41,340,1.663,341,1.74,342,2.986,343,1.615,344,1.74,345,1.663,346,1.663,347,1.714,348,2.812,349,1.74,350,1.663,351,1.663,352,1.74,353,1.638,354,1.74,355,1.663,356,1.74,357,1.688,358,1.663,359,1.638,360,1.74,361,1.663,362,1.423,363,1.74,364,1.663,365,2.374,366,1.663,367,2.766,368,1.663,369,1.74,370,1.663,371,1.74,372,1.663,373,1.74,374,1.615,375,1.663,376,1.638,377,1.663,378,1.663,379,1.844,380,1.663,381,1.74,382,1.663,383,1.663,384,1.663,385,1.231,386,1.638,387,1.638,388,1.74,389,1.638,390,1.74,391,1.638,392,1.714,393,1.74,438,1.462,439,1.504,440,1.483,454,1.504,457,3.322,481,3.322,490,2.567,515,1.714,537,2.398,544,1.349,545,1.349,546,1.385,553,2.303,556,2.515,559,1.349,725,3.006,891,2.129,894,1.714,911,4.095,1015,4.028,1017,3.424,1053,4.028,1055,4.357,1408,3.065,1984,6.492,2071,6.545,2095,4.028,2133,3.783,2452,3.783,2661,6.403,2818,4.855,2819,7.718,2820,6.727,2821,7.718,2822,6.727,2823,4.855,2824,4.855,2825,4.855,2826,4.855,2827,4.357,2828,3.285,2829,4.855,2830,4.855,2831,4.855,2832,4.855,2833,4.855,2834,6.925,2835,4.855,2836,6.036,2837,4.855,2838,4.855,2839,4.855,2840,4.855,2841,4.855,2842,4.855,2843,4.855,2844,6.727,2845,4.855]],["title/injectables/FeedFiltersEffects.html",[808,4.162,856,1.393]],["body/injectables/FeedFiltersEffects.html",[0,0.228,3,0.021,4,0.021,5,0.025,8,0.918,9,1.872,12,1.876,15,0.157,16,0.355,20,0.162,21,0.175,24,0.26,26,0.281,27,0.005,28,0.472,29,0.281,31,0.954,32,0.786,34,0.116,35,0.359,40,0.025,45,1.824,49,1.903,70,2.05,95,0.557,96,0.557,97,0.521,104,2.777,110,1.888,127,0.002,128,0.003,129,0.002,146,0.924,150,1.439,165,2.037,169,2.076,170,3.415,179,1.958,181,1.885,202,4.048,228,1.986,230,3.335,234,0.819,249,2.505,271,0.741,296,3.341,379,2.348,385,2.081,447,2.619,515,1.45,528,3.201,537,2.424,544,1.141,545,1.141,546,1.172,553,1.948,556,2.128,559,1.141,596,2.897,747,3.169,808,4.956,838,4.157,845,2.501,846,2.584,851,4.861,852,2.897,856,1.659,857,1.801,876,3.829,888,2.234,889,2.128,893,3.035,894,1.45,947,3.146,996,3.201,1045,3.049,1163,5.35,1252,3.622,1478,4.654,1482,4.916,1516,4.413,1646,3.408,2029,5.36,2030,5.36,2031,4.654,2048,4.956,2053,3.035,2058,2.357,2059,3.035,2584,6.022,2686,2.179,2718,6.778,2784,4.213,2795,2.897,2797,4.157,2806,5.201,2813,5.71,2828,2.779,2846,9.059,2847,4.108,2848,7.039,2849,5.84,2850,7.039,2851,7.039,2852,7.039,2853,7.729,2854,5.71,2855,5.974,2856,4.108,2857,4.108,2858,9.382,2859,5.974,2860,5.974,2861,5.974,2862,5.974,2863,5.974,2864,5.974,2865,5.974,2866,7.729,2867,5.974,2868,7.729,2869,5.974,2870,5.974,2871,4.956,2872,5.974,2873,5.974,2874,4.108,2875,5.974,2876,4.956,2877,5.974,2878,4.108,2879,5.974,2880,5.974,2881,7.039,2882,5.974,2883,9.059,2884,5.974,2885,5.974,2886,7.729,2887,8.568,2888,5.974,2889,5.974,2890,5.974,2891,5.974,2892,5.974,2893,5.974,2894,7.729,2895,5.974,2896,8.568,2897,8.568,2898,5.974,2899,5.974,2900,5.974,2901,4.108,2902,2.357,2903,2.501,2904,3.686,2905,3.201,2906,4.108,2907,4.108,2908,3.408,2909,2.779,2910,4.108,2911,4.108,2912,4.108,2913,4.108,2914,4.108]],["title/modules/FeedModule.html",[601,2.2,2915,3.908]],["body/modules/FeedModule.html",[0,0.287,3,0.027,4,0.036,5,0.043,17,0.512,20,0.098,27,0.005,34,0.125,40,0.032,57,2.184,73,1.362,127,0.002,128,0.003,129,0.002,271,0.932,273,2.811,274,3.146,275,3.636,285,1.852,286,1.824,287,1.852,288,1.852,289,1.852,290,1.852,291,1.578,292,1.646,293,1.852,294,1.852,295,1.852,296,1.796,297,1.718,298,1.824,299,1.852,300,1.852,301,1.852,302,1.183,303,1.852,304,1.6,329,3.159,337,3.207,338,2.301,348,3.378,350,3.159,357,3.207,370,3.159,375,3.159,378,3.159,380,3.159,383,1.77,384,3.159,389,3.113,391,3.113,601,2.266,603,2.615,604,2.965,605,4.854,606,4.145,607,4.23,615,6.24,616,4.145,617,3.146,619,3.818,621,3.818,626,4.415,629,3.051,630,5.469,631,5.469,632,2.615,634,4.026,636,3.495,641,5.186,642,3.474,643,2.557,644,6.299,645,4.287,646,4.287,647,3.495,648,4.287,649,5.469,650,4.287,653,4.287,654,4.287,655,4.287,674,3.817,675,4.026,684,2.885,914,4.708,933,3.146,1062,6.506,1067,4.636,1071,7.154,1074,4.636,1982,4.636,2182,8.025,2187,4.636,2429,4.287,2698,4.636,2797,3.051,2915,8.277,2916,4.636,2917,4.636,2918,4.636,2919,4.636,2920,7.188,2921,6.815,2922,5.167,2923,4.636,2924,5.167,2925,4.636,2926,5.167,2927,9.225,2928,4.636,2929,5.167,2930,5.167,2931,4.636,2932,4.636,2933,4.636,2934,4.636,2935,5.167,2936,7.02,2937,7.02,2938,4.636,2939,4.636,2940,5.167,2941,5.167,2942,7.02,2943,4.636,2944,4.636,2945,4.636,2946,5.167,2947,4.636,2948,5.167,2949,5.167,2950,5.167,2951,5.167,2952,4.636,2953,4.636,2954,6.299,2955,5.167,2956,5.167]],["title/modules/FeedRoutingModule.html",[601,2.2,2921,3.706]],["body/modules/FeedRoutingModule.html",[0,0.378,3,0.035,4,0.043,5,0.051,17,0.675,27,0.005,34,0.119,40,0.042,73,1.793,127,0.003,128,0.004,129,0.003,165,1.617,234,1.893,271,1.227,285,2.438,286,2.401,287,2.438,288,2.438,289,2.438,290,2.438,291,2.077,292,2.167,293,2.438,294,2.438,295,2.438,296,2.365,297,2.262,298,2.401,299,2.438,300,2.438,301,2.438,302,1.557,303,2.438,327,3.025,343,2.79,348,2.831,490,3.202,603,3.443,607,3.609,619,3.7,621,4.564,677,5.026,680,6.199,681,5.925,682,3.903,687,7.341,691,5.3,692,6.537,702,5.644,1076,6.104,1077,6.104,1078,5.3,1079,5.644,1080,6.104,1081,8.163,1082,6.104,1083,6.104,1084,6.104,1085,6.104,1086,5.3,2921,6.199,2923,6.104,2957,6.803]],["title/classes/Filter.html",[0,0.279,385,1.271]],["body/classes/Filter.html",[0,0.277,2,0.589,3,0.026,4,0.026,5,0.03,7,1.933,11,2.135,15,0.19,16,0.407,17,0.905,19,0.614,20,0.173,21,0.359,24,0.275,26,0.575,27,0.005,28,0.564,29,0.575,34,0.059,40,0.03,45,3.061,57,2.895,93,2.121,95,0.676,96,0.676,97,1.239,110,1.509,127,0.002,128,0.003,129,0.002,138,2.553,146,1.598,169,1.937,179,2.564,181,1.215,191,3.929,206,3.249,224,3.636,234,1.365,251,1.587,268,2.088,269,1.403,298,2.417,385,2.668,438,2.91,439,1.543,440,1.522,558,4.803,684,3.823,739,4.044,838,4.044,851,5.298,881,4.582,947,3.496,1045,2.701,1230,4.829,1413,4.829,1414,4.044,1521,6.564,2221,6.145,2377,7.559,2408,5.681,2713,5.681,2871,5.681,2908,5.681,2958,9.52,2959,4.983,2960,6.848,2961,6.145,2962,6.848,2963,6.848,2964,9.52,2965,6.145,2966,6.848,2967,6.848,2968,6.848,2969,6.848,2970,6.848,2971,6.848,2972,6.848,2973,6.145,2974,8.424,2975,7.824,2976,4.983,2977,4.983,2978,4.983,2979,4.983,2980,4.983,2981,6.848,2982,4.983,2983,6.848,2984,8.424,2985,4.983,2986,8.424,2987,6.848,2988,6.848,2989,6.848,2990,4.983,2991,6.848,2992,6.848,2993,4.983,2994,4.983,2995,4.983,2996,4.983,2997,4.983,2998,4.983,2999,4.983,3000,4.983,3001,4.983,3002,4.983,3003,4.983,3004,4.983,3005,6.848,3006,4.983]],["title/injectables/FilterService.html",[856,1.393,2854,3.706]],["body/injectables/FilterService.html",[0,0.325,3,0.03,4,0.03,5,0.036,8,0.88,13,3.461,15,0.223,16,0.453,17,0.841,21,0.362,24,0.286,27,0.005,31,0.616,32,0.536,34,0.107,40,0.047,41,0.804,45,2.59,127,0.004,128,0.004,129,0.003,146,1.18,150,1.953,165,2.272,169,2.066,179,1.917,181,2.331,189,2.472,249,2.715,251,1.767,268,2.133,271,1.054,376,1.973,385,2.278,438,1.761,439,1.811,440,1.786,505,4.556,843,3.956,844,3.809,845,3.56,852,5.981,856,2.117,857,2.564,881,4.146,947,4.165,1045,2.307,1108,3.029,1782,3.809,2854,5.632,3007,5.247,3008,8.48,3009,8.986,3010,8.986,3011,8.986,3012,8.986,3013,7.623,3014,5.848,3015,5.848,3016,5.848,3017,5.848,3018,5.848,3019,5.247,3020,7.623,3021,5.848,3022,6.265,3023,4.852,3024,4.852,3025,6.265,3026,4.852,3027,4.852,3028,5.848,3029,8.986,3030,5.848,3031,5.848,3032,5.848,3033,5.848,3034,5.848,3035,5.848,3036,5.848,3037,5.848,3038,5.848,3039,5.848,3040,5.848,3041,5.848,3042,5.848,3043,5.848,3044,5.848,3045,5.247,3046,5.247,3047,5.247,3048,5.247,3049,5.247]],["title/components/FiltersComponent.html",[234,1,350,1.718]],["body/components/FiltersComponent.html",[0,0.312,3,0.029,4,0.029,5,0.034,14,0.725,15,0.214,16,0.441,20,0.167,21,0.239,24,0.244,26,0.383,27,0.005,28,0.592,29,0.383,34,0.11,35,0.49,40,0.034,44,1.539,110,2.082,127,0.003,128,0.003,129,0.003,146,1.148,219,1.668,220,2.205,234,1.657,235,1.922,236,2.467,237,1.981,239,2.011,240,2.011,242,3.025,243,1.894,244,3.613,247,2.619,251,1.72,252,3.322,268,1.285,269,1.58,271,1.012,304,1.738,305,2.659,306,2.619,307,1.813,308,3.169,309,2.011,310,2.011,311,1.922,312,2.011,313,1.922,314,2.574,315,2.659,316,1.922,317,2.659,318,1.922,319,2.011,320,1.894,321,2.011,322,1.922,323,2.011,324,3.169,325,1.922,326,2.011,327,1.867,328,2.659,329,1.922,330,1.894,331,1.867,332,1.981,333,2.011,334,1.922,335,2.619,336,2.011,337,1.951,338,1.84,339,2.659,340,1.922,341,2.011,342,3.169,343,1.867,344,2.011,345,1.922,346,1.922,347,1.981,348,1.894,349,2.011,350,3.029,351,1.922,352,2.011,353,1.894,354,2.011,355,1.922,356,2.011,357,1.951,358,1.922,359,1.894,360,2.011,361,1.922,362,1.645,363,2.011,364,1.922,365,2.619,366,1.922,367,2.979,368,1.922,369,2.011,370,1.922,371,2.011,372,1.922,373,2.011,374,1.867,375,1.922,376,1.894,377,1.922,378,1.922,379,2.034,380,1.922,381,2.011,382,1.922,383,1.922,384,1.922,385,1.423,386,1.894,387,1.894,388,2.011,389,1.894,390,2.011,391,1.894,392,1.981,393,2.011,515,1.981,537,2.278,544,1.559,545,1.559,546,1.601,553,2.662,559,1.559,881,4.036,908,6.658,1013,4.147,1981,6.534,3050,5.613,3051,6.896,3052,7.42,3053,5.613,3054,4.657,3055,4.657]],["title/classes/GuidService.html",[0,0.279,1103,3.155]],["body/classes/GuidService.html",[0,0.406,2,0.864,3,0.038,4,0.038,5,0.045,15,0.279,16,0.52,19,1.157,20,0.138,21,0.4,24,0.286,27,0.005,34,0.104,36,4.634,37,3.264,40,0.045,85,0.896,127,0.003,128,0.004,129,0.003,169,1.86,249,2.473,251,2.031,268,2.005,271,1.317,505,5.692,1103,5.51,2222,7.862,3019,6.555,3056,7.305,3057,9.732,3058,9.732,3059,8.761,3060,7.305,3061,7.305,3062,8.761,3063,7.305,3064,7.305]],["title/classes/HandleUnexpectedError.html",[0,0.279,413,1.148]],["body/classes/HandleUnexpectedError.html",[0,0.531,2,0.688,3,0.03,4,0.03,5,0.036,8,1.023,10,2.002,14,0.949,15,0.222,16,0.451,17,0.754,18,1.666,19,1.216,20,0.195,21,0.248,22,1.514,24,0.249,26,0.397,27,0.005,28,0.39,29,0.397,31,0.613,32,0.534,34,0.101,35,0.509,40,0.06,41,0.8,83,1.699,85,0.595,95,1.319,96,1.319,97,1.232,113,1.148,127,0.004,128,0.004,129,0.003,146,1.176,150,1.553,209,2.375,228,1.935,302,1.332,314,2.955,385,1.475,410,3.935,413,2.053,414,1.419,415,1.475,416,1.66,417,1.66,434,2.229,438,1.753,439,1.802,440,1.777,454,1.802,456,2.221,485,2.334,531,3.339,711,4.646,866,4.996,881,3.165,895,3.79,896,5.151,897,4.996,901,3.66,902,5.151,1026,3.79,1029,4.104,1030,5.321,1031,3.79,1032,5.151,1033,4.104,1034,4.104,1035,5.358,1036,3.936,1037,4.104,1038,4.104,1039,3.936,3065,7.598,3066,5.819]],["title/classes/HandleUnexpectedError-1.html",[0,0.232,413,0.955,725,1.865]],["body/classes/HandleUnexpectedError-1.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.074,405,2.682,406,4.494,407,4.494,408,2.056,409,4.27,410,4.169,411,4.494,412,4.494,413,1.973,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,3.311,424,3.311,425,3.311,426,3.311,427,3.311,428,3.311,429,4.471,430,3.205,434,2.121,3067,7.109,3068,5.264]],["title/classes/HandleUnexpectedError-2.html",[0,0.232,413,0.955,709,2.625]],["body/classes/HandleUnexpectedError-2.html",[0,0.515,2,0.75,3,0.033,4,0.033,5,0.039,8,1.013,14,0.933,15,0.242,16,0.477,17,0.796,18,1.631,19,1.204,20,0.195,21,0.271,22,1.649,24,0.259,26,0.433,27,0.005,28,0.425,29,0.433,31,0.668,32,0.581,34,0.076,35,0.554,40,0.06,41,0.872,60,1.488,83,1.569,95,1.257,96,1.257,97,1.174,113,1.296,127,0.003,128,0.004,129,0.003,199,1.566,405,2.548,408,1.833,413,2.12,414,1.546,415,1.607,416,1.809,417,1.809,420,1.784,421,1.963,434,2.322,551,5.541,747,5.323,1161,3.637,1525,5.541,1565,4.288,2225,5.738,3069,4.471,3070,8.028,3071,6.34,3072,6.255,3073,4.939,3074,4.939,3075,4.939,3076,4.684]],["title/classes/HandleUnexpectedError-3.html",[0,0.232,413,0.955,2457,2.943]],["body/classes/HandleUnexpectedError-3.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.757,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,2.863,489,1.961,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,3077,5.91,3078,4.048]],["title/classes/HandleUnexpectedError-4.html",[0,0.232,413,0.955,3079,3.462]],["body/classes/HandleUnexpectedError-4.html",[0,0.524,2,0.609,3,0.027,4,0.027,5,0.031,8,1.038,14,0.937,15,0.196,16,0.416,17,0.695,18,1.672,19,1.2,20,0.193,21,0.299,22,1.34,24,0.234,26,0.583,27,0.005,28,0.345,29,0.352,31,0.542,32,0.472,34,0.084,35,0.45,40,0.059,41,0.708,60,1.644,69,2.217,83,1.641,85,0.873,95,1.279,96,1.279,97,1.195,113,1.302,127,0.002,128,0.003,129,0.002,153,1.64,154,2.301,171,2.399,172,2.549,173,3.015,199,1.272,272,1.713,362,3.044,405,2.301,408,1.489,413,1.955,414,1.256,415,1.305,420,1.45,421,1.595,434,2.097,454,2.465,470,2.767,537,1.412,800,3.136,1219,3.81,1225,2.955,1384,2.875,1520,3.354,1556,3.239,1561,3.136,1573,3.354,2281,2.801,2349,3.354,2372,5.184,2381,5.184,2382,3.354,2383,5.126,2385,4.567,2386,3.136,2387,3.354,2388,4.846,3080,3.239,3081,7.004,3082,5.15,3083,4.738,3084,3.041,3085,4.567,3086,4.444,3087,4.7,3088,4.7,3089,4.7,3090,3.484,3091,3.484,3092,3.484,3093,3.484,3094,3.484,3095,3.354,3096,5.384,3097,5.384,3098,4.738,3099,3.484,3100,3.484,3101,3.484,3102,3.484,3103,3.354]],["title/classes/HandleUnexpectedError-5.html",[0,0.232,413,0.955,2247,3.745]],["body/classes/HandleUnexpectedError-5.html",[0,0.538,2,0.673,3,0.029,4,0.029,5,0.035,8,1.03,14,0.958,15,0.217,16,0.445,17,0.743,18,1.659,19,1.224,20,0.195,21,0.243,22,1.481,24,0.246,26,0.389,27,0.005,28,0.381,29,0.389,31,0.6,32,0.522,34,0.068,35,0.498,40,0.061,41,0.783,49,1.813,60,1.758,83,1.689,95,1.287,96,1.287,97,1.203,113,1.312,127,0.003,128,0.003,129,0.003,199,1.407,405,2.42,408,2.166,413,2.036,414,1.389,415,1.443,416,1.624,417,1.624,420,1.603,421,1.763,434,2.206,698,4.537,1645,4.803,2902,4.803,2903,3.466,3104,3.581,3105,7.49,3106,5.694,3107,5.067,3108,4.943,3109,4.943,3110,5.452,3111,4.943,3112,4.943,3113,3.851,3114,3.851,3115,3.851,3116,3.851,3117,3.708,3118,3.851,3119,3.851,3120,3.708]],["title/classes/HandleUnexpectedError-6.html",[0,0.232,413,0.955,2836,3.745]],["body/classes/HandleUnexpectedError-6.html",[0,0.529,2,0.681,3,0.03,4,0.03,5,0.035,8,1.021,14,0.947,15,0.22,16,0.448,17,0.749,18,1.663,19,1.213,20,0.195,21,0.246,22,1.499,24,0.247,26,0.394,27,0.005,28,0.386,29,0.394,31,0.607,32,0.529,34,0.09,35,0.504,40,0.06,41,0.792,49,3.343,60,1.353,83,1.695,95,1.291,96,1.291,97,1.207,113,1.316,127,0.003,128,0.004,129,0.003,413,2.045,414,1.405,415,1.461,416,1.644,417,1.644,434,2.219,523,4.4,1109,3.217,1142,4.701,1222,4.107,2058,3.306,2272,5.126,2273,3.753,2276,4.064,2277,5.126,2278,5.126,2279,5.126,2280,5.126,2281,3.134,2282,3.753,2283,4.064,2284,4.064,2285,4.064,2286,4.064,2287,5.324,2288,3.753,3121,7.55,3122,5.763]],["title/injectables/HandlebarsService.html",[856,1.393,2175,3.706]],["body/injectables/HandlebarsService.html",[0,0.198,3,0.018,4,0.018,5,0.022,15,0.322,16,0.318,17,0.806,20,0.154,21,0.152,24,0.292,26,0.492,27,0.005,28,0.565,29,0.492,31,0.565,32,0.745,34,0.115,35,0.31,36,2.397,37,1.587,40,0.022,85,0.982,110,1.859,127,0.004,128,0.002,129,0.002,143,1.651,146,0.55,148,1.449,150,1.58,152,1.685,154,2.397,165,1.837,169,2.167,181,1.756,206,3.873,228,1.783,237,1.254,249,2.779,251,1.243,268,2.245,269,2.726,271,0.64,379,1.47,537,1.771,544,0.987,545,0.987,546,1.013,559,0.987,642,1.758,643,1.758,725,2.397,856,1.49,857,1.557,894,1.254,914,4.251,933,2.162,945,3.782,947,1.587,991,1.983,1045,3.205,1377,1.932,1378,4.569,1380,4.434,1408,2.443,1453,3.428,1454,4.383,1777,2.098,1793,2.947,1894,4.019,2175,3.962,2185,3.187,2457,3.782,2561,5.034,2562,2.947,2591,5.034,2592,3.187,2593,2.947,3079,2.947,3123,3.552,3124,5.798,3125,5.363,3126,4.812,3127,5.363,3128,5.363,3129,7.199,3130,7.199,3131,7.199,3132,7.199,3133,7.199,3134,6.461,3135,7.199,3136,7.199,3137,7.199,3138,7.199,3139,7.199,3140,7.199,3141,7.199,3142,7.199,3143,6.461,3144,3.552,3145,5.363,3146,3.187,3147,3.552,3148,4.557,3149,5.363,3150,6.461,3151,3.552,3152,3.552,3153,3.552,3154,3.552,3155,3.552,3156,3.552,3157,3.552,3158,3.552,3159,3.552,3160,3.552,3161,3.552,3162,3.552,3163,3.552,3164,3.552,3165,3.552,3166,3.552,3167,3.552,3168,3.552,3169,3.552,3170,3.552,3171,2.767,3172,2.947,3173,3.552,3174,3.552,3175,3.552,3176,3.552,3177,3.552,3178,3.552,3179,3.552,3180,3.552,3181,3.552,3182,3.552,3183,3.552,3184,3.552,3185,3.552,3186,3.552,3187,3.552,3188,3.552,3189,3.552,3190,3.187,3191,3.187,3192,3.187,3193,5.798,3194,3.187,3195,3.552,3196,3.552,3197,3.552,3198,3.552,3199,2.947,3200,3.552,3201,3.552,3202,3.552,3203,3.552,3204,3.552,3205,3.552,3206,3.552,3207,3.552,3208,3.552,3209,2.767,3210,3.552,3211,3.552,3212,8.888,3213,6.461,3214,8.888,3215,8.888,3216,3.552,3217,3.552,3218,3.552,3219,7.727,3220,5.363,3221,3.552,3222,3.552,3223,3.552,3224,3.552,3225,8.125,3226,3.552,3227,7.727,3228,3.552,3229,3.552,3230,3.552,3231,3.552,3232,5.363,3233,3.552,3234,3.552,3235,3.552,3236,3.552,3237,3.552,3238,3.552,3239,2.947,3240,3.552,3241,3.552,3242,3.552,3243,3.552,3244,3.552,3245,3.552,3246,3.552,3247,3.552,3248,3.552,3249,3.552,3250,3.552,3251,3.552,3252,3.552,3253,3.552,3254,3.552,3255,3.552,3256,3.552,3257,5.363,3258,6.461,3259,6.461,3260,3.552]],["title/classes/I18n.html",[0,0.279,136,1.884]],["body/classes/I18n.html",[0,0.429,2,0.913,3,0.04,4,0.04,5,0.047,19,1.117,20,0.146,21,0.386,24,0.227,26,0.677,27,0.005,28,0.517,29,0.527,34,0.092,40,0.047,85,0.982,95,1.047,96,1.047,97,0.979,127,0.004,128,0.004,129,0.004,136,3.401,143,4.208,145,3.999,150,2.026,152,3.662,3261,7.72,3262,7.72,3263,7.72]],["title/injectables/I18nService.html",[516,3.706,856,1.393]],["body/injectables/I18nService.html",[0,0.317,3,0.029,4,0.029,5,0.035,15,0.217,16,0.445,17,0.916,20,0.18,21,0.243,24,0.292,26,0.572,27,0.005,28,0.561,29,0.572,31,0.789,32,0.687,34,0.118,35,0.498,40,0.035,85,1.024,110,2.131,113,0.772,127,0.003,128,0.003,129,0.003,165,1.781,169,1.59,181,1.827,224,4.409,249,2.717,251,1.736,268,1.714,269,2.108,271,1.027,405,1.646,516,5.534,544,1.581,545,1.581,546,1.624,559,1.581,625,2.949,642,2.818,643,2.818,768,2.949,769,3.021,856,2.081,857,2.497,925,4.436,1099,5.159,1408,3.413,1453,4.441,1454,5.096,1806,4.711,2070,3.851,2686,3.974,2794,6.1,3124,6.721,3126,6.721,3146,5.109,3148,6.819,3171,4.436,3172,4.724,3190,5.109,3191,5.109,3192,5.109,3193,7.511,3194,5.109,3264,5.694,3265,7.49,3266,8.371,3267,8.371,3268,7.49,3269,7.49,3270,5.694,3271,5.694,3272,5.694,3273,5.694,3274,5.694,3275,5.694,3276,5.694,3277,5.694,3278,5.694,3279,5.694,3280,5.694,3281,5.694,3282,5.694,3283,5.694,3284,5.694,3285,5.694,3286,5.694,3287,5.694,3288,5.694,3289,5.694,3290,5.694,3291,5.109,3292,5.109,3293,5.694,3294,5.694,3295,5.694,3296,5.694,3297,5.694,3298,5.694,3299,7.49,3300,5.694,3301,5.694,3302,5.694,3303,5.694,3304,5.694,3305,5.694,3306,5.694,3307,5.694,3308,5.694]],["title/components/IconComponent.html",[234,1,351,1.718]],["body/components/IconComponent.html",[0,0.266,3,0.025,4,0.034,5,0.041,14,0.65,15,0.182,16,0.395,17,0.474,20,0.181,21,0.204,24,0.285,26,0.326,27,0.005,28,0.554,29,0.326,31,0.503,32,0.438,34,0.091,40,0.029,44,1.309,49,1.522,73,1.259,85,0.921,127,0.002,128,0.003,129,0.002,146,1.029,219,1.419,220,1.976,225,3.436,234,1.525,235,1.636,236,2.212,237,1.686,238,2.056,239,1.712,240,1.712,242,2.785,243,1.612,244,3.585,245,3.03,247,1.686,249,2.373,251,1.542,252,3.108,254,3.292,268,1.751,269,2.154,271,0.861,285,1.712,286,1.686,287,1.712,288,1.712,289,1.712,290,1.712,291,1.459,292,1.522,293,1.712,294,1.712,295,1.712,296,1.661,297,1.589,298,1.686,299,1.712,300,1.712,301,1.712,302,1.093,303,1.712,304,1.479,305,2.383,306,2.347,307,1.543,308,2.965,309,1.712,310,1.712,311,1.636,312,1.712,313,1.636,314,2.369,315,2.383,316,1.636,317,2.383,318,1.636,319,1.712,320,1.612,321,1.712,322,1.636,323,1.712,324,2.965,325,1.636,326,1.712,327,1.589,328,2.383,329,1.636,330,1.612,331,1.589,332,1.686,333,1.712,334,1.636,335,2.347,336,1.712,337,1.661,338,1.566,339,2.383,340,1.636,341,1.712,342,2.965,343,1.589,344,1.712,345,1.636,346,1.636,347,1.686,348,1.612,349,1.712,350,1.636,351,2.834,352,1.712,353,1.612,354,1.712,355,1.636,356,1.712,357,1.661,358,1.636,359,1.612,360,1.712,361,1.636,362,1.4,363,1.712,364,1.636,365,2.347,366,1.636,367,2.742,368,1.636,369,1.712,370,1.636,371,1.712,372,1.636,373,1.712,374,1.589,375,1.636,376,1.612,377,1.636,378,1.636,379,1.823,380,1.636,381,1.712,382,1.636,383,1.636,384,1.636,385,1.211,386,1.612,387,1.612,388,1.712,389,1.612,390,1.712,391,1.612,392,1.686,393,1.712,456,2.92,629,2.821,912,4.691,956,6.865,1377,2.599,1378,3.706,1380,4.39,1544,3.111,1882,3.964,2332,3.53,2686,2.534,3309,4.777,3310,7.424,3311,7.652,3312,4.777,3313,6.651,3314,6.651,3315,8.274,3316,8.274,3317,6.651,3318,6.651,3319,6.651,3320,8.698,3321,6.651,3322,4.777,3323,4.777,3324,4.777,3325,4.777,3326,4.777,3327,4.777,3328,4.777,3329,4.777,3330,4.777,3331,4.777,3332,4.777,3333,4.777,3334,4.777,3335,4.777,3336,4.777,3337,4.777,3338,4.777,3339,4.777,3340,4.777,3341,4.777,3342,4.777,3343,4.777,3344,4.777,3345,4.777,3346,4.777,3347,6.651,3348,4.777,3349,7.652,3350,6.866,3351,4.777,3352,4.777,3353,4.777,3354,4.287,3355,5.968]],["title/components/IframeDisplayComponent.html",[234,1,353,1.693]],["body/components/IframeDisplayComponent.html",[0,0.289,3,0.027,4,0.036,5,0.043,14,0.689,15,0.198,16,0.419,17,0.516,20,0.162,21,0.222,24,0.252,26,0.355,27,0.005,28,0.575,29,0.355,34,0.107,35,0.454,40,0.032,44,1.426,73,1.371,110,2.037,127,0.002,128,0.003,129,0.002,146,1.091,169,1.104,219,1.545,220,2.095,234,1.595,235,1.781,236,2.345,237,1.836,238,2.239,239,1.864,240,1.864,242,2.911,243,1.755,244,3.6,245,3.213,247,2.488,249,2.26,251,1.634,252,3.221,268,1.19,269,1.464,271,0.938,285,1.864,286,1.836,287,1.864,288,1.864,289,1.864,290,1.864,291,1.588,292,1.657,293,1.864,294,1.864,295,1.864,296,1.808,297,1.73,298,1.836,299,1.864,300,1.864,301,1.864,302,1.19,303,1.864,304,1.611,305,2.527,306,2.488,307,1.68,308,3.073,309,1.864,310,1.864,311,1.781,312,1.864,313,1.781,314,2.477,315,2.527,316,1.781,317,2.527,318,1.781,319,1.864,320,1.755,321,1.864,322,1.781,323,1.864,324,3.073,325,1.781,326,1.864,327,1.73,328,2.527,329,1.781,330,1.755,331,1.73,332,1.836,333,1.864,334,1.781,335,2.488,336,1.864,337,1.808,338,1.705,339,2.527,340,1.781,341,1.864,342,3.073,343,1.73,344,1.864,345,1.781,346,1.781,347,1.836,348,1.755,349,1.864,350,1.781,351,1.781,352,1.864,353,2.894,354,1.864,355,1.781,356,1.864,357,1.808,358,1.781,359,1.755,360,1.864,361,1.781,362,1.524,363,1.864,364,1.781,365,2.488,366,1.781,367,2.867,368,1.781,369,1.864,370,1.781,371,1.864,372,1.781,373,1.864,374,1.73,375,1.781,376,1.755,377,1.781,378,1.781,379,1.933,380,1.781,381,1.864,382,1.781,383,1.781,384,1.781,385,1.318,386,1.755,387,1.755,388,1.864,389,1.755,390,1.864,391,1.755,392,1.836,393,1.864,467,2.199,515,1.836,542,3.668,543,3.518,545,1.445,546,1.484,559,1.445,593,3.071,594,5.494,982,5.494,1791,3.387,1806,4.435,1875,3.843,2308,7.116,2315,7.696,2563,7.178,3355,4.667,3356,5.201,3357,7.051,3358,8,3359,7.051,3360,8,3361,8,3362,7.051,3363,5.201,3364,5.201,3365,5.201,3366,5.201,3367,4.667,3368,5.201,3369,5.201,3370,7.051,3371,5.201]],["title/classes/ImplicitAuthenticationHandler.html",[0,0.279,1188,3.538]],["body/classes/ImplicitAuthenticationHandler.html",[0,0.45,2,0.265,3,0.012,4,0.012,5,0.014,7,0.869,8,0.232,9,1.694,12,2.826,13,1.517,14,0.466,15,0.085,17,0.944,18,0.621,20,0.133,21,0.237,23,3.625,24,0.181,26,0.379,27,0.005,28,0.412,29,0.326,31,0.236,34,0.106,35,0.196,36,2.13,37,1.001,38,1.353,40,0.047,41,0.308,43,1.02,47,1.661,49,1.184,55,0.964,63,3.59,64,2.529,66,1.02,68,1.041,72,3.337,73,2.014,76,2.261,77,1.694,80,1.694,81,4.077,82,1.001,84,2.805,85,1.001,86,3.838,87,3.552,88,2.153,101,1.085,103,2.688,104,3.19,110,1.915,111,1.085,113,0.647,122,1.728,127,0.001,128,0.002,129,0.001,138,2.21,150,0.458,165,2.239,169,2.112,170,2.02,171,1.273,172,1.735,179,1.562,181,2.172,189,0.946,190,1.218,204,2.529,206,1.544,209,1.517,228,2.449,249,2.415,251,0.862,268,1.27,269,2.579,271,0.404,291,1.456,297,2.047,302,1.27,331,0.745,379,1.688,385,0.568,403,0.815,414,0.907,420,0.63,451,0.828,454,0.693,470,0.778,511,4.342,518,4.112,523,1.062,537,2.019,540,1.579,544,0.622,545,0.622,546,0.639,553,1.062,556,1.16,558,4.582,559,1.324,570,2.622,578,2.215,592,2.263,625,1.16,647,2.515,665,2.338,666,2.421,667,3.615,698,2.09,703,4.01,725,1.661,727,3.225,729,3.225,739,3.277,744,2.389,747,1.972,768,1.16,769,1.188,856,1.033,891,1.63,892,1.062,894,0.79,947,2.13,991,1.25,1020,2.622,1045,0.883,1087,3.914,1088,1.579,1089,2.998,1090,4.906,1091,2.747,1092,1.654,1099,3.098,1100,1.579,1101,1.515,1102,1.458,1103,3.491,1104,1.515,1105,1.654,1106,5.829,1107,1.579,1108,1.16,1109,1.25,1110,4.1,1111,2.747,1112,2.747,1113,2.747,1114,3.914,1115,2.747,1116,1.654,1117,1.654,1118,1.654,1119,1.654,1120,1.322,1121,1.579,1122,2.747,1123,1.579,1124,1.654,1125,1.654,1126,3.522,1127,1.654,1128,1.654,1129,1.654,1130,1.654,1131,1.654,1132,1.654,1133,1.654,1134,1.654,1135,1.654,1136,1.654,1137,5.557,1138,1.654,1139,5.39,1140,1.654,1141,1.579,1142,1.25,1143,1.654,1144,1.654,1145,1.654,1146,1.654,1147,2.747,1148,1.654,1149,1.654,1150,4.906,1151,1.579,1152,1.654,1153,1.654,1154,1.654,1155,1.654,1156,1.654,1157,1.654,1158,1.654,1159,1.654,1160,3.105,1161,1.285,1162,1.654,1163,1.322,1164,1.654,1165,5.198,1166,5.441,1167,2.747,1168,4.549,1169,1.654,1170,3.522,1171,1.654,1172,2.747,1173,1.654,1174,4.1,1175,2.747,1176,1.654,1177,1.654,1178,1.654,1179,1.654,1180,1.654,1181,1.654,1182,2.747,1183,1.654,1184,2.747,1185,2.747,1186,1.654,1187,1.654,1188,3.362,1189,1.654,1190,2.747,1191,1.654,1192,1.654,1193,1.579,1194,3.105,1195,1.654,1196,1.515,1197,1.654,1198,1.654,1199,1.654,1200,2.747,1201,1.654,1202,3.522,1203,1.654,1204,5.194,1205,3.522,1206,3.522,1207,3.522,1208,3.522,1209,3.522,1210,3.362,1211,1.654,1212,1.654,1213,1.654,1214,1.654,1215,2.747,1216,2.622,1217,2.747,1218,1.579,1219,2.593,1220,2.622,1221,2.747,1222,2.022,1223,1.654,1224,3.522,1225,2.735,1226,2.747,1227,1.654,1228,2.747,1229,1.654,1230,2.622,1231,1.654,1232,2.747,1233,1.654,1234,1.654,1235,2.747,1236,2.747,1237,1.654,1238,1.654,1239,1.654,1240,1.654,1241,1.654,1242,1.654,1243,1.654,1244,2.747,1245,1.654,1246,1.654,1247,1.654,1248,1.654,1249,1.654,1250,1.654,1251,1.654,1252,0.946,1253,1.654,1254,1.654,1255,1.654,1256,1.654,1257,1.654,1258,1.654,1259,1.654,1260,4.549,1261,5.198,1262,1.654,1263,1.654,1264,3.914,1265,1.654,1266,1.579,1267,1.654,1268,1.654,1269,2.815,1270,1.654,1271,2.747,1272,1.654,1273,2.747,1274,1.654,1275,1.515,1276,1.654,1277,1.654,1278,1.654,1279,1.654,1280,1.654,1281,1.654,1282,1.515,1283,1.654,1284,2.338,1285,1.654,1286,1.654,1287,1.654,1288,1.654,1289,1.654,1290,1.654,1291,1.654,1292,1.654,1293,1.654,1294,1.654,1295,1.654,1296,1.654,1297,1.654,1298,1.654,1299,2.747,1300,1.654,1301,1.654,1302,3.522,1303,2.747,1304,1.654,1305,1.654,1306,2.747,1307,2.747,1308,1.654,1309,1.654,1310,1.654,1311,1.654,1312,1.654,1313,1.654,1314,1.654,1315,3.522,1316,2.747,1317,1.579,1318,1.654,1319,1.654,1320,1.654,1321,1.515,1322,1.654,1323,1.654,1324,1.654,1325,1.654,1326,1.654,1327,1.654,1328,2.622,1329,1.654,1330,1.654,1331,1.654,1332,2.747,1333,2.747,1334,1.654,1335,1.654,1336,1.654,1337,1.654,1338,1.654,1339,1.654,1340,1.654,1341,1.654,1342,1.654,1343,1.654,1344,1.654,1345,1.408,1346,1.654,1347,3.522,1348,1.654,1349,2.747,1350,1.654,1351,1.654,1352,1.654,1353,1.654,1354,1.654,1355,1.654,1356,1.654,1357,1.654,1358,1.654,1359,1.654,1360,1.579,1361,1.654,1362,1.654,1363,1.654,1364,1.654,1365,1.654,1366,1.654,1367,1.654,1368,1.654,1369,1.654,1370,1.654,1371,1.654,1372,1.654,1373,1.654,1374,1.654,1375,1.654,1376,1.654,1377,1.218,1378,2.309,1379,3.522,1380,2.735,1381,2.747,1382,1.654,1383,1.654,1384,1.25,1385,1.654,1386,1.654,1387,1.579,1388,1.654,1389,1.654,1390,1.654,1391,1.188,1392,1.654,1393,3.522,1394,1.654,1395,4.549,1396,1.654,1397,4.962,1398,1.654,1399,1.654,1400,1.654,1401,3.225,1402,1.579,1403,1.654,1404,1.579,1405,1.654,1406,2.747,1407,2.622,1408,1.694,1409,1.654,1410,1.579,1411,1.654,1412,1.654,1413,3.362,1414,2.815,1415,1.654,1416,1.654,1417,1.579,1418,3.522,1419,1.654,1420,2.747,1421,1.654,1422,1.458,1423,1.654,1424,1.654,1425,1.654,1426,1.654,1427,1.654,1428,1.654,1429,1.654,1430,2.747,1431,4.906,1432,1.654,1433,1.654,1434,1.654,1435,1.654,1436,1.654,1598,3.084,1603,1.858,3372,2.009,3373,2.239,3374,2.239,3375,2.239,3376,2.009,3377,2.239,3378,2.239]],["title/classes/ImplicitlyAuthenticated.html",[0,0.279,122,2.331]],["body/classes/ImplicitlyAuthenticated.html",[0,0.548,1,3.432,2,0.51,3,0.022,4,0.022,5,0.026,6,2.234,8,1.062,9,3.969,10,1.137,11,1.093,12,3.245,13,2.953,14,0.963,15,0.164,16,0.367,17,0.83,18,1.321,19,1.224,20,0.189,21,0.184,23,2.935,24,0.127,27,0.005,31,0.454,32,0.396,33,2.346,34,0.086,35,0.377,36,3.233,37,1.927,38,2.252,39,1.927,40,0.061,41,0.593,42,2.183,43,3.297,44,1.182,45,2.21,46,3.581,47,2.765,48,3.839,49,3.021,50,4.76,51,4.095,52,3.581,53,2.288,54,3.505,55,2.663,56,3.505,57,3.342,58,3.581,59,3.581,60,1.453,61,3.581,62,2.288,63,3.297,64,3.602,65,3.662,66,1.965,67,2.288,68,2.004,69,1.857,70,1,71,2.346,72,2.935,73,1.137,74,2.288,75,2.288,76,2.046,77,3.297,78,2.288,79,2.288,80,3.297,81,3.115,82,1.927,83,1.49,84,1.965,85,0.856,86,1.965,87,2.004,88,1.673,89,2.346,90,2.346,91,3.366,92,3.283,93,1.916,94,3.283,95,1.368,96,1.368,97,1.278,98,2.346,99,2.346,100,2.288,101,2.089,102,2.346,103,2.089,104,1.701,105,2.288,106,2.234,107,3.205,108,2.288,109,3.063,110,1.364,111,2.089,112,2.288,113,0.585,114,2.346,115,2.288,116,2.346,117,2.288,118,1.594,119,2.346,120,2.346,121,2.346,122,3.363,123,3.366,124,2.346,125,2.346,126,2.234,127,0.002,128,0.003,129,0.002,3379,4.313]],["title/components/InfoComponent.html",[234,1,355,1.718]],["body/components/InfoComponent.html",[0,0.264,3,0.043,4,0.034,5,0.04,7,3.202,14,0.647,15,0.181,16,0.393,17,0.471,20,0.17,21,0.203,24,0.276,26,0.324,27,0.005,28,0.553,29,0.324,34,0.117,35,0.415,40,0.029,44,1.302,49,1.512,73,1.251,106,3.95,110,1.981,127,0.002,128,0.003,129,0.002,146,1.025,150,0.971,169,1.619,219,1.411,220,1.968,234,1.52,235,1.626,236,2.203,237,1.676,238,2.044,239,1.702,240,1.702,242,2.776,243,1.602,244,3.584,245,3.018,247,2.337,249,2.551,251,1.535,252,3.099,268,1.087,269,1.337,271,0.856,285,1.702,286,1.676,287,1.702,288,1.702,289,1.702,290,1.702,291,1.45,292,1.512,293,1.702,294,1.702,295,1.702,296,1.651,297,1.579,298,1.676,299,1.702,300,1.702,301,1.702,302,1.087,303,1.702,304,1.471,305,2.373,306,2.337,307,1.534,308,2.957,309,1.702,310,1.702,311,1.626,312,1.702,313,1.626,314,2.362,315,2.373,316,1.626,317,2.373,318,1.626,319,1.702,320,1.602,321,1.702,322,1.626,323,1.702,324,2.957,325,1.626,326,1.702,327,1.579,328,2.373,329,1.626,330,1.602,331,1.579,332,1.676,333,1.702,334,1.626,335,2.337,336,1.702,337,1.651,338,1.556,339,2.373,340,1.626,341,1.702,342,2.957,343,1.579,344,1.702,345,1.626,346,1.626,347,1.676,348,1.602,349,1.702,350,1.626,351,1.626,352,1.702,353,1.602,354,1.702,355,2.826,356,1.702,357,1.651,358,1.626,359,1.602,360,1.702,361,1.626,362,1.392,363,1.702,364,1.626,365,2.337,366,1.626,367,2.733,368,1.626,369,1.702,370,1.626,371,1.702,372,1.626,373,1.702,374,1.579,375,1.626,376,1.602,377,1.626,378,1.626,379,2.464,380,1.626,381,1.702,382,1.626,383,1.626,384,1.626,385,1.204,386,1.602,387,1.602,388,1.702,389,1.602,390,1.702,391,1.602,392,1.676,393,1.702,515,1.676,537,2.528,544,1.319,545,1.319,546,1.355,559,1.319,593,2.804,701,3.94,894,1.676,912,4.671,914,5.447,925,5.161,933,2.891,1120,2.804,1252,2.007,1408,3.018,1522,2.987,1647,4.261,1648,4.261,1806,4.166,1880,5.943,1882,5.495,2738,5.943,3171,3.7,3172,3.94,3291,4.261,3292,4.261,3380,4.749,3381,7.627,3382,6.623,3383,7.627,3384,7.627,3385,7.627,3386,6.623,3387,4.749,3388,4.749,3389,4.749,3390,4.749,3391,4.749,3392,4.749,3393,4.749,3394,4.749,3395,4.749,3396,4.749,3397,4.749,3398,4.261,3399,6.623,3400,4.749,3401,6.623,3402,4.749,3403,6.623,3404,4.749,3405,4.749,3406,4.749,3407,6.623,3408,6.623,3409,6.623,3410,4.749,3411,3.349,3412,4.749]],["title/classes/InitAuthStatus.html",[0,0.279,43,2.285]],["body/classes/InitAuthStatus.html",[0,0.546,1,3.381,2,0.497,3,0.022,4,0.022,5,0.026,6,2.175,7,1.629,8,1.058,9,3.933,10,1.106,11,1.064,12,3.244,13,2.909,14,0.959,15,0.16,16,0.36,17,0.883,18,1.487,19,1.219,20,0.192,21,0.259,22,1.092,23,2.879,24,0.209,26,0.287,27,0.005,28,0.281,29,0.287,31,0.442,32,0.385,33,2.284,34,0.085,35,0.367,36,3.185,37,1.876,38,2.209,39,1.876,40,0.061,41,0.577,42,2.125,43,3.557,44,1.151,45,2.177,46,3.528,47,2.712,48,3.781,49,3.003,50,4.722,51,4.044,52,3.528,53,2.228,54,3.452,55,2.612,56,3.452,57,3.301,58,3.528,59,3.528,60,1.425,61,3.528,62,2.228,63,3.247,64,3.557,65,3.607,66,1.913,67,2.228,68,1.951,69,1.807,70,0.973,71,2.284,72,2.879,73,1.106,74,2.228,75,2.228,76,1.992,77,3.247,78,2.228,79,2.228,80,3.247,81,3.068,82,1.876,83,1.475,84,1.913,85,0.847,86,1.913,87,1.951,88,1.629,89,2.284,90,2.284,91,3.877,92,3.781,93,2.207,94,3.781,95,1.363,96,1.363,97,1.274,98,3.301,99,2.284,100,2.228,101,2.034,102,2.284,103,2.034,104,1.656,105,2.228,106,2.175,107,3.143,108,2.228,109,3.004,110,1.338,111,2.034,112,2.228,113,0.57,114,2.284,115,2.228,116,2.284,117,2.228,118,1.552,119,2.284,120,2.284,121,2.284,122,2.821,123,2.284,124,2.284,125,2.284,126,2.175,127,0.002,128,0.003,129,0.002,434,1.878,3413,6.069,3414,4.199]],["title/classes/InitFilters.html",[0,0.279,852,3.538]],["body/classes/InitFilters.html",[0,0.47,2,0.815,3,0.036,4,0.036,5,0.042,8,0.99,14,0.894,15,0.263,16,0.502,17,0.839,18,1.529,19,1.177,20,0.196,21,0.294,22,1.793,24,0.269,26,0.471,27,0.005,28,0.462,29,0.471,31,0.726,32,0.632,34,0.109,35,0.602,40,0.058,41,0.948,44,1.889,45,2.583,83,1.506,95,1.147,96,1.147,97,1.072,127,0.003,128,0.004,129,0.003,138,1.993,150,1.409,385,2.319,434,2.411,684,4.722,838,5.403,839,5.369,842,6.184,843,4.662,844,4.488,845,5.149,846,4.334,847,5.369,848,3.954,849,5.718,850,6.184,851,4.334,852,6.453,853,7.589,854,6.184,855,5.718,3415,8.457,3416,6.891]],["title/classes/InitTimeline.html",[0,0.279,3417,3.538]],["body/classes/InitTimeline.html",[0,0.48,2,0.842,3,0.037,4,0.037,5,0.044,8,1.001,14,0.906,15,0.272,16,0.512,17,0.855,18,1.551,19,1.19,20,0.197,21,0.304,22,1.852,24,0.273,26,0.486,27,0.005,28,0.477,29,0.486,31,0.75,32,0.653,34,0.085,35,0.622,40,0.059,41,0.979,44,1.951,83,1.536,127,0.003,128,0.004,129,0.003,146,1.102,338,3.042,434,2.446,451,2.632,2686,3.777,3417,6.804,3418,5.547,3419,8.626,3420,7.119,3421,7.74,3422,5.906,3423,6.545,3424,6.388,3425,6.388,3426,6.388,3427,5.906]],["title/classes/Input.html",[0,0.279,225,2.083]],["body/classes/Input.html",[0,0.526,2,0.537,3,0.023,4,0.023,5,0.028,8,0.472,11,1.628,17,0.451,19,1.307,20,0.162,21,0.409,24,0.133,26,0.31,27,0.005,28,0.572,29,0.31,32,0.742,34,0.089,40,0.061,41,0.883,70,1.053,85,1.065,95,1.262,96,1.262,97,1.18,127,0.003,128,0.003,129,0.002,132,2.683,133,4.078,134,3.91,135,5.62,136,3.603,137,3.685,138,2.805,139,4.039,140,4.039,141,4.039,142,2.607,143,2.112,146,0.994,147,3.326,148,1.854,149,2.112,150,0.929,151,5.091,152,2.155,153,1.447,154,2.87,155,2.858,156,2.858,157,2.858,158,2.537,159,2.858,160,4.273,161,2.767,162,2.858,163,2.683,164,4.039,165,2.107,166,3.179,167,2.683,168,4.039,169,1.581,170,2.337,171,2.199,172,2.71,173,1.956,174,2.767,175,2.858,176,2.537,177,3.91,178,3.91,179,2.986,180,2.858,181,2.162,182,2.858,183,2.767,184,2.767,185,2.889,186,2.858,187,2.858,188,2.858,189,1.921,190,2.472,191,2.607,192,2.858,193,2.858,194,2.858,195,2.858,196,2.683,197,2.985,198,2.858,199,1.123,200,2.607,201,2.767,202,2.031,203,2.767,204,2.411,205,2.472,206,1.887,207,2.858,208,2.858,209,3.039,210,2.858,211,2.858,212,2.858,213,4.039,214,2.858,215,2.858,216,2.858,217,2.858,218,4.928,219,1.35,220,1.35,221,2.767,222,2.767,223,2.767,224,2.112,225,2.667,226,4.684,227,4.684,228,2.947,229,4.684,230,4.158,231,4.928,232,4.684,233,4.684,3428,4.544]],["title/classes/LightCard.html",[0,0.279,438,1.511]],["body/classes/LightCard.html",[0,0.419,2,0.68,3,0.03,4,0.03,5,0.035,8,0.873,11,2.132,13,3.432,19,1.294,20,0.109,21,0.359,24,0.169,26,0.393,27,0.005,28,0.385,29,0.393,34,0.09,40,0.058,41,1.156,70,1.747,85,1.083,95,0.78,96,0.78,97,0.729,127,0.004,128,0.003,129,0.003,136,3.64,145,5.151,149,2.672,150,1.541,166,4.163,169,1.22,171,2.88,206,2.387,228,3.419,272,1.912,376,2.838,438,2.27,513,5.689,709,3.616,725,2.569,1045,2.268,1163,3.395,1377,3.127,1378,4.324,1380,5.122,1522,4.741,1776,5.158,1777,4.967,1778,5.931,1779,6.214,1780,6.214,1781,6.214,1782,6.477,1783,6.553,1784,6.553,1785,6.214,1786,6.214,1788,5.873,2457,4.054,2718,4.054,2807,6.039,3022,5.569,3023,4.77,3024,4.77,3025,6.214,3026,4.77,3027,4.77,3411,4.054,3429,6.254,3430,4.77,3431,7.547,3432,5.749,3433,5.158,3434,5.158,3435,4.77,3436,4.77,3437,5.158]],["title/classes/LightCardAlreadyUpdated.html",[0,0.279,475,2.242]],["body/classes/LightCardAlreadyUpdated.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,2.783,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.036,456,3.274,457,1.774,458,3.152,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.152,467,1.743,468,1.808,469,3.152,470,1.433,471,3.152,472,1.955,473,3.152,474,1.916,475,3.459,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,1.997,483,1.997,484,1.997,485,1.654,486,1.997,487,1.997,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,1.997,497,1.997,498,1.997,499,1.997,500,2.901,501,1.916,3438,5.989]],["title/injectables/LightCardEffects.html",[200,2.878,856,1.393]],["body/injectables/LightCardEffects.html",[0,0.225,3,0.021,4,0.021,5,0.025,8,0.797,15,0.154,16,0.351,20,0.155,21,0.173,24,0.24,26,0.276,27,0.005,28,0.271,29,0.276,31,0.808,32,0.704,34,0.115,35,0.354,40,0.025,70,2.328,95,0.549,96,0.549,97,0.513,110,1.989,127,0.002,128,0.003,129,0.002,146,1.319,150,1.427,165,2.415,169,2.189,181,2.412,185,2.708,189,1.711,200,3.391,201,4.25,202,4.112,249,1.558,257,6.368,271,0.73,272,1.346,401,2.323,404,2.049,438,2.854,439,1.254,440,1.236,441,1.92,443,1.743,452,1.809,461,3.119,464,1.809,465,3.061,466,3.119,467,2.498,469,3.119,471,3.119,473,3.119,475,3.119,515,1.429,537,2.522,544,1.124,545,1.124,546,1.155,559,1.124,574,3.391,856,1.642,857,1.775,865,5.98,873,4.168,874,4.404,876,4.175,888,2.202,889,2.097,891,1.775,892,1.92,894,1.429,1108,2.097,1252,3.814,1482,5.177,1504,5.192,1568,2.739,1569,4.39,1570,2.991,1850,5.303,1894,4.285,1901,2.739,1926,4.168,1928,5.303,1933,5.303,2223,3.633,2828,2.739,2876,4.904,3439,8.524,3440,4.048,3441,6.981,3442,6.981,3443,6.981,3444,5.792,3445,4.048,3446,5.91,3447,7.675,3448,8.524,3449,5.91,3450,5.91,3451,5.91,3452,8.524,3453,5.91,3454,4.048,3455,5.91,3456,5.91,3457,5.91,3458,5.91,3459,7.675,3460,5.91,3461,5.91,3462,8.524,3463,7.675,3464,5.91,3465,7.675,3466,5.91,3467,5.91,3468,7.675,3469,5.91,3470,9.023,3471,7.675,3472,4.048,3473,5.91,3474,5.91,3475,4.048,3476,5.91,3477,5.91,3478,5.91,3479,5.91,3480,5.91,3481,5.91,3482,5.91,3483,5.91,3484,5.91,3485,7.675,3486,5.91,3487,5.303,3488,4.048,3489,4.048,3490,3.633]],["title/components/ListSettingComponent.html",[234,1,358,1.718]],["body/components/ListSettingComponent.html",[0,0.207,3,0.019,4,0.019,5,0.023,14,0.542,15,0.142,16,0.329,20,0.183,21,0.159,24,0.298,26,0.585,27,0.005,28,0.614,29,0.585,31,0.584,32,0.825,34,0.105,35,0.325,40,0.023,44,1.019,85,0.92,110,1.821,127,0.002,128,0.003,129,0.002,135,4.521,136,2.084,138,2.278,142,2.132,146,0.858,149,1.727,169,1.563,179,1.218,181,1.619,197,1.727,219,1.104,220,2.455,225,2.304,230,3.707,234,1.323,235,1.273,236,1.845,237,1.311,239,1.332,240,1.332,242,2.416,243,1.254,244,3.533,247,1.958,249,2.414,251,1.286,252,3.217,254,2.746,268,2.199,269,2.411,271,0.67,291,1.694,292,1.184,296,2.308,304,1.151,305,1.988,306,1.958,307,1.201,308,2.639,309,1.332,310,1.332,311,1.273,312,1.332,313,1.273,314,2.056,315,1.988,316,1.273,317,1.988,318,1.273,319,1.332,320,1.254,321,1.332,322,3.416,323,1.988,324,2.639,325,1.273,326,1.332,327,1.236,328,1.988,329,1.273,330,1.254,331,1.236,332,1.311,333,1.332,334,1.273,335,1.958,336,1.332,337,1.292,338,1.218,339,1.988,340,1.273,341,1.332,342,2.639,343,1.236,344,1.332,345,1.273,346,1.273,347,1.311,348,1.254,349,1.332,350,1.273,351,1.273,352,1.332,353,1.254,354,1.332,355,1.273,356,1.332,357,1.292,358,2.522,359,1.254,360,1.332,361,1.273,362,1.089,363,1.332,364,1.273,365,1.958,366,1.273,367,2.379,368,1.273,369,1.332,370,1.273,371,1.332,372,1.273,373,1.332,374,1.236,375,1.273,376,1.254,377,1.273,378,1.273,379,1.521,380,1.273,381,1.332,382,1.273,383,1.273,384,1.273,385,0.942,386,1.254,387,1.254,388,1.332,389,1.254,390,1.332,391,1.254,392,1.311,393,1.332,434,1.462,515,1.311,537,1.521,544,1.032,545,1.032,546,1.06,632,1.881,642,1.839,643,1.839,848,2.132,918,4.111,926,3.489,945,3.913,1194,2.42,1269,3.276,1391,2.943,1454,5.214,1606,2.745,1607,2.895,1608,3.921,1609,5.556,1610,4.323,1611,3.913,1612,3.378,1613,6.747,1614,3.913,1615,6.04,1616,5.193,1617,3.921,1618,4.682,1619,5.193,1620,3.913,1621,3.913,1622,3.913,1627,2.621,1629,2.621,1632,4.682,1633,4.955,1635,3.913,1639,4.682,1644,3.334,1654,2.621,1954,3.378,1986,6.601,2509,4.978,2519,5.821,2522,2.621,2752,2.745,2753,2.745,2754,2.745,2759,2.745,2760,2.745,2761,2.745,2762,2.745,2763,2.745,2764,2.745,2765,2.745,2766,2.745,2767,2.745,2768,2.745,2769,2.745,2770,2.745,2771,2.745,2773,2.745,2774,2.745,2778,4.323,2779,4.603,2780,4.603,3491,9.162,3492,8.221,3493,5.957,3494,7.363,3495,7.363,3496,5.548,3497,3.716,3498,3.716,3499,3.716,3500,3.716,3501,3.716,3502,3.716,3503,5.548,3504,3.716,3505,3.334,3506,4.978,3507,4.978,3508,3.334,3509,3.334,3510,4.978,3511,3.334,3512,3.334,3513,3.334,3514,3.334,3515,3.716,3516,3.716,3517,3.716,3518,2.745,3519,3.083,3520,3.083,3521,3.716,3522,3.716,3523,3.334,3524,3.334,3525,3.716,3526,3.716,3527,4.978]],["title/classes/LoadArchivedCard.html",[0,0.279,409,2.661]],["body/classes/LoadArchivedCard.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.074,405,2.682,406,4.494,407,4.494,408,2.056,409,4.573,410,4.169,411,4.494,412,4.494,413,1.842,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,3.311,424,3.311,425,3.311,426,4.471,427,3.311,428,3.311,429,3.311,430,3.205,434,2.121,3528,7.109,3529,5.264]],["title/classes/LoadArchivedCardFailure.html",[0,0.279,412,2.801]],["body/classes/LoadArchivedCardFailure.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.074,405,2.682,406,4.494,407,4.494,408,2.056,409,4.27,410,4.169,411,4.494,412,4.812,413,1.842,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,3.311,424,3.311,425,3.311,426,3.311,427,4.471,428,3.311,429,3.311,430,3.205,434,2.121,3530,7.109,3531,5.264]],["title/classes/LoadArchivedCardSuccess.html",[0,0.279,411,2.801]],["body/classes/LoadArchivedCardSuccess.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.074,405,2.682,406,4.494,407,4.494,408,2.056,409,4.27,410,4.169,411,4.812,412,4.494,413,1.842,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,3.311,424,3.311,425,3.311,426,3.311,427,3.311,428,4.471,429,3.311,430,3.205,434,2.121,3532,7.109,3533,5.264]],["title/classes/LoadCard.html",[0,0.279,404,2.539]],["body/classes/LoadCard.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.362,405,2.682,406,4.494,407,4.494,408,2.056,409,4.27,410,4.169,411,4.494,412,4.494,413,1.842,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,4.471,424,3.311,425,3.311,426,3.311,427,3.311,428,3.311,429,3.311,430,3.205,434,2.121,3534,7.109,3535,5.264]],["title/classes/LoadCardFailure.html",[0,0.279,407,2.801]],["body/classes/LoadCardFailure.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.074,405,2.682,406,4.494,407,4.812,408,2.056,409,4.27,410,4.169,411,4.494,412,4.494,413,1.842,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,3.311,424,4.471,425,3.311,426,3.311,427,3.311,428,3.311,429,3.311,430,3.205,434,2.121,3536,7.109,3537,5.264]],["title/classes/LoadCardSuccess.html",[0,0.279,406,2.801]],["body/classes/LoadCardSuccess.html",[0,0.543,2,0.623,3,0.027,4,0.027,5,0.032,8,1.034,14,0.965,15,0.201,16,0.422,17,0.705,18,1.666,19,1.229,20,0.195,21,0.225,22,1.369,24,0.236,26,0.36,27,0.005,28,0.353,29,0.36,31,0.555,32,0.483,34,0.085,35,0.46,40,0.061,41,0.724,60,1.669,70,1.22,83,1.717,85,0.823,95,1.326,96,1.326,97,1.239,113,1.286,127,0.002,128,0.003,129,0.002,146,1.611,148,2.148,171,2.435,199,1.301,396,4.378,397,3.109,400,3.311,401,3.021,402,4.378,403,1.916,404,4.074,405,2.682,406,4.812,407,4.494,408,2.056,409,4.27,410,4.169,411,4.494,412,4.494,413,1.842,414,1.284,415,1.334,416,1.502,417,1.502,418,2.042,419,3.109,420,1.482,421,1.63,422,3.311,423,3.311,424,3.311,425,4.471,426,3.311,427,3.311,428,3.311,429,3.311,430,3.205,434,2.121,3538,7.109,3539,5.264]],["title/classes/LoadConfig.html",[0,0.279,551,3.155]],["body/classes/LoadConfig.html",[0,0.521,2,0.774,3,0.034,4,0.034,5,0.04,8,1.021,14,0.942,15,0.25,16,0.487,18,1.495,19,1.214,20,0.189,24,0.192,27,0.005,31,0.69,32,0.601,34,0.078,35,0.572,40,0.06,41,0.901,60,1.537,83,1.592,95,1.271,96,1.271,97,1.188,113,1.309,127,0.003,128,0.004,129,0.003,199,1.618,405,2.586,408,1.894,413,2.047,414,1.597,415,1.66,416,1.868,417,1.868,420,1.844,421,2.028,551,5.894,747,5.357,1161,3.758,1525,5.625,1565,4.43,2225,5.825,3069,4.619,3072,5.103,3073,6.385,3074,5.103,3075,5.103,3076,4.839,3540,6.549]],["title/classes/LoadConfigFailure.html",[0,0.279,2225,3.267]],["body/classes/LoadConfigFailure.html",[0,0.515,2,0.75,3,0.033,4,0.033,5,0.039,8,1.013,14,0.933,15,0.242,16,0.477,17,0.796,18,1.631,19,1.204,20,0.195,21,0.271,22,1.649,24,0.259,26,0.433,27,0.005,28,0.425,29,0.433,31,0.668,32,0.581,34,0.076,35,0.554,40,0.06,41,0.872,60,1.488,83,1.569,95,1.257,96,1.257,97,1.174,113,1.296,127,0.003,128,0.004,129,0.003,199,1.566,405,2.548,408,1.833,413,2.017,414,1.546,415,1.607,416,1.809,417,1.809,420,1.784,421,1.963,434,2.322,551,5.541,747,5.323,1161,3.637,1525,5.541,1565,4.288,2225,6.032,3069,4.471,3072,4.939,3073,4.939,3074,6.255,3075,4.939,3076,4.684,3541,8.028,3542,6.34]],["title/classes/LoadConfigSuccess.html",[0,0.279,1525,3.155]],["body/classes/LoadConfigSuccess.html",[0,0.515,2,0.75,3,0.033,4,0.033,5,0.039,8,1.013,14,0.933,15,0.242,16,0.477,17,0.796,18,1.631,19,1.204,20,0.195,21,0.271,22,1.649,24,0.259,26,0.433,27,0.005,28,0.425,29,0.433,31,0.668,32,0.581,34,0.076,35,0.554,40,0.06,41,0.872,60,1.488,83,1.569,95,1.257,96,1.257,97,1.174,113,1.296,127,0.003,128,0.004,129,0.003,199,1.566,405,2.548,408,1.833,413,2.017,414,1.546,415,1.607,416,1.809,417,1.809,420,1.784,421,1.963,434,2.322,551,5.541,747,5.323,1161,3.637,1525,5.825,1565,4.288,2225,5.738,3069,4.471,3072,4.939,3073,4.939,3074,4.939,3075,6.255,3076,4.684,3543,8.028,3544,6.34]],["title/classes/LoadLightCards.html",[0,0.279,444,2.285]],["body/classes/LoadLightCards.html",[0,0.56,2,0.49,3,0.021,4,0.021,5,0.025,8,1.063,10,2.171,11,1.049,12,1.3,14,0.988,15,0.158,16,0.357,18,1.571,19,1.252,20,0.193,21,0.378,24,0.122,27,0.005,31,0.436,32,0.38,34,0.093,35,0.362,40,0.062,41,0.569,45,1.264,60,0.972,70,1.909,83,1.673,85,0.793,93,1.282,95,1.292,96,1.292,97,1.207,113,1.202,118,1.531,127,0.002,128,0.003,129,0.002,146,1.489,150,0.846,153,1.913,185,2.331,199,1.023,272,1.377,302,1.375,403,1.507,405,2.243,408,1.737,413,1.618,414,1.01,415,1.049,416,1.181,417,1.181,418,1.606,420,1.165,421,1.282,431,3.16,432,2.792,433,1.924,437,2.005,438,2.588,439,1.282,440,1.264,441,1.964,442,1.886,443,1.782,444,3.534,445,4.778,446,3.16,447,1.815,448,3.044,449,2.792,450,1.964,451,1.531,452,3.16,453,3.16,454,1.282,455,3.044,456,3.279,457,1.782,458,3.16,459,1.924,460,3.16,461,3.16,462,1.964,463,1.964,464,3.16,465,3.1,466,3.16,467,1.75,468,1.815,469,3.16,470,1.439,471,3.16,472,1.964,473,3.16,474,1.924,475,3.16,476,1.719,477,1.633,478,2.91,479,2.005,480,2.005,481,1.782,482,2.005,483,2.005,484,2.005,485,1.661,486,2.005,487,2.005,488,2.005,489,2.005,490,1.58,491,2.005,492,2.005,493,2.005,494,1.964,495,1.964,496,2.005,497,2.005,498,2.005,499,2.005,500,2.005,501,1.924,3545,4.14]],["title/classes/LoadLightCardsExtendedData.html",[0,0.279,449,2.331]],["body/classes/LoadLightCardsExtendedData.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,3.278,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.036,456,3.274,457,1.774,458,3.152,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.152,467,1.743,468,1.808,469,3.152,470,1.433,471,3.152,472,1.955,473,3.152,474,1.916,475,3.152,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,2.901,483,1.997,484,1.997,485,1.654,486,1.997,487,1.997,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,1.997,497,1.997,498,1.997,499,1.997,500,1.997,501,1.916,3546,5.989]],["title/classes/LoadLightCardsFailure.html",[0,0.279,452,2.242]],["body/classes/LoadLightCardsFailure.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.43,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,2.863,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,3547,5.91,3548,4.048]],["title/classes/LoadLightCardsSuccess.html",[0,0.279,448,2.159]],["body/classes/LoadLightCardsSuccess.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.304,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,2.863,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,3549,5.91,3550,4.048]],["title/classes/LoadMenu.html",[0,0.279,3085,2.878]],["body/classes/LoadMenu.html",[0,0.527,2,0.623,3,0.027,4,0.027,5,0.032,8,1.042,14,0.942,15,0.201,16,0.422,18,1.633,19,1.205,20,0.187,21,0.343,24,0.209,26,0.55,27,0.005,31,0.555,32,0.483,34,0.085,35,0.46,40,0.06,41,0.724,60,1.669,69,2.266,83,1.652,85,0.881,95,1.286,96,1.286,97,1.202,113,1.308,127,0.002,128,0.003,129,0.002,153,1.677,154,2.353,171,2.435,172,2.587,173,3.06,199,1.301,272,1.751,362,3.051,405,2.327,408,1.522,413,1.842,414,1.284,415,1.334,420,1.482,421,1.63,454,2.493,470,2.798,537,1.443,800,3.205,1219,3.867,1225,3.021,1384,2.939,1520,3.429,1556,3.311,1561,3.205,1573,3.429,2281,2.864,2349,3.429,2372,5.242,2381,5.242,2382,3.429,2383,5.165,2385,4.618,2386,3.205,2387,3.429,2388,4.901,3080,3.311,3083,3.561,3084,3.109,3085,4.945,3086,4.494,3087,4.753,3088,4.753,3089,4.753,3090,4.809,3091,3.561,3092,3.561,3093,3.561,3094,3.561,3095,3.429,3096,5.445,3097,5.445,3098,4.809,3099,3.561,3100,3.561,3101,3.561,3102,3.561,3103,3.429,3551,7.109]],["title/classes/LoadMenuFailure.html",[0,0.279,3087,2.962]],["body/classes/LoadMenuFailure.html",[0,0.524,2,0.609,3,0.027,4,0.027,5,0.031,8,1.038,14,0.937,15,0.196,16,0.416,17,0.695,18,1.672,19,1.2,20,0.193,21,0.299,22,1.34,24,0.234,26,0.583,27,0.005,28,0.345,29,0.352,31,0.542,32,0.472,34,0.084,35,0.45,40,0.059,41,0.708,60,1.644,69,2.217,83,1.641,85,0.873,95,1.279,96,1.279,97,1.195,113,1.302,127,0.002,128,0.003,129,0.002,153,1.64,154,2.301,171,2.399,172,2.549,173,3.015,199,1.272,272,1.713,362,3.044,405,2.301,408,1.489,413,1.822,414,1.256,415,1.305,420,1.45,421,1.595,434,2.097,454,2.465,470,2.767,537,1.412,800,3.136,1219,3.81,1225,2.955,1384,2.875,1520,3.354,1556,3.239,1561,3.136,1573,3.354,2281,2.801,2349,3.354,2372,5.184,2381,5.184,2382,3.354,2383,5.126,2385,4.567,2386,3.136,2387,3.354,2388,4.846,3080,3.239,3083,3.484,3084,3.041,3085,4.567,3086,4.444,3087,5.044,3088,4.7,3089,4.7,3090,3.484,3091,4.738,3092,3.484,3093,3.484,3094,3.484,3095,3.354,3096,5.384,3097,5.384,3098,4.738,3099,3.484,3100,3.484,3101,3.484,3102,3.484,3103,3.354,3552,7.004,3553,5.15]],["title/classes/LoadMenuSuccess.html",[0,0.279,3086,2.801]],["body/classes/LoadMenuSuccess.html",[0,0.524,2,0.609,3,0.027,4,0.027,5,0.031,8,1.038,14,0.937,15,0.196,16,0.416,17,0.695,18,1.672,19,1.2,20,0.193,21,0.299,22,1.34,24,0.234,26,0.583,27,0.005,28,0.345,29,0.352,31,0.542,32,0.472,34,0.084,35,0.45,40,0.059,41,0.708,60,1.644,69,2.217,83,1.641,85,0.873,95,1.279,96,1.279,97,1.195,113,1.302,127,0.002,128,0.003,129,0.002,153,1.64,154,2.301,171,2.399,172,2.549,173,3.015,199,1.272,272,1.713,362,3.044,405,2.301,408,1.489,413,1.822,414,1.256,415,1.305,420,1.45,421,1.595,434,2.097,454,2.465,470,2.767,537,1.412,800,3.136,1219,3.81,1225,2.955,1384,2.875,1520,3.354,1556,3.239,1561,3.136,1573,3.354,2281,2.801,2349,3.354,2372,5.184,2381,5.184,2382,3.354,2383,5.126,2385,4.567,2386,3.136,2387,3.354,2388,4.846,3080,3.239,3083,3.484,3084,3.041,3085,4.567,3086,4.769,3087,4.7,3088,4.7,3089,4.7,3090,3.484,3091,3.484,3092,4.738,3093,3.484,3094,3.484,3095,3.354,3096,5.384,3097,5.384,3098,4.738,3099,3.484,3100,3.484,3101,3.484,3102,3.484,3103,3.354,3554,7.004,3555,5.15]],["title/classes/LoadSettings.html",[0,0.279,3108,2.962]],["body/classes/LoadSettings.html",[0,0.542,2,0.693,3,0.03,4,0.03,5,0.036,8,1.036,14,0.964,15,0.224,16,0.453,18,1.598,19,1.231,20,0.191,24,0.172,27,0.005,31,0.617,32,0.538,34,0.07,35,0.512,40,0.061,41,0.806,49,1.867,60,1.792,83,1.702,95,1.297,96,1.297,97,1.212,113,1.321,127,0.003,128,0.004,129,0.003,199,1.448,405,2.455,408,2.208,413,1.943,414,1.43,415,1.486,416,1.672,417,1.672,420,1.65,421,1.815,698,4.552,1645,4.872,2902,4.872,2903,3.569,3104,3.687,3107,3.966,3108,5.312,3109,5.014,3110,5.53,3111,5.014,3112,5.014,3113,5.165,3114,3.966,3115,3.966,3116,3.966,3117,3.818,3118,3.966,3119,3.966,3120,3.818,3556,5.862]],["title/classes/LoadSettingsFailure.html",[0,0.279,3109,2.962]],["body/classes/LoadSettingsFailure.html",[0,0.538,2,0.673,3,0.029,4,0.029,5,0.035,8,1.03,14,0.958,15,0.217,16,0.445,17,0.743,18,1.659,19,1.224,20,0.195,21,0.243,22,1.481,24,0.246,26,0.389,27,0.005,28,0.381,29,0.389,31,0.6,32,0.522,34,0.068,35,0.498,40,0.061,41,0.783,49,1.813,60,1.758,83,1.689,95,1.287,96,1.287,97,1.203,113,1.312,127,0.003,128,0.003,129,0.003,199,1.407,405,2.42,408,2.166,413,1.916,414,1.389,415,1.443,416,1.624,417,1.624,420,1.603,421,1.763,434,2.206,698,4.537,1645,4.803,2902,4.803,2903,3.466,3104,3.581,3107,3.851,3108,4.943,3109,5.252,3110,5.452,3111,4.943,3112,4.943,3113,3.851,3114,5.067,3115,3.851,3116,3.851,3117,3.708,3118,3.851,3119,3.851,3120,3.708,3557,7.49,3558,5.694]],["title/classes/LoadSettingsSuccess.html",[0,0.279,2902,2.878]],["body/classes/LoadSettingsSuccess.html",[0,0.538,2,0.673,3,0.029,4,0.029,5,0.035,8,1.03,14,0.958,15,0.217,16,0.445,17,0.743,18,1.659,19,1.224,20,0.195,21,0.243,22,1.481,24,0.246,26,0.389,27,0.005,28,0.381,29,0.389,31,0.6,32,0.522,34,0.068,35,0.498,40,0.061,41,0.783,49,1.813,60,1.758,83,1.689,95,1.287,96,1.287,97,1.203,113,1.312,127,0.003,128,0.003,129,0.003,199,1.407,405,2.42,408,2.166,413,1.916,414,1.389,415,1.443,416,1.624,417,1.624,420,1.603,421,1.763,434,2.206,698,4.537,1645,4.803,2902,5.103,2903,3.466,3104,3.581,3107,3.851,3108,4.943,3109,4.943,3110,5.452,3111,4.943,3112,4.943,3113,3.851,3114,3.851,3115,5.067,3116,3.851,3117,3.708,3118,3.851,3119,3.851,3120,3.708,3559,7.49,3560,5.694]],["title/components/LoginComponent.html",[234,1,359,1.693]],["body/components/LoginComponent.html",[0,0.257,3,0.024,4,0.024,5,0.028,14,0.635,15,0.177,16,0.386,20,0.177,21,0.197,24,0.283,26,0.316,27,0.005,28,0.576,29,0.316,34,0.117,35,0.404,38,2.738,39,2.068,40,0.028,44,1.269,54,2.242,72,3.871,84,2.109,95,0.628,96,0.628,97,0.587,104,2.967,106,3.37,110,1.965,127,0.002,128,0.003,129,0.002,138,2.359,146,1.007,150,0.946,165,1.547,170,1.684,181,1.835,219,1.375,220,1.933,234,1.5,235,1.585,236,2.163,237,1.633,238,3.238,239,1.659,240,1.659,242,2.738,243,1.562,244,3.579,247,2.296,249,1.22,251,1.508,252,3.065,268,1.868,269,2.578,271,0.834,304,1.433,305,2.331,306,2.296,307,1.495,308,2.924,309,1.659,310,1.659,311,1.585,312,1.659,313,1.585,314,2.329,315,2.331,316,1.585,317,2.331,318,1.585,319,1.659,320,1.562,321,1.659,322,1.585,323,1.659,324,2.924,325,1.585,326,1.659,327,1.539,328,2.331,329,1.585,330,1.562,331,1.539,332,1.633,333,1.659,334,1.585,335,2.296,336,1.659,337,1.609,338,1.517,339,2.331,340,1.585,341,1.659,342,2.924,343,1.539,344,1.659,345,1.585,346,1.585,347,1.633,348,1.562,349,1.659,350,1.585,351,1.585,352,1.659,353,1.562,354,1.659,355,1.585,356,1.659,357,1.609,358,1.585,359,2.754,360,1.659,361,1.585,362,1.356,363,1.659,364,1.585,365,2.296,366,1.585,367,2.696,368,1.585,369,1.659,370,1.585,371,1.659,372,1.585,373,1.659,374,1.539,375,1.585,376,1.562,377,1.585,378,1.585,379,1.783,380,1.585,381,1.659,382,1.585,383,1.585,384,1.585,385,1.649,386,1.562,387,1.562,388,1.659,389,1.562,390,1.659,391,1.562,392,1.633,393,1.659,515,1.633,518,4.556,537,1.269,544,1.286,545,1.286,546,1.32,550,3.606,553,2.195,556,2.397,559,1.286,578,2.151,589,5.305,590,5.861,591,6.75,632,2.343,665,2.911,666,3.014,667,3.014,894,1.633,918,4.556,926,4.731,947,2.068,1089,4.091,1102,3.014,1114,3.264,1120,2.733,1496,3.84,1567,3.419,3239,5.397,3561,4.628,3562,7.522,3563,7.522,3564,6.505,3565,7.522,3566,7.522,3567,7.522,3568,7.522,3569,7.522,3570,8.16,3571,8.16,3572,8.16,3573,6.505,3574,4.628,3575,4.628,3576,4.628,3577,4.628,3578,4.628,3579,4.628,3580,4.628,3581,4.628,3582,4.628,3583,4.628,3584,4.628,3585,4.628,3586,4.628,3587,4.628,3588,4.628,3589,4.628,3590,4.628,3591,4.628,3592,4.628,3593,4.628,3594,4.628,3595,4.628,3596,4.628,3597,4.628,3598,4.628,3599,4.628,3600,4.628,3601,6.505,3602,6.505,3603,6.505,3604,6.505,3605,6.505,3606,6.505]],["title/classes/Map.html",[0,0.279,150,1.025]],["body/classes/Map.html",[0,0.448,2,0.952,3,0.042,4,0.042,5,0.049,24,0.236,27,0.005,40,0.049,85,0.948,127,0.004,128,0.004,129,0.004,143,4.31,150,1.896,3607,8.047,3608,8.047,3609,7.226,3610,8.047]],["title/injectables/MenuEffects.html",[804,4.162,856,1.393]],["body/injectables/MenuEffects.html",[0,0.306,3,0.028,4,0.028,5,0.034,8,0.948,15,0.348,16,0.435,18,1.466,20,0.173,21,0.235,24,0.242,26,0.375,27,0.005,28,0.49,29,0.375,31,0.771,32,0.671,34,0.118,35,0.48,40,0.034,70,2.222,95,0.746,96,0.746,97,0.697,104,3.245,110,2.07,113,1.19,127,0.004,128,0.003,129,0.003,150,1.123,169,1.861,172,2.663,181,2.139,202,4.081,249,2.168,271,0.991,362,2.57,405,2.378,515,1.94,537,2.628,544,1.527,545,1.527,546,1.568,559,1.527,578,3.401,679,5.836,682,3.153,710,6.071,711,4.543,729,4.95,804,6.071,856,2.032,857,2.41,874,5.032,876,3.98,888,2.989,889,2.847,891,2.41,892,2.607,894,1.94,1017,5.16,1031,4.766,1252,3.707,1401,4.95,1475,6.071,1482,5.032,1504,4.95,1508,7.87,1861,6.071,1894,5.244,1901,3.718,1926,6.185,1930,5.16,2383,4.198,2384,7.87,2385,3.153,2391,4.06,2590,4.932,3084,3.246,3085,3.153,3086,3.068,3087,3.246,3088,4.858,3089,4.858,3095,4.766,3611,5.496,3612,8.77,3613,5.496,3614,7.317,3615,7.317,3616,7.317,3617,7.317,3618,7.317,3619,5.496,3620,7.317,3621,7.317,3622,7.317,3623,7.317,3624,7.317,3625,7.317,3626,7.317,3627,5.496,3628,7.317,3629,7.317]],["title/components/MenuLinkComponent.html",[234,1,361,1.718]],["body/components/MenuLinkComponent.html",[0,0.264,3,0.025,4,0.034,5,0.04,14,0.647,15,0.181,16,0.393,17,0.756,20,0.178,21,0.203,24,0.271,26,0.324,27,0.005,28,0.553,29,0.324,31,0.5,32,0.436,34,0.104,35,0.415,40,0.029,44,1.302,73,1.251,110,1.981,127,0.002,128,0.003,129,0.002,138,2.599,146,1.025,160,4.376,173,3.283,219,2.452,220,1.968,225,3.167,234,1.52,235,1.626,236,2.203,237,1.676,238,2.044,239,1.702,240,1.702,242,2.776,243,1.602,244,3.584,245,3.018,247,2.337,251,1.535,252,3.099,254,3.278,268,1.087,269,1.337,271,0.856,272,1.579,285,1.702,286,1.676,287,1.702,288,1.702,289,1.702,290,1.702,291,1.45,292,1.512,293,1.702,294,1.702,295,1.702,296,2.869,297,1.579,298,1.676,299,1.702,300,1.702,301,1.702,302,1.087,303,1.702,304,1.471,305,2.373,306,2.337,307,1.534,308,2.957,309,1.702,310,1.702,311,1.626,312,1.702,313,1.626,314,2.362,315,2.373,316,1.626,317,2.373,318,1.626,319,1.702,320,1.602,321,1.702,322,1.626,323,1.702,324,2.957,325,1.626,326,1.702,327,1.579,328,2.373,329,1.626,330,1.602,331,1.579,332,1.676,333,1.702,334,1.626,335,2.337,336,1.702,337,1.651,338,1.556,339,2.373,340,1.626,341,1.702,342,2.957,343,1.579,344,1.702,345,1.626,346,1.626,347,1.676,348,1.602,349,1.702,350,1.626,351,1.626,352,1.702,353,1.602,354,1.702,355,1.626,356,1.702,357,1.651,358,1.626,359,1.602,360,1.702,361,2.826,362,2.867,363,1.702,364,1.626,365,2.337,366,1.626,367,2.733,368,1.626,369,1.702,370,1.626,371,1.702,372,1.626,373,1.702,374,1.579,375,1.626,376,1.602,377,1.626,378,1.626,379,1.815,380,1.626,381,1.702,382,1.626,383,1.626,384,1.626,385,1.204,386,1.602,387,1.602,388,1.702,389,1.602,390,1.702,391,1.602,392,1.676,393,1.702,415,1.204,515,1.676,545,1.319,546,1.355,553,2.252,556,2.46,559,1.319,600,3.7,659,8.443,947,3.408,1791,4.314,2383,4.735,2537,4.261,2685,4.261,2908,3.94,2961,6.844,3310,4.261,3630,9.409,3631,4.749,3632,7.627,3633,6.623,3634,7.627,3635,7.627,3636,7.627,3637,7.627,3638,6.623,3639,4.749,3640,4.749,3641,4.749,3642,4.749,3643,4.749,3644,4.749,3645,4.749,3646,4.749,3647,4.749,3648,4.749,3649,4.749,3650,4.749,3651,4.749,3652,4.749,3653,4.749,3654,8.989,3655,5.943,3656,6.623,3657,6.623,3658,4.749]],["title/interfaces/MenuState.html",[744,1.946,753,4.162]],["body/interfaces/MenuState.html",[3,0.039,4,0.039,5,0.046,15,0.286,16,0.528,20,0.186,27,0.005,34,0.089,40,0.054,85,1.024,113,1.287,127,0.003,128,0.004,129,0.003,138,2.743,165,1.781,170,2.726,173,4.224,179,2.455,272,2.49,362,2.937,584,6.526,744,2.906,745,4.074,753,7.87,3659,7.489,3660,10.019,3661,7.489,3662,7.489,3663,7.489]],["title/classes/Message.html",[0,0.279,38,1.826]],["body/classes/Message.html",[0,0.42,2,0.894,3,0.046,4,0.039,5,0.046,19,1.174,20,0.143,21,0.382,24,0.222,26,0.516,27,0.005,28,0.507,29,0.516,34,0.09,38,3.582,40,0.055,41,1.04,85,0.974,95,1.026,96,1.026,97,0.958,113,1.026,127,0.004,128,0.004,129,0.004,136,3.863,145,3.916,149,3.514,1567,5.586,3664,6.784,3665,7.561,3666,8.545,3667,7.561,3668,7.561,3669,6.784]],["title/directives/MouseWheelDirective.html",[307,1.621,391,1.693]],["body/directives/MouseWheelDirective.html",[0,0.348,3,0.032,4,0.032,5,0.038,7,2.43,15,0.239,20,0.166,24,0.286,26,0.428,27,0.005,28,0.42,29,0.428,34,0.075,40,0.049,127,0.003,128,0.004,129,0.003,181,1.943,243,2.114,244,2.689,251,1.847,268,1.434,269,2.68,271,1.129,307,2.979,386,2.114,391,2.689,392,2.812,558,3.407,596,5.619,725,2.799,1045,3.143,1384,3.497,1478,6.208,1702,5.619,1714,4.881,1790,6.208,2092,6.932,2697,7.705,2702,7.15,2709,8.544,2713,7.27,2724,7.862,2947,8.873,3670,6.264,3671,9.222,3672,7.968,3673,7.968,3674,7.968,3675,8.762,3676,8.762,3677,7.968,3678,7.968,3679,6.264,3680,6.264,3681,6.264,3682,6.264,3683,6.264,3684,6.264,3685,6.264,3686,6.264,3687,7.968,3688,6.264,3689,7.968,3690,7.968,3691,6.264,3692,6.264,3693,8.762,3694,6.264,3695,6.264,3696,6.264,3697,6.264,3698,7.968,3699,9.222,3700,6.264,3701,6.264,3702,6.264,3703,6.264,3704,6.264]],["title/components/MultiFilterComponent.html",[234,1,364,1.718]],["body/components/MultiFilterComponent.html",[0,0.262,3,0.024,4,0.034,5,0.04,14,0.643,15,0.179,16,0.391,17,0.467,20,0.181,21,0.201,24,0.263,26,0.321,27,0.005,28,0.551,29,0.321,32,0.696,34,0.103,40,0.029,44,1.29,73,1.24,85,0.975,127,0.002,128,0.003,129,0.002,135,4.964,136,2.472,146,1.018,149,2.187,165,1.119,181,1.605,219,1.398,220,1.956,225,3.414,230,4.238,234,1.513,235,1.612,236,2.189,237,1.661,238,2.026,239,1.687,240,1.687,242,2.762,243,1.588,244,3.582,245,2.999,247,2.323,251,1.526,252,3.087,254,3.258,268,1.077,269,1.325,271,0.849,285,1.687,286,1.661,287,1.687,288,1.687,289,1.687,290,1.687,291,1.437,292,1.499,293,1.687,294,1.687,295,1.687,296,2.858,297,1.565,298,1.661,299,1.687,300,1.687,301,1.687,302,1.077,303,1.687,304,1.457,305,2.359,306,2.323,307,1.521,308,2.946,309,1.687,310,1.687,311,1.612,312,1.687,313,1.612,314,2.351,315,2.359,316,1.612,317,2.359,318,1.612,319,1.687,320,1.588,321,1.687,322,1.612,323,1.687,324,2.946,325,1.612,326,1.687,327,1.565,328,2.359,329,1.612,330,1.588,331,1.565,332,1.661,333,1.687,334,1.612,335,2.323,336,1.687,337,1.636,338,1.543,339,2.359,340,1.612,341,1.687,342,2.946,343,1.565,344,1.687,345,1.612,346,1.612,347,1.661,348,1.588,349,1.687,350,1.612,351,1.612,352,1.687,353,1.588,354,1.687,355,1.612,356,1.687,357,1.636,358,1.612,359,1.588,360,1.687,361,1.612,362,1.379,363,1.687,364,2.815,365,3.366,366,1.612,367,2.72,368,1.612,369,1.687,370,1.612,371,1.687,372,1.612,373,1.687,374,1.565,375,1.612,376,1.588,377,1.612,378,1.612,379,1.804,380,1.612,381,1.687,382,1.612,383,1.612,384,1.612,385,1.924,386,1.588,387,1.588,388,1.687,389,1.588,390,1.687,391,1.588,392,1.661,393,1.687,434,1.735,537,1.804,544,1.307,559,1.307,632,2.382,642,2.329,643,2.329,904,6.489,918,4.589,926,4.14,945,4.642,1069,8.257,1070,8.257,1454,5.457,2476,3.477,2483,6.811,2484,4.863,2494,6.811,2534,5.906,3493,6.811,3505,4.223,3506,5.906,3507,5.906,3508,4.223,3509,4.223,3510,5.906,3511,4.223,3512,4.223,3513,4.223,3514,4.223,3527,5.906,3705,7.59,3706,4.706,3707,6.582,3708,4.706,3709,4.706,3710,4.706,3711,4.706,3712,4.706,3713,4.706]],["title/components/MultiSettingsComponent.html",[234,1,366,1.718]],["body/components/MultiSettingsComponent.html",[0,0.241,3,0.022,4,0.022,5,0.026,14,0.605,15,0.165,16,0.368,20,0.182,21,0.185,24,0.299,26,0.595,27,0.005,28,0.627,29,0.595,31,0.653,32,0.8,34,0.1,35,0.378,40,0.026,44,1.185,85,0.634,110,1.922,127,0.002,128,0.003,129,0.002,138,1.793,146,0.959,169,1.316,181,1.767,197,2.01,219,1.285,220,1.842,234,1.445,235,1.481,236,2.062,237,1.526,239,1.55,240,1.55,242,2.637,243,1.459,244,3.566,247,2.188,249,2.298,251,1.437,252,2.722,254,3.069,268,2.199,269,2.454,271,0.78,291,1.893,292,1.378,304,1.339,305,2.222,306,2.188,307,1.397,308,2.836,309,1.55,310,1.55,311,1.481,312,1.55,313,1.481,314,2.244,315,2.222,316,1.481,317,2.222,318,1.481,319,1.55,320,1.459,321,1.55,322,3.482,323,2.222,324,2.836,325,1.481,326,1.55,327,1.438,328,2.222,329,1.481,330,1.459,331,1.438,332,1.526,333,1.55,334,1.481,335,2.188,336,1.55,337,1.503,338,1.418,339,2.222,340,1.481,341,1.55,342,2.836,343,1.438,344,1.55,345,1.481,346,1.481,347,1.526,348,1.459,349,1.55,350,1.481,351,1.481,352,1.55,353,1.459,354,1.55,355,1.481,356,1.55,357,1.503,358,1.481,359,1.459,360,1.55,361,1.481,362,1.268,363,1.55,364,1.481,365,3.242,366,2.711,367,2.597,368,1.481,369,1.55,370,1.481,371,1.55,372,1.481,373,1.55,374,1.438,375,1.481,376,1.459,377,1.481,378,1.481,379,1.699,380,1.481,381,1.55,382,1.481,383,1.481,384,1.481,385,1.096,386,1.459,387,1.459,388,1.55,389,1.459,390,1.55,391,1.459,392,1.526,393,1.55,515,1.526,545,1.201,546,1.234,632,2.189,698,3.471,848,2.481,918,4.419,926,2.72,1269,3.661,1391,3.289,1606,3.195,1608,4.279,1609,5.111,1611,4.372,1612,3.774,1613,6.792,1614,4.372,1615,6.333,1616,4.372,1617,4.279,1618,5.111,1619,5.582,1620,4.372,1621,4.372,1622,4.372,1627,3.05,1629,3.05,1632,3.05,1633,3.899,1635,3.05,1639,5.111,1654,3.05,1694,4.83,1954,3.774,1986,6.757,2519,5.848,2752,3.195,2753,3.195,2754,3.195,2759,3.195,2760,3.195,2761,3.195,2762,3.195,2763,3.195,2764,3.195,2765,3.195,2766,3.195,2767,3.195,2768,3.195,2769,3.195,2770,3.195,2771,3.195,2773,3.195,2774,3.195,3518,3.195,3519,3.588,3520,3.588,3714,8.379,3715,6.952,3716,3.881,3717,4.83,3718,7.103,3719,3.881,3720,4.325,3721,4.325,3722,4.325,3723,4.325,3724,4.325,3725,4.325]],["title/components/NavbarComponent.html",[234,1,368,1.718]],["body/components/NavbarComponent.html",[0,0.233,3,0.022,4,0.031,5,0.037,14,0.593,15,0.231,16,0.36,17,0.416,20,0.181,21,0.179,24,0.292,26,0.414,27,0.005,28,0.555,29,0.414,31,0.822,32,0.76,34,0.116,35,0.367,40,0.026,44,1.151,56,2.94,66,1.913,73,1.106,85,0.798,107,4.044,110,1.903,127,0.002,128,0.003,129,0.002,138,2.395,146,0.939,169,0.891,173,1.807,179,1.376,189,1.775,219,1.247,220,1.803,228,2.871,234,1.421,235,1.438,236,2.018,237,1.482,238,1.807,239,1.505,240,1.505,242,2.594,243,1.417,244,3.56,245,2.765,247,2.142,249,1.878,251,1.407,252,2.933,268,1.787,269,2.198,271,0.757,272,1.396,285,1.505,286,1.482,287,1.505,288,1.505,289,1.505,290,1.505,291,1.282,292,1.337,293,1.505,294,1.505,295,1.505,296,1.46,297,1.396,298,1.482,299,1.505,300,1.505,301,1.505,302,0.961,303,1.505,304,1.3,305,2.175,306,2.142,307,1.357,308,2.798,309,1.505,310,1.505,311,1.438,312,1.505,313,1.438,314,2.207,315,2.175,316,1.438,317,2.175,318,1.438,319,1.505,320,1.417,321,1.505,322,1.438,323,1.505,324,2.798,325,1.438,326,1.505,327,1.396,328,2.175,329,1.438,330,1.417,331,1.396,332,1.482,333,1.505,334,1.438,335,2.142,336,1.505,337,1.46,338,1.376,339,2.175,340,1.438,341,1.505,342,2.798,343,1.396,344,1.505,345,1.438,346,1.438,347,1.482,348,1.417,349,1.505,350,1.438,351,1.438,352,1.505,353,1.417,354,1.505,355,1.438,356,1.505,357,1.46,358,1.438,359,1.417,360,1.505,361,1.438,362,1.231,363,1.505,364,1.438,365,2.142,366,1.438,367,2.554,368,2.674,369,1.505,370,1.438,371,1.505,372,1.438,373,1.505,374,1.396,375,1.438,376,1.417,377,1.438,378,1.438,379,1.664,380,1.438,381,1.505,382,1.438,383,1.438,384,1.438,385,1.064,386,1.417,387,1.417,388,1.505,389,1.417,390,1.505,391,1.417,392,1.482,393,1.505,451,2.244,509,5.553,515,1.482,526,3.271,537,1.954,544,1.166,545,1.166,546,1.198,547,3.102,549,3.768,553,1.992,559,1.166,567,3.271,578,2.821,593,5.098,636,2.84,701,5.035,707,7.746,725,3.858,894,1.482,947,2.712,991,2.344,1013,3.102,1102,2.735,1108,2.175,1453,3.22,1806,3.817,1836,3.271,1838,3.271,1875,6.378,2306,7.006,2332,3.102,2335,3.768,2336,3.768,2337,3.768,2341,6.395,2391,3.102,2686,2.228,3085,3.482,3367,3.768,3726,4.199,3727,7.127,3728,6.069,3729,7.127,3730,6.069,3731,6.069,3732,7.127,3733,6.069,3734,7.808,3735,7.127,3736,6.069,3737,4.199,3738,4.199,3739,4.199,3740,4.199,3741,4.199,3742,4.199,3743,4.199,3744,4.199,3745,4.199,3746,4.199,3747,4.199,3748,4.199,3749,4.199,3750,4.199,3751,4.199,3752,4.199,3753,4.199,3754,4.199,3755,4.199,3756,4.199,3757,4.199,3758,4.199,3759,4.199,3760,4.199,3761,4.199,3762,4.199,3763,4.199,3764,4.199,3765,4.199,3766,4.199,3767,4.199,3768,4.199,3769,4.199,3770,4.199,3771,4.199,3772,4.199,3773,4.199,3774,4.199,3775,4.199,3776,4.199,3777,4.199,3778,4.199,3779,4.199,3780,4.199,3781,4.199,3782,6.069,3783,6.069,3784,6.069,3785,6.069,3786,6.069,3787,6.069,3788,4.199,3789,4.199,3790,4.199]],["title/components/NoSelectionComponent.html",[234,1,370,1.718]],["body/components/NoSelectionComponent.html",[0,0.327,3,0.03,4,0.03,5,0.036,14,0.747,15,0.224,20,0.145,21,0.363,24,0.225,27,0.005,28,0.57,34,0.07,40,0.036,44,1.613,127,0.003,128,0.004,129,0.003,146,1.184,219,1.748,220,2.274,234,1.696,235,2.015,236,2.545,237,2.077,239,2.109,240,2.109,242,3.096,243,1.986,244,3.621,247,2.701,251,1.774,252,3.383,268,1.347,269,1.656,271,1.061,304,1.822,305,2.743,306,2.701,307,1.901,308,3.228,309,2.109,310,2.109,311,2.015,312,2.109,313,2.015,314,2.634,315,2.743,316,2.015,317,2.743,318,2.015,319,2.109,320,1.986,321,2.109,322,2.015,323,2.109,324,3.228,325,2.015,326,2.109,327,1.957,328,2.743,329,2.015,330,1.986,331,1.957,332,2.077,333,2.109,334,2.015,335,2.701,336,2.109,337,2.045,338,1.929,339,2.743,340,2.015,341,2.109,342,3.228,343,1.957,344,2.109,345,2.015,346,2.015,347,2.077,348,1.986,349,2.109,350,2.015,351,2.015,352,2.109,353,1.986,354,2.109,355,2.015,356,2.109,357,2.045,358,2.015,359,1.986,360,2.109,361,2.015,362,1.725,363,2.109,364,2.015,365,2.701,366,2.015,367,3.048,368,2.015,369,2.109,370,3.085,371,2.109,372,2.015,373,2.109,374,1.957,375,2.015,376,1.986,377,2.015,378,2.015,379,2.098,380,2.015,381,2.109,382,2.015,383,2.015,384,2.015,385,1.491,386,1.986,387,1.986,388,2.109,389,1.986,390,2.109,391,1.986,392,2.077,393,2.109,457,3.877,1694,5.963,2925,7.632,3791,8.506,3792,5.884,3793,7.653,3794,5.884,3795,5.884]],["title/injectables/NotifyService.html",[856,1.393,2071,3.538]],["body/injectables/NotifyService.html",[0,0.39,3,0.036,4,0.036,5,0.043,15,0.267,16,0.508,20,0.162,21,0.393,24,0.289,26,0.584,27,0.005,28,0.573,29,0.584,34,0.084,40,0.043,45,2.142,85,1.006,127,0.003,128,0.004,129,0.003,138,2.472,169,1.814,181,1.711,251,1.982,268,2.111,269,2.406,271,1.265,513,4.744,856,2.374,857,3.075,1767,7.092,2071,6.029,3796,7.014,3797,9.221,3798,8.549,3799,8.549,3800,9.599,3801,8.549,3802,8.549,3803,7.014,3804,8.549,3805,7.014,3806,7.014,3807,7.014,3808,8.549,3809,7.014,3810,8.549,3811,7.014,3812,7.014]],["title/classes/Page.html",[0,0.279,711,2.598]],["body/classes/Page.html",[0,0.422,2,0.897,3,0.039,4,0.039,5,0.046,19,1.176,20,0.144,21,0.382,24,0.223,26,0.518,27,0.005,28,0.508,29,0.518,34,0.107,40,0.046,95,1.029,96,1.029,97,0.962,127,0.004,128,0.004,129,0.004,136,2.849,149,3.525,228,3.389,439,2.349,440,2.316,592,5.806,711,4.641,1782,4.94,3609,7.43,3813,7.585,3814,7.585,3815,9.536,3816,7.585,3817,8.96]],["title/classes/ParameterListItem.html",[0,0.279,231,3.054]],["body/classes/ParameterListItem.html",[0,0.53,2,0.554,3,0.024,4,0.024,5,0.029,8,0.486,11,1.664,17,0.465,19,1.309,20,0.155,21,0.412,24,0.138,26,0.32,27,0.005,28,0.507,29,0.32,32,0.753,34,0.09,40,0.061,41,0.903,70,1.087,85,1.055,95,1.272,96,1.272,97,1.189,127,0.004,128,0.003,129,0.002,132,2.768,134,3.996,135,5.6,136,3.626,137,3.766,138,2.756,139,4.128,140,4.128,141,4.128,142,2.69,143,2.179,146,1.016,147,3.4,148,1.913,149,2.179,150,0.958,151,5.161,152,2.223,153,1.493,154,2.933,155,2.948,156,2.948,157,2.948,158,2.617,159,2.948,160,4.346,161,2.854,162,2.948,163,2.768,164,4.128,165,2.128,166,3.249,167,2.768,168,4.128,169,1.608,170,2.389,171,2.248,172,2.757,173,2.018,174,2.854,175,2.948,176,2.617,177,3.996,178,3.996,179,3.013,180,2.948,181,2.183,182,2.948,183,2.854,184,2.854,185,2.939,186,2.948,187,2.948,188,2.948,189,1.982,190,2.55,191,2.69,192,2.948,193,2.948,194,2.948,195,2.948,196,2.768,197,3.051,198,2.948,199,1.158,200,2.69,201,2.854,202,2.095,203,2.854,204,2.487,205,2.55,206,1.947,207,2.948,208,2.948,209,3.091,210,2.948,211,2.948,212,2.948,213,4.128,214,2.948,215,2.948,216,2.948,217,2.948,218,3.996,219,1.393,220,1.393,221,2.854,222,2.854,223,2.854,224,2.179,225,1.947,226,2.948,227,2.948,228,2.183,229,2.948,230,2.617,231,4.611,232,2.948,233,2.948,394,4.206,3818,4.688]],["title/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.279,1417,3.538]],["body/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.45,2,0.265,3,0.012,4,0.012,5,0.014,7,0.869,8,0.232,9,1.694,12,2.827,13,1.518,14,0.466,15,0.085,17,0.944,18,0.622,20,0.133,21,0.237,23,3.626,24,0.181,26,0.379,27,0.005,28,0.413,29,0.326,31,0.236,34,0.106,35,0.196,36,2.131,37,1.001,38,1.353,40,0.047,41,0.308,43,1.021,47,1.662,49,1.185,55,0.964,63,3.483,64,2.806,66,1.021,68,1.041,72,3.494,73,2.131,76,2.262,77,1.694,80,1.694,81,4.077,82,1.001,84,2.806,85,1.001,86,3.839,87,3.552,88,2.154,101,1.085,103,2.689,104,3.19,110,1.916,111,1.085,113,0.647,122,1.728,127,0.001,128,0.002,129,0.001,138,2.21,150,0.458,165,2.239,169,2.112,170,2.02,171,1.274,172,1.735,179,1.563,181,2.173,189,0.947,190,1.218,204,2.53,206,1.544,209,1.518,228,2.45,249,2.415,251,0.862,268,1.271,269,2.579,271,0.404,291,1.456,297,2.048,302,1.271,331,0.745,379,1.688,385,0.568,403,0.815,414,0.907,420,0.631,451,0.828,454,0.694,470,0.779,511,4.343,518,4.113,523,1.063,537,2.019,540,2.623,544,0.622,545,0.622,546,0.639,553,1.063,556,1.16,558,4.583,559,1.324,570,2.623,578,2.216,592,2.264,625,1.16,647,1.515,665,2.339,666,2.422,667,3.106,698,2.091,703,4.011,725,1.662,727,3.226,729,3.226,739,3.278,744,2.389,747,1.973,768,1.16,769,1.188,856,1.033,891,1.631,892,1.063,894,0.791,947,2.131,991,1.251,1020,2.623,1045,0.884,1087,3.915,1088,1.58,1089,2.999,1090,4.908,1091,2.748,1092,1.655,1099,3.099,1100,1.58,1101,1.515,1102,1.459,1103,3.492,1104,1.515,1105,1.655,1106,5.83,1107,1.58,1108,1.16,1109,1.251,1110,4.102,1111,2.748,1112,2.748,1113,2.748,1114,3.915,1115,2.748,1116,1.655,1117,1.655,1118,1.655,1119,1.655,1120,1.323,1121,1.58,1122,2.748,1123,1.58,1124,1.655,1125,1.655,1126,3.523,1127,1.655,1128,1.655,1129,1.655,1130,1.655,1131,1.655,1132,1.655,1133,1.655,1134,1.655,1135,1.655,1136,1.655,1137,5.558,1138,1.655,1139,5.391,1140,1.655,1141,1.58,1142,1.251,1143,1.655,1144,1.655,1145,1.655,1146,1.655,1147,2.748,1148,1.655,1149,1.655,1150,4.908,1151,1.58,1152,1.655,1153,1.655,1154,1.655,1155,1.655,1156,1.655,1157,1.655,1158,1.655,1159,1.655,1160,3.106,1161,1.285,1162,1.655,1163,1.323,1164,1.655,1165,5.199,1166,5.442,1167,2.748,1168,4.55,1169,1.655,1170,3.523,1171,1.655,1172,2.748,1173,1.655,1174,4.102,1175,2.748,1176,1.655,1177,1.655,1178,1.655,1179,1.655,1180,1.655,1181,1.655,1182,2.748,1183,1.655,1184,2.748,1185,2.748,1186,1.655,1187,1.655,1188,2.623,1189,1.655,1190,2.748,1191,1.655,1192,1.655,1193,1.58,1194,3.106,1195,1.655,1196,1.515,1197,1.655,1198,1.655,1199,1.655,1200,2.748,1201,1.655,1202,3.523,1203,1.655,1204,5.195,1205,3.523,1206,3.523,1207,3.523,1208,3.523,1209,3.523,1210,3.363,1211,1.655,1212,1.655,1213,1.655,1214,1.655,1215,2.748,1216,2.623,1217,2.748,1218,1.58,1219,2.594,1220,2.623,1221,2.748,1222,2.023,1223,1.655,1224,3.523,1225,2.736,1226,2.748,1227,1.655,1228,2.748,1229,1.655,1230,2.623,1231,1.655,1232,2.748,1233,1.655,1234,1.655,1235,2.748,1236,2.748,1237,1.655,1238,1.655,1239,1.655,1240,1.655,1241,1.655,1242,1.655,1243,1.655,1244,2.748,1245,1.655,1246,1.655,1247,1.655,1248,1.655,1249,1.655,1250,1.655,1251,1.655,1252,0.947,1253,1.655,1254,1.655,1255,1.655,1256,1.655,1257,1.655,1258,1.655,1259,1.655,1260,4.55,1261,5.199,1262,1.655,1263,1.655,1264,3.915,1265,1.655,1266,1.58,1267,1.655,1268,1.655,1269,2.816,1270,1.655,1271,2.748,1272,1.655,1273,2.748,1274,1.655,1275,1.515,1276,1.655,1277,1.655,1278,1.655,1279,1.655,1280,1.655,1281,1.655,1282,1.515,1283,1.655,1284,2.339,1285,1.655,1286,1.655,1287,1.655,1288,1.655,1289,1.655,1290,1.655,1291,1.655,1292,1.655,1293,1.655,1294,1.655,1295,1.655,1296,1.655,1297,1.655,1298,1.655,1299,2.748,1300,1.655,1301,1.655,1302,3.523,1303,2.748,1304,1.655,1305,1.655,1306,2.748,1307,2.748,1308,1.655,1309,1.655,1310,1.655,1311,1.655,1312,1.655,1313,1.655,1314,1.655,1315,3.523,1316,2.748,1317,1.58,1318,1.655,1319,1.655,1320,1.655,1321,1.515,1322,1.655,1323,1.655,1324,1.655,1325,1.655,1326,1.655,1327,1.655,1328,2.623,1329,1.655,1330,1.655,1331,1.655,1332,2.748,1333,2.748,1334,1.655,1335,1.655,1336,1.655,1337,1.655,1338,1.655,1339,1.655,1340,1.655,1341,1.655,1342,1.655,1343,1.655,1344,1.655,1345,1.409,1346,1.655,1347,3.523,1348,1.655,1349,2.748,1350,1.655,1351,1.655,1352,1.655,1353,1.655,1354,1.655,1355,1.655,1356,1.655,1357,1.655,1358,1.655,1359,1.655,1360,1.58,1361,1.655,1362,1.655,1363,1.655,1364,1.655,1365,1.655,1366,1.655,1367,1.655,1368,1.655,1369,1.655,1370,1.655,1371,1.655,1372,1.655,1373,1.655,1374,1.655,1375,1.655,1376,1.655,1377,1.218,1378,2.31,1379,3.523,1380,2.736,1381,2.748,1382,1.655,1383,1.655,1384,1.251,1385,1.655,1386,1.655,1387,1.58,1388,1.655,1389,1.655,1390,1.655,1391,1.188,1392,1.655,1393,3.523,1394,1.655,1395,4.55,1396,1.655,1397,4.963,1398,1.655,1399,1.655,1400,1.655,1401,3.226,1402,1.58,1403,1.655,1404,1.58,1405,1.655,1406,2.748,1407,2.623,1408,1.694,1409,1.655,1410,1.58,1411,1.655,1412,1.655,1413,3.363,1414,2.816,1415,2.748,1416,2.748,1417,2.623,1418,3.523,1419,1.655,1420,2.748,1421,1.655,1422,1.459,1423,1.655,1424,1.655,1425,1.655,1426,1.655,1427,1.655,1428,1.655,1429,1.655,1430,1.655,1431,2.748,1432,1.655,1433,1.655,1434,1.655,1435,1.655,1436,1.655,1598,3.086,1603,1.859,3372,2.01,3376,2.01,3819,2.24,3820,2.24,3821,2.24,3822,2.24,3823,2.24]],["title/classes/PatchSettings.html",[0,0.279,1645,2.878]],["body/classes/PatchSettings.html",[0,0.538,2,0.673,3,0.029,4,0.029,5,0.035,8,1.03,14,0.958,15,0.217,16,0.445,17,0.743,18,1.659,19,1.224,20,0.195,21,0.243,22,1.481,24,0.246,26,0.389,27,0.005,28,0.381,29,0.389,31,0.6,32,0.522,34,0.068,35,0.498,40,0.061,41,0.783,49,1.813,60,1.758,83,1.689,95,1.287,96,1.287,97,1.203,113,1.312,127,0.003,128,0.003,129,0.003,199,1.407,405,2.42,408,2.166,413,1.916,414,1.389,415,1.443,416,1.624,417,1.624,420,1.603,421,1.763,434,2.206,698,4.537,1645,5.103,2902,4.803,2903,3.466,3104,3.581,3107,3.851,3108,4.943,3109,4.943,3110,5.452,3111,4.943,3112,4.943,3113,3.851,3114,3.851,3115,3.851,3116,5.067,3117,3.708,3118,3.851,3119,3.851,3120,3.708,3824,7.49,3825,5.694]],["title/classes/PatchSettingsFailure.html",[0,0.279,3112,2.962]],["body/classes/PatchSettingsFailure.html",[0,0.538,2,0.673,3,0.029,4,0.029,5,0.035,8,1.03,14,0.958,15,0.217,16,0.445,17,0.743,18,1.659,19,1.224,20,0.195,21,0.243,22,1.481,24,0.246,26,0.389,27,0.005,28,0.381,29,0.389,31,0.6,32,0.522,34,0.068,35,0.498,40,0.061,41,0.783,49,1.813,60,1.758,83,1.689,95,1.287,96,1.287,97,1.203,113,1.312,127,0.003,128,0.003,129,0.003,199,1.407,405,2.42,408,2.166,413,1.916,414,1.389,415,1.443,416,1.624,417,1.624,420,1.603,421,1.763,434,2.206,698,4.537,1645,4.803,2902,4.803,2903,3.466,3104,3.581,3107,3.851,3108,4.943,3109,4.943,3110,5.452,3111,4.943,3112,5.252,3113,3.851,3114,3.851,3115,3.851,3116,3.851,3117,3.708,3118,5.067,3119,3.851,3120,3.708,3826,7.49,3827,5.694]],["title/classes/PatchSettingsSuccess.html",[0,0.279,3111,2.962]],["body/classes/PatchSettingsSuccess.html",[0,0.538,2,0.673,3,0.029,4,0.029,5,0.035,8,1.03,14,0.958,15,0.217,16,0.445,17,0.743,18,1.659,19,1.224,20,0.195,21,0.243,22,1.481,24,0.246,26,0.389,27,0.005,28,0.381,29,0.389,31,0.6,32,0.522,34,0.068,35,0.498,40,0.061,41,0.783,49,1.813,60,1.758,83,1.689,95,1.287,96,1.287,97,1.203,113,1.312,127,0.003,128,0.003,129,0.003,199,1.407,405,2.42,408,2.166,413,1.916,414,1.389,415,1.443,416,1.624,417,1.624,420,1.603,421,1.763,434,2.206,698,4.537,1645,4.803,2902,4.803,2903,3.466,3104,3.581,3107,3.851,3108,4.943,3109,4.943,3110,5.452,3111,5.252,3112,4.943,3113,3.851,3114,3.851,3115,3.851,3116,3.851,3117,3.708,3118,3.851,3119,5.067,3120,3.708,3828,7.49,3829,5.694]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.279,23,2.379]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.542,1,3.292,2,0.474,3,0.021,4,0.021,5,0.024,6,2.076,7,1.555,8,1.049,9,3.87,10,1.056,11,1.016,12,3.23,13,2.832,14,0.943,15,0.153,16,0.348,17,0.985,18,1.359,19,1.191,20,0.191,21,0.25,23,3.292,24,0.258,26,0.274,27,0.005,28,0.268,29,0.555,33,2.18,34,0.083,35,0.35,36,3.795,37,1.791,38,2.135,39,1.791,40,0.06,41,0.551,42,2.028,43,3.162,44,1.098,45,2.119,46,3.435,47,2.622,48,3.682,49,2.971,50,4.655,51,3.956,52,3.435,53,2.126,54,3.361,55,2.525,56,3.361,57,3.229,58,3.435,59,3.435,60,1.629,61,3.435,62,2.126,63,3.162,64,3.48,65,3.512,66,1.826,67,2.126,68,1.862,69,1.725,70,0.929,71,2.18,72,2.783,73,1.056,74,2.126,75,2.126,76,1.901,77,3.162,78,2.126,79,2.126,80,3.162,81,3.777,82,1.791,83,1.447,84,3.48,85,1.015,86,3.704,87,3.778,88,2.963,89,2.18,90,2.18,91,3.191,92,3.112,93,1.817,94,3.112,95,1.354,96,1.354,97,1.266,98,2.18,99,2.18,100,2.126,101,1.941,102,2.18,103,1.941,104,1.581,105,2.126,106,2.076,107,3.039,108,2.126,109,2.904,110,1.293,111,1.941,112,2.126,113,0.544,114,2.18,115,2.126,116,2.18,117,2.126,118,1.481,119,2.18,120,2.18,121,2.18,122,2.726,123,2.18,124,2.18,125,2.18,126,2.076,127,0.002,128,0.003,129,0.002,145,3.039,1438,5.951,1440,5.951,3830,4.007,3831,4.007,3832,4.007,3833,4.007,3834,4.007,3835,4.007,3836,4.007,3837,4.007]],["title/classes/Process.html",[0,0.279,166,2.483]],["body/classes/Process.html",[0,0.53,2,0.556,3,0.024,4,0.024,5,0.029,8,0.488,11,1.667,17,0.466,19,1.309,20,0.156,21,0.412,24,0.138,26,0.321,27,0.005,28,0.508,29,0.321,32,0.603,34,0.09,40,0.061,41,0.904,70,1.09,85,1.049,95,1.273,96,1.273,97,1.19,127,0.004,128,0.003,129,0.002,132,2.776,134,4.004,135,5.543,136,3.525,137,3.774,138,2.758,139,4.137,140,4.137,141,4.137,142,2.698,143,2.185,145,2.435,146,1.018,147,3.407,148,1.919,149,2.185,150,0.961,151,5.636,152,2.23,153,1.498,154,2.939,155,2.957,156,2.957,157,2.957,158,2.625,159,2.957,160,4.353,161,2.862,162,2.957,163,2.776,164,4.137,165,2.131,166,3.755,167,2.776,168,4.137,169,1.61,170,2.394,171,2.253,172,2.761,173,2.024,174,2.862,175,4.137,176,2.625,177,4.004,178,4.004,179,3.015,180,2.957,181,2.186,182,2.957,183,2.862,184,2.862,185,2.943,186,2.957,187,2.957,188,2.957,189,1.987,190,2.557,191,2.698,192,2.957,193,2.957,194,2.957,195,2.957,196,2.776,197,3.057,198,2.957,199,1.161,200,2.698,201,2.862,202,2.101,203,2.862,204,2.494,205,2.557,206,1.952,207,2.957,208,2.957,209,3.096,210,2.957,211,2.957,212,2.957,213,4.137,214,2.957,215,2.957,216,2.957,217,2.957,218,4.004,219,1.397,220,1.397,221,2.862,222,2.862,223,2.862,224,2.185,225,1.952,226,2.957,227,2.957,228,2.187,229,2.957,230,2.625,231,4.004,232,2.957,233,2.957,3838,4.702,3839,4.702]],["title/classes/RefreshTranslation.html",[0,0.279,3840,3.267]],["body/classes/RefreshTranslation.html",[0,0.537,2,0.776,3,0.034,4,0.034,5,0.04,8,1.037,10,2.161,14,0.962,15,0.25,16,0.487,18,1.496,19,1.232,20,0.191,24,0.193,27,0.005,31,0.691,32,0.602,34,0.098,35,0.573,40,0.061,41,0.902,83,1.593,85,0.67,113,1.113,127,0.003,128,0.004,129,0.003,136,3.626,150,1.676,152,3.111,476,2.723,477,2.587,574,3.763,728,4.125,1453,3.479,1463,5.897,2909,4.436,3840,6.107,3841,4.436,3842,6.059,3843,6.558,3844,4.271,3845,5.448,3846,5.448,3847,4.625,3848,5.448,3849,4.625,3850,5.448,3851,4.625,3852,4.625,3853,4.845,3854,4.436,3855,4.845,3856,4.845,3857,4.436,3858,4.845,3859,4.271]],["title/classes/RejectLogIn.html",[0,0.279,52,2.483]],["body/classes/RejectLogIn.html",[0,0.546,1,3.379,2,0.496,3,0.022,4,0.022,5,0.026,6,2.173,7,1.628,8,1.061,9,4.054,10,1.105,11,1.063,12,3.244,13,2.907,14,0.959,15,0.16,16,0.36,17,0.882,18,1.487,19,1.219,20,0.192,21,0.259,22,1.091,23,2.877,24,0.209,26,0.286,27,0.005,28,0.281,29,0.286,31,0.442,32,0.385,33,2.282,34,0.085,35,0.367,36,3.183,37,1.875,38,2.207,39,1.875,40,0.061,41,0.577,42,2.123,43,3.246,44,1.15,45,2.176,46,3.526,47,2.71,48,3.779,49,3.003,50,4.721,51,4.043,52,3.863,53,2.226,54,3.451,55,2.611,56,3.451,57,3.299,58,3.526,59,3.526,60,1.424,61,3.526,62,2.226,63,3.246,64,3.556,65,3.605,66,1.911,67,2.226,68,1.95,69,1.806,70,0.972,71,2.282,72,2.877,73,1.105,74,2.226,75,2.226,76,1.99,77,3.246,78,2.226,79,2.226,80,3.246,81,3.066,82,1.875,83,1.474,84,1.911,85,0.846,86,1.911,87,1.95,88,1.628,89,2.282,90,2.282,91,3.299,92,3.218,93,1.878,94,3.218,95,1.363,96,1.363,97,1.274,98,2.282,99,2.282,100,2.226,101,2.032,102,2.282,103,2.032,104,1.655,105,2.226,106,2.173,107,3.141,108,2.226,109,3.526,110,1.57,111,2.938,112,3.218,113,0.569,114,2.282,115,2.226,116,2.282,117,2.226,118,1.551,119,2.282,120,2.282,121,2.282,122,2.819,123,2.282,124,2.282,125,2.282,126,2.173,127,0.002,128,0.003,129,0.002,434,1.877,3860,6.065,3861,4.195]],["title/classes/RemoveLightCard.html",[0,0.279,460,2.242]],["body/classes/RemoveLightCard.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.43,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,2.863,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,3862,5.91,3863,4.048]],["title/components/ResizableComponent.html",[234,1,372,1.718]],["body/components/ResizableComponent.html",[0,0.29,3,0.027,4,0.036,5,0.043,14,0.69,15,0.199,16,0.419,17,0.517,20,0.152,21,0.342,24,0.252,27,0.005,28,0.537,34,0.062,40,0.032,44,1.429,73,1.374,127,0.002,128,0.003,129,0.002,138,2.042,146,1.093,165,1.239,179,1.708,206,2.165,219,1.549,220,2.098,234,1.596,235,1.785,236,2.348,237,1.84,238,2.244,239,1.868,240,1.868,243,1.759,244,3.601,245,3.217,247,2.492,251,1.637,268,1.193,269,1.467,271,0.94,285,1.868,286,1.84,287,1.868,288,1.868,289,1.868,290,1.868,291,1.592,292,1.66,293,1.868,294,1.868,295,1.868,296,1.812,297,1.733,298,1.84,299,1.868,300,1.868,301,1.868,302,1.193,303,1.868,304,1.614,305,2.531,306,2.492,307,1.684,308,3.076,309,1.868,310,1.868,311,1.785,312,1.868,313,1.785,314,2.48,315,2.531,316,1.785,317,2.531,318,1.785,319,1.868,320,1.759,321,1.868,322,1.785,323,1.868,324,3.076,325,1.785,326,1.868,327,1.733,328,2.531,329,1.785,330,1.759,331,1.733,332,1.84,333,1.868,334,1.785,335,2.492,336,1.868,337,1.812,338,1.708,339,2.531,340,1.785,341,1.868,342,3.076,343,1.733,344,1.868,345,1.785,346,1.785,347,1.84,348,1.759,349,1.868,350,1.785,351,1.785,352,1.868,353,1.759,354,1.868,355,1.785,356,1.868,357,1.812,358,1.785,359,1.759,360,1.868,361,1.785,362,1.528,363,1.868,364,1.785,365,2.492,366,1.785,367,2.87,368,1.785,369,1.868,370,1.785,371,1.868,372,2.94,373,1.868,374,1.733,375,1.785,376,1.759,377,1.785,378,1.785,379,1.936,380,1.785,381,1.868,382,1.785,383,1.785,384,1.785,385,1.321,386,1.759,387,1.759,388,1.868,389,1.759,390,1.868,391,1.759,392,1.84,393,1.868,467,2.203,522,4.061,528,4.061,593,4.17,947,3.156,1045,2.056,1694,5.502,1702,4.98,1703,6.24,1714,4.061,1723,4.677,1724,4.677,1726,4.677,1744,4.677,1767,4.325,1983,6.644,1984,6.688,2092,3.526,2130,4.677,2661,6.644,3864,5.212,3865,8.584,3866,8.009,3867,7.062,3868,7.062,3869,5.212,3870,5.212,3871,5.212,3872,5.212,3873,5.212,3874,5.212,3875,5.212,3876,5.212,3877,7.062,3878,8.009,3879,5.212,3880,5.212,3881,5.212,3882,5.212,3883,5.212,3884,5.212,3885,5.212,3886,5.212,3887,5.212,3888,5.212,3889,5.212,3890,5.212]],["title/classes/RouterStateUrl.html",[0,0.279,761,3.908]],["body/classes/RouterStateUrl.html",[0,0.433,2,0.715,3,0.031,4,0.044,5,0.037,7,2.347,11,2.185,13,3.715,14,0.591,19,1.063,20,0.114,21,0.332,24,0.178,26,0.643,27,0.005,28,0.405,29,0.413,34,0.093,40,0.053,85,0.881,93,2.413,95,0.821,96,0.821,97,0.767,110,1.9,127,0.003,128,0.004,129,0.003,165,2.164,169,1.654,172,3.509,181,1.475,199,2.249,209,4.284,224,3.621,249,1.594,268,1.783,379,2.136,451,2.88,470,2.708,679,4.743,682,3.471,728,4.9,760,4.266,761,6.715,1030,4.9,1045,2.386,1219,4.238,1284,4.9,1378,3.774,2386,5.542,2392,4.713,2393,5.428,2394,7.552,2397,5.428,2398,6.991,2400,5.428,2401,7.552,2403,5.428,2404,5.428,2405,5.428,2406,8.653,2407,5.428,2408,6.464,2409,6.991,2410,8.001,2411,6.991,2412,6.991,2413,7.552,2414,6.991,2415,6.991,2416,6.991,2417,6.991,2418,6.991,2419,5.428,2420,5.428,2421,5.428,2422,5.428,2423,5.428,2424,5.428,2425,5.428,3891,6.049,3892,6.049]],["title/classes/SelectArchivedLightCard.html",[0,0.279,1032,3.054]],["body/classes/SelectArchivedLightCard.html",[0,0.531,2,0.688,3,0.03,4,0.03,5,0.036,8,1.023,10,2.002,14,0.949,15,0.222,16,0.451,17,0.754,18,1.666,19,1.216,20,0.195,21,0.248,22,1.514,24,0.249,26,0.397,27,0.005,28,0.39,29,0.397,31,0.613,32,0.534,34,0.101,35,0.509,40,0.06,41,0.8,83,1.699,85,0.595,95,1.319,96,1.319,97,1.232,113,1.148,127,0.004,128,0.004,129,0.003,146,1.176,150,1.553,209,2.375,228,1.935,302,1.332,314,2.955,385,1.475,410,3.935,413,1.936,414,1.419,415,1.475,416,1.66,417,1.66,434,2.229,438,1.753,439,1.802,440,1.777,454,1.802,456,2.221,485,2.334,531,3.339,711,4.646,866,4.996,881,3.165,895,3.79,896,5.151,897,4.996,901,3.66,902,5.151,1026,3.79,1029,4.104,1030,5.321,1031,3.79,1032,5.461,1033,4.104,1034,4.104,1035,4.104,1036,3.936,1037,4.104,1038,5.358,1039,3.936,3893,7.598,3894,5.819]],["title/classes/SelectLightCard.html",[0,0.279,453,2.242]],["body/classes/SelectLightCard.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.43,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,2.863,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,1.961,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,3895,5.91,3896,4.048]],["title/classes/SelectMenuLink.html",[0,0.279,2385,2.878]],["body/classes/SelectMenuLink.html",[0,0.52,2,0.589,3,0.026,4,0.026,5,0.03,7,1.931,8,1.04,14,0.929,15,0.19,16,0.406,17,0.679,18,1.674,19,1.191,20,0.192,21,0.292,22,1.295,24,0.23,26,0.603,27,0.005,28,0.333,29,0.34,31,0.524,32,0.457,34,0.082,35,0.435,40,0.059,41,0.684,60,1.606,69,2.945,83,1.624,85,0.861,95,1.268,96,1.268,97,1.185,113,1.291,127,0.002,128,0.003,129,0.002,153,2.18,154,3.058,171,2.884,172,2.49,173,2.945,199,1.23,272,1.655,362,3.066,405,2.261,408,1.439,413,1.79,414,1.214,415,1.262,420,1.401,421,1.541,434,2.061,454,2.421,470,2.927,537,1.876,800,4.166,1219,3.722,1225,2.856,1384,3.82,1520,4.457,1556,4.304,1561,4.166,1573,4.457,2281,2.707,2349,4.457,2372,5.093,2381,5.484,2382,4.457,2383,5.234,2385,4.831,2386,4.166,2387,4.457,2388,5.374,3080,3.131,3083,3.367,3084,2.939,3085,4.487,3086,4.366,3087,4.618,3088,4.618,3089,4.618,3090,3.367,3091,3.367,3092,3.367,3093,4.629,3094,4.629,3095,4.457,3096,5.29,3097,5.29,3098,4.629,3099,3.367,3100,3.367,3101,3.367,3102,3.367,3103,3.242,3897,6.843,3898,4.978]],["title/classes/SelectMenuLinkFailure.html",[0,0.279,3089,2.962]],["body/classes/SelectMenuLinkFailure.html",[0,0.522,2,0.6,3,0.026,4,0.026,5,0.031,7,1.968,8,1.043,14,0.934,15,0.193,16,0.412,17,0.688,18,1.679,19,1.196,20,0.192,21,0.296,22,1.32,24,0.232,26,0.607,27,0.005,28,0.34,29,0.346,31,0.534,32,0.465,34,0.083,35,0.443,40,0.059,41,0.698,60,1.627,69,2.184,83,1.633,85,0.868,95,1.274,96,1.274,97,1.191,113,1.316,127,0.002,128,0.003,129,0.002,153,1.616,154,2.267,171,2.374,172,2.523,173,2.984,199,1.253,272,1.687,362,3.047,405,2.284,408,1.467,413,1.808,414,1.237,415,1.286,420,1.428,421,1.571,434,2.081,454,2.446,470,2.951,537,1.391,800,3.089,1219,4.296,1225,2.911,1384,2.832,1520,3.304,1556,3.191,1561,3.089,1573,3.304,2281,2.76,2349,3.304,2372,5.528,2381,5.528,2382,3.304,2383,5.099,2385,4.531,2386,3.089,2387,3.304,2388,5.168,3080,3.191,3083,3.432,3084,2.996,3085,4.531,3086,4.409,3087,4.664,3088,4.664,3089,5.013,3090,3.432,3091,3.432,3092,3.432,3093,3.432,3094,3.432,3095,3.304,3096,5.742,3097,5.742,3098,4.69,3099,3.432,3100,3.432,3101,4.69,3102,4.69,3103,3.304,3899,6.933,3900,5.073]],["title/classes/SelectMenuLinkSuccess.html",[0,0.279,3088,2.962]],["body/classes/SelectMenuLinkSuccess.html",[0,0.522,2,0.598,3,0.026,4,0.026,5,0.031,7,1.962,8,1.042,14,0.933,15,0.193,16,0.411,17,0.686,18,1.679,19,1.195,20,0.192,21,0.295,22,1.315,24,0.232,26,0.606,27,0.005,28,0.339,29,0.345,31,0.533,32,0.464,34,0.083,35,0.442,40,0.059,41,0.695,60,1.624,69,2.177,83,1.632,85,0.867,95,1.273,96,1.273,97,1.19,113,1.296,127,0.002,128,0.003,129,0.002,153,1.611,154,2.26,171,2.369,172,3.085,173,2.978,199,1.249,272,1.682,362,3.046,405,2.28,408,1.462,413,1.805,414,1.233,415,1.282,420,1.423,421,1.566,434,2.078,454,2.442,470,2.947,537,1.386,800,3.079,1219,4.289,1225,3.969,1384,2.823,1520,3.294,1556,3.181,1561,3.079,1573,3.294,2281,2.751,2349,3.294,2372,5.521,2381,5.521,2382,3.294,2383,5.259,2385,4.524,2386,3.079,2387,3.294,2388,4.8,3080,3.181,3083,3.421,3084,2.986,3085,4.524,3086,4.402,3087,4.656,3088,5.006,3089,4.656,3090,3.421,3091,3.421,3092,3.421,3093,3.421,3094,3.421,3095,3.294,3096,5.734,3097,5.734,3098,5.734,3099,4.679,3100,3.421,3101,3.421,3102,3.421,3103,3.294,3901,6.918,3902,5.057]],["title/classes/SendArchiveQuery.html",[0,0.279,866,2.962]],["body/classes/SendArchiveQuery.html",[0,0.531,2,0.688,3,0.03,4,0.03,5,0.036,8,1.023,10,2.002,14,0.949,15,0.222,16,0.451,17,0.754,18,1.666,19,1.216,20,0.195,21,0.248,22,1.514,24,0.249,26,0.397,27,0.005,28,0.39,29,0.397,31,0.613,32,0.534,34,0.101,35,0.509,40,0.06,41,0.8,83,1.699,85,0.595,95,1.319,96,1.319,97,1.232,113,1.148,127,0.004,128,0.004,129,0.003,146,1.176,150,1.553,209,2.375,228,1.935,302,1.332,314,2.955,385,1.475,410,3.935,413,1.936,414,1.419,415,1.475,416,1.66,417,1.66,434,2.229,438,1.753,439,1.802,440,1.777,454,1.802,456,2.221,485,2.334,531,3.339,711,4.646,866,5.297,881,3.165,895,3.79,896,5.151,897,4.996,901,3.66,902,5.151,1026,3.79,1029,4.104,1030,5.321,1031,3.79,1032,5.151,1033,4.104,1034,5.358,1035,4.104,1036,3.936,1037,4.104,1038,4.104,1039,3.936,3903,7.598,3904,5.819]],["title/modules/ServicesModule.html",[601,2.2,613,3.706]],["body/modules/ServicesModule.html",[0,0.316,3,0.029,4,0.039,5,0.046,17,0.564,21,0.243,24,0.167,27,0.005,29,0.511,34,0.124,40,0.035,57,2.404,73,1.499,113,0.772,127,0.003,128,0.003,129,0.003,169,1.207,181,1.387,205,5.158,224,3.478,251,1.318,268,1.302,271,1.025,275,2.945,276,5.103,277,5.103,285,2.038,286,2.007,287,2.038,288,2.038,289,2.038,290,2.038,291,1.737,292,1.811,293,2.038,294,2.038,295,2.038,296,1.977,297,1.891,298,2.007,299,2.038,300,2.038,301,2.038,302,1.302,303,2.038,304,1.761,365,2.007,476,2.362,516,7.006,518,5.294,557,5.103,574,3.263,601,2.494,602,4.201,603,2.878,604,3.263,605,3.462,606,4.94,607,3.017,613,7.851,616,4.42,617,3.462,619,3.093,621,4.55,625,2.945,626,4.707,629,3.358,674,4.201,675,4.431,846,3.577,861,6.176,914,5.6,933,3.462,947,2.541,1103,4.707,1104,3.847,1658,5.103,1894,5.294,1901,3.847,2071,6.687,2093,4.718,2095,4.718,2178,6.941,2180,6.941,2205,7.006,2224,5.103,2854,7.006,3905,5.103,3906,5.103,3907,7.006,3908,7.388,3909,7.006,3910,5.687,3911,5.687,3912,7.484,3913,7.484,3914,5.687,3915,5.687,3916,5.103,3917,5.687,3918,7.484]],["title/classes/SetCardDataTimeline.html",[0,0.279,3423,3.538]],["body/classes/SetCardDataTimeline.html",[0,0.48,2,0.842,3,0.037,4,0.037,5,0.044,8,1.001,14,0.906,15,0.272,16,0.512,17,0.855,18,1.551,19,1.19,20,0.197,21,0.304,22,1.852,24,0.273,26,0.486,27,0.005,28,0.477,29,0.486,31,0.75,32,0.653,34,0.085,35,0.622,40,0.059,41,0.979,44,1.951,83,1.536,127,0.003,128,0.004,129,0.003,146,1.102,338,3.042,434,2.446,451,2.632,2686,3.777,3417,6.545,3418,5.547,3421,6.388,3422,5.906,3423,6.804,3424,6.388,3425,7.74,3426,6.388,3427,5.906,3919,8.626,3920,7.119]],["title/components/SettingsComponent.html",[234,1,374,1.668]],["body/components/SettingsComponent.html",[0,0.291,3,0.027,4,0.027,5,0.032,7,2.029,14,0.691,15,0.199,16,0.42,20,0.182,21,0.223,24,0.278,26,0.357,27,0.005,28,0.576,29,0.357,34,0.107,35,0.457,40,0.032,44,1.433,110,2.04,127,0.002,128,0.003,129,0.002,138,2.784,146,1.095,158,4.479,219,1.554,220,2.103,234,1.599,235,1.791,236,2.354,237,1.846,239,1.874,240,1.874,242,2.919,243,1.765,244,3.601,247,2.498,251,1.641,252,3.228,268,1.197,269,1.472,271,0.943,304,1.619,305,2.536,306,2.498,307,1.69,308,3.08,309,1.874,310,1.874,311,1.791,312,1.874,313,1.791,314,2.484,315,2.536,316,1.791,317,2.536,318,1.791,319,1.874,320,1.765,321,1.874,322,1.791,323,1.874,324,3.08,325,1.791,326,1.874,327,1.739,328,2.536,329,1.791,330,1.765,331,1.739,332,1.846,333,1.874,334,1.791,335,2.498,336,1.874,337,1.818,338,1.714,339,2.536,340,1.791,341,1.874,342,3.08,343,1.739,344,1.874,345,1.791,346,1.791,347,2.498,348,1.765,349,1.874,350,1.791,351,1.791,352,1.874,353,1.765,354,1.874,355,1.791,356,1.874,357,1.818,358,1.791,359,1.765,360,1.874,361,1.791,362,1.533,363,1.874,364,1.791,365,2.498,366,1.791,367,2.875,368,1.791,369,1.874,370,1.791,371,1.874,372,1.791,373,1.874,374,2.858,375,1.791,376,2.388,377,1.791,378,1.791,379,1.94,380,1.791,381,1.874,382,1.791,383,1.791,384,1.791,385,1.326,386,1.765,387,1.765,388,1.874,389,1.765,390,1.874,391,1.765,392,1.846,393,1.874,515,1.846,537,2.675,544,1.453,545,1.453,546,1.492,553,2.481,556,2.709,559,1.453,698,3.103,744,2.029,2794,3.184,3051,6.656,3054,4.339,3055,4.339,3717,5.514,3857,3.538,3921,4.693,3922,7.198,3923,7.198,3924,7.198,3925,7.077,3926,5.23,3927,5.23,3928,7.132,3929,5.23,3930,5.23,3931,5.23,3932,4.693,3933,4.693,3934,4.693,3935,4.693,3936,4.693,3937,4.693,3938,4.693,3939,4.693,3940,4.693,3941,4.339,3942,4.693,3943,4.693,3944,4.693]],["title/injectables/SettingsEffects.html",[816,4.162,856,1.393]],["body/injectables/SettingsEffects.html",[0,0.322,1,2.75,3,0.03,4,0.03,5,0.035,8,0.602,15,0.221,16,0.45,20,0.17,21,0.247,24,0.263,26,0.396,27,0.005,28,0.388,29,0.396,31,0.89,32,0.775,34,0.12,35,0.507,40,0.035,70,2.251,95,0.787,96,0.787,97,0.735,104,3.666,110,2.101,127,0.003,128,0.004,129,0.003,150,1.185,169,1.609,181,2.184,202,4.34,249,1.997,271,1.045,405,2.192,515,2.046,537,2.662,544,1.61,545,1.61,546,1.654,559,1.61,698,3.927,816,6.289,856,2.105,857,2.542,863,6.617,874,5.139,876,4.594,888,3.154,889,3.003,891,2.542,892,2.75,894,2.046,1252,3.204,1408,2.642,1460,5.128,1482,4.349,1504,6.059,1645,5.139,1646,4.81,1926,5.346,1930,6.316,1938,4.81,1939,4.81,1940,4.81,2031,5.906,2058,3.327,2059,4.283,2217,6.802,2218,6.802,2902,3.327,2903,3.53,3108,5.63,3109,3.424,3111,3.424,3112,3.424,3907,6.617,3916,5.202,3945,5.798,3946,8.445,3947,5.798,3948,7.58,3949,7.58,3950,7.58,3951,7.58,3952,7.58,3953,5.798,3954,7.58,3955,5.798,3956,7.58,3957,7.58,3958,7.58,3959,7.58,3960,7.58,3961,5.798,3962,5.202]],["title/interfaces/SettingsInputs.html",[744,1.946,3928,4.162]],["body/interfaces/SettingsInputs.html",[0,0.365,3,0.034,4,0.034,5,0.04,7,3.639,14,0.641,15,0.25,16,0.487,20,0.191,27,0.005,34,0.115,35,0.574,40,0.04,110,1.974,127,0.003,128,0.004,129,0.003,138,3.079,158,3.667,234,1.636,242,2.987,244,2.216,247,2.318,252,2.467,271,1.184,347,3.311,374,2.184,376,3.166,537,2.647,544,1.824,545,1.824,546,1.874,553,3.115,556,3.402,559,1.824,698,2.88,744,2.548,745,3.572,2794,5.711,3051,5.449,3054,5.449,3055,5.449,3717,5.117,3857,6.346,3921,5.893,3922,5.893,3923,5.893,3924,5.893,3928,7.783,3932,5.893,3933,5.893,3934,5.893,3935,5.893,3936,5.893,3937,5.893,3938,5.893,3939,5.893,3940,5.893,3941,5.449,3942,8.418,3943,8.418,3944,8.418]],["title/modules/SettingsModule.html",[601,2.2,3963,3.908]],["body/modules/SettingsModule.html",[0,0.347,3,0.032,4,0.041,5,0.049,17,0.619,20,0.118,27,0.005,34,0.123,40,0.038,57,2.638,73,1.644,127,0.003,128,0.004,129,0.003,271,1.125,275,3.232,285,2.236,286,2.202,287,2.236,288,2.236,289,2.236,290,2.236,291,1.906,292,1.987,293,2.236,294,2.236,295,2.236,296,2.169,297,2.075,298,2.202,299,2.236,300,2.236,301,2.236,302,1.428,303,2.236,304,1.932,322,3.33,346,3.33,358,3.33,366,3.33,374,3.233,377,3.33,382,3.33,383,2.995,601,2.736,603,3.158,604,3.58,605,5.325,606,3.685,607,3.31,616,4.693,617,3.799,619,4.323,621,4.323,626,4.999,629,3.685,630,6.192,631,6.192,632,3.158,636,4.221,641,5.872,642,3.934,643,3.088,698,2.736,1606,4.61,2746,5.599,2772,5.177,2773,6.803,2954,7.132,3492,5.599,3715,5.177,3963,8.217,3964,5.599,3965,5.599,3966,5.599,3967,7.183,3968,6.24,3969,5.599,3970,6.24,3971,6.24,3972,6.24,3973,6.24,3974,6.24,3975,7.132,3976,6.24,3977,5.599]],["title/modules/SettingsRoutingModule.html",[601,2.2,3967,3.706]],["body/modules/SettingsRoutingModule.html",[0,0.411,3,0.038,4,0.046,5,0.054,17,0.733,27,0.005,34,0.113,40,0.045,73,1.949,127,0.003,128,0.004,129,0.003,165,1.758,234,1.474,271,1.333,285,2.65,286,2.61,287,2.65,288,2.65,289,2.65,290,2.65,291,2.259,292,2.356,293,2.65,294,2.65,295,2.65,296,2.571,297,2.459,298,2.61,299,2.65,300,2.65,301,2.65,302,1.693,303,2.65,374,2.935,603,3.743,607,3.924,619,4.023,621,4.801,677,5.464,680,6.521,681,6.145,682,4.243,687,5.464,691,5.762,692,5.762,1086,5.762,3967,6.521,3969,6.636,3978,7.396]],["title/injectables/SettingsService.html",[856,1.393,3907,3.706]],["body/injectables/SettingsService.html",[0,0.38,3,0.035,4,0.035,5,0.042,15,0.261,16,0.5,20,0.18,21,0.292,24,0.287,26,0.574,27,0.005,28,0.564,29,0.574,34,0.12,35,0.597,40,0.042,85,0.972,110,2.221,127,0.003,128,0.004,129,0.003,169,1.785,249,2.656,251,1.95,268,1.925,271,1.232,537,2.677,544,1.898,545,1.898,546,1.949,559,1.898,625,3.539,698,3.689,768,3.539,769,3.625,856,2.337,857,2.996,1099,5.553,1120,4.034,1653,6.13,2070,4.622,3907,6.215,3979,6.832,3980,9.115,3981,9.115,3982,9.512,3983,8.412,3984,8.412,3985,6.832,3986,6.832,3987,6.832,3988,6.832,3989,6.832,3990,6.13,3991,6.832,3992,6.832,3993,6.832,3994,6.832]],["title/interfaces/SettingsState.html",[744,1.946,755,4.162]],["body/interfaces/SettingsState.html",[3,0.039,4,0.039,5,0.046,15,0.287,16,0.53,20,0.186,27,0.005,40,0.055,85,0.972,113,1.362,127,0.003,128,0.004,129,0.003,138,2.943,165,1.792,170,2.743,179,2.926,574,5.759,584,6.537,698,4.311,744,2.924,745,4.099,755,7.891,3117,4.909,3995,7.537,3996,7.537]],["title/classes/State.html",[0,0.279,11,1.271]],["body/classes/State.html",[0,0.53,2,0.553,3,0.024,4,0.024,5,0.029,8,0.486,11,1.918,17,0.464,19,1.309,20,0.155,21,0.412,24,0.137,26,0.319,27,0.005,28,0.507,29,0.319,32,0.601,34,0.09,40,0.061,41,0.901,70,1.754,85,1.049,95,1.272,96,1.272,97,1.188,127,0.004,128,0.003,129,0.002,132,2.763,134,3.991,135,5.538,136,3.521,137,3.761,138,2.754,139,4.123,140,4.123,141,4.123,142,2.684,143,2.174,145,3.395,146,1.014,147,4.247,148,1.909,149,2.174,150,0.956,151,5.627,152,2.219,153,1.49,154,2.929,155,2.942,156,2.942,157,2.942,158,2.612,159,2.942,160,4.341,161,2.848,162,2.942,163,2.763,164,4.123,165,2.127,166,3.244,167,2.763,168,4.123,169,1.606,170,2.386,171,2.245,172,2.754,173,2.014,174,2.848,175,2.942,176,3.66,177,3.991,178,3.991,179,3.011,180,2.942,181,2.182,182,2.942,183,2.848,184,2.848,185,2.935,186,2.942,187,2.942,188,2.942,189,1.978,190,2.545,191,2.684,192,2.942,193,2.942,194,2.942,195,2.942,196,2.763,197,3.046,198,2.942,199,1.156,200,2.684,201,2.848,202,2.091,203,2.848,204,2.482,205,2.545,206,1.943,207,2.942,208,2.942,209,3.088,210,2.942,211,2.942,212,2.942,213,4.123,214,2.942,215,2.942,216,2.942,217,2.942,218,3.991,219,1.39,220,1.39,221,2.848,222,2.848,223,2.848,224,2.174,225,1.943,226,2.942,227,2.942,228,2.18,229,2.942,230,2.612,231,3.991,232,2.942,233,2.942,3997,4.678,3998,4.678]],["title/modules/StateModule.html",[601,2.2,614,3.706]],["body/modules/StateModule.html",[0,0.357,3,0.033,4,0.042,5,0.049,9,2.923,15,0.245,17,0.636,24,0.188,27,0.005,34,0.121,35,0.707,40,0.039,57,2.712,73,1.691,110,1.783,127,0.003,128,0.004,129,0.003,169,1.362,224,3.76,251,1.487,268,1.469,271,1.157,275,3.324,285,2.299,286,2.265,287,2.299,288,2.299,289,2.299,290,2.299,291,1.96,292,2.044,293,2.299,294,2.299,295,2.299,296,2.231,297,2.134,298,2.265,299,2.299,300,2.299,301,2.299,302,1.469,303,2.299,304,1.987,335,2.265,601,2.814,603,3.248,604,3.682,605,4.925,606,4.777,607,3.404,614,7.345,616,4.777,617,3.907,619,4.4,621,4.819,626,5.088,629,3.789,674,4.741,675,5,679,3.907,760,5.705,762,5.758,768,4.967,769,3.404,831,5.758,832,5.758,835,5.758,836,7.259,889,3.324,1729,7.259,2178,7.351,2180,7.351,2392,6.903,2394,7.351,2401,6.712,2410,5.324,2413,5.324,2432,5.758,3999,5.758,4000,5.758,4001,6.417,4002,6.417,4003,6.417,4004,6.417,4005,6.417,4006,5.758,4007,8.09,4008,6.417,4009,6.417,4010,6.417,4011,6.417,4012,6.417,4013,6.417,4014,6.417,4015,6.417,4016,6.417,4017,6.417,4018,6.417,4019,6.417,4020,6.417]],["title/components/TagsFilterComponent.html",[234,1,375,1.718]],["body/components/TagsFilterComponent.html",[0,0.25,3,0.023,4,0.033,5,0.039,14,0.623,15,0.172,16,0.379,17,0.446,20,0.161,21,0.192,24,0.267,26,0.307,27,0.005,28,0.57,29,0.307,31,0.474,32,0.413,34,0.115,35,0.393,40,0.028,44,1.234,45,1.375,73,1.186,97,0.571,110,2.002,127,0.002,128,0.003,129,0.002,146,0.987,169,1.354,179,2.091,181,1.807,189,1.903,219,1.337,220,1.895,234,1.477,235,1.542,236,2.121,237,1.589,238,1.937,239,1.613,240,1.613,242,2.696,243,1.519,244,3.574,245,2.906,247,2.251,249,2.488,251,1.479,252,3.027,268,1.696,269,1.795,271,0.812,273,2.448,285,1.613,286,1.589,287,1.613,288,1.613,289,1.613,290,1.613,291,1.948,292,2.567,293,1.613,294,1.613,295,1.613,296,1.565,297,1.497,298,1.589,299,1.613,300,1.613,301,1.613,302,1.03,303,1.613,304,1.394,305,2.286,306,2.251,307,1.454,308,2.888,309,1.613,310,1.613,311,1.542,312,1.613,313,1.542,314,2.294,315,2.286,316,1.542,317,2.286,318,1.542,319,1.613,320,1.519,321,1.613,322,1.542,323,1.613,324,2.888,325,1.542,326,1.613,327,1.497,328,2.286,329,1.542,330,1.519,331,1.497,332,1.589,333,1.613,334,1.542,335,2.251,336,1.613,337,1.565,338,1.475,339,2.286,340,1.542,341,1.613,342,2.888,343,1.497,344,1.613,345,1.542,346,1.542,347,1.589,348,1.519,349,1.613,350,1.542,351,1.542,352,1.613,353,1.519,354,1.613,355,1.542,356,1.613,357,1.565,358,1.542,359,1.519,360,1.613,361,1.542,362,1.319,363,1.613,364,1.542,365,2.251,366,1.542,367,2.655,368,1.542,369,1.613,370,1.542,371,1.613,372,1.542,373,1.613,374,1.497,375,2.76,376,3.231,377,1.542,378,1.542,379,1.748,380,1.542,381,1.613,382,1.542,383,1.542,384,1.542,385,2.157,386,1.519,387,1.519,388,1.613,389,1.519,390,1.613,391,1.519,392,1.589,393,1.613,537,2.031,544,1.25,545,1.25,546,1.284,559,1.25,632,2.278,838,3.767,843,3.045,844,2.932,845,2.74,846,2.831,851,2.831,894,1.589,911,2.74,918,4.136,1108,2.331,1252,1.903,1422,2.932,1522,2.831,1608,4.375,1612,4.511,1617,4.76,1633,2.831,1649,3.507,1650,4.97,1651,3.325,1652,3.174,1669,3.507,1671,3.507,1673,3.507,1681,3.507,1682,3.507,1791,2.932,1981,6.858,2053,3.325,2476,3.325,2484,4.713,2496,4.039,2522,4.498,2828,3.045,2905,3.507,2952,8.33,2953,8.33,4021,6.648,4022,6.147,4023,7.409,4024,6.687,4025,4.501,4026,8.508,4027,6.379,4028,4.501,4029,4.501,4030,3.734,4031,3.734,4032,4.501,4033,6.379,4034,3.734,4035,3.734,4036,4.501,4037,3.734,4038,4.501,4039,4.501,4040,4.039,4041,3.734,4042,4.501,4043,4.501,4044,3.734,4045,4.501,4046,4.501,4047,4.501,4048,4.039,4049,3.734,4050,4.039,4051,4.039]],["title/components/TextSettingComponent.html",[234,1,377,1.718]],["body/components/TextSettingComponent.html",[0,0.226,3,0.021,4,0.021,5,0.025,14,0.579,15,0.155,16,0.352,20,0.183,21,0.173,24,0.299,26,0.602,27,0.005,28,0.627,29,0.602,31,0.624,32,0.783,34,0.098,35,0.355,40,0.025,44,1.114,85,0.786,110,1.881,127,0.002,128,0.003,129,0.002,138,2.468,142,2.333,146,0.917,165,1.41,169,1.485,179,1.333,181,1.707,197,1.89,219,2.429,220,1.761,225,2.906,234,1.395,235,1.392,236,1.972,237,1.435,239,1.457,240,1.457,242,2.547,243,1.372,244,3.553,247,2.092,249,2.25,251,1.374,252,2.628,253,3.373,254,2.935,268,2.195,269,2.403,271,0.733,291,1.811,292,1.295,304,1.259,305,2.125,306,2.092,307,1.314,308,2.756,309,1.457,310,1.457,311,1.392,312,1.457,313,1.392,314,2.167,315,2.125,316,1.392,317,2.125,318,1.392,319,1.457,320,1.372,321,1.457,322,3.456,323,2.125,324,2.756,325,1.392,326,1.457,327,1.352,328,2.125,329,1.392,330,1.372,331,1.352,332,1.435,333,1.457,334,1.392,335,2.092,336,1.457,337,1.413,338,1.333,339,2.125,340,1.392,341,1.457,342,2.756,343,1.352,344,1.457,345,1.392,346,1.392,347,1.435,348,1.372,349,1.457,350,1.392,351,1.392,352,1.457,353,1.372,354,1.457,355,1.392,356,1.457,357,1.413,358,1.392,359,1.372,360,1.457,361,1.392,362,1.192,363,1.457,364,1.392,365,2.092,366,1.392,367,2.508,368,1.392,369,1.457,370,1.392,371,1.457,372,1.392,373,1.457,374,1.352,375,1.392,376,1.372,377,2.634,378,1.392,379,1.625,380,1.392,381,1.457,382,1.392,383,1.392,384,1.392,385,1.031,386,1.372,387,1.372,388,1.457,389,1.372,390,1.457,391,1.372,392,1.435,393,1.457,515,1.435,545,1.129,546,1.16,632,2.058,918,4.294,926,2.557,1269,3.501,1391,3.145,1606,3.004,1607,3.168,1608,4.132,1609,5.767,1610,4.619,1611,4.181,1612,3.61,1613,6.826,1614,4.181,1615,6.216,1616,5.424,1617,4.132,1618,4.935,1619,5.424,1620,4.181,1621,4.181,1622,4.181,1625,3.648,1627,2.867,1629,2.867,1632,4.935,1633,5.143,1635,4.181,1639,4.935,1654,2.867,1954,3.61,1986,6.695,2486,5.806,2519,6.041,2522,2.867,2747,6.901,2748,6.279,2752,3.004,2753,3.004,2754,3.004,2759,3.004,2760,3.004,2761,3.004,2762,3.004,2763,3.004,2764,3.004,2765,3.004,2766,3.004,2767,3.004,2768,3.004,2769,3.004,2770,3.004,2771,3.004,2772,7.495,2773,3.004,2774,3.004,2778,4.619,2779,4.919,2780,4.919,3518,3.004,3519,3.373,3520,3.373,3523,3.648,3524,3.648,4052,9.034,4053,5.929,4054,4.066,4055,4.066,4056,4.066,4057,4.066,4058,4.066,4059,4.066,4060,4.066,4061,4.066,4062,4.066,4063,4.066]],["title/classes/Third.html",[0,0.279,153,1.598]],["body/classes/Third.html",[0,0.524,2,0.528,3,0.023,4,0.023,5,0.027,8,0.464,11,1.87,15,0.17,17,0.732,19,1.306,20,0.161,21,0.408,24,0.186,26,0.433,27,0.005,28,0.568,29,0.433,32,0.582,34,0.088,40,0.061,41,0.872,70,1.036,85,1.07,95,1.257,96,1.257,97,1.175,127,0.003,128,0.003,129,0.002,132,2.638,134,3.863,135,5.484,136,3.48,137,3.64,138,2.725,139,3.99,140,3.99,141,3.99,142,2.563,143,2.076,145,4.394,146,1.313,147,3.286,148,1.823,149,2.076,150,0.913,151,5.543,152,2.119,153,2.021,154,3.589,155,4.64,156,4.64,157,4.64,158,4.119,159,4.64,160,4.868,161,4.492,162,3.99,163,2.638,164,3.99,165,2.096,166,3.14,167,2.638,168,3.99,169,1.566,170,2.309,171,2.173,172,2.685,173,1.923,174,2.72,175,2.81,176,2.494,177,3.863,178,3.863,179,2.971,180,2.81,181,2.15,182,2.81,183,2.72,184,2.72,185,2.862,186,2.81,187,2.81,188,2.81,189,1.888,190,2.43,191,2.563,192,2.81,193,2.81,194,2.81,195,2.81,196,2.638,197,2.949,198,2.81,199,1.104,200,2.563,201,2.72,202,1.996,203,2.72,204,2.37,205,2.43,206,1.855,207,2.81,208,2.81,209,3.011,210,2.81,211,2.81,212,2.81,213,3.99,214,2.81,215,2.81,216,2.81,217,2.81,218,3.863,219,1.327,220,1.327,221,2.72,222,2.72,223,2.72,224,2.076,225,1.855,226,2.81,227,2.81,228,2.11,229,2.81,230,2.494,231,3.863,232,2.81,233,2.81,251,1.471,268,1.022,4064,6.345,4065,4.467,4066,4.467,4067,4.467]],["title/classes/ThirdActionAlreadyLoaded.html",[0,0.279,469,2.242]],["body/classes/ThirdActionAlreadyLoaded.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,2.783,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.036,456,3.274,457,1.774,458,3.152,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.152,467,1.743,468,1.808,469,3.459,470,1.433,471,3.152,472,1.955,473,3.152,474,1.916,475,3.152,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,1.997,483,1.997,484,1.997,485,1.654,486,1.997,487,1.997,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,1.997,497,2.901,498,1.997,499,1.997,500,1.997,501,1.916,4068,5.989]],["title/classes/ThirdActionAlreadyUpdated.html",[0,0.279,471,2.242]],["body/classes/ThirdActionAlreadyUpdated.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,2.783,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.036,456,3.274,457,1.774,458,3.152,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.152,467,1.743,468,1.808,469,3.152,470,1.433,471,3.459,472,1.955,473,3.152,474,1.916,475,3.152,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,1.997,483,1.997,484,1.997,485,1.654,486,1.997,487,1.997,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,1.997,497,1.997,498,2.901,499,1.997,500,1.997,501,1.916,4069,5.989]],["title/injectables/ThirdActionService.html",[205,2.729,856,1.393]],["body/injectables/ThirdActionService.html",[0,0.259,3,0.024,4,0.024,5,0.028,8,1.052,10,1.227,15,0.178,16,0.388,19,0.931,20,0.177,21,0.199,24,0.275,26,0.626,27,0.005,28,0.615,29,0.626,31,0.49,34,0.117,35,0.407,40,0.028,45,2.728,85,1.048,95,0.632,96,0.632,97,0.59,110,2.022,113,1.024,127,0.003,128,0.003,129,0.002,138,1.889,150,0.952,165,2.124,169,1.736,181,1.84,185,3.633,189,1.968,203,3.977,205,3.553,249,1.227,250,8.232,251,1.514,253,5.42,257,7.149,259,8.651,268,2.045,269,2.124,271,0.839,272,1.548,273,2.532,274,2.834,275,2.411,330,1.571,332,1.643,465,4.173,494,3.098,495,4.237,537,2.515,544,1.293,545,1.293,546,1.328,559,1.293,625,2.411,768,2.411,769,2.47,856,1.814,857,2.041,894,1.643,1099,4.987,1108,2.411,1282,3.149,1345,2.928,1377,2.532,1378,3.164,1380,3.748,1568,3.149,1569,2.928,2070,3.149,2190,3.627,2191,4.177,2266,3.863,2787,4.826,3490,4.177,4070,9.516,4071,4.656,4072,7.546,4073,6.532,4074,6.532,4075,6.532,4076,6.532,4077,6.532,4078,6.532,4079,9.516,4080,8.933,4081,4.656,4082,9.516,4083,6.532,4084,4.656,4085,6.532,4086,4.656,4087,4.656,4088,6.532,4089,4.656,4090,6.532,4091,4.656,4092,6.532,4093,4.656,4094,4.656,4095,4.656,4096,4.656,4097,4.656,4098,4.656,4099,6.532,4100,4.656,4101,8.181,4102,4.656,4103,8.616,4104,4.656,4105,4.656,4106,6.532,4107,6.532,4108,4.656,4109,6.532,4110,4.656,4111,4.656,4112,7.546,4113,4.656,4114,4.656,4115,4.656,4116,4.656,4117,4.656,4118,4.656,4119,4.656,4120,4.656,4121,4.656,4122,4.656,4123,4.656,4124,4.656,4125,4.656,4126,4.656,4127,4.656,4128,4.656]],["title/classes/ThirdMenu.html",[0,0.279,173,2.159]],["body/classes/ThirdMenu.html",[0,0.529,2,0.55,3,0.024,4,0.024,5,0.028,8,0.483,11,1.655,17,0.461,19,1.308,20,0.155,21,0.411,24,0.137,26,0.318,27,0.005,28,0.505,29,0.318,32,0.599,34,0.09,40,0.061,41,0.898,70,1.078,85,1.063,95,1.27,96,1.27,97,1.187,127,0.003,128,0.003,129,0.002,132,2.747,134,3.974,135,5.643,136,3.516,137,3.745,138,2.751,139,4.106,140,4.106,141,4.106,142,2.669,143,2.162,146,1.01,147,3.381,148,1.898,149,2.162,150,0.951,151,5.143,152,2.206,153,1.481,154,3.654,155,2.925,156,2.925,157,2.925,158,2.597,159,2.925,160,4.942,161,2.832,162,2.925,163,2.747,164,4.106,165,2.123,166,3.231,167,2.747,168,4.106,169,1.601,170,2.376,171,2.583,172,2.745,173,2.81,174,4.592,175,2.925,176,2.597,177,3.974,178,3.974,179,3.006,180,2.925,181,2.178,182,2.925,183,2.832,184,2.832,185,2.926,186,2.925,187,2.925,188,2.925,189,1.966,190,2.53,191,2.669,192,2.925,193,2.925,194,2.925,195,2.925,196,2.747,197,3.034,198,2.925,199,1.149,200,2.669,201,2.832,202,2.078,203,2.832,204,2.467,205,2.53,206,1.931,207,2.925,208,2.925,209,3.078,210,2.925,211,2.925,212,2.925,213,4.106,214,2.925,215,2.925,216,2.925,217,2.925,218,3.974,219,1.382,220,1.382,221,2.832,222,2.832,223,2.832,224,2.162,225,1.931,226,2.925,227,2.925,228,2.171,229,2.925,230,2.597,231,3.974,232,2.925,233,2.925,4129,4.173,4130,4.651]],["title/classes/ThirdMenuEntry.html",[0,0.279,160,2.878]],["body/classes/ThirdMenuEntry.html",[0,0.53,2,0.552,3,0.024,4,0.024,5,0.029,8,0.485,11,1.659,17,0.463,19,1.309,20,0.155,21,0.412,24,0.137,26,0.319,27,0.005,28,0.506,29,0.319,32,0.6,34,0.09,40,0.061,41,0.9,70,1.082,85,1.064,95,1.271,96,1.271,97,1.188,127,0.004,128,0.003,129,0.002,132,2.757,134,3.985,135,5.647,136,3.519,137,3.756,138,2.753,139,4.117,140,4.117,141,4.117,142,2.679,143,2.17,146,1.013,147,3.39,148,1.905,149,2.17,150,0.954,151,5.152,152,2.215,153,1.487,154,2.925,155,2.937,156,2.937,157,2.937,158,2.607,159,2.937,160,4.7,161,2.843,162,2.937,163,2.757,164,4.117,165,2.126,166,3.24,167,2.757,168,4.117,169,1.604,170,2.382,171,2.588,172,3.139,173,2.01,174,2.843,175,2.937,176,2.607,177,3.985,178,3.985,179,3.009,180,2.937,181,2.181,182,2.937,183,2.843,184,2.843,185,2.932,186,2.937,187,2.937,188,2.937,189,1.974,190,2.54,191,2.679,192,2.937,193,2.937,194,2.937,195,2.937,196,2.757,197,3.042,198,2.937,199,1.153,200,2.679,201,2.843,202,2.087,203,2.843,204,2.477,205,2.54,206,1.939,207,2.937,208,2.937,209,3.084,210,2.937,211,2.937,212,2.937,213,4.117,214,2.937,215,2.937,216,2.937,217,2.937,218,3.985,219,1.387,220,1.387,221,2.843,222,2.843,223,2.843,224,2.17,225,1.939,226,2.937,227,2.937,228,2.177,229,2.937,230,2.607,231,3.985,232,2.937,233,2.937,4129,4.19,4131,4.669]],["title/modules/ThirdpartyModule.html",[601,2.2,4132,3.908]],["body/modules/ThirdpartyModule.html",[0,0.398,3,0.037,4,0.045,5,0.053,17,0.709,27,0.005,34,0.115,40,0.044,57,3.023,73,1.884,127,0.003,128,0.004,129,0.003,271,1.289,275,3.704,285,2.563,286,2.524,287,2.563,288,2.563,289,2.563,290,2.563,291,2.184,292,2.278,293,2.563,294,2.563,295,2.563,296,2.486,297,2.378,298,2.524,299,2.563,300,2.563,301,2.563,302,1.637,303,2.563,304,2.214,353,3.393,601,3.136,603,3.619,604,4.103,605,5.662,606,4.223,607,3.794,616,5.108,617,4.354,619,4.705,621,4.705,626,5.44,629,4.223,636,4.837,695,5.933,4132,7.997,4133,6.417,4134,6.417,4135,6.417,4136,7.429,4137,7.151,4138,6.417]],["title/modules/ThirdpartyRoutingModule.html",[601,2.2,4136,3.706]],["body/modules/ThirdpartyRoutingModule.html",[0,0.413,3,0.038,4,0.046,5,0.054,17,0.737,27,0.005,34,0.113,40,0.045,73,1.958,127,0.003,128,0.004,129,0.003,165,1.767,234,1.481,271,1.34,285,2.663,286,2.622,287,2.663,288,2.663,289,2.663,290,2.663,291,2.269,292,2.367,293,2.663,294,2.663,295,2.663,296,2.583,297,2.471,298,2.622,299,2.663,300,2.663,301,2.663,302,1.701,303,2.663,353,2.987,603,3.761,607,3.942,619,4.042,621,4.814,677,5.49,680,6.539,681,6.157,682,4.263,687,5.49,1086,5.789,4136,6.539,4138,6.667,4139,7.431,4140,7.431]],["title/classes/ThirdsI18nLoader.html",[0,0.279,4141,4.162]],["body/classes/ThirdsI18nLoader.html",[0,0.356,2,0.536,3,0.023,4,0.023,5,0.028,8,0.665,11,1.149,14,0.626,15,0.173,19,0.559,20,0.121,21,0.193,24,0.188,26,0.438,27,0.005,28,0.498,29,0.438,34,0.113,40,0.045,85,1.065,113,0.615,127,0.002,128,0.003,129,0.002,136,1.702,143,2.106,146,0.992,148,1.849,150,1.52,153,2.575,154,4.41,163,2.676,165,2.211,166,2.243,167,2.676,169,2.182,172,1.649,173,3.201,181,2.388,197,2.978,199,1.119,206,1.882,209,3.957,219,1.904,249,2.13,251,1.486,268,1.037,271,0.817,272,1.507,362,1.878,385,1.149,438,1.93,439,1.403,440,1.384,447,1.987,537,2.628,544,1.259,559,1.259,625,2.347,642,2.243,643,2.243,703,2.951,725,2.025,739,2.676,768,2.347,769,2.404,856,1.78,874,2.6,891,1.987,892,2.149,894,1.599,991,2.53,1099,4.151,1101,3.065,1252,2.709,1284,2.85,1378,2.195,1414,2.676,1460,3.065,1515,3.759,1659,3.196,1777,4.391,1894,4.944,1914,3.759,1930,3.196,2094,7.347,2149,3.759,2388,4.527,2686,2.404,3148,6.42,3209,3.53,3609,5.794,4141,5.317,4142,4.066,4143,7.254,4144,6.409,4145,5.751,4146,4.531,4147,5.751,4148,4.531,4149,4.531,4150,6.672,4151,4.066,4152,4.066,4153,4.066,4154,4.066,4155,4.066,4156,4.066,4157,4.066,4158,4.066,4159,4.066,4160,5.751,4161,4.066,4162,4.066,4163,4.066,4164,4.066,4165,4.066,4166,5.751,4167,4.066,4168,4.066,4169,4.066,4170,4.066,4171,5.751,4172,4.066,4173,4.066,4174,4.066,4175,5.751,4176,4.066,4177,4.066,4178,4.066,4179,4.066,4180,4.066,4181,4.066,4182,4.066,4183,4.066,4184,4.066,4185,4.066,4186,4.066,4187,4.066,4188,4.066,4189,4.066,4190,4.066,4191,5.751,4192,4.066,4193,4.066,4194,4.066,4195,4.066,4196,4.066,4197,4.066,4198,4.066,4199,4.066,4200,4.066,4201,4.066,4202,5.751,4203,4.066,4204,4.066,4205,4.066,4206,4.066,4207,4.066,4208,4.066,4209,4.066,4210,4.066,4211,4.066,4212,4.066,4213,4.066,4214,4.066,4215,4.066,4216,3.348,4217,4.066,4218,3.759,4219,4.066,4220,4.066,4221,4.066,4222,4.066,4223,5.751,4224,4.066,4225,4.066,4226,4.066,4227,4.066,4228,4.066,4229,4.066,4230,3.759,4231,4.066,4232,4.066,4233,4.066,4234,6.672,4235,4.066,4236,4.066,4237,4.066,4238,4.066,4239,4.066,4240,4.066,4241,4.066,4242,4.066,4243,4.066]],["title/injectables/ThirdsService.html",[856,1.393,1894,2.801]],["body/injectables/ThirdsService.html",[0,0.305,3,0.019,4,0.019,5,0.022,8,0.569,11,1.668,14,0.358,15,0.14,16,0.326,19,0.812,20,0.18,21,0.156,24,0.284,26,0.633,27,0.005,28,0.642,29,0.633,31,0.386,32,0.336,34,0.107,40,0.04,85,1.089,113,0.497,127,0.002,128,0.003,129,0.002,136,1.375,143,1.702,145,2.842,146,1.272,148,1.494,150,1.494,153,2.328,154,4.53,163,2.162,165,2.084,166,3.257,167,2.162,169,2.13,172,1.333,173,2.833,181,2.315,197,2.55,199,0.904,206,1.52,209,3.782,219,1.63,249,2.474,251,1.272,268,2.121,271,0.66,272,1.218,362,1.608,385,0.928,438,2.202,439,1.134,440,1.118,447,1.605,537,2.668,544,1.017,559,1.017,625,1.896,642,1.812,643,1.812,703,2.385,725,1.636,739,2.162,768,1.896,769,1.942,856,1.524,857,1.605,874,2.101,891,1.605,892,1.737,894,1.292,991,2.044,1099,4.589,1101,2.477,1252,2.319,1284,2.303,1378,1.773,1414,2.162,1460,2.477,1515,3.038,1659,2.582,1777,5.39,1894,4.081,1914,3.038,1930,2.582,2070,2.477,2094,6.819,2149,3.038,2388,4.007,2686,1.942,3148,6.62,3209,2.853,3609,5.127,4141,3.038,4142,3.285,4143,5.905,4145,3.285,4147,3.285,4150,6.559,4151,3.285,4152,5.905,4153,5.905,4154,5.905,4155,3.285,4156,3.285,4157,3.285,4158,4.924,4159,3.285,4160,4.924,4161,4.924,4162,3.285,4163,3.285,4164,3.285,4165,3.285,4166,4.924,4167,3.285,4168,3.285,4169,3.285,4170,4.924,4171,4.924,4172,3.285,4173,4.924,4174,5.905,4175,6.559,4176,3.285,4177,3.285,4178,3.285,4179,3.285,4180,3.285,4181,3.285,4182,3.285,4183,3.285,4184,3.285,4185,3.285,4186,3.285,4187,3.285,4188,4.924,4189,3.285,4190,3.285,4191,4.924,4192,4.924,4193,5.905,4194,3.285,4195,3.285,4196,3.285,4197,3.285,4198,3.285,4199,3.285,4200,3.285,4201,4.924,4202,5.905,4203,3.285,4204,3.285,4205,4.924,4206,3.285,4207,3.285,4208,3.285,4209,3.285,4210,3.285,4211,3.285,4212,3.285,4213,3.285,4214,3.285,4215,3.285,4216,2.705,4217,3.285,4218,6.064,4219,3.285,4220,3.285,4221,3.285,4222,3.285,4223,4.924,4224,3.285,4225,3.285,4226,3.285,4227,3.285,4228,3.285,4229,3.285,4230,3.038,4231,4.924,4232,3.285,4233,4.924,4234,7.025,4235,3.285,4236,3.285,4237,3.285,4238,3.285,4239,3.285,4240,3.285,4241,3.285,4242,3.285,4243,3.285,4244,5.487,4245,5.487,4246,5.487,4247,5.487,4248,5.487,4249,5.487,4250,5.487,4251,5.487,4252,5.487,4253,5.487,4254,5.487,4255,3.661,4256,3.661,4257,3.661,4258,3.661,4259,3.661,4260,3.661,4261,3.661,4262,3.661,4263,3.661,4264,3.661,4265,3.661,4266,3.661,4267,3.661,4268,3.661,4269,3.661]],["title/classes/ThirdsServiceMock.html",[0,0.279,4270,4.501]],["body/classes/ThirdsServiceMock.html",[0,0.415,2,0.883,3,0.039,4,0.039,5,0.046,15,0.285,24,0.261,27,0.005,34,0.106,40,0.046,127,0.003,128,0.004,129,0.003,160,4.283,169,1.584,173,3.214,181,2.391,251,2.057,268,2.032,272,2.483,537,2.596,544,2.074,725,3.966,4218,8.132,4270,7.965,4271,7.466,4272,9.473,4273,7.466,4274,7.466,4275,7.466,4276,7.466,4277,7.466,4278,7.466,4279,7.466,4280,7.466,4281,7.466,4282,7.466,4283,7.466,4284,7.466,4285,7.466,4286,7.466,4287,7.466,4288,7.466,4289,7.466,4290,7.466]],["title/classes/Tick.html",[0,0.279,2797,2.962]],["body/classes/Tick.html",[0,0.509,2,0.725,3,0.032,4,0.032,5,0.037,7,2.377,8,1.004,10,2.285,14,0.893,15,0.234,16,0.466,17,0.86,18,1.58,19,1.166,20,0.183,21,0.261,22,1.594,24,0.255,26,0.418,27,0.005,28,0.41,29,0.418,31,0.645,32,0.562,34,0.109,35,0.535,38,2.859,39,2.738,40,0.059,41,0.842,55,2.637,69,3.381,83,1.628,88,3.048,93,2.685,109,3.033,113,1.066,127,0.003,128,0.004,129,0.003,228,2.037,236,2.612,379,2.652,408,1.772,470,2.731,523,4.113,530,4.527,848,4.507,1391,3.25,1408,3.579,1461,5.314,1544,3.99,1913,4.321,2782,5.116,2783,4.321,2784,4.321,2785,4.774,2786,7.126,2787,4.527,2788,4.774,2791,4.774,2792,3.99,2793,4.321,2794,3.73,2795,4.321,2796,4.774,2797,5.585,2798,4.774,2799,5.54,2800,4.774,2801,6.987,2802,6.987,2803,6.121,2804,6.121,2805,6.756,2806,5.804,2807,5.314,2808,4.774,2809,4.774,2810,6.757,2811,4.774,2812,4.145,2813,4.527,2814,5.116,2815,4.774,2816,4.774,2817,4.527,4291,7.856,4292,6.127,4293,6.127]],["title/classes/TickPayload.html",[0,0.279,2810,3.706]],["body/classes/TickPayload.html",[0,0.512,2,0.737,3,0.032,4,0.032,5,0.038,7,2.418,8,0.986,10,2.303,14,0.854,15,0.238,16,0.472,17,0.943,18,1.461,19,1.078,20,0.18,21,0.266,24,0.257,26,0.426,27,0.005,28,0.417,29,0.426,34,0.11,35,0.545,38,2.89,39,2.785,40,0.059,41,0.857,55,2.682,69,2.682,83,1.639,88,2.418,93,2.459,109,3.084,113,1.077,127,0.003,128,0.004,129,0.003,228,3.061,236,2.072,379,2.606,408,1.802,470,2.166,523,3.767,530,4.604,848,3.575,1391,3.306,1408,3.618,1461,4.215,1544,4.059,1913,4.395,2782,5.172,2783,4.395,2784,4.395,2785,4.855,2786,6.81,2787,4.604,2788,4.855,2791,4.855,2792,4.059,2793,4.395,2794,3.794,2795,4.395,2796,4.855,2797,5.614,2798,4.855,2799,5.6,2800,4.855,2801,6.8,2802,6.8,2803,4.855,2804,4.855,2805,6.81,2806,4.604,2807,4.215,2808,4.855,2809,4.855,2810,5.867,2811,7.171,2812,6.226,2813,7.023,2814,5.172,2815,4.855,2816,4.855,2817,4.604,4294,6.231,4295,6.231,4296,6.231,4297,6.231]],["title/injectables/TimeEffects.html",[819,4.162,856,1.393]],["body/injectables/TimeEffects.html",[0,0.299,3,0.028,4,0.028,5,0.033,8,0.559,10,2.292,15,0.205,16,0.429,20,0.165,21,0.23,24,0.255,26,0.368,27,0.005,28,0.361,29,0.368,31,0.76,32,0.662,34,0.122,35,0.47,38,2.963,39,2.406,40,0.033,70,2.211,104,3.578,110,2.058,113,1.18,127,0.002,128,0.003,129,0.002,136,2.022,149,2.502,150,1.778,152,2.554,165,1.716,169,1.846,181,2.419,202,4.053,249,2.39,271,0.971,379,2.559,515,1.9,523,4.126,531,4.141,537,2.691,544,1.495,545,1.495,546,1.536,559,1.495,819,5.988,856,2.005,857,2.361,876,3.926,888,2.928,889,2.789,891,2.361,892,4.302,894,1.9,914,5.136,933,3.278,1216,5.09,1252,3.677,1401,4.882,1482,4.991,1496,5.988,1504,4.882,1544,4.7,1567,3.978,1913,5.09,1950,5.988,2031,6.777,2058,3.089,2059,3.978,2124,6.476,2782,5.302,2784,5.09,2792,5.302,2793,3.797,2797,4.808,2799,5.09,2801,5.332,2802,5.332,2814,3.506,2904,4.831,3398,4.831,4216,5.332,4298,5.384,4299,8.141,4300,8.141,4301,8.141,4302,7.217,4303,7.217,4304,7.217,4305,7.217,4306,5.384,4307,7.217,4308,7.217,4309,7.217,4310,8.698,4311,8.698,4312,7.217,4313,7.217,4314,5.384,4315,7.217,4316,5.384,4317,5.384,4318,5.384]],["title/components/TimeFilterComponent.html",[234,1,378,1.718]],["body/components/TimeFilterComponent.html",[0,0.239,3,0.022,4,0.022,5,0.026,8,0.446,10,1.625,11,1.088,14,0.602,15,0.164,16,0.366,20,0.158,21,0.183,24,0.269,26,0.293,27,0.005,28,0.56,29,0.293,31,0.452,32,0.394,34,0.117,35,0.375,40,0.026,44,1.177,45,1.311,97,0.544,110,1.917,127,0.002,128,0.003,129,0.002,146,0.954,169,1.532,170,2.245,179,2.739,181,2.121,189,1.815,219,1.276,220,1.832,230,2.397,234,1.439,235,1.47,236,2.051,237,1.515,239,1.539,240,1.539,242,2.627,243,1.449,244,3.565,247,2.177,249,2.497,251,1.43,252,2.963,268,1.652,269,1.736,271,0.774,291,1.311,292,2.299,304,1.33,305,2.21,306,2.177,307,1.387,308,2.827,309,1.539,310,1.539,311,1.47,312,1.539,313,1.47,314,2.235,315,2.21,316,1.47,317,2.21,318,1.47,319,1.539,320,1.449,321,1.539,322,1.47,323,1.539,324,2.827,325,1.47,326,1.539,327,1.428,328,2.21,329,1.47,330,1.449,331,1.428,332,1.515,333,1.539,334,1.47,335,2.177,336,1.539,337,1.493,338,2.021,339,2.21,340,1.47,341,1.539,342,2.827,343,1.428,344,1.539,345,1.47,346,1.47,347,1.515,348,1.449,349,1.539,350,1.47,351,1.47,352,1.539,353,1.449,354,1.539,355,1.47,356,1.539,357,1.493,358,1.47,359,1.449,360,1.539,361,1.47,362,1.258,363,1.539,364,1.47,365,2.177,366,1.47,367,2.586,368,1.47,369,1.539,370,1.47,371,1.539,372,1.47,373,1.539,374,1.428,375,1.47,376,1.449,377,1.47,378,2.702,379,2.384,380,1.47,381,1.539,382,1.47,383,1.47,384,1.47,385,2.402,386,1.449,387,1.449,388,1.539,389,1.449,390,1.539,391,1.449,392,1.515,393,1.539,515,1.515,522,3.345,537,2.162,544,1.193,545,1.193,546,1.225,559,1.193,632,2.173,838,4.262,843,2.904,844,2.796,845,2.614,846,2.7,848,2.464,851,2.7,894,1.515,911,2.614,914,5.292,918,4.404,926,4.539,933,2.614,1108,2.224,1163,3.642,1252,1.815,1408,2.81,1422,2.796,1608,4.262,1612,4.394,1617,4.659,1633,3.879,1649,3.345,1650,4.805,1651,3.172,1652,3.028,1669,3.345,1671,3.345,1673,3.345,1681,3.345,1682,3.345,1692,3.853,1806,3.879,1981,6.898,2048,3.562,2053,3.172,2268,3.853,2476,3.172,2484,4.557,2513,3.853,2518,5.117,2522,5.892,2718,4.349,2828,2.904,2849,3.562,2905,3.345,2933,8.378,2934,8.378,3518,3.172,4022,5.988,4024,6.545,4030,3.562,4031,3.562,4034,3.562,4035,5.117,4037,3.562,4041,5.117,4044,3.562,4319,7.217,4320,4.294,4321,4.294,4322,3.853,4323,3.853,4324,6.168,4325,4.294,4326,4.294,4327,4.294,4328,6.168,4329,4.294,4330,4.294,4331,4.294,4332,4.294,4333,4.294,4334,4.294,4335,6.168,4336,4.294,4337,4.294,4338,4.294,4339,4.294,4340,6.168,4341,4.294,4342,4.294,4343,4.294,4344,4.294,4345,6.168,4346,6.168,4347,4.294,4348,4.294,4349,6.168,4350,6.168,4351,6.168]],["title/components/TimeLineComponent.html",[234,1,380,1.718]],["body/components/TimeLineComponent.html",[0,0.149,3,0.014,4,0.014,5,0.016,11,1.569,14,0.421,15,0.103,16,0.256,17,0.809,20,0.158,21,0.115,24,0.246,26,0.369,27,0.005,28,0.485,29,0.369,31,0.283,32,0.247,34,0.104,35,0.235,40,0.016,44,1.183,66,1.225,88,2.63,110,1.595,127,0.001,128,0.002,129,0.001,138,1.563,143,2.513,145,2.235,146,0.958,165,2.392,169,1.314,170,2.467,179,2.901,181,0.655,189,1.136,196,2.548,197,2.006,206,1.792,219,0.799,220,1.839,234,1.078,235,0.92,236,1.435,237,0.949,239,0.963,240,0.963,242,1.968,243,0.907,244,3.447,247,1.523,251,1,252,2.325,268,1.417,269,1.215,271,0.485,304,0.832,305,1.546,306,1.523,307,0.868,308,2.218,309,0.963,310,0.963,311,0.92,312,0.963,313,0.92,314,1.674,315,1.546,316,0.92,317,1.546,318,0.92,319,0.963,320,0.907,321,0.963,322,0.92,323,0.963,324,2.218,325,0.92,326,0.963,327,0.894,328,1.546,329,0.92,330,0.907,331,0.894,332,0.949,333,0.963,334,0.92,335,1.523,336,0.963,337,0.934,338,2.029,339,1.546,340,0.92,341,0.963,342,2.218,343,0.894,344,0.963,345,0.92,346,0.92,347,0.949,348,0.907,349,0.963,350,0.92,351,0.92,352,0.963,353,0.907,354,0.963,355,0.92,356,0.963,357,0.934,358,0.92,359,0.907,360,0.963,361,0.92,362,0.788,363,0.963,364,0.92,365,1.523,366,0.92,367,1.938,368,0.92,369,0.963,370,0.92,371,0.963,372,0.92,373,0.963,374,0.894,375,0.92,376,0.907,377,0.92,378,0.92,379,2.295,380,2.12,381,0.963,382,0.92,383,0.92,384,0.92,385,0.681,386,0.907,387,0.907,388,0.963,389,0.907,390,0.963,391,0.907,392,0.949,393,0.963,418,2.098,438,0.81,439,0.832,440,0.821,451,1.595,454,1.336,481,2.327,515,0.949,529,6.495,537,1.482,544,0.747,545,0.747,546,0.767,553,1.275,558,2.347,559,0.747,578,2.513,684,3.019,709,2.714,712,2.23,725,3.741,891,1.892,894,0.949,947,4.355,997,3.362,1013,1.986,1017,1.895,1045,4.189,1053,2.23,1108,1.392,1163,4.492,1210,1.895,1408,3.717,1410,5.754,1414,2.548,1608,3.193,1617,3.655,1651,1.986,1715,2.412,1777,2.548,1778,3.043,1779,3.188,1780,3.188,1781,3.188,1782,2.811,1786,3.188,2133,2.094,2163,3.872,2452,2.094,2454,2.412,2514,2.412,2584,6.357,2697,6.665,2718,4.781,2739,2.412,2812,2.919,2827,2.412,2828,1.818,2834,2.412,2849,5.136,2871,2.23,2928,7.676,2965,2.412,2973,3.872,3079,2.23,3171,2.094,3209,3.362,3239,3.58,3411,3.043,3417,3.043,3423,1.895,3941,2.23,4352,2.688,4353,4.315,4354,7.907,4355,5.407,4356,6.19,4357,4.315,4358,4.315,4359,4.315,4360,4.315,4361,7.907,4362,2.688,4363,2.688,4364,2.688,4365,2.688,4366,4.315,4367,2.688,4368,4.315,4369,4.315,4370,6.19,4371,4.315,4372,5.407,4373,4.315,4374,4.315,4375,2.688,4376,2.688,4377,2.688,4378,2.688,4379,2.688,4380,2.688,4381,2.688,4382,2.688,4383,2.688,4384,2.688,4385,9.181,4386,2.688,4387,2.688,4388,2.688,4389,5.407,4390,2.688,4391,2.688,4392,2.688,4393,2.688,4394,2.688,4395,2.688,4396,2.688,4397,2.688,4398,2.688,4399,2.688,4400,2.688,4401,2.688,4402,2.688,4403,2.688,4404,2.688,4405,2.688,4406,2.688,4407,2.688,4408,2.688,4409,2.688,4410,2.688,4411,2.688,4412,2.688,4413,2.688,4414,2.688,4415,2.688,4416,2.688,4417,4.315,4418,2.688,4419,2.688,4420,2.688,4421,2.688,4422,2.688,4423,2.688,4424,2.688,4425,2.688,4426,4.315,4427,4.315,4428,5.407,4429,6.19,4430,5.407,4431,5.407,4432,4.315,4433,4.315,4434,2.688,4435,4.315,4436,2.688,4437,4.315,4438,2.412,4439,2.688,4440,2.688,4441,2.688,4442,2.688,4443,2.688,4444,2.688,4445,2.688,4446,2.688,4447,4.315,4448,7.238,4449,2.688,4450,7.238,4451,2.688,4452,7.238,4453,7.238,4454,7.238,4455,7.238,4456,5.407,4457,7.238,4458,4.315,4459,2.688,4460,4.315,4461,2.688,4462,2.688,4463,4.315,4464,2.688,4465,2.688,4466,6.19,4467,6.19,4468,4.315,4469,2.688,4470,2.688,4471,2.688,4472,2.688,4473,2.412,4474,2.688,4475,2.688,4476,2.688,4477,2.688,4478,2.688,4479,2.688,4480,2.688,4481,2.688,4482,2.688,4483,2.688,4484,2.688,4485,4.315,4486,2.688,4487,2.688,4488,2.688,4489,2.688,4490,4.315,4491,2.688,4492,2.688,4493,2.688,4494,2.688,4495,4.315,4496,5.407,4497,7.238,4498,2.688,4499,5.407,4500,4.315,4501,4.315,4502,4.315,4503,2.688,4504,4.315,4505,5.407,4506,2.688,4507,2.688,4508,2.688,4509,2.688,4510,2.688,4511,2.688,4512,2.688,4513,2.688,4514,2.688,4515,2.688,4516,2.688,4517,2.688,4518,2.688,4519,2.688,4520,2.688,4521,2.688,4522,2.688,4523,2.688,4524,2.688,4525,2.688,4526,2.688,4527,2.688,4528,2.688,4529,4.315,4530,2.688,4531,2.688,4532,2.688,4533,2.688,4534,2.688,4535,2.688,4536,2.688,4537,2.688]],["title/classes/TimeReference.html",[0,0.279,2792,3.267]],["body/classes/TimeReference.html",[0,0.306,2,0.65,3,0.028,4,0.028,5,0.034,15,0.21,19,1.014,20,0.178,21,0.235,24,0.282,26,0.641,27,0.005,28,0.629,29,0.641,32,0.804,34,0.087,40,0.05,41,0.756,85,0.96,127,0.004,128,0.003,129,0.003,138,1.589,143,3.401,165,2.233,169,2.035,170,2.994,224,3.823,228,3.381,249,2.475,251,1.696,268,2.15,379,1.506,709,3.457,725,2.456,945,5.16,1408,3.748,2107,4.56,2166,4.06,2332,5.406,2446,4.56,2651,4.932,2652,4.932,2792,4.766,2794,3.346,2812,6.735,4538,4.932,4539,9.392,4540,7.317,4541,7.317,4542,8.77,4543,5.496,4544,8.77,4545,8.226,4546,9.133,4547,7.87,4548,5.496,4549,8.226,4550,5.496,4551,5.496,4552,5.496,4553,5.496,4554,5.496,4555,5.496,4556,5.496,4557,5.496,4558,5.496,4559,7.317,4560,5.496,4561,8.77,4562,7.317,4563,5.496,4564,5.496,4565,5.496,4566,5.496,4567,5.496,4568,5.496,4569,5.496,4570,5.496,4571,5.496,4572,5.496,4573,5.496,4574,5.496,4575,5.496,4576,5.496,4577,7.317,4578,5.496,4579,5.496,4580,5.496,4581,5.496,4582,5.496,4583,5.496,4584,5.496,4585,5.496,4586,5.496,4587,5.496,4588,5.496,4589,5.496,4590,5.496,4591,5.496,4592,5.496,4593,5.496,4594,7.317,4595,4.932,4596,4.932,4597,4.932,4598,4.932,4599,4.932,4600,4.932,4601,4.932,4602,4.932,4603,5.496,4604,5.496]],["title/classes/TimeSpan.html",[0,0.279,2807,3.393]],["body/classes/TimeSpan.html",[0,0.444,2,0.743,3,0.032,4,0.032,5,0.038,8,0.91,11,1.592,13,3.58,19,1.304,20,0.119,21,0.374,24,0.184,26,0.429,27,0.005,28,0.421,29,0.429,34,0.095,40,0.06,41,1.206,85,1.034,95,0.852,96,0.852,97,0.796,127,0.005,128,0.004,129,0.003,136,3.295,145,3.253,149,2.919,166,3.109,169,1.333,171,2.151,206,2.608,228,3.388,272,2.089,376,2.119,438,1.892,513,4.249,709,3.95,725,2.807,1045,2.477,1163,5.181,1377,3.416,1378,4.471,1380,5.296,1522,5.805,1777,3.709,1778,4.429,1779,4.64,1780,4.64,1781,4.64,1782,6.206,1783,4.894,1784,4.894,1785,4.64,1786,4.64,1788,4.894,2457,4.429,2718,5.629,2807,5.934,3022,5.897,3023,5.211,3024,5.211,3025,6.481,3026,5.211,3027,5.211,3411,4.429,3429,6.622,3430,5.211,3431,5.636,3433,5.636,3434,5.636,3435,5.211,3436,5.211,3437,5.636,4605,6.281,4606,6.281]],["title/interfaces/TimeState.html",[744,1.946,756,4.162]],["body/interfaces/TimeState.html",[3,0.039,4,0.039,5,0.046,15,0.285,16,0.528,20,0.179,27,0.005,34,0.113,38,3.569,39,3.341,40,0.054,113,1.359,127,0.003,128,0.004,129,0.003,165,1.778,170,2.721,744,2.901,745,4.067,756,7.864,1408,4.319,2792,6.737,2793,5.273,2794,4.552,2812,6.412,4607,7.477,4608,10.015,4609,7.477,4610,7.477,4611,7.477]],["title/interfaces/TimelineState.html",[744,1.946,757,4.162]],["body/interfaces/TimelineState.html",[3,0.032,4,0.032,5,0.038,7,2.421,11,2.464,13,3.243,15,0.238,16,0.472,20,0.18,27,0.005,34,0.104,38,2.892,40,0.049,85,0.994,113,1.37,127,0.003,128,0.004,129,0.003,138,2.529,146,1.504,165,1.483,170,2.271,171,2.722,179,2.045,228,2.643,338,2.605,438,3.012,439,1.932,440,1.906,442,2.843,451,3.733,468,3.485,477,3.135,485,3.963,490,3.034,584,6.435,684,4.437,744,2.421,745,3.394,757,7.256,780,5.599,1414,4.693,1522,4.999,1580,6.192,1942,7.132,1943,8.533,1944,8.865,1945,8.263,1946,6.594,1948,7.132,1949,7.132,1950,6.594,1951,7.132,1954,4.839,1977,5.599,1980,5.599,2136,7.132,2584,6.192,4612,6.24,4613,7.948,4614,7.948,4615,7.948,4616,7.948,4617,6.24]],["title/interceptors/TokenInjector.html",[2115,4.501,3908,3.908]],["body/interceptors/TokenInjector.html",[0,0.376,3,0.035,4,0.035,5,0.041,10,1.78,14,0.66,15,0.258,20,0.172,21,0.288,24,0.266,26,0.619,27,0.005,28,0.608,29,0.619,34,0.113,40,0.041,95,0.916,96,0.916,97,1.201,127,0.003,128,0.004,129,0.003,165,2.253,169,1.773,172,2.458,251,1.936,268,1.912,271,1.218,518,5.29,537,2.486,544,1.876,559,1.876,625,3.498,856,2.32,1452,6.508,1460,6.409,2093,5.604,2118,6.061,3908,6.508,4618,6.754,4619,6.754,4620,8.353,4621,8.353,4622,6.754,4623,6.754,4624,8.353,4625,10.238,4626,6.754,4627,8.353,4628,9.475,4629,6.754,4630,6.754,4631,8.353,4632,6.754,4633,6.754,4634,8.353,4635,6.754,4636,6.754,4637,6.754,4638,8.353,4639,6.754,4640,6.754]],["title/classes/TransitionalThirdWithItSVersion.html",[0,0.279,4641,4.162]],["body/classes/TransitionalThirdWithItSVersion.html",[0,0.347,2,0.515,3,0.022,4,0.022,5,0.027,8,0.452,10,1.148,15,0.166,16,0.37,17,0.833,20,0.138,21,0.186,24,0.214,26,0.298,27,0.005,28,0.292,29,0.298,34,0.119,35,0.381,40,0.027,70,1.687,83,0.776,85,0.958,110,1.604,113,0.846,127,0.003,128,0.003,129,0.002,136,1.636,150,2.032,152,2.066,153,2.53,154,3.906,158,2.432,165,2.364,169,2.167,170,1.586,173,1.875,181,2.319,189,1.842,202,3.549,224,4.062,249,2.303,271,0.786,272,1.449,438,2.192,439,1.349,440,1.33,443,1.875,448,2.683,477,1.718,490,1.663,531,2.5,537,2.396,544,1.21,545,1.21,546,1.243,559,1.21,642,2.156,643,2.156,716,3.394,829,3.394,856,1.731,873,3.072,874,3.576,888,2.37,889,2.257,891,1.91,892,2.066,894,1.538,947,2.785,1045,2.87,1108,2.257,1160,4.739,1252,3.076,1275,4.922,1453,2.311,1454,3.794,1461,2.947,1463,2.74,1482,4.175,1504,2.947,1568,2.947,1569,2.74,1659,3.072,1777,2.573,1894,3.479,1901,2.947,2015,3.615,2391,3.219,2561,4.856,2686,2.311,3084,2.573,3086,2.432,3148,3.072,3199,3.615,3444,3.615,3844,2.837,3845,3.794,3846,2.652,3848,2.652,3850,3.794,3854,5.372,3859,4.059,4216,3.219,4641,6.037,4642,3.909,4643,4.357,4644,4.357,4645,6.232,4646,3.909,4647,5.592,4648,3.909,4649,3.909,4650,3.909,4651,3.909,4652,3.909,4653,3.909,4654,3.909,4655,3.909,4656,3.909,4657,3.909,4658,3.909,4659,3.909,4660,3.909,4661,3.909,4662,6.529,4663,3.909,4664,3.909,4665,3.909,4666,3.909,4667,3.909,4668,7.126,4669,5.592,4670,3.909,4671,3.909,4672,3.909,4673,3.909,4674,3.909,4675,3.909,4676,3.909,4677,3.909,4678,3.909,4679,3.909,4680,3.909,4681,3.909,4682,3.909,4683,3.909,4684,3.909,4685,3.909,4686,3.909,4687,3.909,4688,5.592,4689,3.909,4690,3.909,4691,3.909,4692,3.909,4693,3.909,4694,6.529,4695,3.909,4696,3.909,4697,3.909,4698,5.592,4699,3.909,4700,3.909,4701,3.909,4702,3.909,4703,3.909,4704,3.909,4705,3.909,4706,3.909,4707,3.909,4708,3.909,4709,3.909,4710,3.909,4711,5.592,4712,3.909,4713,3.909,4714,3.909,4715,3.909,4716,6.529,4717,3.909,4718,5.592,4719,3.909,4720,5.592,4721,3.909,4722,5.592,4723,3.909,4724,5.592,4725,3.909,4726,3.909,4727,5.592,4728,3.909,4729,3.909,4730,3.909,4731,3.909,4732,3.909,4733,3.909,4734,3.909,4735,5.592,4736,3.909,4737,3.909,4738,3.909,4739,3.909,4740,3.909,4741,5.592,4742,3.909,4743,3.909,4744,6.529,4745,3.909,4746,3.909]],["title/injectables/TranslateEffects.html",[829,3.908,856,1.393]],["body/injectables/TranslateEffects.html",[0,0.287,3,0.017,4,0.017,5,0.021,8,0.535,10,1.359,15,0.129,16,0.306,17,0.334,20,0.177,21,0.144,24,0.277,26,0.61,27,0.005,28,0.599,29,0.61,31,0.738,32,0.643,34,0.114,35,0.295,40,0.021,70,1.921,83,0.601,85,0.895,110,1.755,113,0.951,127,0.003,128,0.002,129,0.002,136,1.267,150,2.094,152,1.6,153,1.074,154,2.797,158,1.883,165,2.282,169,2.138,170,1.227,173,2.695,181,2.249,189,1.426,202,3.703,224,4.522,249,2.429,251,1.195,268,2.005,271,0.608,272,1.122,438,2.399,439,1.044,440,1.03,443,1.452,448,2.695,477,2.034,490,2.389,515,1.19,531,2.959,537,2.527,544,0.937,545,0.937,546,0.962,559,0.937,642,1.669,643,1.669,716,2.628,829,4.018,856,1.432,857,1.479,873,3.636,874,4.022,876,3.405,888,1.835,889,1.747,891,1.479,892,1.6,894,1.19,947,2.304,1045,2.469,1108,1.747,1160,5.187,1252,3.367,1275,4.235,1453,3.321,1454,4.268,1461,3.488,1463,3.243,1482,4.57,1504,3.488,1568,2.282,1569,2.121,1659,3.636,1777,3.697,1894,3.914,1901,2.282,2015,4.278,2391,2.492,2561,4.018,2686,3.321,3084,1.992,3086,1.883,3148,4.415,3199,2.798,3444,5.194,3844,2.197,3845,3.811,3846,2.053,3848,2.053,3850,3.139,3854,5.605,3859,4.077,4216,3.81,4230,2.798,4641,5.816,4642,3.026,4646,3.026,4647,5.617,4648,3.026,4649,3.026,4650,5.617,4651,5.617,4652,4.627,4653,4.627,4654,4.627,4655,4.627,4656,4.627,4657,4.627,4658,4.627,4659,4.627,4660,4.627,4661,4.627,4662,5.617,4663,3.026,4664,4.627,4665,3.026,4666,3.026,4667,3.026,4668,7.146,4669,4.627,4670,4.627,4671,5.617,4672,3.026,4673,3.026,4674,3.026,4675,3.026,4676,4.627,4677,3.026,4678,3.026,4679,3.026,4680,3.026,4681,5.617,4682,4.627,4683,4.627,4684,4.627,4685,4.627,4686,4.627,4687,4.627,4688,6.29,4689,4.627,4690,4.627,4691,4.627,4692,4.627,4693,3.026,4694,5.617,4695,4.627,4696,3.026,4697,3.026,4698,4.627,4699,3.026,4700,4.627,4701,4.627,4702,4.627,4703,4.627,4704,4.627,4705,4.627,4706,3.026,4707,3.026,4708,3.026,4709,3.026,4710,3.026,4711,4.627,4712,3.026,4713,3.026,4714,4.627,4715,5.617,4716,5.617,4717,3.026,4718,4.627,4719,3.026,4720,4.627,4721,3.026,4722,4.627,4723,3.026,4724,4.627,4725,3.026,4726,3.026,4727,4.627,4728,3.026,4729,3.026,4730,3.026,4731,3.026,4732,3.026,4733,3.026,4734,3.026,4735,4.627,4736,3.026,4737,3.026,4738,3.026,4739,3.026,4740,3.026,4741,4.627,4742,3.026,4743,4.627,4744,6.29,4745,3.026,4746,3.026,4747,5.156,4748,5.156,4749,5.156,4750,5.156,4751,5.156,4752,5.156,4753,5.156,4754,5.156,4755,5.156,4756,5.156,4757,3.373,4758,3.373,4759,3.373,4760,3.373,4761,3.373,4762,3.373,4763,3.373,4764,3.373,4765,3.373,4766,3.373,4767,3.373,4768,3.373,4769,3.373,4770,3.373,4771,3.373,4772,3.373]],["title/classes/TranslationUpToDate.html",[0,0.279,3850,3.054]],["body/classes/TranslationUpToDate.html",[0,0.537,2,0.776,3,0.034,4,0.034,5,0.04,8,1.037,10,2.161,14,0.962,15,0.25,16,0.487,18,1.496,19,1.232,20,0.191,24,0.193,27,0.005,31,0.691,32,0.602,34,0.098,35,0.573,40,0.061,41,0.902,83,1.593,85,0.67,113,1.113,127,0.003,128,0.004,129,0.003,136,3.626,150,1.676,152,3.111,476,2.723,477,2.587,574,3.763,728,4.125,1453,3.479,1463,5.897,2909,4.436,3840,5.829,3841,4.436,3842,4.845,3844,4.271,3845,5.448,3846,5.448,3847,4.625,3848,5.448,3849,4.625,3850,5.708,3851,4.625,3852,4.625,3853,4.845,3854,4.436,3855,6.059,3856,4.845,3857,4.436,3858,4.845,3859,4.271,4773,6.558]],["title/classes/TryToLogIn.html",[0,0.279,54,2.43]],["body/classes/TryToLogIn.html",[0,0.546,1,3.377,2,0.496,3,0.022,4,0.022,5,0.026,6,2.171,7,1.626,8,1.061,9,4.053,10,1.105,11,1.062,12,3.243,13,2.906,14,0.958,15,0.16,16,0.36,17,0.882,18,1.487,19,1.219,20,0.192,21,0.259,22,1.09,23,2.875,24,0.209,26,0.286,27,0.005,28,0.281,29,0.286,31,0.441,32,0.384,33,2.28,34,0.085,35,0.366,36,3.182,37,1.873,38,2.206,39,1.873,40,0.061,41,0.576,42,2.121,43,3.244,44,1.149,45,2.174,46,3.524,47,2.709,48,3.777,49,3.002,50,4.72,51,4.041,52,3.524,53,2.224,54,3.779,55,2.609,56,3.449,57,3.298,58,3.524,59,3.524,60,1.423,61,3.524,62,2.224,63,3.244,64,3.554,65,3.604,66,1.91,67,2.224,68,1.948,69,1.804,70,0.972,71,2.28,72,2.875,73,1.105,74,2.224,75,2.224,76,1.988,77,3.244,78,2.224,79,2.224,80,3.244,81,3.065,82,1.873,83,1.474,84,1.91,85,0.846,86,1.91,87,1.948,88,1.626,89,2.28,90,2.28,91,3.297,92,3.216,93,1.877,94,3.216,95,1.363,96,1.363,97,1.273,98,2.28,99,2.28,100,2.224,101,2.936,102,3.297,103,2.936,104,2.391,105,3.216,106,2.171,107,3.139,108,2.224,109,3,110,1.336,111,2.03,112,2.224,113,0.569,114,2.28,115,2.224,116,2.28,117,2.224,118,1.549,119,2.28,120,2.28,121,2.28,122,2.817,123,2.28,124,2.28,125,2.28,126,2.171,127,0.002,128,0.003,129,0.002,434,1.876,4774,6.061,4775,4.191]],["title/classes/TryToLogOut.html",[0,0.279,56,2.43]],["body/classes/TryToLogOut.html",[0,0.548,1,3.422,2,0.507,3,0.022,4,0.022,5,0.026,6,2.222,7,1.664,8,1.064,9,4.082,10,1.13,11,1.087,12,3.243,13,2.944,14,0.962,15,0.164,16,0.366,17,0.828,18,1.318,19,1.223,20,0.189,21,0.183,23,2.923,24,0.126,27,0.005,31,0.452,32,0.393,33,2.333,34,0.086,35,0.375,36,3.224,37,1.917,38,2.243,39,1.917,40,0.061,41,0.59,42,2.171,43,3.287,44,1.176,45,2.203,46,3.571,47,2.754,48,3.827,49,3.055,50,4.753,51,4.084,52,3.571,53,2.276,54,3.494,55,2.653,56,3.82,57,3.333,58,3.571,59,3.571,60,1.447,61,3.571,62,2.276,63,3.287,64,3.593,65,3.651,66,1.954,67,2.276,68,1.994,69,1.846,70,0.994,71,2.333,72,2.923,73,1.13,74,2.276,75,2.276,76,2.035,77,3.287,78,2.276,79,2.276,80,3.287,81,3.105,82,1.917,83,1.487,84,1.954,85,0.854,86,1.954,87,1.994,88,1.664,89,2.333,90,2.333,91,3.353,92,3.27,93,1.909,94,3.27,95,1.367,96,1.367,97,1.277,98,2.333,99,2.333,100,2.276,101,2.078,102,2.333,103,2.078,104,1.692,105,2.276,106,2.222,107,3.736,108,3.27,109,3.051,110,1.358,111,2.078,112,2.276,113,0.582,114,2.333,115,2.276,116,2.333,117,2.276,118,1.586,119,2.333,120,2.333,121,2.333,122,2.864,123,2.333,124,2.333,125,2.333,126,2.222,127,0.002,128,0.003,129,0.002,4776,4.29]],["title/components/TypeAheadSettingsComponent.html",[234,1,382,1.718]],["body/components/TypeAheadSettingsComponent.html",[0,0.2,3,0.019,4,0.028,5,0.033,14,0.529,15,0.137,16,0.322,17,0.357,20,0.192,21,0.154,24,0.304,26,0.621,27,0.005,28,0.634,29,0.621,31,0.763,32,0.847,34,0.086,35,0.315,40,0.022,44,0.987,73,0.949,85,0.741,110,1.8,127,0.002,128,0.003,129,0.002,138,2.096,146,0.838,181,1.321,197,2.518,219,1.07,220,1.61,234,1.299,235,1.233,236,1.802,237,1.271,238,1.55,239,1.29,240,1.29,242,2.371,243,1.215,244,3.526,245,2.469,247,1.912,249,2.465,251,1.256,252,3.068,254,2.682,268,2.262,269,2.599,271,0.649,273,1.958,285,1.29,286,1.271,287,1.29,288,1.29,289,1.29,290,1.29,291,2.374,292,2.075,293,1.29,294,1.29,295,1.29,296,1.252,297,1.197,298,1.271,299,1.29,300,1.29,301,1.29,302,0.824,303,1.29,304,1.115,305,1.942,306,1.912,307,1.163,308,2.597,309,1.29,310,1.29,311,1.233,312,1.29,313,1.233,314,2.017,315,1.942,316,1.233,317,1.942,318,1.233,319,1.29,320,1.215,321,1.29,322,3.346,323,1.29,324,2.597,325,1.233,326,1.29,327,1.197,328,1.942,329,1.233,330,1.215,331,1.197,332,1.271,333,1.29,334,1.233,335,1.912,336,1.29,337,1.252,338,1.18,339,1.942,340,1.233,341,1.29,342,2.597,343,1.197,344,1.29,345,1.233,346,1.233,347,1.271,348,1.215,349,1.29,350,1.233,351,1.233,352,1.29,353,1.215,354,1.29,355,1.233,356,1.29,357,1.252,358,1.233,359,1.215,360,1.29,361,1.233,362,1.055,363,1.29,364,1.233,365,2.299,366,3.443,367,2.335,368,1.233,369,1.29,370,1.233,371,1.29,372,1.233,373,1.29,374,1.197,375,1.233,376,1.828,377,1.233,378,1.233,379,1.485,380,1.233,381,1.29,382,2.482,383,3.203,384,1.233,385,0.913,386,1.215,387,1.215,388,1.29,389,1.215,390,1.29,391,1.215,392,1.271,393,1.29,515,1.271,545,1,546,1.027,698,2.376,918,4.047,1269,4.28,1391,3.845,1522,2.264,1608,3.847,1609,5.111,1611,5.111,1612,4.413,1613,6.932,1614,5.111,1615,6.292,1616,5.111,1617,4.823,1618,5.76,1619,5.76,1620,5.111,1621,5.111,1622,5.111,1627,3.821,1629,3.821,1632,3.821,1633,4.559,1635,3.821,1639,4.594,1654,2.539,1791,2.345,1954,3.299,1986,6.995,2752,2.66,2753,2.66,2754,2.66,2759,2.66,2760,2.66,2761,2.66,2762,2.66,2763,2.66,2764,2.66,2765,2.66,2766,2.66,2767,2.66,2768,2.66,2769,2.66,2770,2.66,2771,2.66,2774,2.66,2778,4.222,3715,2.987,3716,3.231,3717,4.222,3718,5.846,3719,3.231,3975,3.231,3977,4.862,4048,3.231,4049,2.987,4050,3.231,4051,3.231,4777,5.418,4778,6.515,4779,3.6,4780,3.6,4781,3.6,4782,5.418,4783,3.6,4784,3.6,4785,3.6,4786,3.6,4787,3.6,4788,3.6,4789,3.6,4790,3.6,4791,3.6,4792,3.6,4793,3.6,4794,3.6,4795,3.6,4796,3.6]],["title/components/TypeFilterComponent.html",[234,1,384,1.718]],["body/components/TypeFilterComponent.html",[0,0.224,3,0.021,4,0.03,5,0.036,8,0.417,13,1.641,14,0.574,15,0.153,16,0.349,17,0.399,20,0.186,21,0.172,24,0.265,26,0.275,27,0.005,28,0.545,29,0.275,31,0.424,32,0.369,34,0.114,35,0.351,40,0.025,44,1.102,45,1.228,73,1.06,97,0.51,110,1.874,127,0.002,128,0.003,129,0.002,146,0.91,169,1.476,179,2.952,181,2.196,189,1.7,219,1.195,220,1.747,234,1.386,235,1.377,236,1.956,237,1.419,238,1.731,239,1.441,240,1.441,242,2.531,243,1.357,244,3.551,245,2.679,247,2.076,249,2.421,251,1.363,252,2.874,268,1.592,269,1.655,271,0.725,273,2.187,285,1.441,286,1.419,287,1.441,288,1.441,289,1.441,290,1.441,291,1.796,292,2.437,293,1.441,294,1.441,295,1.441,296,1.398,297,1.337,298,1.419,299,1.441,300,1.441,301,1.441,302,0.92,303,1.441,304,1.245,305,2.107,306,2.076,307,1.299,308,2.742,309,1.441,310,1.441,311,1.377,312,1.441,313,1.377,314,2.153,315,2.107,316,1.377,317,2.107,318,1.377,319,1.441,320,1.357,321,1.441,322,1.377,323,1.441,324,2.742,325,1.377,326,1.441,327,1.337,328,2.107,329,1.377,330,1.357,331,1.337,332,1.419,333,1.441,334,1.377,335,2.076,336,1.441,337,1.398,338,1.318,339,2.107,340,1.377,341,1.441,342,2.742,343,1.337,344,1.441,345,1.377,346,1.377,347,1.419,348,1.357,349,1.441,350,1.377,351,1.377,352,1.441,353,1.357,354,1.441,355,1.377,356,1.441,357,1.398,358,1.377,359,1.357,360,1.441,361,1.377,362,1.178,363,1.441,364,1.377,365,2.076,366,1.377,367,2.492,368,1.377,369,1.441,370,1.377,371,1.441,372,1.377,373,1.441,374,1.337,375,1.377,376,1.357,377,1.377,378,1.377,379,1.612,380,1.377,381,1.441,382,1.377,383,1.377,384,2.62,385,2.328,386,1.357,387,1.357,388,1.441,389,1.357,390,1.441,391,1.357,392,1.419,393,1.441,456,2.245,515,1.419,537,2.231,544,1.117,545,1.117,546,1.147,559,1.117,589,2.836,590,4.582,593,2.375,598,3.608,632,2.035,838,3.473,843,2.72,844,2.619,845,2.448,846,2.529,848,2.307,851,2.529,894,1.419,911,2.448,918,4.271,926,5.12,982,3.133,1108,2.083,1252,1.7,1321,2.72,1422,2.619,1522,4.373,1608,4.106,1612,4.233,1617,4.518,1633,2.529,1649,3.133,1650,4.582,1651,2.971,1652,2.836,1669,3.133,1671,3.133,1673,3.133,1681,3.133,1682,3.133,1806,3.699,1875,5.652,1981,6.787,2053,2.971,2166,2.971,2476,2.971,2484,4.345,2517,3.608,2518,3.336,2522,5.396,2686,2.133,2828,2.72,2905,3.133,2931,8.243,2932,8.243,3022,2.971,3025,2.971,3350,6.239,3354,3.608,3518,2.971,3655,7.305,4021,6.239,4022,5.769,4024,6.348,4030,3.336,4031,3.336,4034,3.336,4035,5.769,4037,3.336,4040,3.608,4041,3.336,4044,3.336,4049,3.336,4322,3.608,4323,3.608,4797,6.953,4798,4.021,4799,4.021,4800,4.021,4801,4.021,4802,5.881,4803,4.021,4804,4.021,4805,4.021,4806,4.021,4807,4.021,4808,4.021,4809,4.021,4810,4.021,4811,4.021,4812,4.021,4813,4.021,4814,4.021,4815,4.021,4816,4.021,4817,4.021,4818,4.021,4819,4.021,4820,4.021,4821,4.021,4822,5.881,4823,5.881,4824,5.881,4825,5.881,4826,5.881,4827,8.141,4828,4.021,4829,6.953,4830,5.881,4831,4.021,4832,4.021,4833,4.021,4834,5.881,4835,6.953,4836,5.881,4837,4.021]],["title/classes/UnAuthenticationFromImplicitFlow.html",[0,0.279,77,2.285]],["body/classes/UnAuthenticationFromImplicitFlow.html",[0,0.548,1,3.432,2,0.51,3,0.022,4,0.022,5,0.026,6,2.234,8,1.062,9,3.969,10,1.137,11,1.093,12,3.245,13,2.953,14,0.963,15,0.164,16,0.367,17,0.83,18,1.321,19,1.224,20,0.189,21,0.184,23,2.935,24,0.127,27,0.005,31,0.454,32,0.396,33,2.346,34,0.086,35,0.377,36,3.233,37,1.927,38,2.252,39,1.927,40,0.061,41,0.593,42,2.183,43,3.297,44,1.182,45,2.21,46,3.581,47,2.765,48,3.839,49,3.021,50,4.76,51,4.095,52,3.581,53,2.288,54,3.505,55,2.663,56,3.505,57,3.342,58,3.581,59,3.581,60,1.453,61,3.581,62,2.288,63,3.297,64,3.602,65,3.662,66,1.965,67,2.288,68,2.004,69,1.857,70,1,71,2.346,72,2.935,73,1.137,74,2.288,75,2.288,76,2.046,77,3.602,78,2.288,79,2.288,80,3.297,81,3.115,82,1.927,83,1.49,84,1.965,85,0.856,86,1.965,87,2.004,88,1.673,89,2.346,90,2.346,91,3.366,92,3.283,93,1.916,94,3.283,95,1.368,96,1.368,97,1.278,98,2.346,99,2.346,100,2.288,101,2.089,102,2.346,103,2.089,104,1.701,105,2.288,106,2.234,107,3.205,108,2.288,109,3.063,110,1.364,111,2.089,112,2.288,113,0.585,114,2.346,115,2.288,116,2.346,117,2.288,118,1.594,119,2.346,120,2.346,121,2.346,122,2.876,123,2.346,124,3.366,125,2.346,126,2.234,127,0.002,128,0.003,129,0.002,4838,4.313]],["title/classes/UnableToRefreshOrGetToken.html",[0,0.279,80,2.285]],["body/classes/UnableToRefreshOrGetToken.html",[0,0.548,1,3.432,2,0.51,3,0.022,4,0.022,5,0.026,6,2.234,8,1.062,9,3.969,10,1.137,11,1.093,12,3.245,13,2.953,14,0.963,15,0.164,16,0.367,17,0.83,18,1.321,19,1.224,20,0.189,21,0.184,23,2.935,24,0.127,27,0.005,31,0.454,32,0.396,33,2.346,34,0.086,35,0.377,36,3.233,37,1.927,38,2.252,39,1.927,40,0.061,41,0.593,42,2.183,43,3.297,44,1.182,45,2.21,46,3.581,47,2.765,48,3.839,49,3.021,50,4.76,51,4.095,52,3.581,53,2.288,54,3.505,55,2.663,56,3.505,57,3.342,58,3.581,59,3.581,60,1.453,61,3.581,62,2.288,63,3.297,64,3.602,65,3.662,66,1.965,67,2.288,68,2.004,69,1.857,70,1,71,2.346,72,2.935,73,1.137,74,2.288,75,2.288,76,2.046,77,3.297,78,2.288,79,2.288,80,3.602,81,3.115,82,1.927,83,1.49,84,1.965,85,0.856,86,1.965,87,2.004,88,1.673,89,2.346,90,2.346,91,3.366,92,3.283,93,1.916,94,3.283,95,1.368,96,1.368,97,1.278,98,2.346,99,2.346,100,2.288,101,2.089,102,2.346,103,2.089,104,1.701,105,2.288,106,2.234,107,3.205,108,2.288,109,3.063,110,1.364,111,2.089,112,2.288,113,0.585,114,2.346,115,2.288,116,2.346,117,2.288,118,1.594,119,2.346,120,2.346,121,2.346,122,2.876,123,2.346,124,2.346,125,3.366,126,2.234,127,0.002,128,0.003,129,0.002,4839,4.313]],["title/classes/UpdateALightCard.html",[0,0.279,464,2.242]],["body/classes/UpdateALightCard.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.43,465,3.061,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,2.863,493,1.961,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,4840,5.91,4841,4.048]],["title/classes/UpdateAnAction.html",[0,0.279,465,2.2]],["body/classes/UpdateAnAction.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.06,10,2.151,11,1.026,12,1.271,14,0.985,15,0.154,16,0.351,17,0.586,18,1.617,19,1.248,20,0.195,21,0.385,22,1.053,24,0.205,26,0.276,27,0.005,28,0.271,29,0.276,31,0.426,32,0.371,34,0.092,35,0.354,40,0.062,41,0.557,45,1.236,60,0.95,70,1.892,83,1.665,85,0.785,93,1.254,95,1.286,96,1.286,97,1.201,113,1.194,118,1.497,127,0.002,128,0.003,129,0.002,146,1.483,150,0.828,153,1.883,185,2.293,199,1,272,1.346,302,1.353,403,1.473,405,2.219,408,1.709,413,1.598,414,0.987,415,1.026,416,1.155,417,1.155,418,1.571,420,1.14,421,1.254,431,3.119,432,3.567,433,1.881,434,1.84,437,1.961,438,2.567,439,1.254,440,1.236,441,1.92,442,1.844,443,1.743,444,3.18,445,4.764,446,3.119,447,1.775,448,3.005,449,2.747,450,1.92,451,1.497,452,3.119,453,3.119,454,1.254,455,3.005,456,3.253,457,1.743,458,3.119,459,1.881,460,3.119,461,3.119,462,1.92,463,1.92,464,3.119,465,3.366,466,3.119,467,1.711,468,1.775,469,3.119,470,1.407,471,3.119,472,1.92,473,3.119,474,1.881,475,3.119,476,1.681,477,1.597,478,1.961,479,1.961,480,1.961,481,1.743,482,1.961,483,1.961,484,1.961,485,1.624,486,1.961,487,1.961,488,1.961,489,1.961,490,1.545,491,1.961,492,1.961,493,2.863,494,1.92,495,1.92,496,1.961,497,1.961,498,1.961,499,1.961,500,1.961,501,1.881,4842,5.91,4843,4.048]],["title/classes/UpdateAnActionFailure.html",[0,0.279,466,2.242]],["body/classes/UpdateAnActionFailure.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,2.783,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.036,456,3.274,457,1.774,458,3.152,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.459,467,1.743,468,1.808,469,3.152,470,1.433,471,3.152,472,1.955,473,3.152,474,1.916,475,3.152,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,1.997,483,1.997,484,1.997,485,1.654,486,1.997,487,1.997,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,2.901,497,1.997,498,1.997,499,1.997,500,1.997,501,1.916,4844,5.989]],["title/classes/UpdateArchiveFilter.html",[0,0.279,902,3.054]],["body/classes/UpdateArchiveFilter.html",[0,0.531,2,0.688,3,0.03,4,0.03,5,0.036,8,1.023,10,2.002,14,0.949,15,0.222,16,0.451,17,0.754,18,1.666,19,1.216,20,0.195,21,0.248,22,1.514,24,0.249,26,0.397,27,0.005,28,0.39,29,0.397,31,0.613,32,0.534,34,0.101,35,0.509,40,0.06,41,0.8,83,1.699,85,0.595,95,1.319,96,1.319,97,1.232,113,1.148,127,0.004,128,0.004,129,0.003,146,1.176,150,1.553,209,2.375,228,1.935,302,1.332,314,2.955,385,1.475,410,3.935,413,1.936,414,1.419,415,1.475,416,1.66,417,1.66,434,2.229,438,1.753,439,1.802,440,1.777,454,1.802,456,2.221,485,2.334,531,3.339,711,4.646,866,4.996,881,3.165,895,3.79,896,5.151,897,4.996,901,3.66,902,5.461,1026,3.79,1029,4.104,1030,5.321,1031,3.79,1032,5.151,1033,5.358,1034,4.104,1035,4.104,1036,3.936,1037,4.104,1038,4.104,1039,3.936,4845,7.598,4846,5.819]],["title/classes/UpdateArchivePage.html",[0,0.279,897,2.962]],["body/classes/UpdateArchivePage.html",[0,0.531,2,0.688,3,0.03,4,0.03,5,0.036,8,1.023,10,2.002,14,0.949,15,0.222,16,0.451,17,0.754,18,1.666,19,1.216,20,0.195,21,0.248,22,1.514,24,0.249,26,0.397,27,0.005,28,0.39,29,0.397,31,0.613,32,0.534,34,0.101,35,0.509,40,0.06,41,0.8,83,1.699,85,0.595,95,1.319,96,1.319,97,1.232,113,1.148,127,0.004,128,0.004,129,0.003,146,1.176,150,1.553,209,2.375,228,1.935,302,1.332,314,2.955,385,1.475,410,3.935,413,1.936,414,1.419,415,1.475,416,1.66,417,1.66,434,2.229,438,1.753,439,1.802,440,1.777,454,1.802,456,2.221,485,2.334,531,3.339,711,4.646,866,4.996,881,3.165,895,3.79,896,5.151,897,5.297,901,3.66,902,5.151,1026,3.79,1029,4.104,1030,5.321,1031,3.79,1032,5.151,1033,4.104,1034,4.104,1035,4.104,1036,3.936,1037,5.358,1038,4.104,1039,3.936,4847,7.598,4848,5.819]],["title/classes/UpdateTimeReference.html",[0,0.279,2814,3.267]],["body/classes/UpdateTimeReference.html",[0,0.511,2,0.733,3,0.032,4,0.032,5,0.038,7,2.405,8,1.024,10,2.421,14,0.897,15,0.236,16,0.47,17,0.865,18,1.586,19,1.17,20,0.191,21,0.265,22,1.612,24,0.256,26,0.423,27,0.005,28,0.415,29,0.423,31,0.653,32,0.569,34,0.11,35,0.542,38,2.88,39,2.77,40,0.059,41,0.852,55,2.668,69,2.668,83,1.635,88,2.405,93,2.7,109,3.068,113,1.074,127,0.003,128,0.004,129,0.003,228,2.061,236,2.061,379,2.66,408,1.792,434,2.298,470,2.155,523,4.136,530,4.58,848,3.557,1391,4.199,1408,3.606,1461,4.193,1544,4.037,1913,4.372,2782,5.155,2783,4.372,2784,4.372,2785,4.83,2786,7.157,2787,4.58,2788,4.83,2791,4.83,2792,4.037,2793,4.372,2794,3.774,2795,4.372,2796,4.83,2797,5.425,2798,4.83,2799,5.582,2800,4.83,2801,6.442,2802,6.442,2803,4.83,2804,4.83,2805,6.167,2806,4.58,2807,4.193,2808,4.83,2809,4.83,2810,4.58,2811,4.83,2812,4.193,2813,4.58,2814,5.679,2815,4.83,2816,4.83,2817,4.58,4849,7.915,4850,6.199,4851,6.199]],["title/classes/UpdateTranslation.html",[0,0.279,3845,3.054]],["body/classes/UpdateTranslation.html",[0,0.532,2,0.751,3,0.033,4,0.033,5,0.039,8,1.029,10,2.117,14,0.954,15,0.242,16,0.477,17,0.797,18,1.632,19,1.223,20,0.196,21,0.271,22,1.651,24,0.259,26,0.434,27,0.005,28,0.425,29,0.434,31,0.669,32,0.582,34,0.096,35,0.555,40,0.061,41,0.873,83,1.57,85,0.649,113,1.09,127,0.003,128,0.004,129,0.003,136,3.59,150,1.642,152,3.011,434,2.323,476,2.636,477,2.504,574,3.642,728,3.993,1453,3.368,1463,5.828,2909,4.294,3840,5.742,3841,4.294,3842,4.69,3844,4.134,3845,5.642,3846,5.367,3847,4.477,3848,5.367,3849,4.477,3850,5.367,3851,4.477,3852,4.477,3853,5.936,3854,4.294,3855,4.69,3856,4.69,3857,4.294,3858,4.69,3859,4.134,4852,8.035,4853,6.348]],["title/classes/UpdateTranslationFailed.html",[0,0.279,3848,3.054]],["body/classes/UpdateTranslationFailed.html",[0,0.532,2,0.751,3,0.033,4,0.033,5,0.039,8,1.029,10,2.117,14,0.954,15,0.242,16,0.477,17,0.797,18,1.632,19,1.223,20,0.196,21,0.271,22,1.651,24,0.259,26,0.434,27,0.005,28,0.425,29,0.434,31,0.669,32,0.582,34,0.096,35,0.555,40,0.061,41,0.873,83,1.57,85,0.649,113,1.09,127,0.003,128,0.004,129,0.003,136,3.59,150,1.642,152,3.011,434,2.323,476,2.636,477,2.504,574,3.642,728,3.993,1453,3.368,1463,5.828,2909,4.294,3840,5.742,3841,4.294,3842,4.69,3844,4.134,3845,5.367,3846,5.367,3847,4.477,3848,5.642,3849,4.477,3850,5.367,3851,4.477,3852,4.477,3853,4.69,3854,4.294,3855,4.69,3856,4.69,3857,4.294,3858,5.936,3859,4.134,4854,8.035,4855,6.348]],["title/classes/UpdateTranslationSuccessful.html",[0,0.279,3846,3.054]],["body/classes/UpdateTranslationSuccessful.html",[0,0.532,2,0.751,3,0.033,4,0.033,5,0.039,8,1.029,10,2.117,14,0.954,15,0.242,16,0.477,17,0.797,18,1.632,19,1.223,20,0.196,21,0.271,22,1.651,24,0.259,26,0.434,27,0.005,28,0.425,29,0.434,31,0.669,32,0.582,34,0.096,35,0.555,40,0.061,41,0.873,83,1.57,85,0.649,113,1.09,127,0.003,128,0.004,129,0.003,136,3.59,150,1.642,152,3.011,434,2.323,476,2.636,477,2.504,574,3.642,728,3.993,1453,3.368,1463,5.828,2909,4.294,3840,5.742,3841,4.294,3842,4.69,3844,4.134,3845,5.367,3846,5.642,3847,4.477,3848,5.367,3849,4.477,3850,5.367,3851,4.477,3852,4.477,3853,4.69,3854,4.294,3855,4.69,3856,5.936,3857,4.294,3858,4.69,3859,4.134,4856,8.035,4857,6.348]],["title/classes/UpdatedSubscription.html",[0,0.279,458,2.242]],["body/classes/UpdatedSubscription.html",[0,0.56,2,0.487,3,0.021,4,0.021,5,0.025,8,1.062,10,2.167,11,1.045,12,1.295,14,0.987,15,0.157,16,0.356,18,1.569,19,1.251,20,0.193,21,0.394,24,0.176,27,0.005,31,0.434,32,0.378,34,0.092,35,0.36,40,0.062,41,0.567,45,1.259,60,0.968,70,1.906,83,1.672,85,0.791,93,1.277,95,1.291,96,1.291,97,1.206,113,1.201,118,1.524,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.907,185,2.323,199,1.018,272,1.371,302,1.371,403,1.5,405,2.238,408,1.732,413,1.614,414,1.005,415,1.045,416,1.176,417,1.176,418,1.599,420,1.16,421,1.277,431,3.152,432,3.278,433,1.916,437,1.997,438,2.584,439,1.277,440,1.259,441,1.955,442,1.878,443,1.774,444,3.213,445,4.775,446,3.152,447,1.808,448,3.036,449,2.783,450,1.955,451,1.524,452,3.152,453,3.152,454,1.277,455,3.036,456,3.274,457,1.774,458,3.459,459,1.916,460,3.152,461,3.152,462,1.955,463,1.955,464,3.152,465,3.093,466,3.152,467,1.743,468,1.808,469,3.152,470,1.433,471,3.152,472,1.955,473,3.152,474,1.916,475,3.152,476,1.712,477,1.626,478,1.997,479,1.997,480,1.997,481,1.774,482,1.997,483,1.997,484,1.997,485,1.654,486,1.997,487,2.901,488,1.997,489,1.997,490,1.573,491,1.997,492,1.997,493,1.997,494,1.955,495,1.955,496,1.997,497,1.997,498,1.997,499,1.997,500,1.997,501,1.916,4858,5.989]],["title/classes/UselessAuthAction.html",[0,0.279,65,2.539]],["body/classes/UselessAuthAction.html",[0,0.548,1,3.432,2,0.51,3,0.022,4,0.022,5,0.026,6,2.234,8,1.062,9,3.969,10,1.137,11,1.093,12,3.245,13,2.953,14,0.963,15,0.164,16,0.367,17,0.83,18,1.321,19,1.224,20,0.189,21,0.184,23,2.935,24,0.127,27,0.005,31,0.454,32,0.396,33,2.346,34,0.086,35,0.377,36,3.233,37,1.927,38,2.252,39,1.927,40,0.061,41,0.593,42,2.183,43,3.297,44,1.182,45,2.21,46,3.581,47,2.765,48,3.839,49,3.021,50,4.76,51,4.095,52,3.581,53,2.288,54,3.505,55,2.663,56,3.505,57,3.342,58,3.581,59,3.581,60,1.453,61,3.581,62,2.288,63,3.297,64,3.602,65,4.001,66,1.965,67,2.288,68,2.004,69,1.857,70,1,71,2.346,72,2.935,73,1.137,74,2.288,75,2.288,76,2.046,77,3.297,78,2.288,79,2.288,80,3.297,81,3.115,82,1.927,83,1.49,84,1.965,85,0.856,86,1.965,87,2.004,88,1.673,89,2.346,90,2.346,91,3.366,92,3.283,93,1.916,94,3.283,95,1.368,96,1.368,97,1.278,98,2.346,99,2.346,100,2.288,101,2.089,102,2.346,103,2.089,104,1.701,105,2.288,106,2.234,107,3.205,108,2.288,109,3.063,110,1.364,111,2.089,112,2.288,113,0.585,114,2.346,115,2.288,116,2.346,117,2.288,118,1.594,119,2.346,120,2.346,121,3.366,122,2.876,123,2.346,124,2.346,125,2.346,126,2.234,127,0.002,128,0.003,129,0.002,4859,4.313]],["title/classes/User.html",[0,0.279,49,1.598]],["body/classes/User.html",[0,0.432,2,0.919,3,0.04,4,0.04,5,0.048,17,0.901,19,1.188,20,0.147,21,0.388,24,0.228,26,0.531,27,0.005,28,0.521,29,0.531,40,0.048,49,2.895,85,1.047,127,0.004,128,0.004,129,0.004,1089,4.887,1438,7.081,1440,7.081,4860,7.771,4861,6.973,4862,7.771,4863,6.973,4864,6.973,4865,6.973]],["title/classes/UserApplicationNotRegistered.html",[0,0.279,2278,3.054]],["body/classes/UserApplicationNotRegistered.html",[0,0.529,2,0.681,3,0.03,4,0.03,5,0.035,8,1.021,14,0.947,15,0.22,16,0.448,17,0.749,18,1.663,19,1.213,20,0.195,21,0.246,22,1.499,24,0.247,26,0.394,27,0.005,28,0.386,29,0.394,31,0.607,32,0.529,34,0.09,35,0.504,40,0.06,41,0.792,49,3.343,60,1.353,83,1.695,95,1.291,96,1.291,97,1.207,113,1.316,127,0.003,128,0.004,129,0.003,413,1.927,414,1.405,415,1.461,416,1.644,417,1.644,434,2.219,523,4.4,1109,3.217,1142,4.701,1222,4.107,2058,3.306,2272,5.126,2273,3.753,2276,4.064,2277,5.126,2278,5.44,2279,5.126,2280,5.126,2281,3.134,2282,3.753,2283,4.064,2284,5.324,2285,4.064,2286,4.064,2287,4.064,2288,3.753,4866,7.55,4867,5.763]],["title/classes/UserApplicationRegistered.html",[0,0.279,2277,3.054]],["body/classes/UserApplicationRegistered.html",[0,0.529,2,0.681,3,0.03,4,0.03,5,0.035,8,1.021,14,0.947,15,0.22,16,0.448,17,0.749,18,1.663,19,1.213,20,0.195,21,0.246,22,1.499,24,0.247,26,0.394,27,0.005,28,0.386,29,0.394,31,0.607,32,0.529,34,0.09,35,0.504,40,0.06,41,0.792,49,3.343,60,1.353,83,1.695,95,1.291,96,1.291,97,1.207,113,1.316,127,0.003,128,0.004,129,0.003,413,1.927,414,1.405,415,1.461,416,1.644,417,1.644,434,2.219,523,4.4,1109,3.217,1142,4.701,1222,4.107,2058,3.306,2272,5.126,2273,3.753,2276,4.064,2277,5.44,2278,5.126,2279,5.126,2280,5.126,2281,3.134,2282,3.753,2283,5.324,2284,4.064,2285,4.064,2286,4.064,2287,4.064,2288,3.753,4868,7.55,4869,5.763]],["title/classes/UserContext.html",[0,0.279,2551,3.908]],["body/classes/UserContext.html",[0,0.429,2,0.911,3,0.04,4,0.04,5,0.047,19,1.221,20,0.146,21,0.386,24,0.226,26,0.526,27,0.005,28,0.516,29,0.526,40,0.047,81,3.893,85,1.063,127,0.004,128,0.004,129,0.004,1089,4.848,1438,7.047,1440,7.047,2551,7.047,2656,6.916,4861,6.916,4863,6.916,4864,6.916,4865,6.916,4870,9.045,4871,7.708,4872,7.708]],["title/injectables/UserEffects.html",[827,4.162,856,1.393]],["body/injectables/UserEffects.html",[0,0.241,1,3.439,3,0.022,4,0.022,5,0.026,8,0.985,15,0.165,16,0.368,20,0.159,21,0.185,24,0.246,26,0.296,27,0.005,28,0.29,29,0.296,31,0.834,32,0.726,34,0.115,35,0.378,40,0.026,42,2.191,49,3.285,70,2.082,81,2.67,110,1.922,113,1.183,127,0.002,128,0.003,129,0.002,150,0.885,165,2.257,169,2.094,181,2.315,202,4.181,249,1.911,271,0.78,379,1.7,476,2.576,515,1.528,518,4.421,523,4.503,537,2.564,544,1.202,545,1.202,546,1.235,550,3.373,559,1.202,578,3.68,827,5.147,856,1.723,857,1.898,865,6.17,867,5.147,873,5.584,874,5.447,876,4.307,888,2.355,889,2.242,891,1.898,892,2.053,894,1.528,911,3.777,1109,2.417,1142,3.464,1151,5.584,1222,3.374,1252,4.104,1452,5.649,1482,5.272,1542,5.567,2058,2.484,2059,3.198,2272,5.31,2277,5.103,2278,4.414,2279,5.469,2280,4.414,2282,5.985,2288,2.819,2686,3.291,2876,6.57,3487,5.567,3909,6.637,3962,3.884,4873,4.329,4874,7.251,4875,7.251,4876,7.251,4877,4.329,4878,6.204,4879,7.919,4880,6.204,4881,6.204,4882,7.919,4883,7.105,4884,6.204,4885,6.204,4886,6.204,4887,6.204,4888,4.329,4889,6.204,4890,6.204,4891,6.204,4892,7.919,4893,6.204,4894,8.722,4895,6.204,4896,6.204,4897,6.204,4898,6.204,4899,6.204,4900,6.204,4901,6.204,4902,4.329,4903,6.204,4904,9.493,4905,6.204,4906,6.204,4907,4.329,4908,7.919,4909,6.204,4910,4.329,4911,4.329]],["title/injectables/UserService.html",[856,1.393,3909,3.706]],["body/injectables/UserService.html",[0,0.365,3,0.034,4,0.034,5,0.04,7,2.544,15,0.25,16,0.487,19,1.104,20,0.177,21,0.35,24,0.275,26,0.611,27,0.005,28,0.6,29,0.611,34,0.115,40,0.04,49,3.136,85,0.987,104,3.235,127,0.003,128,0.004,129,0.003,169,1.741,251,1.901,268,1.877,271,1.182,537,2.646,544,1.822,558,3.567,559,1.822,625,3.397,665,5.158,768,3.397,769,3.479,856,2.278,857,2.876,1099,5.577,1100,4.625,1109,3.662,1141,5.784,2070,4.436,3909,6.059,3990,5.885,4883,7.359,4912,6.558,4913,8.949,4914,8.949,4915,8.949,4916,8.202,4917,8.202,4918,6.558,4919,8.202,4920,6.558,4921,6.558,4922,8.202,4923,6.558,4924,6.558,4925,6.558]],["title/interfaces/UserState.html",[744,1.946,758,4.162]],["body/interfaces/UserState.html",[3,0.04,4,0.04,5,0.047,15,0.293,16,0.536,20,0.171,27,0.005,40,0.055,85,0.98,127,0.004,128,0.004,129,0.004,138,2.772,165,1.827,170,2.796,179,2.518,744,2.981,745,4.179,758,7.954,1222,5.487,4926,7.683,4927,10.087,4928,7.683]],["title/modules/UtilitiesModule.html",[601,2.2,615,3.393]],["body/modules/UtilitiesModule.html",[0,0.379,3,0.035,4,0.043,5,0.051,17,0.676,27,0.005,34,0.113,40,0.042,57,3.55,68,3.166,73,1.795,127,0.003,128,0.004,129,0.003,271,1.228,275,3.529,285,2.441,286,2.404,287,2.441,288,2.441,289,2.441,290,2.441,291,2.08,292,2.17,293,2.441,294,2.441,295,2.441,296,2.368,297,2.265,298,2.404,299,2.441,300,2.441,301,2.441,302,1.559,303,2.441,304,2.11,307,2.201,372,3.568,387,3.515,601,2.987,603,3.448,604,3.909,605,5.542,606,4.023,607,4.83,615,6.98,616,4.959,617,4.147,619,3.705,621,4.568,626,5.281,629,4.023,994,5.308,1317,4.804,4929,6.113,4930,6.113,4931,6.113,4932,6.812,4933,6.812,4934,6.812,4935,6.812,4936,6.812]],["title/pipes/XAxisTickFormatPipe.html",[1252,2.12,2920,3.908]],["body/pipes/XAxisTickFormatPipe.html",[0,0.241,3,0.022,4,0.022,5,0.026,9,2.828,14,0.423,20,0.137,24,0.213,26,0.495,27,0.005,28,0.562,29,0.495,31,0.654,32,0.916,34,0.087,40,0.026,85,1.059,88,3.073,127,0.002,128,0.003,129,0.002,165,1.883,169,2.239,206,2.578,243,1.462,251,1.004,268,1.66,271,0.781,302,1.421,447,3.474,558,4.746,559,1.203,914,4.284,933,2.638,945,4.378,1045,3.442,1252,2.624,1377,3.377,1378,4.887,1408,2.828,2429,7.239,2452,4.837,2465,3.888,2697,6.172,2797,4.678,2920,4.837,2943,7.108,2944,7.108,2945,7.108,3411,4.378,3666,7.829,4473,3.888,4937,4.333,4938,4.333,4939,6.208,4940,6.208,4941,10.202,4942,4.333,4943,8.725,4944,7.922,4945,8.725,4946,4.333,4947,6.208,4948,4.333,4949,6.208,4950,6.208,4951,6.208,4952,6.208,4953,6.208,4954,4.333,4955,6.208,4956,4.333,4957,6.208,4958,7.254,4959,7.254,4960,7.254,4961,10.29,4962,6.208,4963,8.385,4964,7.254,4965,7.254,4966,6.208,4967,6.208,4968,6.208,4969,6.208,4970,7.254,4971,6.208,4972,6.208,4973,7.922,4974,4.333,4975,4.333,4976,4.333,4977,4.333,4978,7.254,4979,7.254,4980,4.333,4981,4.333,4982,4.333,4983,4.333,4984,7.922,4985,6.208,4986,6.208,4987,4.333,4988,4.333,4989,4.333,4990,4.333,4991,4.333,4992,4.333,4993,6.208]],["title/dependencies.html",[604,3.467,4994,4.173]],["body/dependencies.html",[4,0.034,20,0.126,27,0.005,35,0.722,36,2.963,37,2.963,110,1.462,127,0.003,128,0.004,129,0.003,189,2.803,271,1.196,273,4.492,274,4.037,275,4.278,383,2.271,420,1.867,442,3.021,542,5.824,543,5.587,544,1.842,604,3.805,616,3.916,629,3.916,632,3.356,642,4.452,643,3.282,645,5.502,646,5.502,648,5.502,649,7.008,650,6.852,653,5.502,654,5.502,655,5.502,665,4.171,666,4.319,667,4.319,679,4.037,682,3.805,760,4.677,889,3.435,1106,4.677,1107,5.824,1408,3.763,2092,4.486,2562,5.502,2794,4.037,2938,5.951,2939,5.951,4006,5.951,4995,6.632,4996,10.121,4997,6.632,4998,6.632,4999,6.632,5000,6.632,5001,6.632,5002,6.632,5003,6.632,5004,6.632,5005,6.632,5006,9.414,5007,6.632,5008,6.632,5009,6.632,5010,6.632,5011,6.632,5012,6.632,5013,6.632,5014,6.632,5015,6.632,5016,6.632,5017,6.632,5018,6.632,5019,6.632,5020,6.632,5021,6.632,5022,6.632,5023,6.632,5024,6.632,5025,8.259,5026,6.632,5027,6.632,5028,6.632,5029,6.632,5030,6.632,5031,6.632,5032,6.632]],["title/miscellaneous/enumerations.html",[5033,3.251,5034,5.422]],["body/miscellaneous/enumerations.html",[1,1.591,3,0.017,6,1.737,8,0.782,10,2.392,11,0.85,12,3.053,13,2.546,15,0.128,27,0.005,32,0.982,42,2.599,43,1.528,44,1.71,45,2.135,46,1.66,47,2.294,48,3.309,49,3.147,50,4.387,51,3.62,52,1.66,53,1.779,54,1.624,55,2.685,56,1.624,57,2.954,58,1.66,59,1.66,60,2.095,61,1.66,62,1.779,63,2.842,64,2.842,65,1.697,66,1.528,67,1.779,70,1.746,75,1.779,76,1.591,77,1.528,78,1.779,79,1.779,80,1.528,81,3.009,82,1.499,84,2.339,86,2.339,87,2.386,93,1.039,113,1.157,118,1.24,127,0.002,128,0.002,129,0.002,132,1.98,134,3.126,136,2.83,138,0.97,146,1.567,153,1.635,172,1.868,177,3.126,178,3.126,218,3.126,219,0.996,220,0.996,221,2.042,222,2.042,223,2.042,224,1.559,302,1.428,314,2.461,338,2.045,362,2.732,379,2.065,385,1.581,396,1.824,397,1.98,401,2.946,402,1.824,403,1.868,404,1.697,405,2.828,406,1.872,407,1.872,408,2.528,409,1.779,410,3.902,411,1.872,412,1.872,413,1.893,414,2.017,415,2.096,416,2.267,417,2.267,418,2.42,419,1.98,431,1.499,432,1.559,433,2.386,438,1.01,443,2.21,444,1.528,445,4.638,446,1.499,447,1.471,448,1.444,449,1.559,450,1.591,451,1.898,452,1.499,453,1.499,454,2.333,455,1.444,456,3.157,457,1.444,458,1.499,459,1.559,460,1.499,461,1.499,462,1.591,463,1.591,464,1.499,465,1.471,466,1.499,467,1.418,468,1.471,469,1.499,470,1.166,471,1.499,472,1.591,473,1.499,474,1.559,475,1.499,476,2.132,477,2.025,523,3.573,531,1.924,551,2.109,574,1.924,596,2.365,684,2.866,698,4.131,709,2.109,711,1.737,725,1.499,728,2.109,747,4.387,838,1.98,839,2.613,845,3.126,847,4,848,1.924,849,2.783,866,1.98,895,3.344,896,2.042,897,1.98,902,2.042,904,2.365,905,2.783,906,4.607,934,4.607,935,3.009,936,3.009,937,3.009,938,3.009,939,3.009,940,3.009,941,3.009,942,3.009,1026,2.184,1030,3.923,1031,2.184,1032,2.042,1088,2.365,1121,3.621,1142,3.483,1161,1.924,1222,2.793,1453,1.779,1463,4.396,1516,2.478,1522,3.229,1525,2.109,1565,3.473,1567,3.793,1645,1.924,1775,2.783,1782,3.344,1789,4.26,1790,2.613,1791,2.184,1996,3.009,1997,4.607,2001,4.26,2010,2.783,2058,2.946,2107,2.783,2166,2.478,2190,2.613,2225,2.184,2250,3.009,2251,4.607,2253,3.009,2254,3.009,2266,4.26,2272,2.042,2273,2.184,2277,2.042,2278,2.042,2279,2.042,2280,2.042,2281,2.793,2282,2.184,2383,3.579,2385,1.924,2686,1.779,2782,2.184,2783,2.365,2795,3.621,2797,3.032,2799,3.621,2814,2.184,2902,1.924,2903,3.126,2909,2.269,3007,3.009,3022,3.793,3025,4.609,3045,3.009,3046,3.009,3047,3.009,3048,3.009,3049,3.009,3069,2.365,3080,2.109,3084,3.032,3085,1.924,3086,1.872,3087,1.98,3088,1.98,3089,1.98,3104,2.109,3108,1.98,3109,1.98,3110,4.063,3111,1.98,3112,1.98,3411,2.365,3417,2.365,3418,2.613,3422,4.26,3423,2.365,3429,2.783,3430,5.799,3435,4.26,3436,2.783,3664,3.009,3669,3.009,3840,2.184,3841,2.269,3844,3.344,3845,2.042,3846,2.042,3847,2.365,3848,2.042,3849,2.365,3850,2.042,3851,2.365,3852,2.365,4538,3.009,4547,4.607,4595,3.009,4596,3.009,4597,3.009,4598,3.009,4599,3.009,4600,3.009,4601,3.009,4602,3.009,5033,2.613,5034,3.009,5035,4.607,5036,3.009,5037,3.009,5038,3.009,5039,3.354,5040,3.009,5041,6.272,5042,3.009,5043,3.354,5044,3.354,5045,3.354,5046,3.009,5047,3.354,5048,3.009,5049,3.354,5050,3.009,5051,3.009,5052,3.354,5053,3.354,5054,3.009,5055,3.009]],["title/index.html",[15,0.191,5056,4.501]],["body/index.html",[2,0.514,27,0.005,57,1.838,127,0.002,128,0.003,129,0.002,205,3.954,235,2.489,236,1.446,275,2.252,304,1.347,311,3.081,313,2.489,316,2.489,318,2.489,320,2.453,322,2.489,325,3.081,327,2.991,329,2.489,330,3.035,334,2.489,337,2.527,340,2.489,343,2.991,345,3.081,346,2.489,348,3.035,350,2.489,351,2.489,353,2.453,355,2.489,357,2.527,358,2.489,359,2.453,361,2.489,364,2.489,366,2.489,368,2.489,370,2.489,372,3.081,374,2.417,375,2.489,377,2.489,378,2.489,380,2.489,382,2.489,384,2.489,386,1.467,387,3.035,389,2.453,391,2.453,516,5.37,518,4.058,601,1.907,602,7.623,603,2.201,604,2.495,605,2.648,606,2.568,607,2.307,608,3.902,609,3.902,610,3.902,611,3.902,612,5.37,613,7.655,614,6.204,615,6.506,616,3.676,617,2.648,681,2.832,725,1.943,745,2.365,768,3.765,857,1.907,861,4.734,914,4.293,1057,7.864,1058,3.902,1059,3.902,1060,3.902,1061,5.37,1062,7.276,1252,1.838,1894,4.058,2071,5.126,2170,3.902,2171,3.902,2173,3.902,2174,3.902,2175,5.37,2205,5.37,2457,3.067,2854,5.37,2915,8.173,2916,3.902,2917,3.902,2918,3.902,2919,3.902,2920,5.664,2921,5.37,3905,3.902,3906,3.902,3907,5.37,3908,5.664,3909,5.37,3963,7.864,3964,3.902,3965,3.902,3966,3.902,3967,5.37,3999,3.902,4000,3.902,4132,6.806,4133,3.902,4134,3.902,4135,3.902,4136,5.37,4438,3.902,4929,3.902,4930,3.902,4931,3.902,5056,3.902,5057,4.349,5058,4.349,5059,4.349,5060,4.349,5061,4.349]],["title/modules.html",[603,3.482]],["body/modules.html",[27,0.004,127,0.003,128,0.004,129,0.003,467,4.232,543,7.039,602,5.516,603,3.779,612,5.516,613,5.516,614,5.516,615,5.05,649,8.107,1057,5.817,1061,5.516,1062,5.265,2915,5.817,2921,5.516,3963,5.817,3967,5.516,4132,5.817,4136,5.516,5062,10.405,5063,10.591,5064,10.011]],["title/routes.html",[681,4.48]],["body/routes.html",[27,0.004,127,0.004,128,0.004,129,0.004,681,5.416]],["title/miscellaneous/typealiases.html",[5033,3.251,5065,6.042]],["body/miscellaneous/typealiases.html",[1,2.884,6,3.149,15,0.232,20,0.115,27,0.005,43,2.77,46,3.009,52,3.009,54,2.945,56,2.945,58,3.009,59,3.009,61,3.009,65,3.077,77,2.77,80,2.77,122,2.826,126,4.049,127,0.003,128,0.004,129,0.003,132,3.59,183,4.759,184,3.702,396,3.307,397,3.59,402,3.307,404,3.077,406,3.394,407,3.394,409,3.226,411,3.394,412,3.394,413,2.248,430,4.759,431,2.717,432,2.826,433,3.633,444,2.77,446,2.717,448,2.617,452,2.717,453,2.717,455,2.617,458,2.717,460,2.717,461,2.717,464,2.717,465,2.666,466,2.717,469,2.717,471,2.717,473,2.717,475,2.717,501,3.633,551,3.824,838,3.59,839,4.737,852,4.288,855,6.486,866,3.59,896,3.702,897,3.59,902,3.702,1026,3.96,1032,3.702,1039,5.288,1525,3.824,1645,3.488,2225,3.96,2272,3.702,2273,3.96,2277,3.702,2278,3.702,2279,3.702,2280,3.702,2288,5.091,2385,3.488,2782,3.96,2783,4.288,2797,3.59,2814,3.96,2817,5.775,2902,3.488,3069,4.288,3076,5.775,3080,3.824,3085,3.488,3086,3.394,3087,3.59,3088,3.59,3089,3.59,3103,5.091,3104,3.824,3108,3.59,3109,3.59,3111,3.59,3112,3.59,3120,5.091,3417,4.288,3418,4.737,3423,4.288,3427,6.486,3840,3.96,3841,4.113,3845,3.702,3846,3.702,3848,3.702,3850,3.702,3859,5.091,5033,4.737,5035,5.456,5036,5.456,5037,5.456,5038,5.456,5040,5.456,5041,5.456,5042,5.456,5046,5.456,5048,5.456,5050,5.456,5051,5.456,5054,5.456,5055,5.456,5066,6.08]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1045,"title":{},"body":{"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0${value}`.slice",{"_index":2442,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["0.3rem",{"_index":4833,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["0.5",{"_index":4602,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.0",{"_index":5001,"title":{},"body":{"dependencies.html":{}}}],["0.5.27",{"_index":5023,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":3658,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["0.9.1",{"_index":5032,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":725,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.14",{"_index":5024,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":5018,"title":{},"body":{"dependencies.html":{}}}],["1.2.27",{"_index":5002,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":5030,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2166,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["100",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["1000",{"_index":1123,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["11.0.1",{"_index":5007,"title":{},"body":{"dependencies.html":{}}}],["119",{"_index":5060,"title":{},"body":{"index.html":{}}}],["12",{"_index":2839,"title":{},"body":{"components/FeedComponent.html":{}}}],["13",{"_index":5061,"title":{},"body":{"index.html":{}}}],["13.0.2",{"_index":5011,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":5057,"title":{},"body":{"index.html":{}}}],["15",{"_index":4436,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["150",{"_index":2325,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["16",{"_index":4434,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":3348,"title":{},"body":{"components/IconComponent.html":{}}}],["1m",{"_index":2911,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["2",{"_index":709,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":297,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2.0.1",{"_index":5025,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":5020,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":5013,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":5022,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":5017,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":2328,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["2020",{"_index":287,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["25",{"_index":5059,"title":{},"body":{"index.html":{}}}],["2px",{"_index":4830,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2457,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/DateTimeNgb.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"index.html":{}}}],["3.6.1",{"_index":5028,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4438,"title":{},"body":{"components/TimeLineComponent.html":{},"index.html":{}}}],["30px",{"_index":1887,"title":{},"body":{"components/CardComponent.html":{}}}],["31536000000",{"_index":2128,"title":{},"body":{"injectables/CardService.html":{}}}],["32",{"_index":2323,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["32px",{"_index":3347,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":4600,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["362",{"_index":3875,"title":{},"body":{"components/ResizableComponent.html":{}}}],["38",{"_index":5058,"title":{},"body":{"index.html":{}}}],["4",{"_index":3079,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":5010,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":5019,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":5021,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":5004,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":5015,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1876,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1577,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["404",{"_index":3486,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["48",{"_index":2110,"title":{},"body":{"injectables/CardService.html":{}}}],["5",{"_index":2247,"title":{"classes/HandleUnexpectedError-5.html":{}},"body":{"interfaces/ConfigState.html":{}}}],["5.12.1",{"_index":5003,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1579,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":2229,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1878,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":2836,"title":{"classes/HandleUnexpectedError-6.html":{}},"body":{"components/FeedComponent.html":{}}}],["6.3.3",{"_index":5026,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2107,"title":{},"body":{"injectables/CardService.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["60000",{"_index":2879,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["64px",{"_index":3345,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":2842,"title":{},"body":{"components/FeedComponent.html":{}}}],["7.1.0",{"_index":5006,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":5005,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":4463,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["8",{"_index":1210,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["8.0.4",{"_index":5014,"title":{},"body":{"dependencies.html":{}}}],["8.2.14",{"_index":4996,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":4998,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["90",{"_index":3412,"title":{},"body":{"components/InfoComponent.html":{}}}],["9999px",{"_index":2538,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["_",{"_index":1108,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(tmpmoment",{"_index":4530,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":4488,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(array.from(currentinputversions",{"_index":4736,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":4042,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":4043,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(inputpublishers",{"_index":4721,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(uncachedpublishers",{"_index":4729,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":3761,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":1166,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":3033,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1692,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":4816,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.isequal(status",{"_index":4102,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["_.isequal(thirdactionstatus",{"_index":3467,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["_defaultfilters",{"_index":3008,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":3383,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":4022,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":2548,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1797,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":3124,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["_locale:string",{"_index":3281,"title":{},"body":{"injectables/I18nService.html":{}}}],["_modalservice",{"_index":262,"title":{},"body":{"components/ActionComponent.html":{}}}],["_resizesubject",{"_index":1697,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["_selectediframeurl",{"_index":3360,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":3729,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":3384,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":3265,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":3282,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":3385,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":2017,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":3258,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["above",{"_index":2890,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["abstractcontrol",{"_index":2509,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["accept",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(auth",{"_index":1503,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authenticationinfo",{"_index":1491,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":1505,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(this.authservice.providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1539,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":58,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":59,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":1479,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":1091,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["accessors",{"_index":1806,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":4944,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":1461,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["account",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["accumulated",{"_index":2910,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accumulation",{"_index":2889,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["action'},{'name",{"_index":310,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["action(null",{"_index":182,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["action).pipe",{"_index":4105,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.buttonstyle",{"_index":2642,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":2643,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.component.html",{"_index":248,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.component.scss",{"_index":246,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.key",{"_index":4109,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.label.key",{"_index":284,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.payload",{"_index":867,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["action.payload.actionkey",{"_index":3458,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.actions",{"_index":3474,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.card",{"_index":3448,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.cardid",{"_index":3456,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.event.url.indexof(\"/archives/cards/\")>=0",{"_index":2359,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":2355,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":2366,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":2369,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.id",{"_index":3476,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":3623,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":3622,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":2361,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":2354,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":2865,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":2864,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.user",{"_index":4894,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload.versions",{"_index":4655,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["action.service",{"_index":277,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["action.service.ts",{"_index":4071,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:104",{"_index":4093,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:122",{"_index":4089,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:33",{"_index":4077,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:40",{"_index":4086,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:49",{"_index":4091,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:65",{"_index":4084,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:80",{"_index":4081,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.updatestatebeforeaction",{"_index":4125,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actioncomponent",{"_index":235,"title":{"components/ActionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["actionid",{"_index":2569,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionkey",{"_index":495,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionreducermap",{"_index":766,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["actions/archive.actions",{"_index":903,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["actions?:map",{"_index":3433,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["actionsappear",{"_index":1798,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardState.html":{}}}],["actionservice",{"_index":260,"title":{},"body":{"components/ActionComponent.html":{}}}],["actionstatus",{"_index":185,"title":{"classes/ActionStatus.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionstatus(null",{"_index":187,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsurlpath",{"_index":1799,"title":{},"body":{"components/CardComponent.html":{}}}],["actiontype",{"_index":134,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["actionurl",{"_index":4072,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionurlpath",{"_index":255,"title":{},"body":{"components/ActionComponent.html":{}}}],["activate",{"_index":2687,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":2398,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":851,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2995,"title":{},"body":{"classes/Filter.html":{}}}],["active_from_param",{"_index":939,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["active_to_param",{"_index":941,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activedetail",{"_index":2682,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":2688,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activefrom",{"_index":940,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activeto",{"_index":942,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":393,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualizedaction",{"_index":3468,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["add",{"_index":418,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CardOperation.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addactionsappear",{"_index":396,"title":{"classes/AddActionsAppear.html":{}},"body":{"classes/AddActionsAppear.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addactionsappear(this.lightcard.id",{"_index":1860,"title":{},"body":{"components/CardComponent.html":{}}}],["addactionsappear(urlparts[3",{"_index":1994,"title":{},"body":{"components/CardListComponent.html":{}}}],["addauthheadersifnecessary",{"_index":4620,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":4624,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1946,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["adding",{"_index":4411,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["addlightcardfailure",{"_index":431,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":2043,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["adds",{"_index":462,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addthirdactions",{"_index":461,"title":{"classes/AddThirdActions.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addthirdactions({card",{"_index":3484,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["administrator",{"_index":2329,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["af.payload.name",{"_index":2047,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":2051,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":2661,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ahead",{"_index":383,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["alarm",{"_index":3022,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1693,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":2646,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":5066,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1888,"title":{},"body":{"components/CardComponent.html":{}}}],["allowed",{"_index":1737,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["allows",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":476,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":2414,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":4995,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4997,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":4999,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":271,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":682,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":1750,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ConfirmModalComponent.html":{}}}],["anymore",{"_index":1386,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["anyway",{"_index":2134,"title":{},"body":{"injectables/CardService.html":{},"components/ConfirmModalComponent.html":{}}}],["api",{"_index":4212,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["apiversion",{"_index":4234,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["app",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationEffects.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["app/modules/utilities/components/resizable/resizable.component",{"_index":1991,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["appcomponent",{"_index":311,"title":{"components/AppComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":2700,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":390,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":419,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"directives/DraggableDirective.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["appeffects",{"_index":831,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["application/x",{"_index":1206,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["applied",{"_index":3652,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["applies",{"_index":2992,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":1521,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{}}}],["applyfilter",{"_index":838,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":2981,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":2873,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":834,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":602,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":392,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":832,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":1318,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["approutingmodule",{"_index":612,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":545,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["archive",{"_index":314,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archive.filters.{{filterpath",{"_index":2534,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["archive.search",{"_index":975,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveactions",{"_index":1039,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/typealiases.html":{}}}],["archiveactiontypes",{"_index":895,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveactiontypes.archivequerysuccess",{"_index":1029,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.handleunexpectederror",{"_index":1035,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.selectarchivedlightcard",{"_index":1038,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.sendarchivequery",{"_index":1034,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivefilter",{"_index":1033,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivepage",{"_index":1037,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archived",{"_index":410,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveeffects",{"_index":822,"title":{"injectables/ArchiveEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{}}}],["archivefilterscomponent",{"_index":313,"title":{"components/ArchiveFiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archiveform",{"_index":909,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveinitialstate",{"_index":1043,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["archivelistcomponent",{"_index":316,"title":{"components/ArchiveListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivelistpagecomponent",{"_index":318,"title":{"components/ArchiveListPageComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivepath",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["archivequerysuccess",{"_index":896,"title":{"classes/ArchiveQuerySuccess.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archivequerysuccess({resultpage",{"_index":872,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["archivereducer",{"_index":796,"title":{},"body":{"interfaces/AppState.html":{}}}],["archives",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":321,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":1066,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":1048,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":1047,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":320,"title":{"components/ArchivesComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":1057,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":1061,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivestate",{"_index":748,"title":{"interfaces/ArchiveState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{}}}],["archivesurl",{"_index":2061,"title":{},"body":{"injectables/CardService.html":{}}}],["args",{"_index":3219,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1",{"_index":3221,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1])[args[2",{"_index":3222,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":3231,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":2713,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["arise",{"_index":1383,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["array",{"_index":2584,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":3760,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array.from(actions.entries",{"_index":1868,"title":{},"body":{"components/CardComponent.html":{}}}],["array.from(calcelements",{"_index":1771,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(currentcachedversions",{"_index":4737,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["array.from(fixedelements",{"_index":1759,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(versions.values()).map(version",{"_index":4677,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["arrow::after",{"_index":4837,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":1126,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askcreateuser",{"_index":4914,"title":{},"body":{"injectables/UserService.html":{}}}],["askcreateuser(userdata",{"_index":4917,"title":{},"body":{"injectables/UserService.html":{}}}],["askfori18njson",{"_index":4244,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["askfori18njson(publisher",{"_index":4205,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["askforoauthaccesstoken",{"_index":1364,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfromcode(code",{"_index":1223,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfrompassword(login",{"_index":1237,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenurl",{"_index":1127,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askuserapplicationregistered",{"_index":4915,"title":{},"body":{"injectables/UserService.html":{}}}],["askuserapplicationregistered(user",{"_index":4919,"title":{},"body":{"injectables/UserService.html":{}}}],["assets/i18n",{"_index":3286,"title":{},"body":{"injectables/I18nService.html":{}}}],["assets/styles/_variables.scss",{"_index":3354,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":1164,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["async",{"_index":1020,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["attachaction",{"_index":2552,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":2567,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["attribute",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["auth",{"_index":1258,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.firstname",{"_index":1254,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.lastname",{"_index":1256,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticate",{"_index":1548,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":1538,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["authentication/authentication.service",{"_index":2093,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":100,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.implicitallyauthenticated",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":112,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologin",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologout",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.unabletorefreshorgettoken",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.unauthenticationfromimplicitflow",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.uselessauthaction",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationeffects",{"_index":777,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{}}}],["authenticationguard",{"_index":692,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationmodehandler",{"_index":1139,"title":{"interfaces/AuthenticationModeHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticationreducer",{"_index":764,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["authentificated",{"_index":4889,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authinfo",{"_index":1499,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":1441,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authmodehandler",{"_index":1138,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authobject",{"_index":1087,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization",{"_index":1323,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization_code",{"_index":1229,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authservice",{"_index":1452,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{}}}],["authstate",{"_index":749,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authstate.firstname",{"_index":2602,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.identifier",{"_index":2600,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.lastname",{"_index":2603,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.token",{"_index":2601,"title":{},"body":{"components/DetailComponent.html":{}}}],["auto",{"_index":998,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["autoscale",{"_index":4443,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":467,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["availableheight",{"_index":1768,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["availableheight}px",{"_index":1774,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["await",{"_index":1315,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["axis",{"_index":2945,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":3259,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":729,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["background",{"_index":4836,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["backwardconf",{"_index":4456,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["badge",{"_index":1886,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":323,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["base64",{"_index":2305,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["based",{"_index":1739,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["basehref",{"_index":3337,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":3340,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":4593,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":4590,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":4592,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":322,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:27",{"_index":2754,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":2752,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":2753,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":2769,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":2771,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":2770,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":2768,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:34",{"_index":2767,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:40",{"_index":2764,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:70",{"_index":2763,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:75",{"_index":2766,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:79",{"_index":2761,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:83",{"_index":2759,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:88",{"_index":2760,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:94",{"_index":2762,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:98",{"_index":2765,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1611,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basically",{"_index":4209,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["bearer",{"_index":1324,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["bearing",{"_index":1746,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["beat",{"_index":2802,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":2136,"title":{},"body":{"injectables/CardService.html":{},"interfaces/TimelineState.html":{}}}],["behaviour",{"_index":2962,"title":{},"body":{"classes/Filter.html":{}}}],["being",{"_index":2143,"title":{},"body":{"injectables/CardService.html":{}}}],["best",{"_index":4936,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["beware",{"_index":1230,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["big",{"_index":3344,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":2553,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":2571,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":2738,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":275,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":274,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["border",{"_index":982,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2961,"title":{},"body":{"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["bottom",{"_index":1877,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1380,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{}}}],["breaks",{"_index":740,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["bright",{"_index":3317,"title":{},"body":{"components/IconComponent.html":{}}}],["bright:string",{"_index":3333,"title":{},"body":{"components/IconComponent.html":{}}}],["browse",{"_index":5063,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":3878,"title":{},"body":{"components/ResizableComponent.html":{}}}],["btn",{"_index":3562,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3436,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":4527,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["build",{"_index":1141,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["buildconfigselector",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TimeLineComponent.html":{}}}],["buildfilterselector",{"_index":2905,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":3171,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"components/TimeLineComponent.html":{}}}],["buildsettingsselector",{"_index":1647,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":1458,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1856,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailComponent.html":{}}}],["button.addeventlistener('click",{"_index":2645,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":2637,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":2641,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":2644,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1864,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":139,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["buttontitle",{"_index":4454,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["c",{"_index":286,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["cachedpublishers",{"_index":4718,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification",{"_index":4727,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification.foreach(third",{"_index":4730,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions",{"_index":4715,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions[third",{"_index":4734,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["calc",{"_index":994,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calcelements",{"_index":1754,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight",{"_index":1698,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight(parentid",{"_index":1712,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightclass",{"_index":1699,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightdirective",{"_index":387,"title":{"directives/CalcHeightDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["calcheightdirective]'},{'name",{"_index":388,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["calculate",{"_index":1764,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculated",{"_index":1744,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["calculation",{"_index":1741,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["call",{"_index":1192,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["call.pipe",{"_index":1242,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["called",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["calling",{"_index":717,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{}}}],["callmodalandhandleresponse",{"_index":4073,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalandhandleresponse(modalservice",{"_index":4078,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary",{"_index":4074,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary(lightcardid",{"_index":4083,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["canactivate",{"_index":691,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["cancel",{"_index":2253,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cancel,ok,dismiss",{"_index":2267,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["caps",{"_index":1883,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":146,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":326,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card.actions",{"_index":1569,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["card.actions.ts",{"_index":433,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:107",{"_index":3077,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:110",{"_index":3078,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:115",{"_index":3862,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:117",{"_index":3863,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:122",{"_index":502,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:124",{"_index":503,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:129",{"_index":4840,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:131",{"_index":4841,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:136",{"_index":4842,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:138",{"_index":4843,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:143",{"_index":4844,"title":{},"body":{"classes/UpdateAnActionFailure.html":{}}}],["card.actions.ts:150",{"_index":4068,"title":{},"body":{"classes/ThirdActionAlreadyLoaded.html":{}}}],["card.actions.ts:157",{"_index":4069,"title":{},"body":{"classes/ThirdActionAlreadyUpdated.html":{}}}],["card.actions.ts:164",{"_index":2542,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:166",{"_index":2543,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:171",{"_index":3438,"title":{},"body":{"classes/LightCardAlreadyUpdated.html":{}}}],["card.actions.ts:39",{"_index":3545,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:44",{"_index":2781,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:48",{"_index":3549,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:51",{"_index":3550,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:56",{"_index":3546,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:64",{"_index":3547,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:67",{"_index":3548,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:73",{"_index":3895,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:76",{"_index":3896,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:83",{"_index":2200,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:90",{"_index":435,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:93",{"_index":436,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:98",{"_index":4858,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.component.html",{"_index":1796,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1795,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1906,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":807,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":3440,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:120",{"_index":3454,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:35",{"_index":3445,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:45",{"_index":3475,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:58",{"_index":3472,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:93",{"_index":3488,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":3037,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id",{"_index":1850,"title":{},"body":{"components/CardComponent.html":{},"injectables/LightCardEffects.html":{}}}],["card.id.indexof(selectedcardid",{"_index":2022,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":440,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3430,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:12",{"_index":3432,"title":{},"body":{"classes/LightCard.html":{}}}],["card.model.ts:68",{"_index":4606,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.process",{"_index":163,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":4160,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisher}.${card.publisherversion",{"_index":1835,"title":{},"body":{"components/CardComponent.html":{}}}],["card.reducer",{"_index":785,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":3915,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":3029,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":3038,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.state",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card1.lttd",{"_index":1966,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1970,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1960,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2",{"_index":1959,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.lttd",{"_index":1967,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1969,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1961,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card:card",{"_index":2659,"title":{},"body":{"classes/DetailContext.html":{}}}],["card:lightcard",{"_index":3034,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":430,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":401,"title":{},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.addactionsappear",{"_index":400,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.clearcard",{"_index":422,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":429,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcard",{"_index":426,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardfailure",{"_index":427,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardsuccess",{"_index":428,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":423,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":424,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":425,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":325,"title":{"components/CardComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":327,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":772,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":752,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardid",{"_index":494,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cardids",{"_index":2002,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":2169,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":329,"title":{"components/CardListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":1995,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperation.converttypeintoenum",{"_index":2147,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":774,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":2062,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":2001,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":2036,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":2039,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":2009,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":786,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":490,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":349,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards.map(card",{"_index":4696,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cards/cards.module",{"_index":1074,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1077,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1080,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1900,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":861,"title":{"injectables/CardService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1062,"title":{"modules/CardsModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":750,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardsurl",{"_index":2063,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":2968,"title":{},"body":{"classes/Filter.html":{}}}],["careful",{"_index":3769,"title":{},"body":{"components/NavbarComponent.html":{}}}],["case",{"_index":1378,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["case('logout",{"_index":1389,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["case('token_refresh_error",{"_index":1388,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch",{"_index":1360,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch(error",{"_index":4116,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["catcherror",{"_index":891,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror((err",{"_index":1930,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((error",{"_index":873,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":1017,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":4216,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["catcherror(errorresponse",{"_index":1492,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["catcherror(function",{"_index":1215,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["category",{"_index":1465,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":874,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["causes",{"_index":3883,"title":{},"body":{"components/ResizableComponent.html":{}}}],["cell",{"_index":4827,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1889,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":4452,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":2986,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":2974,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":2984,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":848,"title":{},"body":{"classes/ApplyFilter.html":{},"components/CustomLogoComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changed",{"_index":2268,"title":{},"body":{"components/ConfirmModalComponent.html":{},"components/TimeFilterComponent.html":{}}}],["changelocale",{"_index":3126,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":3146,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":3191,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changes",{"_index":2670,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":2695,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":2785,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":4194,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":1209,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["chart",{"_index":4615,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":339,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2942,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2941,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2951,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2936,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2939,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["check",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":1444,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkauthentication(token",{"_index":1199,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkauthenticationstatus",{"_index":46,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":1445,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkelement",{"_index":943,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkelement(filterdatetypes",{"_index":962,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone(formerstatus",{"_index":4085,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["checkimplicitflowauthentication",{"_index":1446,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkimplicitflowauthenticationstatus",{"_index":61,"title":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checking",{"_index":1403,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checks",{"_index":1193,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenresponse",{"_index":1404,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenurl",{"_index":1124,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkuserapplication",{"_index":4874,"title":{},"body":{"injectables/UserEffects.html":{}}}],["child",{"_index":2423,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1081,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["choose",{"_index":1149,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["cid",{"_index":1084,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["circle",{"_index":4832,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["claim",{"_index":1174,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":3782,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"index.html":{}}}],["clear",{"_index":403,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":1278,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clearcard",{"_index":402,"title":{"classes/ClearCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearcardselection",{"_index":1919,"title":{},"body":{"injectables/CardEffects.html":{}}}],["clearlightcardselection",{"_index":455,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clicked",{"_index":1561,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1556,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":1131,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clock",{"_index":2805,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":2975,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2996,"title":{},"body":{"classes/Filter.html":{}}}],["closedetails",{"_index":1893,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cluster",{"_index":4945,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":1058,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":1059,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":1060,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":2170,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":2171,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":2173,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_imports",{"_index":2172,"title":{},"body":{"modules/CardsModule.html":{}}}],["cluster_cardsmodule_providers",{"_index":2174,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":2916,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":2917,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":2919,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":2918,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":3905,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":3906,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":3964,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3965,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":3966,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":3999,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":4000,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":4133,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":4134,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":4135,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule",{"_index":4929,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_declarations",{"_index":4930,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":4931,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":4941,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":4453,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["codeflow",{"_index":3570,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":3565,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1952,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["collectionsize",{"_index":1003,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["collectionsize]=\"collectionsize",{"_index":1021,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["color",{"_index":3655,"title":{},"body":{"components/MenuLinkComponent.html":{},"components/TypeFilterComponent.html":{}}}],["combinelatest",{"_index":925,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["combinelatest,observable",{"_index":3280,"title":{},"body":{"injectables/I18nService.html":{}}}],["commonmodule",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{}}}],["comparebylttd(card1",{"_index":1965,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1974,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1968,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1976,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1962,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1972,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1971,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1958,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["complex",{"_index":2413,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["compliant",{"_index":3025,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["component",{"_index":234,"title":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component'},{'name",{"_index":333,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":309,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":236,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/action/action.component",{"_index":2188,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/action/confirm",{"_index":2189,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/archive",{"_index":1064,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["components/card",{"_index":2182,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":2181,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/detail/detail.component",{"_index":2184,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":2183,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/login/login.component",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/custom",{"_index":661,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/icon/icon.component",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/info/info.component",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/menus/menu",{"_index":658,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2924,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/resizable/resizable.component",{"_index":4934,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["components/settings/base",{"_index":3970,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":3972,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":3973,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":3974,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":3969,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":3971,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":3976,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2927,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":4574,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{}}}],["computed",{"_index":3098,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computeddate",{"_index":1845,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates",{"_index":1801,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1811,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":4545,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":4588,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":4585,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":3494,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":3718,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":4539,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":4553,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":4568,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":4556,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":4569,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":4550,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":4567,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":4540,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":4559,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":1351,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["computetextvalidators",{"_index":2747,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":4245,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":4192,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":4218,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["concatall",{"_index":4647,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["conf",{"_index":4354,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key",{"_index":4534,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key].foreach(value",{"_index":4532,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":747,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["config.i18n.supported.locales",{"_index":2236,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["config:any",{"_index":2248,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":2227,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":3076,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1565,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":3072,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":3073,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":3074,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":3075,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":812,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":2249,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":788,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":2205,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":751,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":2866,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":2867,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configue",{"_index":4369,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["configuration",{"_index":1161,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["configured",{"_index":716,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CustomLogoComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["configurl",{"_index":2239,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":331,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["confirmmodalcomponent",{"_index":330,"title":{"components/ConfirmModalComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["confzoom",{"_index":4355,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connect",{"_index":1430,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["connect/logout?redirect_uri=${redirect",{"_index":1596,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["connection",{"_index":1220,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["consequence",{"_index":1480,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1942,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error(\"no",{"_index":2333,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["console.error('an",{"_index":2153,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error('error",{"_index":4657,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["console.error(`error",{"_index":2149,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(err",{"_index":1508,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":1216,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1586,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(\"calcheightdirective",{"_index":1770,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["console.log(\"menulinkcomponent",{"_index":3650,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["console.log(\"ok",{"_index":4897,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"transitioncreateuserapplication",{"_index":4905,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"user",{"_index":4922,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('card",{"_index":2649,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log('listsettingcomponent.isequal",{"_index":3522,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["console.log('no",{"_index":1390,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":4063,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["console.log('unknown",{"_index":4123,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["console.log('your",{"_index":1346,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log(`card",{"_index":2650,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(`error",{"_index":3306,"title":{},"body":{"injectables/I18nService.html":{}}}],["console.log(`location",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`no",{"_index":3471,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.log(`something",{"_index":1912,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["console.log(`this",{"_index":2617,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":4184,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.log(error",{"_index":3487,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["console.log(new",{"_index":1374,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log(this.disabled",{"_index":2775,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["consolidatethirdandversions",{"_index":4748,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions",{"_index":4758,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions:transitionalthirdwithitsversion",{"_index":4709,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["const",{"_index":165,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constants",{"_index":2906,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["constructmomentobj",{"_index":4357,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructmomentobj(mommentojb",{"_index":4360,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_modalservice",{"_index":258,"title":{},"body":{"components/ActionComponent.html":{}}}],["constructor(access_token",{"_index":1093,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3372,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["constructor(authservice",{"_index":4622,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(card",{"_index":2657,"title":{},"body":{"classes/DetailContext.html":{}}}],["constructor(currenttime",{"_index":4294,"title":{},"body":{"classes/TickPayload.html":{}}}],["constructor(date",{"_index":2433,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["constructor(details",{"_index":3997,"title":{},"body":{"classes/State.html":{}}}],["constructor(domsanitizationservice",{"_index":2307,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["constructor(el",{"_index":1704,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["constructor(element",{"_index":2560,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":4025,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":2976,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":2070,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":4129,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":3830,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":3262,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":394,"title":{},"body":{"classes/ActionStatus.html":{},"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":4861,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(message",{"_index":3665,"title":{},"body":{"classes/Message.html":{}}}],["constructor(modal",{"_index":2255,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["constructor(name",{"_index":4065,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":1999,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(platformlocation",{"_index":3319,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor(protected",{"_index":1654,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(readonly",{"_index":2446,"title":{},"body":{"classes/DateTimeNgb.html":{},"classes/DetailContext.html":{},"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":4543,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1807,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(start",{"_index":4605,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":3838,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["constructor(sub",{"_index":2194,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(third",{"_index":4643,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["constructor(thirdsservice",{"_index":4145,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":3144,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":2544,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(totalpages",{"_index":3814,"title":{},"body":{"classes/Page.html":{}}}],["constructor(translateservice",{"_index":3706,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["constructor(type",{"_index":133,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1776,"title":{},"body":{"classes/Card.html":{},"classes/LightCard.html":{}}}],["constructor(url",{"_index":3891,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["constructorcheckimplicitflowauthenticationstatus",{"_index":1572,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["contain",{"_index":2840,"title":{},"body":{"components/FeedComponent.html":{}}}],["containing",{"_index":2379,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["contains",{"_index":470,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["content",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Page.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["contentchildren",{"_index":2678,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":2675,"title":{},"body":{"components/DetailsComponent.html":{}}}],["context",{"_index":3150,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["context.model",{"_index":2593,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["context.model.ts",{"_index":2656,"title":{},"body":{"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["context.model.ts:12",{"_index":2658,"title":{},"body":{"classes/DetailContext.html":{}}}],["context.model.ts:9",{"_index":4871,"title":{},"body":{"classes/UserContext.html":{}}}],["control",{"_index":3503,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["controlvalueaccessor",{"_index":2477,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["convert",{"_index":1269,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":1304,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["convert(value",{"_index":1627,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1685,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertjsontoi18nobject",{"_index":4246,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["convertjsontoi18nobject(locale",{"_index":4201,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["convertspeedintoenum",{"_index":4541,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":4562,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":1998,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":2004,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":2006,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":298,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["copyright",{"_index":285,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["core",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correct",{"_index":4953,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["correctly",{"_index":1225,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":1401,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":1142,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["createentityadapter",{"_index":1955,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["createformgroup",{"_index":4024,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createnotification",{"_index":3798,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createnotification(title",{"_index":3802,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createuserapplication",{"_index":2272,"title":{"classes/CreateUserApplication.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplication({user",{"_index":4906,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonfailure",{"_index":2280,"title":{"classes/CreateUserApplicationOnFailure.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonfailure({error",{"_index":4901,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonsuccess",{"_index":2279,"title":{"classes/CreateUserApplicationOnSuccess.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonsuccess({user",{"_index":4899,"title":{},"body":{"injectables/UserEffects.html":{}}}],["creation",{"_index":2282,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["css",{"_index":2612,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":157,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":2607,"title":{},"body":{"components/DetailComponent.html":{}}}],["curr",{"_index":1762,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["current",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["currentactionpath",{"_index":250,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["currentauthmodehandler",{"_index":1262,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentauthmodehandler.extracttoken",{"_index":1263,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentcachedversions",{"_index":4733,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentcard",{"_index":2549,"title":{},"body":{"components/DetailComponent.html":{}}}],["currentdate",{"_index":4608,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currenthreflocation",{"_index":1601,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["currentinputversions",{"_index":4731,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentlocationhref",{"_index":3376,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentlocationhref.indexof(searchcodestring",{"_index":1421,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentlocationhref.substring(foundindex",{"_index":1424,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currently",{"_index":1580,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentmoment",{"_index":4390,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["currentpage",{"_index":1009,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["currentpath",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["currentrouter",{"_index":715,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["currentrouter.navigate([lastdestination",{"_index":732,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["currentselected",{"_index":1849,"title":{},"body":{"components/CardComponent.html":{}}}],["currentstatus",{"_index":4103,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["currenttime",{"_index":2811,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["currenttimefilter",{"_index":2894,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":2895,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":2897,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":2896,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":4299,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["currentuser",{"_index":4900,"title":{},"body":{"injectables/UserEffects.html":{}}}],["custom",{"_index":335,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customlogo",{"_index":2341,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["customlogocomponent",{"_index":334,"title":{"components/CustomLogoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["customroutereffects",{"_index":800,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":2392,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":337,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["d",{"_index":3941,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TimeLineComponent.html":{}}}],["d.end",{"_index":4498,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.includes(currentselected",{"_index":1851,"title":{},"body":{"components/CardComponent.html":{}}}],["d.map(domain",{"_index":4480,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.start",{"_index":4496,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dark",{"_index":3350,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dat",{"_index":4966,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["data",{"_index":451,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["data:image/svg+xml;base64,${data",{"_index":3764,"title":{},"body":{"components/NavbarComponent.html":{}}}],["date",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date(),\"authentification",{"_index":1375,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date().valueof",{"_index":2106,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1301,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(0",{"_index":1442,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":1312,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(minus2hour.valueof",{"_index":2109,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":2105,"title":{},"body":{"injectables/CardService.html":{}}}],["date(this.oauthservice.getaccesstokenexpiration",{"_index":1370,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(value",{"_index":3241,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.format",{"_index":4980,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format(clusterlevel",{"_index":4972,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hour",{"_index":4986,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":4983,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes",{"_index":4985,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.now",{"_index":1307,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date.seconds",{"_index":4987,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.valueof",{"_index":4978,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.year",{"_index":2460,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateformat",{"_index":3943,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dateinsidetooltipsmonth",{"_index":4971,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsweek",{"_index":4962,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonday",{"_index":4984,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateondaynewyear",{"_index":4988,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonmonth",{"_index":4992,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonweek",{"_index":4991,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonyear",{"_index":4993,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateparts",{"_index":2447,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateparts.length",{"_index":2450,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["datesimplifliedonday",{"_index":4990,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedondaynewyear",{"_index":4989,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datestring",{"_index":963,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetime",{"_index":341,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["datetimefiltercomponent",{"_index":340,"title":{"components/DatetimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["datetimeform",{"_index":2485,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["datetimeformat",{"_index":3944,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["datetimengb",{"_index":928,"title":{"classes/DateTimeNgb.html":{}},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["datetimengb(date",{"_index":949,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetodisplay",{"_index":1800,"title":{},"body":{"components/CardComponent.html":{}}}],["day",{"_index":2452,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["days",{"_index":4424,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd",{"_index":4473,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd/mm",{"_index":4475,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deactivate",{"_index":2690,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1650,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":1715,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["debouncetime(300",{"_index":1718,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["debug",{"_index":3669,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declaration",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["declarations",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["decode",{"_index":1107,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":1358,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["decoration",{"_index":3657,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["decorators",{"_index":876,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["deep",{"_index":4049,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default_height",{"_index":2298,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["default_width",{"_index":2299,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["defaultfilters",{"_index":3009,"title":{},"body":{"injectables/FilterService.html":{}}}],["defaultpath",{"_index":683,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defaultpublisher').set('size",{"_index":2165,"title":{},"body":{"injectables/CardService.html":{}}}],["define",{"_index":1738,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":1231,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delay",{"_index":2223,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["delay(500",{"_index":3453,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delay(this.retrydelay",{"_index":2235,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delayedlightcardupdate",{"_index":473,"title":{"classes/DelayedLightCardUpdate.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["delayupdatelightcard",{"_index":3441,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delegateurl",{"_index":1134,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delete",{"_index":2010,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":3699,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["demand",{"_index":1575,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["dentifier",{"_index":1295,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dependencies",{"_index":604,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":4368,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deprecation",{"_index":3884,"title":{},"body":{"components/ResizableComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserService.html":{}}}],["description$|async",{"_index":3408,"title":{},"body":{"components/InfoComponent.html":{}}}],["deserializable",{"_index":1197,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["desired",{"_index":4019,"title":{},"body":{"modules/StateModule.html":{}}}],["destination",{"_index":723,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["destination.includes(archivepath",{"_index":731,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detail",{"_index":147,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":344,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":2693,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":2547,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":2679,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":343,"title":{"components/DetailComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detailcontext",{"_index":2591,"title":{"classes/DetailContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["detailcontext(this.card,null",{"_index":2625,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcontext):observable",{"_index":3195,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["details",{"_index":176,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["details'},{'name",{"_index":328,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1079,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1892,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":2662,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1891,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1898,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1899,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1895,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":1897,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":1896,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1085,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1078,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["detailscomponent",{"_index":345,"title":{"components/DetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detect",{"_index":4891,"title":{},"body":{"injectables/UserEffects.html":{}}}],["devtools",{"_index":4006,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["didn't",{"_index":1731,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["directive",{"_index":307,"title":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["directives",{"_index":386,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["disabled",{"_index":2486,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["disableinfos",{"_index":3922,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dismiss",{"_index":2254,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dispalyinfos",{"_index":3923,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dispatch",{"_index":1391,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1629,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1686,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["dispatchappstateactionfromoauth2events(event",{"_index":1372,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatchauthactionfromoauthevents",{"_index":1361,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatched",{"_index":4330,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["dispatchupdatethirdaction",{"_index":4075,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["dispatchupdatethirdaction(updatethirdaction",{"_index":4088,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["display",{"_index":1522,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3437,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["displaydate",{"_index":4495,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["displays",{"_index":2912,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["distinctuntilchanged",{"_index":1651,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1671,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged()).subscribe(value",{"_index":4487,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["distributed",{"_index":300,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["divide",{"_index":1752,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":3235,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["document.getelementbyid(this.parentid",{"_index":1728,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["doesn't",{"_index":2651,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":239,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":4370,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domain7dayconf",{"_index":4384,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainmonthconf",{"_index":4387,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domains",{"_index":4356,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainweekconf",{"_index":4386,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainyearconf",{"_index":4388,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":3677,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":3681,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizationservice",{"_index":2300,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["domsanitizer",{"_index":2308,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":2835,"title":{},"body":{"components/FeedComponent.html":{}}}],["down",{"_index":1790,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":2838,"title":{},"body":{"components/FeedComponent.html":{}}}],["drag",{"_index":2717,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":2703,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":2744,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2949,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":2699,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:14",{"_index":2712,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:15",{"_index":2711,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:16",{"_index":2710,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":2723,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:25",{"_index":2716,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:35",{"_index":2720,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:47",{"_index":2722,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":389,"title":{"directives/DraggableDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":2701,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":2704,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":2705,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":4050,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":3783,"title":{},"body":{"components/NavbarComponent.html":{}}}],["due",{"_index":1535,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["duration",{"_index":4583,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":4586,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1950,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":5000,"title":{},"body":{"dependencies.html":{}}}],["e.type",{"_index":1343,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["each",{"_index":4372,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["effect",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":1939,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":4004,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":4013,"title":{},"body":{"modules/StateModule.html":{}}}],["el",{"_index":1707,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["elapsed",{"_index":2803,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":2813,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsofar",{"_index":2848,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":306,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["element.length",{"_index":967,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["elementref",{"_index":1705,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/DetailComponent.html":{}}}],["elements",{"_index":1736,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["email",{"_index":347,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":346,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":1478,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2522,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emitevent:false",{"_index":4328,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["emits",{"_index":1552,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":1520,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["emittedby",{"_index":1517,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["empty",{"_index":447,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptyaction",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptyactionstatus",{"_index":186,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptylightcards",{"_index":446,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":3194,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["enable",{"_index":738,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enabledrag",{"_index":4440,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":4441,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":4195,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":1163,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddate",{"_index":1781,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":4450,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day",{"_index":4394,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day.valueof",{"_index":4465,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj",{"_index":4422,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj.valueof",{"_index":4451,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth",{"_index":4404,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth.valueof",{"_index":4472,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr",{"_index":4418,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr.valueof",{"_index":4462,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek",{"_index":4399,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek.valueof",{"_index":4470,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear",{"_index":4409,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear.valueof",{"_index":4477,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":2412,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":421,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1956,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["entitystate",{"_index":1943,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entries.map(([key",{"_index":1869,"title":{},"body":{"components/CardComponent.html":{}}}],["entry",{"_index":2388,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":4180,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.length",{"_index":4181,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entrycomponents",{"_index":2177,"title":{},"body":{"modules/CardsModule.html":{}}}],["enum",{"_index":41,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["enumeration",{"_index":944,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["enumerations",{"_index":5034,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":769,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":768,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["environment.production",{"_index":835,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.production?prodi18npath:i18npath",{"_index":3290,"title":{},"body":{"injectables/I18nService.html":{}}}],["environment.urls.actions",{"_index":4096,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["environment.urls.auth}/check_token",{"_index":1125,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/code/redirect_uri=${this.computeredirecturi",{"_index":1329,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/token",{"_index":1128,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.cards}/archives",{"_index":2102,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cards",{"_index":2100,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":2098,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":2244,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":4157,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":3990,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UserService.html":{}}}],["environment.urls.users}/users",{"_index":1130,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["equality",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["equally",{"_index":1753,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["equals",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["err",{"_index":1510,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["error(\"light",{"_index":3480,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error('no",{"_index":4183,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":2042,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.status",{"_index":3485,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error.tostring",{"_index":2152,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":3663,"title":{},"body":{"interfaces/MenuState.html":{}}}],["error:string",{"_index":3661,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":1470,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":1467,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1585,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1576,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":2151,"title":{},"body":{"injectables/CardService.html":{}}}],["etc",{"_index":4327,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["evaluate",{"_index":2966,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":2092,"title":{},"body":{"injectables/CardService.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{},"dependencies.html":{}}}],["event\",event",{"_index":1376,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["event('resize",{"_index":3880,"title":{},"body":{"components/ResizableComponent.html":{}}}],["event.detail",{"_index":3703,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.target.value",{"_index":2533,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["event.type",{"_index":1373,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["event.wheeldelta",{"_index":3702,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":2709,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":2078,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":2157,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":2156,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":2148,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":2141,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":2155,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":2076,"title":{},"body":{"injectables/CardService.html":{}}}],["eventtype",{"_index":1110,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["evt",{"_index":3886,"title":{},"body":{"components/ResizableComponent.html":{}}}],["evt.inituievent('resize",{"_index":3888,"title":{},"body":{"components/ResizableComponent.html":{}}}],["example",{"_index":1384,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":3673,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":3127,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":3149,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":2652,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["existing",{"_index":463,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["exists",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["exp",{"_index":1184,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expandedmenu",{"_index":3730,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":3754,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":3731,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":3755,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":1264,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expirationdate",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["expire",{"_index":2135,"title":{},"body":{"injectables/CardService.html":{}}}],["expireclaim",{"_index":1133,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expired",{"_index":1506,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":1092,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["explicit",{"_index":1536,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["explicitly",{"_index":2330,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":607,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["extended",{"_index":450,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1954,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":1160,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus",{"_index":3490,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(action.payload.status",{"_index":3460,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus(currentstatus",{"_index":4100,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(formerstatus",{"_index":4097,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(taction",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractactionstatusfrompseudoactionstatus(thirdactiontoupdate",{"_index":3466,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extracted",{"_index":1153,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extracti18ntoupdate",{"_index":4749,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extracti18ntoupdate(versions",{"_index":4692,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractidentificationinformation",{"_index":1296,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extractparams",{"_index":2395,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":2397,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom",{"_index":4750,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4705,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards",{"_index":4751,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4695,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractstate",{"_index":4064,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":162,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractthirdtoupdate",{"_index":4752,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractthirdtoupdate(versioninput",{"_index":4714,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extracttoken",{"_index":1261,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["f5",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":4831,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["faclock",{"_index":2935,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":408,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":3849,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["failtoupdatetimereference",{"_index":2782,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":2800,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2281,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":1733,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["false",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeFilterComponent.html":{},"interfaces/UserState.html":{}}}],["family_name",{"_index":1181,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["familynameclaim",{"_index":1136,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["fasignoutalt",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":3234,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":684,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2923,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":2820,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":2819,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":4350,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":4349,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":4351,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":4823,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":4822,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.compliant.label",{"_index":4824,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.information.label",{"_index":4825,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":4826,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.timefilter.followclocktick",{"_index":2907,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["feedactions",{"_index":855,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":847,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":842,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":853,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":348,"title":{"components/FeedComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":808,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1979,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":2915,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":2921,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":2827,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1914,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmap",{"_index":4247,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmap(publisher",{"_index":4233,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard",{"_index":4248,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard(card",{"_index":4231,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetcharchivedcards",{"_index":2065,"title":{},"body":{"injectables/CardService.html":{}}}],["fetcharchivedcards(filters",{"_index":2073,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation",{"_index":2066,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":2075,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":2240,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":4249,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":4188,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchlightcard",{"_index":3489,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["fetchthird",{"_index":4250,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":4170,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":3982,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":4048,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["fields",{"_index":2530,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":3355,"title":{},"body":{"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["filter",{"_index":385,"title":{"classes/Filter.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":4801,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":342,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1670,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":2234,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":2893,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":2352,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":2046,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t",{"_index":4222,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(time",{"_index":2888,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(v=>!!v",{"_index":2870,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(x",{"_index":2880,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":1071,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["filter.component.css",{"_index":2483,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filter.component.html",{"_index":2484,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":4021,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2476,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:21",{"_index":3711,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":3709,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:23",{"_index":3708,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:25",{"_index":3707,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":4031,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":4030,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":4027,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":4323,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":3710,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":4800,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":2516,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:35",{"_index":2518,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2496,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:37",{"_index":2515,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2495,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:42",{"_index":4321,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":2517,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:47",{"_index":2513,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:51",{"_index":2501,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:54",{"_index":4798,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":2504,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":2506,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:60",{"_index":4799,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":2510,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":4029,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":2499,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":4028,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:75",{"_index":2498,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:97",{"_index":4320,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":844,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2959,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:23",{"_index":2978,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":2979,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:29",{"_index":2980,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:33",{"_index":2993,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:44",{"_index":2982,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:57",{"_index":2985,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:68",{"_index":2990,"title":{},"body":{"classes/Filter.html":{}}}],["filter/datetime",{"_index":1073,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filter/multi",{"_index":1070,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filter/tags",{"_index":2953,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2934,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2932,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filterdatetypes",{"_index":934,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtered",{"_index":2871,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":2377,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{}}}],["filterpath",{"_index":2494,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filters",{"_index":881,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["filters'},{'name",{"_index":315,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component",{"_index":1068,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["filters.component.css",{"_index":907,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.html",{"_index":908,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/FiltersComponent.html":{}}}],["filters.component.ts",{"_index":906,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filters.component.ts:47",{"_index":924,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:48",{"_index":922,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:49",{"_index":923,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:50",{"_index":921,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:52",{"_index":915,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:66",{"_index":916,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:76",{"_index":919,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:98",{"_index":917,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.effects",{"_index":810,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":2847,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:26",{"_index":2857,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:29",{"_index":2856,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:32",{"_index":2855,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:45",{"_index":2878,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:55",{"_index":2874,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:76",{"_index":2901,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.foreach((values",{"_index":2160,"title":{},"body":{"injectables/CardService.html":{}}}],["filters.set('page",{"_index":884,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":3043,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":3041,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":3039,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters/archive",{"_index":905,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/enumerations.html":{}}}],["filters/datetime",{"_index":1072,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filters/multi",{"_index":1069,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filters[key",{"_index":961,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filterscomponent",{"_index":350,"title":{"components/FiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":2854,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filterstomap",{"_index":910,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filtertype",{"_index":845,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":4045,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":2048,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":4817,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["find",{"_index":4935,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["fires",{"_index":2384,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":2027,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":911,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["first.tostring",{"_index":974,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["firstmovestartofunit",{"_index":4466,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["firstname",{"_index":1438,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname:string",{"_index":4864,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname?:string",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["fixed",{"_index":1740,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedelements",{"_index":1742,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedheightclass",{"_index":1700,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["flatmap",{"_index":1532,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["flow",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["flow.config",{"_index":1117,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["flowmode",{"_index":1526,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["fluent",{"_index":4211,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fn",{"_index":2502,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["followclocktick",{"_index":2849,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["following",{"_index":69,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["font",{"_index":1880,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["foreach((x",{"_index":1772,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["forkjoin",{"_index":4646,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.maplanguages(thirdswiththeirversions)).pipe",{"_index":4656,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapthirds(locale",{"_index":4667,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapversions(locale",{"_index":4674,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["form",{"_index":291,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["form.action",{"_index":4819,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":4818,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.compliant",{"_index":4820,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":4346,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.information",{"_index":4821,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":4345,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":4046,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1635,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":3523,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":2429,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2946,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":4938,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:23",{"_index":4956,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:62",{"_index":4948,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:86",{"_index":4942,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatdatetime",{"_index":2430,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formatted",{"_index":4943,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":3245,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":3248,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatticks",{"_index":4458,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formattime",{"_index":2431,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formattooltipsdate",{"_index":4474,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formb",{"_index":1633,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1691,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["formb.setting",{"_index":3524,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":4026,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":4032,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":926,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":3724,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null",{"_index":4059,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":1201,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["former",{"_index":4121,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formerstatus",{"_index":4087,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formgroup",{"_index":918,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":2418,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":2178,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":653,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forward",{"_index":4425,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardconf",{"_index":4455,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwarddayconf",{"_index":4429,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardmonthconf",{"_index":4427,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardref",{"_index":2481,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["forwardtrconf",{"_index":4430,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardweekconf",{"_index":4428,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardyearconf",{"_index":4426,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":3101,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["foundindex",{"_index":1420,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["france.com",{"_index":290,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["freeze",{"_index":771,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(this.authservice.initandloadauth()).pipe",{"_index":1533,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["from(ts",{"_index":4221,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":759,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":833,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":1083,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["function",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":3256,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":3224,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2964,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":1405,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["future",{"_index":1410,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["g",{"_index":3253,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2960,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":1221,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gently",{"_index":706,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getactions",{"_index":1802,"title":{},"body":{"components/CardComponent.html":{}}}],["getauthenticationmode",{"_index":1392,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getcardoperation",{"_index":2067,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":3057,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":3058,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":3392,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":4322,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":2586,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1827,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getimage",{"_index":2303,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["getitem",{"_index":1300,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getlocale",{"_index":3276,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":1322,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getselectediframeurl",{"_index":3364,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":3751,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":3394,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":3278,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":4144,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":4147,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":3390,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":1219,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["given_name",{"_index":1178,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["givennameclaim",{"_index":1135,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gives",{"_index":1195,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["grand",{"_index":1152,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["grant",{"_index":1416,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["granted",{"_index":3811,"title":{},"body":{"injectables/NotifyService.html":{}}}],["graph",{"_index":5064,"title":{},"body":{"modules.html":{}}}],["group",{"_index":4927,"title":{},"body":{"interfaces/UserState.html":{}}}],["guid",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["guid.create",{"_index":3063,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":1298,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["guidservice",{"_index":1103,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["h",{"_index":4963,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":4601,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handelactionbuttontext",{"_index":2554,"title":{},"body":{"components/DetailComponent.html":{}}}],["handelactionbuttontext(label",{"_index":2573,"title":{},"body":{"components/DetailComponent.html":{}}}],["handle",{"_index":414,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":2562,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":3223,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":3251,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":3237,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":3228,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":3216,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":3211,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":3238,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('json",{"_index":3208,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":3249,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":3244,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":3230,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":3233,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":3218,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.safestring(json.stringify(obj",{"_index":3210,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":3170,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":2175,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1803,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1814,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerrorontokengeneration",{"_index":1449,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":1464,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":1518,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlenewtoken(call",{"_index":1241,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["handler",{"_index":3852,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["handlerejectedlogin",{"_index":1450,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlerejectedlogin(errormsg",{"_index":1468,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":413,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{}},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":875,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":741,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailComponent.html":{}}}],["haschanged",{"_index":4101,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["hashlength",{"_index":721,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hashlocationstrategy",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["header",{"_index":1321,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":1204,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["headers}).pipe",{"_index":1213,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["heardbeat",{"_index":2126,"title":{},"body":{"injectables/CardService.html":{}}}],["heart",{"_index":2801,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":4300,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":2138,"title":{},"body":{"injectables/CardService.html":{}}}],["heatbeat",{"_index":2122,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TypeFilterComponent.html":{}}}],["height.directive",{"_index":4933,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["height.directive.ts",{"_index":1696,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:22",{"_index":1710,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:25",{"_index":1709,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:28",{"_index":1708,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:30",{"_index":1706,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:42",{"_index":1711,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:46",{"_index":1713,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height:auto",{"_index":2540,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["heights",{"_index":1757,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["helper",{"_index":1302,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["here",{"_index":2112,"title":{},"body":{"injectables/CardService.html":{}}}],["hh[h]mm",{"_index":4459,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":3566,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetags",{"_index":3051,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["hidetimeline",{"_index":2821,"title":{},"body":{"components/FeedComponent.html":{}}}],["homedomainextraticks",{"_index":4467,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["horizontal",{"_index":4952,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hostlistener",{"_index":1714,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlistener('document:dragstart",{"_index":2742,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":3694,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":3691,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":3696,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":2725,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":2729,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":2732,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('window:resize",{"_index":1723,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlisteners",{"_index":1702,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hou",{"_index":4965,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hour",{"_index":2472,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["hours",{"_index":4417,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hoursonly",{"_index":4973,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":2611,"title":{},"body":{"components/DetailComponent.html":{}}}],["href=\"javascript:void(0",{"_index":3784,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hrefsofcsslink",{"_index":2550,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":305,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":2568,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":2559,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlelement",{"_index":1727,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["http",{"_index":1320,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":303,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http://www.rte",{"_index":289,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http_interceptors",{"_index":3913,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpclient",{"_index":1099,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":3283,"title":{},"body":{"injectables/I18nService.html":{}}}],["httpclientmodule",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":4630,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":4628,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":1100,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":1205,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["httpinterceptor",{"_index":4631,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":2094,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set(\"apiversion",{"_index":4235,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('locale",{"_index":4206,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('publisher",{"_index":2164,"title":{},"body":{"injectables/CardService.html":{}}}],["httpparams().set('version",{"_index":4199,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams.set",{"_index":4208,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":4625,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":2417,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":3672,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":4150,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":136,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["i18n('login.error.token.expiration",{"_index":1507,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":1497,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":1512,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":4313,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(i18n['key",{"_index":213,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(key",{"_index":1589,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n['parameters",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nbundleversionloaded",{"_index":4650,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["i18nlabelkey",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":4311,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":4312,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18npath",{"_index":3285,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nprefix",{"_index":256,"title":{},"body":{"components/ActionComponent.html":{},"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":2696,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nservice",{"_index":516,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["i18nservice.loadedlocales.add(locale",{"_index":3304,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nservice.loadedlocales.has(this._locale",{"_index":3294,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nservice.localurl",{"_index":3289,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nservice.localurl}${locale}.json",{"_index":3308,"title":{},"body":{"injectables/I18nService.html":{}}}],["iarchivefilter",{"_index":1041,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["icon",{"_index":3310,"title":{},"body":{"components/IconComponent.html":{},"components/MenuLinkComponent.html":{}}}],["icon'},{'name",{"_index":352,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":3312,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":3311,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":3331,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":351,"title":{"components/IconComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":3313,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":3336,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":2638,"title":{},"body":{"components/DetailComponent.html":{}}}],["identifier",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":2387,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["identityclaims",{"_index":1367,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["identityclaims['sub",{"_index":1369,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ie",{"_index":3881,"title":{},"body":{"components/ResizableComponent.html":{}}}],["if(!!control.value",{"_index":3525,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":4338,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":4333,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!parent",{"_index":1734,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["if(!this.form",{"_index":1657,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":3260,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":2863,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(args.length",{"_index":3220,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(changes['card'].currentvalue",{"_index":2694,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(ismoment(realnow",{"_index":4570,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":2008,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":3192,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["if(newelapsedsofar>=this.refreshthreshold",{"_index":2885,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(realm",{"_index":1593,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["if(result",{"_index":1975,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1973,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":3203,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(this.active",{"_index":3001,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":3003,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.expandedmenu[index",{"_index":3776,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":3779,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":4591,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":4578,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":3298,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":3257,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":3756,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(v",{"_index":3646,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe",{"_index":3648,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe_url",{"_index":3100,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":3357,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":354,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":4138,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":3359,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":3358,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":353,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":3369,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["implementation",{"_index":1413,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implemented",{"_index":2648,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":1457,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["implicit",{"_index":63,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitallyauthenticated",{"_index":75,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitauthenticationconfigfallback",{"_index":1115,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler",{"_index":1188,"title":{"classes/ImplicitAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler(this",{"_index":1157,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitconf",{"_index":1140,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitlyauthenticated",{"_index":122,"title":{"classes/ImplicitlyAuthenticated.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import('./modules/archives/archives.module').then(m",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/feed/feed.module').then(m",{"_index":689,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/settings/settings.module').then(m",{"_index":699,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/thirdparty/thirdparty.module').then(m",{"_index":696,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["impossible",{"_index":3307,"title":{},"body":{"injectables/I18nService.html":{}}}],["include",{"_index":4018,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":2779,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":3608,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":356,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":3382,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":3381,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":355,"title":{"components/InfoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["informatios",{"_index":1283,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["inherit",{"_index":3656,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["inheritance",{"_index":2971,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":1986,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inhibe",{"_index":2125,"title":{},"body":{"injectables/CardService.html":{}}}],["iniitialized",{"_index":1327,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["init",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["initandloadauth",{"_index":1336,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initauthstatus",{"_index":43,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code",{"_index":1423,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initchartcomponent",{"_index":357,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":849,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":852,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":2877,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1615,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1684,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initializeauthentication",{"_index":1393,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializeauthentication(currenthreflocation",{"_index":1412,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializeauthentication(currentlocationhref",{"_index":1418,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initialized",{"_index":1226,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializehandlebarstemplates",{"_index":2555,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":2556,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialnavigation",{"_index":737,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":2404,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initsupportedlocales",{"_index":2204,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["initsupportedlocales(config",{"_index":2208,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["inittagfilter",{"_index":3010,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":2850,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":3011,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":3417,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittimeline({data",{"_index":4489,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["inittypefilter",{"_index":3012,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":2222,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":2228,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":856,"title":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["injectables",{"_index":857,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injected",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["inline",{"_index":3410,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":225,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputpublishers",{"_index":4716,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["inputs",{"_index":254,"title":{},"body":{"components/ActionComponent.html":{},"components/ArchiveListComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":218,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":2737,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":1303,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instanciate",{"_index":1660,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":2970,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":2610,"title":{},"body":{"components/DetailComponent.html":{}}}],["instantiateauthmodehandler(mode",{"_index":1154,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instantiateimplicitflowconfiguration",{"_index":1189,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["intercept",{"_index":4621,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":4627,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":2114,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":2115,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":4618,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":3914,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":744,"title":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/ImplicitAuthenticationHandler.html":{},"interfaces/MenuState.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/UserState.html":{}}}],["interfaces",{"_index":745,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["internal",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":3300,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this._locale",{"_index":3246,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":1196,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["invalidform",{"_index":2529,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isauthenticated",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isauthmodecodeorimplicitflow",{"_index":1399,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isdisabled",{"_index":2507,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isequal",{"_index":1616,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1632,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":1276,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isimplicitlyauthenticated",{"_index":1439,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isinthefuture(expirationdate",{"_index":1274,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isinthefuture(time",{"_index":1411,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ismoment",{"_index":4565,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":1272,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnan(tointeger(value",{"_index":2445,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnotanumber",{"_index":1271,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnumber(date.day",{"_index":2463,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(date.month",{"_index":2461,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[0",{"_index":2451,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[1",{"_index":2455,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[2",{"_index":2458,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.hour",{"_index":2467,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.minute",{"_index":2469,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(value",{"_index":2441,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["issue",{"_index":417,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["issuer",{"_index":1191,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["issupported",{"_index":3799,"title":{},"body":{"injectables/NotifyService.html":{}}}],["issupported(window",{"_index":3804,"title":{},"body":{"injectables/NotifyService.html":{}}}],["istanbul",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["isvirtualtimeundefine",{"_index":4542,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":1515,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["items",{"_index":2415,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["iterate",{"_index":4662,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["j",{"_index":4447,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["january",{"_index":2841,"title":{},"body":{"components/FeedComponent.html":{}}}],["jnlp",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":5016,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":4238,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["json.length>1",{"_index":4239,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["json.parse(json",{"_index":4240,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["jwksvalidationhandler",{"_index":1112,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt",{"_index":1106,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":1183,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.family",{"_index":1180,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.given",{"_index":1177,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.login",{"_index":1173,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.expireclaim",{"_index":1308,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.familynameclaim",{"_index":1314,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.givennameclaim",{"_index":1313,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode",{"_index":1105,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode(token",{"_index":1359,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["keep",{"_index":2023,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/Map.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{}}}],["know",{"_index":3770,"title":{},"body":{"components/NavbarComponent.html":{}}}],["l",{"_index":4382,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["label",{"_index":135,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label.parameters",{"_index":2654,"title":{},"body":{"components/DetailComponent.html":{}}}],["label1",{"_index":4279,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":4282,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":4287,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":4149,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["language",{"_index":3857,"title":{},"body":{"classes/RefreshTranslation.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["languages",{"_index":4663,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["large",{"_index":4016,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1884,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1945,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1944,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastdestination",{"_index":730,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lastname",{"_index":1440,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname:string",{"_index":4865,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname?:string",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["later",{"_index":474,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["latest",{"_index":2861,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":445,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["leaves",{"_index":4120,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["left",{"_index":2537,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["left:0",{"_index":977,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["legacy",{"_index":1415,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["legend",{"_index":304,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["legend.accessibility",{"_index":2535,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["less",{"_index":4614,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":3666,"title":{},"body":{"classes/Message.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"modules/FeedModule.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["library.add(faclock",{"_index":2955,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":668,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":669,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":295,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["light",{"_index":456,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard",{"_index":438,"title":{"classes/LightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard):boolean",{"_index":3000,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2994,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.actions",{"_index":3481,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["lightcard.id",{"_index":2026,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcard.summary.key",{"_index":1873,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.title.key",{"_index":1872,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":501,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":443,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":437,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.addthirdactions",{"_index":491,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":486,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.delayedlightcardupdate",{"_index":499,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":479,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":488,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.lightcardalreadyupdated",{"_index":500,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":478,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":482,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":483,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":480,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":489,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":484,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyloaded",{"_index":497,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyupdated",{"_index":498,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatealightcard",{"_index":492,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanaction",{"_index":493,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanactionfailure",{"_index":496,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":487,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1977,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1980,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardalreadyupdated",{"_index":475,"title":{"classes/LightCardAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardeffects",{"_index":200,"title":{"injectables/LightCardEffects.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/AppState.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lightcardid",{"_index":257,"title":{},"body":{"components/ActionComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["lightcardreducer",{"_index":783,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":481,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":2021,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["limit",{"_index":2340,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limited",{"_index":2342,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limitsize",{"_index":2306,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["limitsize!=undefined",{"_index":3771,"title":{},"body":{"components/NavbarComponent.html":{}}}],["limitsize:boolean",{"_index":3768,"title":{},"body":{"components/NavbarComponent.html":{}}}],["line",{"_index":3411,"title":{},"body":{"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":381,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2929,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":4353,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":4352,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:231",{"_index":4362,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:256",{"_index":4367,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":4377,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:277",{"_index":4364,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":4378,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:30",{"_index":4375,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:31",{"_index":4376,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:32",{"_index":4359,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:35",{"_index":4365,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/custom",{"_index":2940,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/directives/app",{"_index":2698,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/directives/mouse",{"_index":2947,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/init",{"_index":2950,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/tick",{"_index":2943,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["line/time",{"_index":2928,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["link",{"_index":2383,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":363,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["link.component",{"_index":660,"title":{},"body":{"modules/AppModule.html":{}}}],["link.component.html",{"_index":3633,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.scss",{"_index":3632,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts",{"_index":3631,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:21",{"_index":3639,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:22",{"_index":3640,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:23",{"_index":3643,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:24",{"_index":3642,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:25",{"_index":3638,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:30",{"_index":3641,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link/button",{"_index":1560,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link/menu",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"components/MenuLinkComponent.html":{}}}],["link1",{"_index":4280,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":4283,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":4288,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["linkauthenticationstatus",{"_index":1598,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linkauthenticationstatus(linker",{"_index":1395,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linker",{"_index":1603,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["list",{"_index":220,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":317,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1067,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["list.component.html",{"_index":987,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.scss",{"_index":986,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":985,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:24",{"_index":989,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:25",{"_index":988,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:26",{"_index":1985,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:29",{"_index":990,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:32",{"_index":1988,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/archive",{"_index":984,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/card",{"_index":1982,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":2930,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":3050,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:21",{"_index":3052,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:25",{"_index":3053,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/tags",{"_index":2952,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2933,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2931,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":221,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1550,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":1475,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":358,"title":{"components/ListSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":434,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiFilterComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["little",{"_index":2741,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":405,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/I18nService.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadarchivedbyid",{"_index":1920,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcard",{"_index":409,"title":{"classes/LoadArchivedCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcard(id",{"_index":2080,"title":{},"body":{"injectables/CardService.html":{}}}],["loadarchivedcard({id",{"_index":2362,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadarchivedcardfailure",{"_index":412,"title":{"classes/LoadArchivedCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardfailure(err",{"_index":1931,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcardsuccess",{"_index":411,"title":{"classes/LoadArchivedCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardsuccess({card",{"_index":1929,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadbyid",{"_index":1921,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcard",{"_index":404,"title":{"classes/LoadCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":2082,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":2025,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":407,"title":{"classes/LoadCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1936,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":406,"title":{"classes/LoadCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1935,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":688,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":551,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":2225,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":2215,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1525,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":2214,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess.payload.config.security.oauth2.flow.mode",{"_index":1527,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["loadconfiguration",{"_index":2202,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"injectables/LightCardEffects.html":{},"classes/RefreshTranslation.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["loadedcardaction.payload.lightcards",{"_index":4683,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["loadedlocales",{"_index":3266,"title":{},"body":{"injectables/I18nService.html":{}}}],["loader",{"_index":5009,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":2851,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nformenuentries",{"_index":4272,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":4289,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loading",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{}}}],["loadlightcards",{"_index":444,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":449,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":452,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsfailure({error",{"_index":3479,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["loadlightcardssuccess",{"_index":448,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":2037,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadlocale",{"_index":3268,"title":{},"body":{"injectables/I18nService.html":{}}}],["loadlocale(locale",{"_index":3271,"title":{},"body":{"injectables/I18nService.html":{}}}],["loadlocale(locale:string",{"_index":3302,"title":{},"body":{"injectables/I18nService.html":{}}}],["loadmenu",{"_index":3085,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":3087,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":3618,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":3086,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":3617,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":2029,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":3108,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":3109,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":3952,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":3946,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":2902,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":3951,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth",{"_index":1250,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["local",{"_index":2621,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":3148,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales",{"_index":158,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales.map(locale",{"_index":4666,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["localestorage",{"_index":1265,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage",{"_index":1260,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.clear",{"_index":1279,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1270,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":1297,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":1299,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":1292,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":1290,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":1286,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":1288,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorageauthcontent",{"_index":1121,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["localurl",{"_index":3267,"title":{},"body":{"injectables/I18nService.html":{}}}],["location.href",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":1353,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname",{"_index":1356,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname.length",{"_index":1355,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["locationstrategy",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":140,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":189,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":1089,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["login'},{'name",{"_index":360,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":3564,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1578,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1582,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1583,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":3601,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":3602,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":3604,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":3605,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":3603,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["login:id",{"_index":1679,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":4863,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["loginclaim",{"_index":1132,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["logincomponent",{"_index":359,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["loginmessage",{"_index":3567,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":3606,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":2295,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo'},{'name",{"_index":336,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["logo.component",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["logo.component.css",{"_index":2296,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.html",{"_index":2297,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts",{"_index":2294,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:18",{"_index":2310,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:20",{"_index":2312,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:21",{"_index":2311,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:22",{"_index":2313,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:24",{"_index":2318,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:25",{"_index":2319,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:27",{"_index":2321,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:28",{"_index":2309,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:30",{"_index":2320,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:38",{"_index":2316,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:53",{"_index":2317,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:63",{"_index":2314,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo/custom",{"_index":662,"title":{},"body":{"modules/AppModule.html":{},"components/CustomLogoComponent.html":{}}}],["logout",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["long",{"_index":2132,"title":{},"body":{"injectables/CardService.html":{}}}],["longtext",{"_index":223,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["loose",{"_index":2119,"title":{},"body":{"injectables/CardService.html":{}}}],["lttd",{"_index":1785,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":3227,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":3239,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/TimeLineComponent.html":{}}}],["m.archivesmodule",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.feedmodule",{"_index":690,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.format(options.hash.format",{"_index":3243,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level",{"_index":3586,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this._locale",{"_index":3242,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.settingsmodule",{"_index":700,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.thirdpartymodule",{"_index":697,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mainrecipient",{"_index":1783,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":2130,"title":{},"body":{"injectables/CardService.html":{},"components/ResizableComponent.html":{}}}],["makes",{"_index":1747,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["manage",{"_index":703,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":4315,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":74,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["manager",{"_index":1456,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":2217,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["managment",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["mandatory",{"_index":226,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":150,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{}}}],["map(([action",{"_index":880,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(([action,configtags",{"_index":2862,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":2900,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([haschanged",{"_index":4107,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((a",{"_index":2016,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":2876,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["map((auth",{"_index":1245,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map((card",{"_index":1928,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["map((cards",{"_index":4685,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((config",{"_index":2212,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((currentstatus",{"_index":4098,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((loadconfigsuccess",{"_index":1524,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map((loadedcardaction",{"_index":4682,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((loadedmenusaction:loadmenusuccess)=>loadedmenusaction.payload.menu",{"_index":4701,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((menus:thirdmenu[])=>translateeffects.extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4702,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversion",{"_index":4690,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversions:map>)=>translateeffects.sendtranslateaction(publisherandversions",{"_index":4704,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((resultpage",{"_index":871,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map((settings",{"_index":3950,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map((storedcard",{"_index":3450,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["map((user",{"_index":4881,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(a=>new",{"_index":3954,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(auth",{"_index":1502,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(authenticationinfo",{"_index":1490,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(check",{"_index":1214,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(currentuser",{"_index":4896,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1243,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(elem",{"_index":4658,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map(id=>{return",{"_index":1678,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":1427,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(lightcard",{"_index":2024,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3616,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(menuentry",{"_index":4186,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(object.entries(obj",{"_index":4241,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":2034,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(params",{"_index":870,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(s=>handlebars.compile(s",{"_index":3206,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":3958,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":4224,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(context",{"_index":3197,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(this.convertjsontoi18nobject(locale",{"_index":4215,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(timeref",{"_index":4308,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":1253,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(url",{"_index":3624,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":2872,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":3405,"title":{},"body":{"components/InfoComponent.html":{}}}],["map(x",{"_index":1760,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["map>)=>this.extracti18ntoupdate(versions",{"_index":4703,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["maplanguages",{"_index":4753,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["maplanguages(thirdsandversions",{"_index":4664,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapped",{"_index":2868,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["mapthirds",{"_index":4754,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapthirds(locale",{"_index":4670,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapversions",{"_index":4755,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapversions(locale",{"_index":4676,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["margin",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["matching",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["materials",{"_index":3851,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["math.max",{"_index":3700,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":3701,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1874,"title":{},"body":{"components/CardComponent.html":{}}}],["max_height",{"_index":2301,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["max_width",{"_index":2302,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["maxedretries",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":227,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["maxsize]=\"3",{"_index":1024,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["means",{"_index":4326,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["medium",{"_index":3346,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":1573,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu",{"_index":362,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":3781,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":3789,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id}}.{{menu.version}}.{{menuentry.label",{"_index":3654,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menu.logout",{"_index":3790,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":3788,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":3787,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu_entry_id",{"_index":3097,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":3096,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":4140,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":2372,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":3103,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":3084,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":3083,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":3090,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":3091,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":3092,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":3095,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":3102,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":3099,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":804,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":159,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":3637,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menuentry.url",{"_index":4187,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":3662,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menulinkcomponent",{"_index":361,"title":{"components/MenuLinkComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["menureducer",{"_index":792,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":4230,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TranslateEffects.html":{}}}],["menus.map(menu",{"_index":4707,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["menus.push(menu",{"_index":4229,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menusopeninboth",{"_index":3634,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopeniniframes",{"_index":3635,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopenintabs",{"_index":3636,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menustate",{"_index":753,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["mergemap",{"_index":4648,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mergemap((action",{"_index":4653,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["message",{"_index":38,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["message('the",{"_index":1495,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":1511,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1588,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1567,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":3668,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":1496,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceholder",{"_index":1620,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":243,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":767,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":837,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["methods",{"_index":251,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["milliseconds",{"_index":2129,"title":{},"body":{"injectables/CardService.html":{}}}],["min",{"_index":4959,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["minus",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["minus2hour",{"_index":2104,"title":{},"body":{"injectables/CardService.html":{}}}],["minute",{"_index":2473,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["minutes",{"_index":2913,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["minutesonly",{"_index":4964,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["miscellaneous",{"_index":5033,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":4981,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["modal",{"_index":332,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["modal.component",{"_index":2191,"title":{},"body":{"modules/CardsModule.html":{},"injectables/ThirdActionService.html":{}}}],["modal.component.html",{"_index":2252,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts",{"_index":2251,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modal.component.ts:15",{"_index":2257,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:16",{"_index":2261,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:17",{"_index":2259,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:21",{"_index":2260,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:25",{"_index":2258,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal/confirm",{"_index":2190,"title":{},"body":{"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["modalservice",{"_index":4082,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["mode",{"_index":1137,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mode.tolowercase",{"_index":1155,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["modern",{"_index":3877,"title":{},"body":{"components/ResizableComponent.html":{}}}],["modification",{"_index":1949,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["modify",{"_index":883,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["module",{"_index":601,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["modules",{"_index":603,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["modules/cards/components/action/confirm",{"_index":4094,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["modules/utilities/utilities.module",{"_index":657,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":2180,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":1408,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0",{"_index":4421,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0).add(1",{"_index":4423,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).add(10",{"_index":4419,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).subtract(2",{"_index":4416,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment",{"_index":4392,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('month",{"_index":4402,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('week",{"_index":4397,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('year",{"_index":4407,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(date).startof('year",{"_index":4977,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":3240,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":4582,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":4958,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":4589,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":4584,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(l",{"_index":4383,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment.locale(this._locale",{"_index":3296,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.moment",{"_index":2812,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["moment.tz.setdefault(timezone",{"_index":3301,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":2833,"title":{},"body":{"components/FeedComponent.html":{}}}],["momentnow",{"_index":4555,"title":{},"body":{"classes/TimeReference.html":{}}}],["mommentojb",{"_index":4363,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[0",{"_index":4511,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[1",{"_index":4513,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[2",{"_index":4515,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[3",{"_index":4517,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[4",{"_index":4519,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[5",{"_index":4521,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[6",{"_index":4523,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mon",{"_index":4968,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mono.svg",{"_index":3352,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":2454,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/TimeLineComponent.html":{}}}],["more",{"_index":705,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":3689,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":3671,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":3683,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":391,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":3675,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":3674,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":3687,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":3676,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":1397,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movement",{"_index":2739,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{}}}],["movetocodeflowloginpage",{"_index":1326,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movetoimplicitflowloginpage",{"_index":1331,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mozilla",{"_index":294,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["mpl",{"_index":299,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["multi",{"_index":365,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multifiltercomponent",{"_index":364,"title":{"components/MultiFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent",{"_index":366,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:25",{"_index":4783,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":4781,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":4779,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":4780,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":4795,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":4796,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":4782,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":4794,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:34",{"_index":4793,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":4784,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:40",{"_index":4790,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:70",{"_index":4789,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:75",{"_index":4792,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:79",{"_index":4787,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:83",{"_index":4785,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:88",{"_index":4786,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:94",{"_index":4788,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:98",{"_index":4791,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":4490,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":4508,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimelinetimespans",{"_index":4503,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":4506,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimelinetimespans",{"_index":4494,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["navbar",{"_index":701,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":369,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":3728,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":3727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.thirdmenus.type",{"_index":3651,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["navbarcollapsed",{"_index":3732,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":368,"title":{"components/NavbarComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["navigate",{"_index":1477,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":2346,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":3629,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetoarchivedcard",{"_index":2347,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetocard",{"_index":2348,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":2349,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":2378,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":3093,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":4007,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":4011,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":2407,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":707,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["nbofpublishers",{"_index":4741,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["nbw",{"_index":4970,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["necessary",{"_index":1863,"title":{},"body":{"components/CardComponent.html":{}}}],["need",{"_index":728,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RefreshTranslation.html":{},"classes/RouterStateUrl.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["needed",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["needing",{"_index":4687,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["neutraltimereference",{"_index":4609,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":4603,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["newdate",{"_index":4529,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.add(conf[key",{"_index":4535,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.startof(value",{"_index":4533,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.subtract(conf[key",{"_index":4536,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newelapsedsofar",{"_index":2883,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["newtitle",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["next",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":4632,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":3004,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":4807,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":4805,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.compliant",{"_index":4809,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":4337,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.information",{"_index":4811,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":4332,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":3005,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":3006,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":273,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["ng_validators",{"_index":2482,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ng_value_accessor",{"_index":2479,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ngafterviewinit",{"_index":1984,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ngb.model",{"_index":930,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ngb.model.ts",{"_index":2427,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:23",{"_index":2434,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:29",{"_index":2439,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:42",{"_index":2435,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:50",{"_index":2437,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:56",{"_index":2436,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbactivemodal",{"_index":2256,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":3786,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbdateparserformatter",{"_index":2428,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbdatestruct",{"_index":931,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngbmodal",{"_index":259,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["ngbmodule",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2956,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngbtimestruct",{"_index":932,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngmodule",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["ngonchanges",{"_index":2557,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":2668,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1617,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":252,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":420,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":889,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":442,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":760,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1612,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2937,"title":{},"body":{"modules/FeedModule.html":{}}}],["nomarginrow",{"_index":976,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["none",{"_index":1791,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nopaddingrow",{"_index":979,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["normal",{"_index":4576,"title":{},"body":{"classes/TimeReference.html":{}}}],["normalizedcurrentstatus",{"_index":4099,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["noselectioncomponent",{"_index":370,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":4634,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":2787,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["notif",{"_index":2844,"title":{},"body":{"components/FeedComponent.html":{}}}],["notification",{"_index":3807,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification(title",{"_index":3812,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification.requestpermission(status",{"_index":3809,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notify",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["notifyservice",{"_index":2071,"title":{"injectables/NotifyService.html":{}},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/NotifyService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["now",{"_index":1745,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["null",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/UserState.html":{}}}],["number",{"_index":228,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/DateTimeNgb.html":{},"classes/Detail.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{}}}],["oauth",{"_index":1150,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2",{"_index":666,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["oauth2.client",{"_index":1167,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.delagate",{"_index":1171,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.mode",{"_index":1186,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2conf",{"_index":1162,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthevent",{"_index":1113,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthmodule",{"_index":664,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":670,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":1114,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthtype",{"_index":1111,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["obj",{"_index":3209,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["obj.date",{"_index":4525,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.day",{"_index":4516,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.hour",{"_index":4518,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.minute",{"_index":4520,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.month",{"_index":4512,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.second",{"_index":4522,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.startof",{"_index":4524,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.week",{"_index":4514,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.year",{"_index":4510,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object",{"_index":197,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object.keys(cachedversions",{"_index":4719,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(conf).foreach(key",{"_index":4531,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(filters).foreach(key",{"_index":960,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object.keys(thirdsandversion",{"_index":4672,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(this.domains).includes(domain",{"_index":4481,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(translationreferencestoupdate).length",{"_index":4742,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(untrackedversions).length",{"_index":4738,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(versioninput",{"_index":4717,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.setprototypeof(params",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["object.setprototypeof(t",{"_index":4167,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object.values(enumeration).includes(value",{"_index":946,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object[publisher",{"_index":4203,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[publisher][version",{"_index":4204,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["observable.create(observer",{"_index":2140,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":2154,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":2145,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":2146,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":301,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["oc",{"_index":3874,"title":{},"body":{"components/ResizableComponent.html":{}}}],["occurred",{"_index":2150,"title":{},"body":{"injectables/CardService.html":{}}}],["of(0",{"_index":1018,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["of([]))).subscribe(d",{"_index":4479,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["of([new",{"_index":4275,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(auth",{"_index":1259,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(error",{"_index":1534,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(new",{"_index":1504,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(null",{"_index":1218,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(template",{"_index":3204,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":4164,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":1494,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(translateeffects.extractthirdtoupdate(versions",{"_index":4693,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(true",{"_index":4290,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":3508,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["of(v.label",{"_index":3511,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["ofactions/archive.actions",{"_index":898,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/authentication.actions",{"_index":1102,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofactions/card.actions",{"_index":1570,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/config.actions",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":2053,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1568,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/menu.actions",{"_index":2391,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/settings.actions",{"_index":1646,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":2904,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":4379,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofactions/translate.actions",{"_index":4649,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofeffects/archive.effects",{"_index":823,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/authentication.effects",{"_index":778,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":775,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":773,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":813,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":801,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":809,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":806,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":805,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":817,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":820,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/translate.effects",{"_index":830,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/user.effects",{"_index":828,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":151,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmap.prototype",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/archive",{"_index":1042,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["ofmodel/card",{"_index":2056,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":148,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofmodel/datetime",{"_index":929,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofmodel/detail",{"_index":2592,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["ofmodel/feed",{"_index":843,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":149,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":439,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":152,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["ofmodel/message.model",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["ofmodel/page.model",{"_index":901,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["ofmodel/thirds.model",{"_index":272,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/time.model",{"_index":2793,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user",{"_index":2595,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{}}}],["ofmodel/user.model",{"_index":1109,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["ofselectors/archive.selectors",{"_index":900,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{}}}],["ofselectors/authentication.selectors",{"_index":1120,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":2055,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["ofselectors/feed.selectors",{"_index":2828,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":3367,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1648,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":3172,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["ofselectors/time.selectors",{"_index":3398,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofservices/authentication/auth",{"_index":1116,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofservices/authentication/authentication.service",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["ofservices/card.service",{"_index":890,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":2224,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":846,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":1076,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":1104,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/notify.service",{"_index":2095,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":3916,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/third",{"_index":276,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/thirds.service",{"_index":1901,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/time.service",{"_index":933,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ofservices/user.service",{"_index":4911,"title":{},"body":{"injectables/UserEffects.html":{}}}],["ofstates/archive.state",{"_index":821,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/authentication.state",{"_index":798,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":799,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":811,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":780,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":803,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":815,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":818,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":814,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/user.state",{"_index":826,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/actions/archive.actions",{"_index":927,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofstore/actions/authentication.actions",{"_index":3962,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/actions/card.actions",{"_index":1830,"title":{},"body":{"components/CardComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/actions/light",{"_index":1902,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{}}}],["ofstore/actions/user.actions",{"_index":2059,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/index",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["ofstore/reducers/archive.reducer",{"_index":797,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":765,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":787,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":789,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":784,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":793,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":791,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":795,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":782,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/user.reducer",{"_index":825,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/archive.selectors",{"_index":993,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1832,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/config.selectors",{"_index":1013,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1829,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/selectors/settings.x.config.selectors",{"_index":4380,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofstore/state.module",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":762,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":888,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(archiveactiontypes.sendarchivequery",{"_index":864,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(archiveactiontypes.updatearchivepage",{"_index":878,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":4878,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":1472,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":1483,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":1545,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1557,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.unabletorefreshorgettoken",{"_index":1562,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadarchivedcard",{"_index":1925,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1933,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":2210,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":2232,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":1523,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":2045,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.addthirdactions",{"_index":3473,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.clearlightcardselection",{"_index":1923,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(lightcardactiontypes.delayedlightcardupdate",{"_index":3446,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":2015,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(lightcardactiontypes.updateanaction",{"_index":3455,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":3614,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.loadmenusuccess",{"_index":4700,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":3620,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":2357,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":2351,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":3948,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":2859,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":3956,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":2882,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(translateactionstypes.updatetranslation",{"_index":4652,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(useractionstypes.createuserapplication",{"_index":4893,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.createuserapplicationonsuccess",{"_index":4909,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationnotregistered",{"_index":4903,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationregistered",{"_index":2031,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oidc",{"_index":667,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["ok",{"_index":1516,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/FeedFiltersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":3882,"title":{},"body":{"components/ResizableComponent.html":{}}}],["omit",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/ResizableComponent.html":{}}}],["onchange",{"_index":2488,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchange(event",{"_index":2497,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchanges",{"_index":2489,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1608,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":2743,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":302,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":1122,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ongoing",{"_index":1948,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":242,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":3678,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":3685,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":3692,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":3695,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":3697,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":2726,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":2730,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":2733,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onresize",{"_index":1724,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["onsubmit",{"_index":3571,"title":{},"body":{"components/LoginComponent.html":{}}}],["ontouched",{"_index":2487,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["open",{"_index":1805,"title":{},"body":{"components/CardComponent.html":{}}}],["open(confirmmodalcomponent",{"_index":4113,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["operation",{"_index":2270,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["operation.cardids",{"_index":2041,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":2038,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":776,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":2012,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:33",{"_index":2014,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:42",{"_index":2044,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:74",{"_index":2052,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:93",{"_index":2028,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":2057,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":1997,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:11",{"_index":2003,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:22",{"_index":2005,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":2035,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":2030,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":3213,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["option",{"_index":1751,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":3215,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":3247,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["order",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["otherwise",{"_index":739,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":2724,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":2702,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":1275,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["overflow",{"_index":995,"title":{},"body":{"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["overflow:hidden",{"_index":2541,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["override",{"_index":4207,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["overview",{"_index":5056,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":4994,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":600,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["padnumber(date.day",{"_index":2464,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(date.month",{"_index":2462,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.hour",{"_index":2468,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.minute",{"_index":2470,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(value",{"_index":2440,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["page",{"_index":711,"title":{"classes/Page.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/Page.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["page'},{'name",{"_index":319,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["page(1",{"_index":1044,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["page.component",{"_index":1065,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["page.component.html",{"_index":1002,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.scss",{"_index":1001,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts",{"_index":1000,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:25",{"_index":1010,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:26",{"_index":1011,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:27",{"_index":1005,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:29",{"_index":1006,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:38",{"_index":1008,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.tostring",{"_index":885,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["page/archive",{"_index":999,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["page]=\"first",{"_index":1022,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pagechange)=\"updateresultpage($event",{"_index":1023,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pair",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["paload",{"_index":1554,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":5027,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":231,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":1509,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2963,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["params.append('client_secret",{"_index":1240,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('clientid",{"_index":1232,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('code",{"_index":1227,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('grant_type",{"_index":1228,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('password",{"_index":1239,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('redirect_uri",{"_index":1233,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('username",{"_index":1238,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append(key",{"_index":2162,"title":{},"body":{"injectables/CardService.html":{}}}],["params.set('page",{"_index":973,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('size",{"_index":970,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('version",{"_index":4213,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.set(key",{"_index":965,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.tostring",{"_index":1236,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params['error",{"_index":1584,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parent",{"_index":1726,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["parent.clientheight",{"_index":1769,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(calcheightclass",{"_index":1755,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(fixedheightclass",{"_index":1743,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentform",{"_index":3705,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["parentid",{"_index":1701,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentmodule",{"_index":3918,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2432,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/StateModule.html":{}}}],["parse(value",{"_index":2438,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["parseint(`${value",{"_index":2444,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["part",{"_index":1187,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["party",{"_index":2382,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":2973,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["passes",{"_index":2983,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":72,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["passwordorcodeauthenticationhandler",{"_index":1417,"title":{"classes/PasswordOrCodeAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["passwordorcodeauthenticationhandler(this",{"_index":1159,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["patch",{"_index":3110,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1645,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1690,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":3112,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":3960,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":3111,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":3959,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":3983,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":3986,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":3993,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":687,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":1354,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pathmatch",{"_index":1082,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["pathname",{"_index":719,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathname.length",{"_index":722,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathname.substr(1",{"_index":724,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2748,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["payload",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["payload.access_token",{"_index":1311,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid",{"_index":1310,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid.tostring",{"_index":1293,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":1291,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expires_in",{"_index":1306,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.identifier",{"_index":1287,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.password).pipe",{"_index":1547,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":1289,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload:tickpayload",{"_index":2809,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{cardstimeline",{"_index":3426,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["payload:{data",{"_index":3424,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":854,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":850,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":2816,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":23,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["payloadforsuccessfulauthentication(identifier",{"_index":1371,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":1309,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["perform",{"_index":2269,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["performpost",{"_index":4115,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["periodstarttoend",{"_index":4358,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["periodstarttoend(conf",{"_index":4366,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["permission",{"_index":3797,"title":{},"body":{"injectables/NotifyService.html":{}}}],["pertinent",{"_index":2409,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pick",{"_index":184,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["picture",{"_index":2334,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["pieces",{"_index":4020,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":1252,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":1485,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(concatall",{"_index":4669,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(filter(e",{"_index":1342,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pipe(first",{"_index":1667,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map((actions",{"_index":3483,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["pipe(map((json",{"_index":4237,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(map(config",{"_index":1841,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(i18n",{"_index":4679,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(map(pulse",{"_index":4304,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(oftype(authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":1531,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1664,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{}}}],["pipe(tap(menus",{"_index":3758,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe/x",{"_index":2944,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["pipes",{"_index":4937,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":4957,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["place",{"_index":713,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["placeholder",{"_index":1614,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":3320,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":3338,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":2108,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":2411,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":2706,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":2714,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":2715,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":2707,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":2719,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":2708,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":2721,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":4835,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["position:absolute",{"_index":2536,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["possible",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["postaction",{"_index":4079,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postaction$.subscribe",{"_index":4112,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary",{"_index":4076,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary(lightcardid",{"_index":4090,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postdata",{"_index":1200,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.append('token",{"_index":1203,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.tostring",{"_index":1212,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["preloadallmodules",{"_index":678,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":735,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":3493,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["present",{"_index":1407,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["prev",{"_index":1763,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["previous",{"_index":2804,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["primary",{"_index":3563,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":249,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["process",{"_index":166,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["process.states[card.state",{"_index":168,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":161,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1784,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1951,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["prodi18npath",{"_index":3287,"title":{},"body":{"injectables/I18nService.html":{}}}],["promise.resolve",{"_index":1340,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["properties",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["property",{"_index":2908,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["protected",{"_index":1613,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["provide",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":1729,"title":{},"body":{"directives/CalcHeightDirective.html":{},"modules/StateModule.html":{}}}],["providedin",{"_index":3019,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1366,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["provider",{"_index":3592,"title":{},"body":{"components/LoginComponent.html":{}}}],["providers",{"_index":606,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":4015,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"modules/UtilitiesModule.html":{}}}],["publication",{"_index":1854,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":2000,"title":{},"body":{"classes/CardOperation.html":{}}}],["publish_date_from_param",{"_index":935,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publish_date_to_param",{"_index":937,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdate",{"_index":1779,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publishdatefrom",{"_index":936,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdateto",{"_index":938,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publisher",{"_index":1777,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["publisher/${card.publisher}/process/${card.processid}/states/${card.state}/actions",{"_index":1847,"title":{},"body":{"components/CardComponent.html":{}}}],["publisherversion",{"_index":1778,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":3201,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["purpose",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["push",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["pushed",{"_index":2144,"title":{},"body":{"injectables/CardService.html":{}}}],["put",{"_index":1317,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/UtilitiesModule.html":{}}}],["putting",{"_index":2127,"title":{},"body":{"injectables/CardService.html":{}}}],["query",{"_index":1030,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["queryarchivedcards",{"_index":859,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["queryarchivedcardspage",{"_index":860,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["querylist",{"_index":2674,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":4251,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":4173,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":2406,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":3128,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":3152,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":3198,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":4252,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":4161,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["querythirdfromcard",{"_index":4253,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythirdfromcard(card",{"_index":4158,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["r",{"_index":4202,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["radius",{"_index":981,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["radius:5px",{"_index":983,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["raise",{"_index":4892,"title":{},"body":{"injectables/UserEffects.html":{}}}],["rangeend",{"_index":2086,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":2088,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":19,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":1530,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":4575,"title":{},"body":{"classes/TimeReference.html":{}}}],["realm",{"_index":1591,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["realnow",{"_index":4558,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":4561,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":4572,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":4571,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":4445,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":2972,"title":{},"body":{"classes/Filter.html":{}}}],["reasons",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["received",{"_index":4484,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["receivedcard",{"_index":3447,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["recipient_filter",{"_index":3046,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["reconnecting",{"_index":2121,"title":{},"body":{"injectables/CardService.html":{}}}],["recursion",{"_index":2988,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":2987,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":710,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":702,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["redirecttocurrentlocation",{"_index":1571,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["redirecttocurrentlocation(currentrouter",{"_index":718,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecttocurrentlocation(this.router",{"_index":1489,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reduce",{"_index":4151,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus",{"_index":4228,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":763,"title":{},"body":{"interfaces/AppState.html":{}}}],["ref",{"_index":4581,"title":{},"body":{"classes/TimeReference.html":{}}}],["reference",{"_index":2799,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencetime",{"_index":4549,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["refreshed",{"_index":2909,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["refreshifselectedcard",{"_index":2013,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshthreshold",{"_index":2852,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["refreshtranslation",{"_index":3840,"title":{"classes/RefreshTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["regarding",{"_index":1406,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["registerarrayatindex",{"_index":3129,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":3130,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":3131,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":3132,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":3133,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":1222,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["registeri18n",{"_index":3134,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerjson",{"_index":3135,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":3136,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":3137,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":3138,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registeronchange",{"_index":2490,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registeronchange(fn",{"_index":2500,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched",{"_index":2491,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched(fn",{"_index":2503,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerpreservespace",{"_index":3139,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":3140,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":3141,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":3142,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":3143,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":2558,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":1519,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectlogin",{"_index":52,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1587,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":1447,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["related",{"_index":416,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":1294,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["reload",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":460,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":2040,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["rendered",{"_index":1953,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":2613,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":2967,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":2788,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1460,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":4640,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":4633,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requestpermission",{"_index":3800,"title":{},"body":{"injectables/NotifyService.html":{}}}],["required",{"_index":4412,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["requiredfield",{"_index":1621,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["rerouting",{"_index":1537,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reset",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resetform",{"_index":3572,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":1451,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resizable",{"_index":3865,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable'},{'name",{"_index":373,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["resizable.component.css",{"_index":3866,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable.component.html",{"_index":3867,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizablecomponent",{"_index":372,"title":{"components/ResizableComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resizablecomponent:17",{"_index":1990,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:19",{"_index":1989,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:34",{"_index":1987,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resize",{"_index":3871,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resized",{"_index":1983,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["resolvethirdpartylink",{"_index":3612,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":2619,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":4196,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":4200,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":1402,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["responsetype",{"_index":4191,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["restart",{"_index":2137,"title":{},"body":{"injectables/CardService.html":{}}}],["result",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result[u.third",{"_index":4711,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["resultpage",{"_index":1036,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["results",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":2018,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":2220,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":2203,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":2206,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":2416,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":268,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["reverse",{"_index":2449,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["right",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["right:0",{"_index":978,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["right:7px",{"_index":980,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["root",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":312,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["rotate]=\"true",{"_index":1025,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["route",{"_index":2386,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":679,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":802,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":2345,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:28",{"_index":2350,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:35",{"_index":2368,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:50",{"_index":2365,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:72",{"_index":2375,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:86",{"_index":2356,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigated",{"_index":2389,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":2376,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":2390,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":779,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":680,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1086,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":733,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":2358,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":754,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":2353,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":2403,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":2363,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":2374,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":2371,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":2373,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":2420,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":2360,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":2394,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":2401,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":761,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":2421,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":681,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":708,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":677,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":4834,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":229,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":288,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["rules",{"_index":1459,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":1267,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["rvalue",{"_index":3225,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":894,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["s",{"_index":2123,"title":{},"body":{"injectables/CardService.html":{}}}],["safe",{"_index":2618,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":2614,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":2622,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":2620,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":2580,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":2589,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2315,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["same",{"_index":712,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":2563,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":2837,"title":{},"body":{"components/FeedComponent.html":{}}}],["save",{"_index":1282,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["saveauthenticationinformation(payload",{"_index":1285,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["scope",{"_index":2969,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":2632,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":2635,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":2634,"title":{},"body":{"components/DetailComponent.html":{}}}],["sea",{"_index":4413,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["search",{"_index":1730,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["searchcodestring",{"_index":1419,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searchcodestring.length",{"_index":1425,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searches",{"_index":726,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sec",{"_index":4960,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["second",{"_index":2474,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["secondedsonly",{"_index":4974,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["secret",{"_index":1169,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["security",{"_index":2111,"title":{},"body":{"injectables/CardService.html":{}}}],["securityheader",{"_index":4638,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["see",{"_index":3873,"title":{},"body":{"components/ResizableComponent.html":{}}}],["select",{"_index":454,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":2829,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectarchivecount",{"_index":1016,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["select(selectarchivelightcards",{"_index":1054,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["select(selectconfigloaded",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["selectarchivecount",{"_index":1012,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["selectarchivedlightcard",{"_index":1032,"title":{"classes/SelectArchivedLightCard.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectarchivedlightcard({selectedcardid",{"_index":2364,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectarchivefilters",{"_index":899,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["selectarchivelightcards",{"_index":992,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{}}}],["selectarchivelightcardselection",{"_index":1052,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectauthenticationstate",{"_index":2594,"title":{},"body":{"components/DetailComponent.html":{}}}],["selectcardactionsappearstate",{"_index":1831,"title":{},"body":{"components/CardComponent.html":{}}}],["selectcardstateselectedid",{"_index":2054,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1566,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":2226,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":3397,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":2663,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":2671,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":468,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selected_iframe_url",{"_index":3660,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":485,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":3361,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":232,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":1118,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selectidentifier",{"_index":1653,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":457,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":371,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2926,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":3793,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3792,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:15",{"_index":3794,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":3795,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2925,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":4828,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectisimplicitlyauthenticated",{"_index":1119,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selectlightcard",{"_index":453,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":2367,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":2385,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":2370,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":3089,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":3626,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":3088,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":3625,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":3753,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":3366,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":3582,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":244,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selector:'confirm",{"_index":2262,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["selectrouterstate",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":4316,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectusernameoridentifier",{"_index":3396,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ConfirmModalComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["sendarchivequery",{"_index":866,"title":{"classes/SendArchiveQuery.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendarchivequery({params",{"_index":886,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{}}}],["sendquery",{"_index":913,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sendtranslateaction",{"_index":4756,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["sendtranslateaction(versiontoupdate",{"_index":4743,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["sense",{"_index":1748,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sent",{"_index":2899,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sequentially",{"_index":2991,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":2396,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":2400,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":4012,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserService.html":{}}}],["services/handlebars.service",{"_index":2186,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":2185,"title":{},"body":{"modules/CardsModule.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":613,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":1347,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["session_terminated",{"_index":1344,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage",{"_index":1158,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.clear",{"_index":1280,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.setitem('flow",{"_index":1334,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["set",{"_index":2686,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/InitTimeline.html":{},"components/NavbarComponent.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":4189,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":4171,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set([u.version",{"_index":4713,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["set(untrackedversions",{"_index":4740,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["setcarddatatimeline",{"_index":3423,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setcarddatatimeline({cardstimeline",{"_index":4509,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["setdisabledstate",{"_index":2492,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2505,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2525,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setheaders",{"_index":4639,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["setheightandwidth",{"_index":2304,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["sets",{"_index":736,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["setsize",{"_index":3315,"title":{},"body":{"components/IconComponent.html":{}}}],["setsprites",{"_index":3316,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":2628,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":3777,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":3780,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1609,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":324,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":2773,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1610,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1607,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":2749,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":4054,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:23",{"_index":4053,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":3497,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:25",{"_index":3496,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1626,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1624,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1625,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1642,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1644,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1643,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1641,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":1623,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:36",{"_index":4055,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":1637,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:47",{"_index":4057,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":3499,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:51",{"_index":4056,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:58",{"_index":3498,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:65",{"_index":3501,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:69",{"_index":3500,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:70",{"_index":1636,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:74",{"_index":3502,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:75",{"_index":1640,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:79",{"_index":1631,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:83",{"_index":1628,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:88",{"_index":1630,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:94",{"_index":1634,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:98",{"_index":1638,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1606,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":2746,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":3492,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":2772,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1622,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":698,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":367,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":3975,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.html",{"_index":3717,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":4778,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":3716,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":3719,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":3721,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":3720,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":3722,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":2778,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":3715,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":3977,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":3117,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1688,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":3120,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":2903,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":3107,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":3113,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":3114,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":3115,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":3116,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":3118,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":3119,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":374,"title":{"components/SettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":816,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":3996,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsinputs",{"_index":3928,"title":{"interfaces/SettingsInputs.html":{}},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["settingsmodule",{"_index":3963,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":790,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":3967,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":3907,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":755,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["settitle",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle(newtitle",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":1782,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/Page.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":3024,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":3023,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.compliant",{"_index":3026,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.information",{"_index":3027,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1957,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1963,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1964,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3434,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["shift",{"_index":2806,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["showgridlines",{"_index":4444,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":2588,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["size",{"_index":912,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size.tostring",{"_index":971,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["size:string",{"_index":3334,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon",{"_index":3318,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon:string",{"_index":3332,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":3912,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1882,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["snapshot",{"_index":2410,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":654,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":2784,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sometimes",{"_index":2120,"title":{},"body":{"injectables/CardService.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1978,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortonkey(key",{"_index":3255,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3435,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["space",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["special",{"_index":4949,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["specifically",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["speed",{"_index":4546,"title":{},"body":{"classes/TimeReference.html":{}}}],["sprites",{"_index":3314,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":3335,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../archive",{"_index":5043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../archive.actions.ts",{"_index":5036,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.actions.ts",{"_index":5037,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":5045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":5039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":5038,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":5053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":5040,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":5049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../feed.actions.ts",{"_index":5042,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":5044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":5041,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":5046,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":5047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":5048,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":5035,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.actions.ts",{"_index":5050,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":5052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":5051,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../translate.actions.ts",{"_index":5054,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.actions.ts",{"_index":5055,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":676,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/login/login.component.ts",{"_index":3561,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":3578,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":3581,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":3580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":3579,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":3573,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":3575,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":3576,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:61",{"_index":3577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:65",{"_index":3574,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/custom",{"_index":2293,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts",{"_index":3309,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:19",{"_index":3323,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:20",{"_index":3324,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:21",{"_index":3322,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:23",{"_index":3328,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:24",{"_index":3329,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:25",{"_index":3321,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:32",{"_index":3325,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:37",{"_index":3326,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:53",{"_index":3327,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":3380,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":3389,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":3388,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:29",{"_index":3386,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:34",{"_index":3387,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:45",{"_index":3391,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:49",{"_index":3393,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:53",{"_index":3395,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/menus/menu",{"_index":3630,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":3726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":3748,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":3749,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":3743,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":3742,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:34",{"_index":3745,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":3746,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:37",{"_index":3744,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":3747,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":3750,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:40",{"_index":3736,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:45",{"_index":3738,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:82",{"_index":3737,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:86",{"_index":3752,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:90",{"_index":3740,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:96",{"_index":3741,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":1996,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1775,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":1787,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":2545,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/datetime",{"_index":2426,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["src/app/model/detail",{"_index":2655,"title":{},"body":{"classes/DetailContext.html":{}}}],["src/app/model/feed",{"_index":2958,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":3261,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:11",{"_index":3263,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3429,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":3607,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:9",{"_index":3610,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":3664,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:11",{"_index":3667,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/page.model.ts",{"_index":3813,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/page.model.ts:12",{"_index":3816,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/thirds.model.ts",{"_index":132,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/model/thirds.model.ts:102",{"_index":395,"title":{},"body":{"classes/ActionStatus.html":{}}}],["src/app/model/thirds.model.ts:13",{"_index":4066,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:153",{"_index":3428,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:170",{"_index":3818,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:27",{"_index":4067,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:38",{"_index":4131,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:48",{"_index":4130,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:58",{"_index":3839,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:66",{"_index":3998,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:82",{"_index":144,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":4538,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":4548,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:18",{"_index":4563,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:26",{"_index":4551,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:27",{"_index":4554,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:28",{"_index":4557,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:40",{"_index":4560,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:63",{"_index":4564,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user",{"_index":4870,"title":{},"body":{"classes/UserContext.html":{}}}],["src/app/model/user.model.ts",{"_index":4860,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:9",{"_index":4862,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":1075,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":1046,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:24",{"_index":1051,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:25",{"_index":1049,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:29",{"_index":1050,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":1063,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/archives/components/archive",{"_index":904,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":2176,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:46",{"_index":2179,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/action/action.component.ts",{"_index":241,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:22",{"_index":263,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:23",{"_index":265,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:24",{"_index":266,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:25",{"_index":264,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:26",{"_index":261,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:33",{"_index":267,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:37",{"_index":270,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/confirm",{"_index":2250,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/components/card",{"_index":1890,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1794,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:100",{"_index":1813,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:107",{"_index":1820,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:118",{"_index":1828,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:122",{"_index":1817,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1810,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1809,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:33",{"_index":1825,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:34",{"_index":1821,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:35",{"_index":1826,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:36",{"_index":1824,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:37",{"_index":1822,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:38",{"_index":1823,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:40",{"_index":1808,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:50",{"_index":1818,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:75",{"_index":1812,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:90",{"_index":1815,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:94",{"_index":1819,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":2546,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:113",{"_index":2572,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:130",{"_index":2570,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:145",{"_index":2574,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:29",{"_index":2582,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:30",{"_index":2566,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:31",{"_index":2565,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:32",{"_index":2583,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":2585,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:34",{"_index":2581,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:35",{"_index":2564,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:45",{"_index":2578,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:57",{"_index":2577,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:62",{"_index":2576,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:78",{"_index":2575,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:94",{"_index":2587,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:98",{"_index":2579,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":2660,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:21",{"_index":2676,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:22",{"_index":2666,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:23",{"_index":2665,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:29",{"_index":2667,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:38",{"_index":2673,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:48",{"_index":2672,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":2677,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:61",{"_index":2669,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":3123,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:114",{"_index":3155,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:120",{"_index":3167,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:129",{"_index":3161,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:143",{"_index":3154,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:149",{"_index":3165,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:166",{"_index":3166,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:208",{"_index":3159,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:234",{"_index":3168,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:252",{"_index":3157,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:266",{"_index":3158,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:274",{"_index":3163,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:28",{"_index":3169,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:281",{"_index":3162,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:288",{"_index":3164,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:29",{"_index":3145,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:53",{"_index":3147,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:61",{"_index":3151,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:66",{"_index":3153,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:79",{"_index":3160,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:85",{"_index":3156,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1981,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":3791,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":2697,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2957,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":2818,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:27",{"_index":2825,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:28",{"_index":2826,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:29",{"_index":2822,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:34",{"_index":2824,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:55",{"_index":2823,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":2922,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1605,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":2745,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":3491,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":3714,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":3921,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":3930,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":3931,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:22",{"_index":3929,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:23",{"_index":3927,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:24",{"_index":3925,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:28",{"_index":3926,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":4052,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":4777,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":3978,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":3968,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":3356,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:22",{"_index":3362,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:28",{"_index":3363,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:36",{"_index":3365,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":4139,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":4137,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/modules/utilities/calc",{"_index":1695,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts",{"_index":3864,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:17",{"_index":3868,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:19",{"_index":3870,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:34",{"_index":3869,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/utilities.module.ts",{"_index":4932,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["src/app/services/authentication/authentication.service.ts",{"_index":1088,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication/authentication.service.ts:428",{"_index":1094,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:431",{"_index":1095,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:432",{"_index":1097,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:433",{"_index":1096,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:434",{"_index":1098,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:444",{"_index":2195,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:446",{"_index":2198,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:447",{"_index":2197,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:448",{"_index":2196,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:467",{"_index":1600,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:469",{"_index":1602,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:471",{"_index":1599,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:473",{"_index":1604,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:481",{"_index":3819,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:487",{"_index":3821,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:496",{"_index":3822,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:501",{"_index":3820,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:505",{"_index":3823,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:514",{"_index":3373,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:520",{"_index":3375,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:526",{"_index":3377,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:530",{"_index":3374,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:534",{"_index":3378,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/card.service.ts",{"_index":2060,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:103",{"_index":2074,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:25",{"_index":2091,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:26",{"_index":2089,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:27",{"_index":2090,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:28",{"_index":2072,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:42",{"_index":2083,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:46",{"_index":2079,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:63",{"_index":2084,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:67",{"_index":2077,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:93",{"_index":2087,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:99",{"_index":2081,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":2238,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:18",{"_index":2241,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:25",{"_index":2242,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":3007,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:19",{"_index":3013,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:25",{"_index":3014,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:30",{"_index":3018,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:54",{"_index":3016,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:63",{"_index":3017,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:85",{"_index":3015,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":3056,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:17",{"_index":3059,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:23",{"_index":3060,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:27",{"_index":3061,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":3264,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:22",{"_index":3273,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:23",{"_index":3274,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:24",{"_index":3275,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:25",{"_index":3269,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:39",{"_index":3270,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:57",{"_index":3277,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:61",{"_index":3279,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:66",{"_index":3272,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":4619,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:15",{"_index":4623,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":4629,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":4626,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/notify.service.ts",{"_index":3796,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:14",{"_index":3801,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:18",{"_index":3805,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:21",{"_index":3806,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:29",{"_index":3803,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/services.module.ts",{"_index":3910,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:51",{"_index":3911,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":3979,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":3988,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:20",{"_index":3984,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:28",{"_index":3985,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:32",{"_index":3987,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/third",{"_index":4070,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":4142,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:104",{"_index":4255,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:124",{"_index":4257,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:139",{"_index":4260,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:143",{"_index":4259,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:161",{"_index":4146,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:166",{"_index":4148,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:21",{"_index":4268,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:22",{"_index":4269,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":4254,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:31",{"_index":4267,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:35",{"_index":4265,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:52",{"_index":4262,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:60",{"_index":4263,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:78",{"_index":4261,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:88",{"_index":4256,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:95",{"_index":4258,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/user.service.ts",{"_index":4912,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":4916,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":4920,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":4918,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/store/actions/archive.actions.ts",{"_index":1026,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/archive.actions.ts:24",{"_index":4845,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:26",{"_index":4846,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:30",{"_index":3903,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:31",{"_index":3904,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:36",{"_index":3065,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:39",{"_index":3066,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:43",{"_index":1027,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:45",{"_index":1028,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:50",{"_index":4847,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:52",{"_index":4848,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:56",{"_index":3893,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/archive.actions.ts:58",{"_index":3894,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:101",{"_index":3860,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:104",{"_index":3861,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:113",{"_index":130,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:125",{"_index":131,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:130",{"_index":2193,"title":{},"body":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:135",{"_index":4859,"title":{},"body":{"classes/UselessAuthAction.html":{}}}],["src/app/store/actions/authentication.actions.ts:141",{"_index":3379,"title":{},"body":{"classes/ImplicitlyAuthenticated.html":{}}}],["src/app/store/actions/authentication.actions.ts:146",{"_index":4838,"title":{},"body":{"classes/UnAuthenticationFromImplicitFlow.html":{}}}],["src/app/store/actions/authentication.actions.ts:151",{"_index":4839,"title":{},"body":{"classes/UnableToRefreshOrGetToken.html":{}}}],["src/app/store/actions/authentication.actions.ts:33",{"_index":3831,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:34",{"_index":3835,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:35",{"_index":3832,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:36",{"_index":3837,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:37",{"_index":3833,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:38",{"_index":3834,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:39",{"_index":3836,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:49",{"_index":3413,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:51",{"_index":3414,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:60",{"_index":2192,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:69",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:72",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:81",{"_index":4774,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:84",{"_index":4775,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:92",{"_index":4776,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":397,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:25",{"_index":2199,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:28",{"_index":3534,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:31",{"_index":3535,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:34",{"_index":3536,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:37",{"_index":3537,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:41",{"_index":3538,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:44",{"_index":3539,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:48",{"_index":3528,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:51",{"_index":3529,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:54",{"_index":3530,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:57",{"_index":3531,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:61",{"_index":3532,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:64",{"_index":3533,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:69",{"_index":3067,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:72",{"_index":3068,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:76",{"_index":398,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/card.actions.ts:78",{"_index":399,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":3069,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:19",{"_index":3540,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:22",{"_index":3541,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:25",{"_index":3542,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:30",{"_index":3543,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:33",{"_index":3544,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:39",{"_index":3070,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/config.actions.ts:41",{"_index":3071,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":839,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:19",{"_index":840,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:21",{"_index":841,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:25",{"_index":3415,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:28",{"_index":3416,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":432,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":3080,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:23",{"_index":3551,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:30",{"_index":3552,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:33",{"_index":3553,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:38",{"_index":3554,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:41",{"_index":3555,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:46",{"_index":3081,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:49",{"_index":3082,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:60",{"_index":3897,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:63",{"_index":3898,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:71",{"_index":3901,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:74",{"_index":3902,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:82",{"_index":3899,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:85",{"_index":3900,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":3104,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:25",{"_index":3556,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:28",{"_index":3557,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:31",{"_index":3558,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:36",{"_index":3559,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:39",{"_index":3560,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":3824,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:45",{"_index":3825,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:48",{"_index":3826,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:51",{"_index":3827,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:56",{"_index":3828,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:59",{"_index":3829,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:65",{"_index":3105,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/settings.actions.ts:67",{"_index":3106,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":2783,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":4291,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":4292,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:32",{"_index":4295,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:33",{"_index":4296,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:34",{"_index":4297,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:43",{"_index":4849,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:44",{"_index":4850,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:53",{"_index":2789,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:54",{"_index":2790,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":3418,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":3419,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:18",{"_index":3420,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":3919,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:23",{"_index":3920,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/translate.actions.ts",{"_index":3841,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/translate.actions.ts:20",{"_index":4852,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:22",{"_index":4853,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:27",{"_index":4773,"title":{},"body":{"classes/TranslationUpToDate.html":{}}}],["src/app/store/actions/translate.actions.ts:31",{"_index":4856,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:33",{"_index":4857,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:38",{"_index":4854,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:40",{"_index":4855,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:46",{"_index":3843,"title":{},"body":{"classes/RefreshTranslation.html":{}}}],["src/app/store/actions/user.actions.ts",{"_index":2273,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/user.actions.ts:23",{"_index":4868,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:24",{"_index":4869,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:29",{"_index":4866,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:30",{"_index":4867,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:35",{"_index":2274,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:36",{"_index":2275,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:42",{"_index":2291,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:43",{"_index":2292,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:48",{"_index":2289,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:49",{"_index":2290,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:55",{"_index":3121,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/actions/user.actions.ts:56",{"_index":3122,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/effects/archive.effects.ts",{"_index":858,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:29",{"_index":862,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:36",{"_index":877,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:51",{"_index":887,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":1443,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:125",{"_index":1559,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:146",{"_index":1474,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:165",{"_index":1543,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:189",{"_index":1513,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:247",{"_index":1540,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:264",{"_index":1564,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:273",{"_index":1466,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:295",{"_index":1469,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:301",{"_index":1471,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:46",{"_index":1455,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:70",{"_index":1528,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:98",{"_index":1549,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":2011,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1918,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:34",{"_index":1922,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:42",{"_index":1937,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:55",{"_index":1932,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:68",{"_index":1924,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":2201,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:23",{"_index":2207,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:58",{"_index":2216,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:76",{"_index":2219,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:78",{"_index":2209,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":2344,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":2846,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":3439,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":3611,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:28",{"_index":3613,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:39",{"_index":3619,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:62",{"_index":3627,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":3945,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:30",{"_index":3947,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:43",{"_index":3953,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:55",{"_index":3955,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:61",{"_index":3961,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":4298,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:26",{"_index":4302,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:42",{"_index":4306,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:56",{"_index":4314,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/translate.effects.ts",{"_index":4642,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:115",{"_index":4760,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:119",{"_index":4762,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:129",{"_index":4772,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:141",{"_index":4761,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:150",{"_index":4759,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:163",{"_index":4763,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:191",{"_index":4768,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:200",{"_index":4644,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:201",{"_index":4645,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:32",{"_index":4757,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:42",{"_index":4769,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:45",{"_index":4770,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:67",{"_index":4765,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:76",{"_index":4766,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:86",{"_index":4767,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:98",{"_index":4771,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/user.effects.ts",{"_index":4873,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:106",{"_index":4910,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:30",{"_index":4877,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:45",{"_index":4888,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:66",{"_index":4907,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:81",{"_index":4902,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/index.ts",{"_index":746,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":4001,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:34",{"_index":4002,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/archive.state.ts",{"_index":1040,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":1437,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":2168,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":2246,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1941,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":3659,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":2393,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:38",{"_index":3892,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:49",{"_index":2402,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:56",{"_index":2399,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":3995,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":4607,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":4612,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/app/store/states/user.state.ts",{"_index":4926,"title":{},"body":{"interfaces/UserState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":4271,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:12",{"_index":4273,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:21",{"_index":4274,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":2113,"title":{},"body":{"injectables/CardService.html":{}}}],["sso",{"_index":1385,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["st",{"_index":3465,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["start",{"_index":2718,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdate",{"_index":1780,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":4448,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day",{"_index":4391,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.minutes(0).second(0).millisecond(0",{"_index":4393,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.valueof",{"_index":4464,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj",{"_index":4420,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj.valueof",{"_index":4449,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth",{"_index":4401,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.minutes(0).second(0).millisecond(0",{"_index":4403,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.valueof",{"_index":4471,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr",{"_index":4415,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr.valueof",{"_index":4461,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek",{"_index":4396,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.minutes(0).second(0).millisecond(0",{"_index":4398,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.valueof",{"_index":4469,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear",{"_index":4406,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.hour(0).minutes(0).second(0).millisecond(0",{"_index":4408,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.valueof",{"_index":4476,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startof",{"_index":4361,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":4976,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":4979,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["state.actions[actionid",{"_index":2639,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":2424,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":2422,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":614,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":224,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"injectables/I18nService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/NotifyService.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":3030,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":3028,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.compliant",{"_index":3031,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":3036,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.information",{"_index":3032,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":3035,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":4301,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":1266,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stillvalid",{"_index":1273,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stitle",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["stitle.subscribe(data",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["stops",{"_index":2989,"title":{},"body":{"classes/Filter.html":{}}}],["storage",{"_index":1431,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["store",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["store.select(buildconfigselector('security",{"_index":1144,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storeconfig",{"_index":836,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":727,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storedcard",{"_index":3451,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["storedevtoolsmodule",{"_index":4005,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":4014,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":770,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":4003,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":4009,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":4008,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":4010,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":3200,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":4017,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":2609,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":4193,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":238,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":245,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":1175,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subject",{"_index":292,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["submission",{"_index":2780,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":253,"title":{},"body":{"components/ActionComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{}}}],["submit(lightcardid",{"_index":4092,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["submitted",{"_index":1555,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1618,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1345,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["subscribe(([locale,timezone",{"_index":3293,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe(([realm",{"_index":1592,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["subscribe((maxedretries",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1904,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1843,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":4044,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(linker",{"_index":1428,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(loaded",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m",{"_index":3587,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1680,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1674,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":1145,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(provider",{"_index":3590,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(v",{"_index":3645,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["subscribe(x",{"_index":1719,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["subscription",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1885,"title":{},"body":{"components/CardComponent.html":{}}}],["subtract",{"_index":4371,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subtracting",{"_index":1765,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["success",{"_index":60,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":2218,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":1031,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":3847,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":1284,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["sufficiently",{"_index":2131,"title":{},"body":{"injectables/CardService.html":{}}}],["sum",{"_index":1756,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sumfixelemheights",{"_index":1758,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["summary",{"_index":1786,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super",{"_index":1992,"title":{},"body":{"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{}}}],["super(store",{"_index":2774,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":2776,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":3515,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":5062,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":3872,"title":{},"body":{"components/ResizableComponent.html":{}}}],["svg",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":3236,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2938,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1377,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":3226,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":222,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":892,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(([lightcards",{"_index":2020,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":1487,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":865,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":3957,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":2049,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth",{"_index":1248,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["switchmap((lightcard",{"_index":3478,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((versions",{"_index":4688,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["switchmap(action",{"_index":1926,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(third",{"_index":4178,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts",{"_index":4220,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["t",{"_index":3609,"title":{},"body":{"classes/Map.html":{},"classes/Page.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.i18nlabelkey",{"_index":4227,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":4223,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":4226,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":2685,"title":{},"body":{"components/DetailsComponent.html":{},"components/MenuLinkComponent.html":{}}}],["tab.active",{"_index":2684,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":4829,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":2691,"title":{},"body":{"components/DetailsComponent.html":{}}}],["taction['buttonstyle",{"_index":215,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['hidden",{"_index":214,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['label",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockaction",{"_index":217,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestatebeforeaction",{"_index":216,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["tag",{"_index":2869,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":3047,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":4023,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":376,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":375,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["takes",{"_index":2408,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1652,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1669,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4344,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":2033,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":991,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t",{"_index":4166,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":3207,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(this.saveauthenticationinformation",{"_index":1247,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":2858,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":2875,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["team",{"_index":4414,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tells",{"_index":1476,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":237,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":3125,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":3173,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1793,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":156,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":247,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":3330,"title":{},"body":{"components/IconComponent.html":{}}}],["terminated",{"_index":1348,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["terms",{"_index":293,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["test",{"_index":66,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["test_filter",{"_index":3049,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":219,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":377,"title":{"components/TextSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:22",{"_index":2751,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:23",{"_index":2750,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:29",{"_index":2756,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:36",{"_index":2755,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:47",{"_index":2758,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:51",{"_index":2757,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that's",{"_index":4210,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["that.time.currenttime().valueof",{"_index":3250,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["then(performpost",{"_index":4114,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["they're",{"_index":1749,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["third",{"_index":153,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["third.extractstate(this.card",{"_index":1910,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":4179,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third.prototype",{"_index":4168,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third:string",{"_index":4746,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdaction",{"_index":441,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["thirdactionalreadyloaded",{"_index":469,"title":{"classes/ThirdActionAlreadyLoaded.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactionalreadyupdated",{"_index":471,"title":{"classes/ThirdActionAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactioncomporentmodalreturn",{"_index":2266,"title":{},"body":{"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["thirdactioncomporentmodalreturn.cancel",{"_index":4117,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactioncomporentmodalreturn.dismiss",{"_index":4119,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactionkey",{"_index":3457,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions",{"_index":3462,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.get(thirdactionkey",{"_index":3464,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.set(thirdactionkey",{"_index":3469,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactionservice",{"_index":205,"title":{"injectables/ThirdActionService.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"index.html":{}}}],["thirdactionstatus",{"_index":3459,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactiontoupdate",{"_index":3463,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdcache",{"_index":4154,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":173,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenu('t1",{"_index":4276,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":4284,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":4225,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu[]):map",{"_index":4706,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenuentry",{"_index":160,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"components/MenuLinkComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":4278,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":4281,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":4286,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":4175,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":4264,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":3735,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":4174,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuversion).pipe",{"_index":4177,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":4266,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":4162,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":695,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":4132,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":4136,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":2561,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds+version",{"_index":4684,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds.map(third",{"_index":4673,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion",{"_index":4671,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion[third",{"_index":4675,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions",{"_index":4668,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions.foreach(u",{"_index":4710,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdservice",{"_index":3444,"title":{},"body":{"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsi18nloader",{"_index":4141,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":4243,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":4242,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1894,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":4270,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":4152,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdswiththeirversions",{"_index":4654,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirparty",{"_index":3094,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this._defaultfilters",{"_index":3020,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":3401,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":4035,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":4343,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4040,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":4037,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":2626,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1834,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":3193,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this._modalservice",{"_index":283,"title":{},"body":{"components/ActionComponent.html":{}}}],["this._resizesubject",{"_index":1716,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.asobservable().pipe",{"_index":1717,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.next",{"_index":1725,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._selectediframeurl",{"_index":3370,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":3773,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":3757,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":3403,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":3299,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":3399,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.action",{"_index":282,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actions",{"_index":1482,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":863,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":1541,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.actionsappear",{"_index":1852,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionservice.submit",{"_index":280,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionsurlpath",{"_index":1846,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionurl",{"_index":4095,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.actionurlpath}/${this.action.key",{"_index":279,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.active",{"_index":2998,"title":{},"body":{"classes/Filter.html":{}}}],["this.archiveform",{"_index":951,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.archivesurl",{"_index":2101,"title":{},"body":{"injectables/CardService.html":{}}}],["this.askforoauthaccesstoken",{"_index":1349,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":1146,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.attachaction(button",{"_index":2640,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authenticationservice.getauthenticationmode().tolowercase",{"_index":1432,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initandloadauth",{"_index":1433,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initializeauthentication",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.linkauthenticationstatus",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.movetocodeflowloginpage",{"_index":1429,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.movetoimplicitflowloginpage",{"_index":1436,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler",{"_index":1147,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.initializeauthentication(window.location.href",{"_index":1394,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.linkauthenticationstatus(linker",{"_index":1396,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.move",{"_index":1398,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":1488,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1546,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(this.authservice.extracttoken",{"_index":1484,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.clearauthenticationinformation",{"_index":1542,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.computeredirecturi",{"_index":1594,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1500,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.getsecurityheader",{"_index":2118,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["this.authservice.isexpirationdateover",{"_index":1498,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.loaduserdata(authinfo",{"_index":1501,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.base64",{"_index":2331,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.basesettings",{"_index":1687,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.bindactions(third",{"_index":2631,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.bright",{"_index":3349,"title":{},"body":{"components/IconComponent.html":{}}}],["this.calcheight(this.parentid",{"_index":1720,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.calcheightclass",{"_index":1722,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.callmodalandhandleresponse(modalservice",{"_index":4111,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.callmodalifnecessary(lightcardid",{"_index":4127,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.card",{"_index":1905,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1915,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1916,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion).subscribe(third",{"_index":1909,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.cardoperationsurl",{"_index":2097,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":2117,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1597,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":2099,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":3190,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.checkifreceivedstatusisdifferentfromcurrentone(action",{"_index":4106,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.clientid",{"_index":1165,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.clientsecret",{"_index":1168,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.codeprovider",{"_index":3591,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.collectionsize",{"_index":1014,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["this.computedisplayeddates(config",{"_index":1842,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":3516,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":3723,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":4573,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computeredirecturi",{"_index":1234,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.computetextvalidators",{"_index":4058,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":4439,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":2243,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom.push(this.domains[domain",{"_index":4482,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.consolidatethirdandversions(thirdsandversions",{"_index":4698,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.constructmomentobj([0",{"_index":4385,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.constructmomentobj([1",{"_index":4389,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":1246,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.createformgroup",{"_index":4034,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentactionpath",{"_index":278,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.currentpath",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":4318,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.customlogo",{"_index":3763,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.datetimeform.disable",{"_index":2526,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.enable",{"_index":2527,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.get('date').valuechanges.subscribe(val",{"_index":2531,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.setvalue(val",{"_index":2521,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valid",{"_index":2528,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valuechanges.subscribe(fn",{"_index":2523,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetodisplay",{"_index":1844,"title":{},"body":{"components/CardComponent.html":{}}}],["this.decodetoken(payload.access_token",{"_index":1305,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.default_height",{"_index":2322,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.default_width",{"_index":2324,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.delegateurl",{"_index":1170,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.delegateurl}&redirect_uri=${this.computeredirecturi",{"_index":1330,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.detail",{"_index":2604,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":2605,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":2606,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1907,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":2681,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":2683,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1911,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":2692,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.disabled",{"_index":2532,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.disableinfos",{"_index":3937,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.dispalyinfos",{"_index":3940,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.dispatchappstateactionfromoauth2events(e",{"_index":1363,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchauthactionfromoauthevents",{"_index":1350,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchupdatethirdaction(updatethirdaction",{"_index":4118,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.dispatchupdatethirdaction(updatethirdactionaction",{"_index":4110,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.domains",{"_index":4446,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.domsanitizationservice.bypasssecuritytrusturl(this.base64",{"_index":2343,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.dragend.emit(event",{"_index":2734,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":2727,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":2731,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":2728,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.el.nativeelement",{"_index":1735,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.elapsedsofar",{"_index":2886,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.elapsedsofar+tick.payload.elapsedsincelast",{"_index":2884,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":2636,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":2633,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":3759,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":3775,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":3778,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":1182,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.extracti18ntoupdate(versions",{"_index":4689,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.extractparams(child",{"_index":2425,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":2419,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extracttoken",{"_index":1325,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.familynameclaim",{"_index":1179,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.fetchactionmap(card.publisher",{"_index":4232,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchcardoperation(new",{"_index":2116,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchthird(thirdname",{"_index":4165,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.filterpath",{"_index":3713,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.filterstomap(value",{"_index":968,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.first",{"_index":958,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.first$.subscribe(first",{"_index":972,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.fixedheightclass",{"_index":1721,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.followclocktick",{"_index":2881,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.form",{"_index":1655,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value",{"_index":4062,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":3725,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":3521,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1668,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.format()}t${this.formattime",{"_index":2475,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["this.formbuilder.group",{"_index":4047,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2997,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":3002,"title":{},"body":{"classes/Filter.html":{}}}],["this.getauthenticationmode",{"_index":1400,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.getcurrentguid().tostring",{"_index":3064,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["this.givennameclaim",{"_index":1176,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guid",{"_index":3062,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":1244,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":2096,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":2624,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1858,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1853,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1855,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1857,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse",{"_index":1493,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":1235,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.height",{"_index":2335,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.hide",{"_index":3593,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidetags",{"_index":3054,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.hidetimeline",{"_index":2832,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":2616,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${i18nservice.localurl}${locale}.json`).subscribe(translation",{"_index":3303,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.httpclient.get(`${this.actionurl}${currentactionpath}`).pipe",{"_index":4126,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.get(`${this.archivesurl}/${id",{"_index":2159,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":2103,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":2245,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":4172,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/${process}/${state}/actions",{"_index":4236,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":4214,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":4190,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":4219,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":1251,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":3992,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.get(`${this.userurl}/users/${user",{"_index":4923,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get>(`${this.archivesurl",{"_index":2167,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":3994,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":2158,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(`${this.actionurl}${currentactionpath",{"_index":4104,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":1211,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.put(`${this.userurl}/users/${userdata.login",{"_index":4925,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iconpath",{"_index":3339,"title":{},"body":{"components/IconComponent.html":{}}}],["this.implicitconf",{"_index":1190,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.initfilters",{"_index":3021,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1656,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":2597,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":2596,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initsupportedlocales(config",{"_index":2213,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.inittagfilter",{"_index":3044,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":3042,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":3040,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.instantiateauthmodehandler(this.mode",{"_index":1148,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.instantiateimplicitflowconfiguration",{"_index":1156,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.isauthenticated",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1672,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.issupported(window",{"_index":3808,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.isvirtualtimeundefine",{"_index":4580,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.lightcard",{"_index":1833,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.actions",{"_index":1867,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.id",{"_index":1862,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcardid",{"_index":281,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.lightcards",{"_index":1053,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":4486,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.limitsize",{"_index":2337,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.loadlocale(this._locale",{"_index":3295,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.loaduserdata(auth",{"_index":1249,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.locales",{"_index":3932,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.loginclaim",{"_index":1172,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.loginmessage",{"_index":3588,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.max_height",{"_index":2326,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.max_width",{"_index":2327,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.maxedretries",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menusopeninboth",{"_index":3653,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopeniniframes",{"_index":3649,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopenintabs",{"_index":3647,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.modal.close(thirdactioncomporentmodalreturn.ok",{"_index":2264,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.cancel",{"_index":2265,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.dismiss",{"_index":2263,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.mode",{"_index":1185,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.mousewheelfunc(event",{"_index":3693,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":3704,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1682,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1681,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe.complete",{"_index":1871,"title":{},"body":{"components/CardComponent.html":{}}}],["this.ngunsubscribe.next",{"_index":1870,"title":{},"body":{"components/CardComponent.html":{}}}],["this.notifyservice.createnotification(`new",{"_index":2142,"title":{},"body":{"injectables/CardService.html":{}}}],["this.notifyservice.requestpermission",{"_index":2845,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.oauthservice.configure(this.implicitconf",{"_index":1332,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events",{"_index":1341,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1362,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":1365,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":1368,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":1339,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.initimplicitflow",{"_index":1335,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.loaddiscoverydocument",{"_index":1333,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.logout",{"_index":1281,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":1337,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":1338,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.trylogin",{"_index":1316,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.onchanges",{"_index":2520,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.ontouched",{"_index":2524,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.parentform",{"_index":3712,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.pattern",{"_index":4060,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.periodstarttoend(domain7dayconf",{"_index":4395,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainmonthconf",{"_index":4405,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainweekconf",{"_index":4400,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainyearconf",{"_index":4410,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.permission",{"_index":3810,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.placeholder",{"_index":1675,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.postactionandupdateifnecessary(lightcardid",{"_index":4124,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.preparedlist",{"_index":3505,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":3526,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":3512,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.push({value",{"_index":3507,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.processes",{"_index":954,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.processes[card.process",{"_index":164,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(context.card.publisher,context.card.publisherversion,templatename).pipe",{"_index":3196,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(card.publisher",{"_index":4159,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.querythird(thirdmenuid",{"_index":4176,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":4577,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.refreshthreshold",{"_index":2887,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.registerarrayatindex",{"_index":3182,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":3185,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":3186,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":3177,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":3176,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":3179,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerjson",{"_index":3188,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":3183,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":3187,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":3175,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":3174,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":3181,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":3180,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":3184,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":3178,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":2630,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":3519,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1558,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.resized",{"_index":3890,"title":{},"body":{"components/ResizableComponent.html":{}}}],["this.retryconfigurationloading",{"_index":2231,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":2230,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":1861,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/login",{"_index":1473,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":2627,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":2615,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":3371,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":2689,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1055,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":3615,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetcharchivedcards(new",{"_index":869,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":2211,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":4307,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":3949,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":2032,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.isauthmodecodeorimplicitflow",{"_index":3584,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.loadarchivedcard(action.payload.id",{"_index":1927,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1934,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.move",{"_index":3600,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":4303,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":3621,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":2050,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setheightandwidth",{"_index":2338,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.setsize",{"_index":3341,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setsprites",{"_index":3342,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setting",{"_index":1662,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1665,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.settitle(data",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["this.size",{"_index":956,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/IconComponent.html":{}}}],["this.size$.subscribe(size",{"_index":969,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.sizeicon",{"_index":3343,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":4587,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":3351,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":3353,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2999,"title":{},"body":{"classes/Filter.html":{}}}],["this.storage.getitem('access_token",{"_index":1435,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.dispatch",{"_index":1422,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserEffects.html":{}}}],["this.store.dispatch(updatethirdaction",{"_index":4128,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.store.pipe",{"_index":1015,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.store.pipe(select(buildconfigselector('feed.timeline.domains",{"_index":4478,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(feedselectors.selectfeed",{"_index":4483,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":1426,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectisimplicitlyauthenticated)).subscribe(linker",{"_index":1434,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.first",{"_index":959,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.size",{"_index":957,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.process.list",{"_index":955,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.tags.list",{"_index":953,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1840,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.notify')).subscribe",{"_index":2843,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick')).subscribe(x",{"_index":2914,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide')).subscribe",{"_index":2831,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":3935,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":3933,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('logo.base64')).subscribe",{"_index":3762,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.height')).subscribe",{"_index":3765,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.limitsize')).subscribe",{"_index":3767,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.width')).subscribe",{"_index":3766,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('navbar.thirdmenus.type",{"_index":3644,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":3589,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.provider",{"_index":1590,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.store.select(buildconfigselector('settings.infos')).subscribe((d",{"_index":3939,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('settings.infos.disable",{"_index":3938,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('settings.tags.hide",{"_index":3055,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('title",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1676,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":4036,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":4325,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":4803,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":3291,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale')).subscribe",{"_index":4381,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale')).subscribe(locale",{"_index":3189,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":3292,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":3402,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1663,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1903,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":2830,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(fetchlightcard(lightcardid",{"_index":3477,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(lightcardid)).pipe",{"_index":3461,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(receivedcard.id)).pipe",{"_index":3449,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(selectarchivelightcardselection",{"_index":1056,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["this.store.select(selectauthenticationstate).subscribe(authstate",{"_index":2598,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.store.select(selectcardactionsappearstate).subscribe(d",{"_index":1848,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":3404,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1836,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectidentifier",{"_index":1677,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":3991,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":3368,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m",{"_index":3585,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":4317,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":3400,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.subscription",{"_index":4485,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":4537,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":4033,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":4039,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":4038,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tags",{"_index":952,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.templatecache[key",{"_index":3202,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":4163,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirdcache.set(key",{"_index":4169,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":2608,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":3205,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.askfori18njson(publisher",{"_index":4678,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.thirdservice.fetchactionmapfromlightcard(lightcard",{"_index":3482,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1908,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":4156,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time",{"_index":2471,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1859,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":4324,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":4340,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":4339,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":4342,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":4335,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":4334,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":4341,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":3406,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":4348,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":4347,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":4336,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":4331,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.predefinedformat(date",{"_index":4961,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.timeservice.tongbtimestamp(datestring",{"_index":966,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.timezones",{"_index":3934,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.title",{"_index":581,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titleservice.settitle(newtitle",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transformactionmaptoarray",{"_index":1866,"title":{},"body":{"components/CardComponent.html":{}}}],["this.translate.addlangs(config.i18n.supported.locales",{"_index":2237,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.translate.currentlang",{"_index":4660,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.getlangs",{"_index":4665,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.instant(`${this.card.publisher}.${this.card.publisherversion}.${label.key",{"_index":2653,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.translate.settranslation(locale",{"_index":4680,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.settranslation(locale,translation,true",{"_index":3305,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translate.use(this._locale",{"_index":3297,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":3513,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.typefilterform",{"_index":4802,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":4806,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true,{emitevent",{"_index":4813,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":4804,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true,{emitevent",{"_index":4812,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('compliant').setvalue(!next.active",{"_index":4808,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('compliant').setvalue(true,{emitevent",{"_index":4814,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('information').setvalue(!next.active",{"_index":4810,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('information').setvalue(true,{emitevent",{"_index":4815,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":2139,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":2680,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1666,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":4155,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":4197,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeorimplicitflow",{"_index":3583,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usercontext",{"_index":2599,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.userform",{"_index":3594,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":3596,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":3597,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":3599,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":3595,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.askcreateuser(user",{"_index":4895,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.askuserapplicationregistered(userpayload.identifier",{"_index":4880,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.usersurl",{"_index":3989,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.userurl",{"_index":4921,"title":{},"body":{"injectables/UserService.html":{}}}],["this.values",{"_index":3506,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.verifyexpirationdate",{"_index":1277,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.virtualtime",{"_index":4594,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.width",{"_index":2336,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["those",{"_index":1938,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["threshold",{"_index":2891,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["throught",{"_index":4890,"title":{},"body":{"injectables/UserEffects.html":{}}}],["throw",{"_index":1658,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":1101,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":1224,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(err",{"_index":4185,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":1217,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(new",{"_index":4182,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":1198,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["thus",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["tick",{"_index":2797,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":4305,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":2796,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["tickpayload",{"_index":2810,"title":{"classes/TickPayload.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":4951,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["ticks15minconf",{"_index":4435,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks30minconf",{"_index":4437,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks4hoursconf",{"_index":4431,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksconf",{"_index":4457,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksdayconf",{"_index":4432,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tickshalfmonthconf",{"_index":4433,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":379,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["time$|async",{"_index":3409,"title":{},"body":{"components/InfoComponent.html":{}}}],["time's",{"_index":4373,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time).formatdatetime",{"_index":950,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["time_filter",{"_index":3048,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":2817,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":2795,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":2791,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":4293,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":4851,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":819,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":378,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":4319,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeformat",{"_index":3942,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["timeinitialstate",{"_index":4610,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":338,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":3427,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":3422,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":3421,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":3425,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":380,"title":{"components/TimeLineComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":4617,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":781,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":757,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timeout",{"_index":1387,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["timer",{"_index":1649,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1673,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":794,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":4310,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":2792,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":4604,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":4611,"title":{},"body":{"interfaces/TimeState.html":{}}}],["times",{"_index":1917,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/ConfirmModalComponent.html":{}}}],["timescale",{"_index":4616,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":914,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["timespan",{"_index":2807,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/LightCard.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3431,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["timespeed",{"_index":4547,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":4579,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":4566,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1816,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":4552,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":756,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timestruct",{"_index":2466,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["timezone",{"_index":2794,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":3924,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["title",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"injectables/NotifyService.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1789,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titleservice",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["titlestyle",{"_index":1792,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":4277,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":4285,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":3785,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":2163,"title":{},"body":{"injectables/CardService.html":{},"components/TimeLineComponent.html":{}}}],["tmpmoment",{"_index":4526,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tmpmoment.date(2",{"_index":4528,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["toggle",{"_index":4051,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":3733,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":3739,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":3774,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":3734,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tointeger(dateparts[0",{"_index":2453,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[1",{"_index":2456,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[2",{"_index":2459,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(value",{"_index":2443,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["token:string",{"_index":4872,"title":{},"body":{"classes/UserContext.html":{}}}],["token_error",{"_index":1381,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["token_received",{"_index":1379,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["token_refresh_error",{"_index":1382,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tokeninjector",{"_index":3908,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["total",{"_index":1766,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["totalelements",{"_index":3815,"title":{},"body":{"classes/Page.html":{}}}],["totalpages",{"_index":3817,"title":{},"body":{"classes/Page.html":{}}}],["tr",{"_index":4460,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["trace",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":2465,"title":{},"body":{"classes/DateTimeNgb.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":4940,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformactionmaptoarray",{"_index":1804,"title":{},"body":{"components/CardComponent.html":{}}}],["transformadvanced",{"_index":4946,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":4947,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":4954,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":4955,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformtotimestamp",{"_index":948,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transformtotimestamp(date",{"_index":964,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transition",{"_index":4908,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2createuserapplication",{"_index":4875,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2userapplicationregistered",{"_index":4876,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transitionalthirdwithitsversion",{"_index":4641,"title":{"classes/TransitionalThirdWithItSVersion.html":{}},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(card.publisher,card.publisherversion",{"_index":4697,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(menu.id,menu.version",{"_index":4708,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translate",{"_index":1453,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translate/core",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":5008,"title":{},"body":{"dependencies.html":{}}}],["translateactions",{"_index":3859,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/typealiases.html":{}}}],["translateactionstypes",{"_index":3844,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translateactionstypes.refreshtranslation",{"_index":3842,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.translationuptodate",{"_index":3855,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslation",{"_index":3853,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationfailed",{"_index":3858,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationsuccessful",{"_index":3856,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateeffects",{"_index":829,"title":{"injectables/TranslateEffects.html":{}},"body":{"interfaces/AppState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4686,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.i18nbundleversionloaded",{"_index":4694,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.sendtranslateaction(publisherandversion",{"_index":4691,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateloader",{"_index":4143,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":641,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot",{"_index":673,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1454,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateservice,private",{"_index":3284,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":1463,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translationreferencestoupdate",{"_index":4722,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[publisher",{"_index":4726,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[third",{"_index":4739,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationuptodate",{"_index":3850,"title":{"classes/TranslationUpToDate.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transorm",{"_index":920,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["tree",{"_index":240,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":3628,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ResizableComponent.html":{},"components/TimeFilterComponent.html":{}}}],["triggered",{"_index":2381,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":2647,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":1529,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":947,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["try",{"_index":55,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1659,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["trylogout",{"_index":1481,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":54,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":3598,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":56,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":5029,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2965,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":2808,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":2815,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":3045,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2954,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":382,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":5065,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1574,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":384,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":4797,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":945,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["typeof(event",{"_index":3876,"title":{},"body":{"components/ResizableComponent.html":{}}}],["typeof(limitsize",{"_index":3772,"title":{},"body":{"components/NavbarComponent.html":{}}}],["types/jwt",{"_index":5012,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["typically",{"_index":2380,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":2740,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":1255,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u.lastname",{"_index":1257,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u00a0",{"_index":3254,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["ui/assets/i18n",{"_index":3288,"title":{},"body":{"injectables/I18nService.html":{}}}],["uid",{"_index":1788,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1553,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unabletorefreshorgettoken",{"_index":80,"title":{"classes/UnableToRefreshOrGetToken.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unabletorefreshtoken",{"_index":1448,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unauthenticationfromimplicitflow",{"_index":77,"title":{"classes/UnAuthenticationFromImplicitFlow.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unavailable",{"_index":1581,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncachedpublishers",{"_index":4720,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.foreach(publisher",{"_index":4723,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.length",{"_index":4728,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unchanged",{"_index":472,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["uncomment",{"_index":2735,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2332,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":2977,"title":{},"body":{"classes/Filter.html":{}}}],["undone",{"_index":2271,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["unexpected",{"_index":415,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":1143,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["unit",{"_index":4374,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["unselectedvalues",{"_index":233,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":2736,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":2064,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":2068,"title":{},"body":{"injectables/CardService.html":{}}}],["untouched",{"_index":4122,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["untrackedversions",{"_index":4735,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unused",{"_index":1940,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["updatealightcard",{"_index":464,"title":{"classes/UpdateALightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatealightcard({card",{"_index":3452,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updateanaction",{"_index":465,"title":{"classes/UpdateAnAction.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateanactionfailure",{"_index":466,"title":{"classes/UpdateAnActionFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter",{"_index":902,"title":{"classes/UpdateArchiveFilter.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter({filters",{"_index":868,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updatearchivepage",{"_index":897,"title":{"classes/UpdateArchivePage.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivepage({page",{"_index":1019,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updatearchivepage).payload.page",{"_index":882,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updateasync",{"_index":2664,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updateathirdaction",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatecard",{"_index":3470,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatecardsubscriptionwithdates",{"_index":2069,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":2085,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":477,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatedsubscription",{"_index":458,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":2853,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":3518,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updateresultpage",{"_index":1004,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updateresultpage(currentpage",{"_index":1007,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updates",{"_index":2898,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updatestatebeforeaction",{"_index":141,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":459,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatethirdaction",{"_index":4080,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactionaction",{"_index":4108,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactions",{"_index":3442,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatetimereference",{"_index":2814,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":4309,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":2798,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["updatetranslateservice",{"_index":4651,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslation",{"_index":3845,"title":{"classes/UpdateTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslation({versions",{"_index":4745,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationfailed",{"_index":3848,"title":{"classes/UpdateTranslationFailed.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationfailed({error",{"_index":4661,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationsuccessful",{"_index":3846,"title":{"classes/UpdateTranslationSuccessful.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationsuccessful({language",{"_index":4659,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatevalue",{"_index":1619,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1639,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1683,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["uploadactions",{"_index":3443,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["upon",{"_index":2221,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uribase",{"_index":1352,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["uribase}${pathend",{"_index":1357,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/enumerations.html":{}}}],["url.endswith('/auth/check_token",{"_index":4635,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":4637,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":4636,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":1838,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["urlcleaner",{"_index":4153,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":1208,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["urlparts",{"_index":1837,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["urlparts[1",{"_index":1839,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["urlparts[3",{"_index":1993,"title":{},"body":{"components/CardListComponent.html":{}}}],["urlsearchparams",{"_index":1202,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url}/auth/realms/${realm}/protocol/openid",{"_index":1595,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["usable",{"_index":1319,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["use",{"_index":1414,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeorimplicitflow",{"_index":3568,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["useexisting",{"_index":2480,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["useful",{"_index":714,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["useless",{"_index":4497,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["uselessauthaction",{"_index":65,"title":{"classes/UselessAuthAction.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":49,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user(userpayload.identifier",{"_index":4884,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.login",{"_index":4898,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.service",{"_index":3917,"title":{},"body":{"modules/ServicesModule.html":{}}}],["useractions",{"_index":2288,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["useractionstypes",{"_index":2058,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["useractionstypes.createuserapplication",{"_index":2276,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonfailure",{"_index":2286,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonsuccess",{"_index":2285,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.handleunexpectederror",{"_index":2287,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationnotregistered",{"_index":2284,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationregistered",{"_index":2283,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["userapplicationnotregistered",{"_index":2278,"title":{"classes/UserApplicationNotRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationnotregistered({error",{"_index":4887,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userapplicationregistered",{"_index":2277,"title":{"classes/UserApplicationRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationregistered({user",{"_index":4882,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercontext",{"_index":2551,"title":{"classes/UserContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["userdata",{"_index":4883,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["userdata.login",{"_index":4924,"title":{},"body":{"injectables/UserService.html":{}}}],["userdatapayload",{"_index":4904,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userdataurl",{"_index":1129,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["usereffects",{"_index":827,"title":{"injectables/UserEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/UserEffects.html":{}}}],["userform",{"_index":3569,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":3980,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userinitialstate",{"_index":4928,"title":{},"body":{"interfaces/UserState.html":{}}}],["username",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["username$|async",{"_index":3407,"title":{},"body":{"components/InfoComponent.html":{}}}],["userpayload",{"_index":4879,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.firstname",{"_index":4885,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.lastname",{"_index":4886,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userreducer",{"_index":824,"title":{},"body":{"interfaces/AppState.html":{}}}],["userservice",{"_index":3909,"title":{"injectables/UserService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["userstate",{"_index":758,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/UserState.html":{}}}],["usersurl",{"_index":3981,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userurl",{"_index":4913,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1551,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["utc",{"_index":1409,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["utilities/utilities.module",{"_index":2187,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["utilitiesmodule",{"_index":615,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["v",{"_index":296,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["v.label",{"_index":3509,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label.parameters",{"_index":3514,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label|async",{"_index":3527,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.value",{"_index":3510,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v1",{"_index":3212,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":3214,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2514,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":4504,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publishdate",{"_index":4507,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisher",{"_index":4500,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisherversion",{"_index":4501,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":4499,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":4505,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans",{"_index":4491,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.foreach(d",{"_index":4493,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.length",{"_index":4492,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.title",{"_index":4502,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":1194,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["validate",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["validate(c",{"_index":2508,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validationerrors",{"_index":2511,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validator",{"_index":2478,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validators",{"_index":2519,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":3517,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":2777,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":4061,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":3520,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":1514,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":3252,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1689,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":3232,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.trim().split",{"_index":2448,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["value:string",{"_index":2007,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":3229,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":3217,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":4041,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":3504,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":3495,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":230,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{}}}],["values.foreach(value",{"_index":2161,"title":{},"body":{"injectables/CardService.html":{}}}],["var",{"_index":308,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1881,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":1462,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":1268,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["verifytranslationneeded",{"_index":4681,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus",{"_index":4747,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus:observable",{"_index":4699,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version:'${version",{"_index":4217,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":3199,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput",{"_index":4764,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["versioninput[publisher",{"_index":4725,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput[third",{"_index":4732,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versionparam",{"_index":4198,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versions",{"_index":3854,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["versions.add(u.version",{"_index":4712,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versions2update",{"_index":4724,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versiontoupdate",{"_index":4744,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["virtual",{"_index":2786,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":4544,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":704,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":269,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["w",{"_index":4468,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":2629,"title":{},"body":{"components/DetailComponent.html":{}}}],["want",{"_index":2339,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["warning",{"_index":3885,"title":{},"body":{"components/ResizableComponent.html":{}}}],["way",{"_index":2124,"title":{},"body":{"injectables/CardService.html":{},"injectables/TimeEffects.html":{}}}],["weather",{"_index":4613,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["web",{"_index":1090,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["wee",{"_index":4967,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["week",{"_index":2834,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["weeknumberonly",{"_index":4975,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["weirdly",{"_index":1865,"title":{},"body":{"components/CardComponent.html":{}}}],["went",{"_index":1913,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":3690,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2948,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":3670,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:18",{"_index":3680,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:20",{"_index":3679,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:23",{"_index":3684,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:28",{"_index":3682,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:33",{"_index":3686,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:41",{"_index":3688,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":1947,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["width",{"_index":1875,"title":{},"body":{"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["width:100px",{"_index":2539,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["window",{"_index":1767,"title":{},"body":{"directives/CalcHeightDirective.html":{},"injectables/NotifyService.html":{},"components/ResizableComponent.html":{}}}],["window.alert(this.translate.instant(\"login.error.disconnected",{"_index":1563,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["window.dispatchevent(evt",{"_index":3889,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.dispatchevent(new",{"_index":3879,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.document.createevent('uievents",{"_index":3887,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.event",{"_index":3698,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location",{"_index":743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.hash",{"_index":720,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.href",{"_index":1328,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["window.location.pathname",{"_index":2405,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["window:resize",{"_index":1703,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["within",{"_index":742,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["withlatestfrom",{"_index":893,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":2860,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2892,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectarchivefilters",{"_index":879,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":2019,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":1486,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":2233,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":1661,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["won't",{"_index":4329,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["word",{"_index":1879,"title":{},"body":{"components/CardComponent.html":{}}}],["workflow",{"_index":1151,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserEffects.html":{}}}],["works",{"_index":1694,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{}}}],["writevalue",{"_index":2493,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["writevalue(val",{"_index":2512,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["wrong",{"_index":1544,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/IconComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wrote",{"_index":4950,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["www",{"_index":1207,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["x",{"_index":996,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["x.getboundingclientrect().height).reduce((prev",{"_index":1761,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x.style.height",{"_index":1773,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x1",{"_index":4595,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":4597,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":4596,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":4599,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":4598,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":4939,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":2920,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":997,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/TimeLineComponent.html":{}}}],["yea",{"_index":4969,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":2133,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["yes",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/I18n.html":{},"classes/LightCard.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["yield",{"_index":1732,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["yy",{"_index":4982,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":2590,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythirdfromcard(this.card",{"_index":2623,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":5031,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":3936,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["zoom",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["zoomonbutton",{"_index":4442,"title":{},"body":{"components/TimeLineComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:113\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:125\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, lockAction: boolean, updateStateBeforeAction: boolean, called: boolean, key?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/action.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-action\n            \n\n            \n                styleUrls\n                ./action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentActionPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionUrlPath\n                            \n                            \n                                i18nPrefix\n                            \n                            \n                                lightCardId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_modalService: NgbModal, actionService: ThirdActionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/action.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ThirdActionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         Action\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionUrlPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n                \n                    \n                        Type :         I18n\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lightCardId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentActionPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Action} from \"@ofModel/thirds.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ThirdActionService} from \"@ofServices/third-action.service\";\n\n@Component({\n    selector: 'of-action',\n    templateUrl: './action.component.html',\n    styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n\n    @Input()  action: Action;\n    @Input()  i18nPrefix: I18n;\n    @Input()  lightCardId: string;\n    @Input()  actionUrlPath: string;\n    private currentActionPath: string;\n    /* istanbul ignore next */\n    constructor(\n        private _modalService: NgbModal\n        , private actionService: ThirdActionService) {\n    }\n\n    ngOnInit(): void {\n        this.currentActionPath = `${this.actionUrlPath}/${this.action.key}`;\n    }\n\n    submit() {\n        this.actionService.submit(\n            this.lightCardId\n            , this.currentActionPath\n            , this.action\n            , this._modalService);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n{{i18nPrefix + action.label.key}}\n\n    \n\n    \n                \n                    ./action.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{i18nPrefix + action.label.key}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionStatus.html":{"url":"classes/ActionStatus.html","title":"class - ActionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, hidden: boolean, buttonStyle: string, updateStateBeforeAction: boolean, lockAction: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddActionsAppear.html":{"url":"classes/AddActionsAppear.html","title":"class - AddActionsAppear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddActionsAppear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.AddActionsAppear\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:90\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddThirdActions.html":{"url":"classes/AddThirdActions.html","title":"class - AddThirdActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddThirdActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddThirdActions\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService, titleService: Title, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {buildConfigSelector, selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    readonly title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,\n                private i18nService: I18nService,\n                private titleService: Title\n        , private authenticationService: AuthenticationService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`);\n        this.authenticationService.initializeAuthentication();\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.authenticationService.linkAuthenticationStatus(\n            (isAuthenticated: boolean) => {\n                this.isAuthenticated$ = isAuthenticated;\n            });\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries => this.maxedRetries = maxedRetries));\n        this.store.dispatch(new LoadConfig());\n\n        const sTitle = this.store.select(buildConfigSelector('title', this.title));\n        sTitle.subscribe(data => {\n            this.setTitle(data);\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n        Application is loading ...\n    \n        \n        Application is not available yet, please reload later (F5)\n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.button {margin-right: 8px;}\n\n.app-content {\n  height: 100%; //This allows to take up all the space in body, minus padding\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Application is loading ...                    Application is not available yet, please reload later (F5)        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CustomLogoComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuLinkComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {IconComponent} from './components/navbar/icon/icon.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faExternalLinkAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {InfoComponent} from './components/navbar/info/info.component';\nimport {UtilitiesModule} from './modules/utilities/utilities.module';\nimport {MenuLinkComponent} from './components/navbar/menus/menu-link/menu-link.component';\nimport {CustomLogoComponent} from './components/navbar/custom-logo/custom-logo.component';\nimport {OAuthModule} from 'angular-oauth2-oidc';\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        OAuthModule.forRoot(),\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(),\n        FontAwesomeModule,\n        UtilitiesModule,\n        AppRoutingModule\n    ],\n    declarations: [AppComponent,\n        NavbarComponent,\n        LoginComponent,\n        IconComponent,\n        InfoComponent,\n        MenuLinkComponent,\n        CustomLogoComponent],\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, Router, RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\n\nconst defaultPath = '/feed';\nconst archivePath = 'archives';\n\nconst routes: Routes = [\n    {\n        path: 'feed',\n        loadChildren: () => \"import('./modules/feed/feed.module').then(m => m.FeedModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: archivePath,\n        loadChildren: () => \"import('./modules/archives/archives.module').then(m => m.ArchivesModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: () => \"import('./modules/thirdparty/thirdparty.module').then(m => m.ThirdpartyModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: () => \"import('./modules/settings/settings.module').then(m => m.SettingsModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: defaultPath}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n/**\n * Redirect the page to the same place.\n * Useful for page refresh action\n * @param currentRouter - the router configured in the object calling this function\n */\nexport function redirectToCurrentLocation(currentRouter: Router): void {\n    const pathname = window.location.hash;\n    const hashLength = pathname.length;\n    const destination = (hashLength > 2) ? pathname.substr(1, hashLength - 1) : defaultPath;\n    // as archive searches are not stored need to got back to archives root path\n    const lastDestination = (destination.includes(archivePath)) ? archivePath : destination;\n    currentRouter.navigate([lastDestination]);\n}\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {\n            enableTracing: false, preloadingStrategy:\n            PreloadAllModules,\n            /* sets initialNavigation to false is needed to enable authentication implicit flow\n            * otherwise HashLocationStrategy breaks it by handling '#' within `window.location`.\n            */\n            initialNavigation: false\n        })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archive\n                                \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archive\n                                    \n                                \n                                \n                                    \n                                        archive:         ArchiveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArchiveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {reducer as archiveReducer} from '@ofStore/reducers/archive.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\nimport {ArchiveState} from \"@ofStates/archive.state\";\nimport {ArchiveEffects} from \"@ofEffects/archive.effects\";\n\nimport {reducer as userReducer} from '@ofStore/reducers/user.reducer';\nimport {UserState} from \"@ofStates/user.state\";\nimport {UserEffects} from \"@ofEffects/user.effects\";\n\nimport {TranslateEffects} from \"@ofEffects/translate.effects\";\n\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n    archive: ArchiveState;\n    user: UserState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects,\n    ArchiveEffects,\n    UserEffects,\n    TranslateEffects\n];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer,\n    archive: archiveReducer,\n    user: userReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveEffects.html":{"url":"injectables/ArchiveEffects.html","title":"injectable - ArchiveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/archive.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryArchivedCards\n                            \n                            \n                                queryArchivedCardsPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/archive.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCardsPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {\n    ArchiveActionTypes,\n    ArchiveQuerySuccess,\n    HandleUnexpectedError,\n    SendArchiveQuery,\n    UpdateArchivePage\n} from '@ofActions/archive.actions';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {selectArchiveFilters} from '@ofSelectors/archive.selectors';\nimport {Page} from '@ofModel/page.model';\nimport {UpdateArchiveFilter} from '../actions/archive.actions';\n\n@Injectable()\nexport class ArchiveEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private actions$: Actions, private service: CardService) {\n    }\n\n    @Effect()\n    queryArchivedCards: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n    @Effect()\n    queryArchivedCardsPage: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveFiltersComponent.html":{"url":"components/ArchiveFiltersComponent.html","title":"component - ArchiveFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-filters\n            \n\n            \n                styleUrls\n                ./archive-filters.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive-filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveForm\n                            \n                            \n                                filtersToMap\n                            \n                            \n                                first$\n                            \n                            \n                                processes$\n                            \n                            \n                                size$\n                            \n                            \n                                tags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsendQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersToMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:76\n                            \n                        \n\n                \n                    \n                        Transorm the filters list to Map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable, combineLatest} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SendArchiveQuery } from '@ofStore/actions/archive.actions';\nimport { DateTimeNgb } from '@ofModel/datetime-ngb.model';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TimeService } from '@ofServices/time.service';\n\nexport enum FilterDateTypes {\n  PUBLISH_DATE_FROM_PARAM = 'publishDateFrom',\n  PUBLISH_DATE_TO_PARAM = 'publishDateTo',\n  ACTIVE_FROM_PARAM = 'activeFrom',\n  ACTIVE_TO_PARAM = 'activeTo'\n\n}\n\nexport const checkElement = (enumeration: typeof FilterDateTypes, value: string): boolean => {\n  let result = false;\n  if (Object.values(enumeration).includes(value)) {\n    result = true;\n  }\n  return result;\n};\n\nexport const transformToTimestamp = (date: NgbDateStruct, time: NgbTimeStruct): string => {\n  return new DateTimeNgb(date, time).formatDateTime();\n};\n\n@Component({\n  selector: 'of-archive-filters',\n  templateUrl: './archive-filters.component.html',\n  styleUrls: ['./archive-filters.component.css']\n})\nexport class ArchiveFiltersComponent implements OnInit {\n\n  tags$: Observable;\n  processes$: Observable;\n  size$: Observable;\n  first$: Observable;\n\n  archiveForm: FormGroup;\n\n  constructor(private store: Store, private timeService: TimeService) {\n    this.archiveForm = new FormGroup({\n      tags: new FormControl(''),\n      process: new FormControl(),\n      publishDateFrom: new FormControl(''),\n      publishDateTo: new FormControl(''),\n      activeFrom: new FormControl(''),\n      activeTo: new FormControl(''),\n    });\n  }\n\n\n  ngOnInit() {\n    this.tags$ = this.store.select(buildConfigSelector('archive.filters.tags.list'));\n    this.processes$ = this.store.select(buildConfigSelector('archive.filters.process.list'));\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  /**\n   * Transorm the filters list to Map\n   */\n  filtersToMap = (filters: any): Map => {\n    const params = new Map();\n    Object.keys(filters).forEach(key => {\n      const element = filters[key];\n        // if the form element is date\n      if (element) {\n        if (checkElement(FilterDateTypes, key)) {\n          const {date, time} = element;\n          if (date) {\n            const dateString = transformToTimestamp(date, time);\n            params.set(key, [this.timeService.toNgBTimestamp(dateString)]);\n          }\n        } else {\n          if (element.length) {\n            params.set(key, element);\n          }\n        }\n      }\n    });\n    return params;\n  }\n\n  sendQuery(): void {\n    const {value} = this.archiveForm;\n    const params = this.filtersToMap(value);\n    this.size$.subscribe(size => params.set('size', [size.toString()]));\n    this.first$.subscribe(first => params.set('page', [first.toString()]));\n    this.store.dispatch(new SendArchiveQuery({params}));\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            archive.search\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-filters.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  .archive-filter {\n    padding-right:7px;\n    padding-left:0;\n  }\n  .archive-radius {\n    border-radius:5px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                      archive.search                              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListComponent.html":{"url":"components/ArchiveListComponent.html","title":"component - ArchiveListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list\n            \n\n            \n                styleUrls\n                ./archive-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable, of} from 'rxjs';\nimport { AppState } from '@ofStore/index';\nimport { Store, select } from '@ngrx/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { selectArchiveLightCards } from '@ofStore/selectors/archive.selectors';\n\n@Component({\n  selector: 'of-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.scss']\n})\nexport class ArchiveListComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n      \n        \n      \n    \n    \n\n\n\n    \n\n    \n                \n                    ./archive-list.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListPageComponent.html":{"url":"components/ArchiveListPageComponent.html","title":"component - ArchiveListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list-page\n            \n\n            \n                styleUrls\n                ./archive-list-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionSize$\n                            \n                            \n                                first$\n                            \n                            \n                                size$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateResultPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateResultPage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateResultPage(currentPage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionSize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UpdateArchivePage} from '@ofActions/archive.actions';\nimport {Store, select} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport { selectArchiveCount } from '@ofStore/selectors/archive.selectors';\nimport { tap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-archive-list-page',\n  templateUrl: './archive-list-page.component.html',\n  styleUrls: ['./archive-list-page.component.scss']\n})\nexport class ArchiveListPageComponent implements OnInit {\n\n  collectionSize$: Observable;\n  first$: Observable;\n  size$: Observable;\n  constructor(private store: Store) {}\n  ngOnInit(): void {\n    this.collectionSize$ = this.store.pipe(\n      select(selectArchiveCount),\n      catchError(err => of(0))\n    );\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  updateResultPage(currentPage): void {\n    this.store.dispatch(new UpdateArchivePage({page: currentPage - 1}));\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n (size$ | async)\"\n  [collectionSize]=\"collectionSize$ | async\"\n  [page]=\"first$ | async\"\n  (pageChange)=\"updateResultPage($event)\"\n  [maxSize]=\"3\"\n  [rotate]=\"true\">\n\n\n    \n\n    \n                \n                    ./archive-list-page.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' (size$ | async)\"  [collectionSize]=\"collectionSize$ | async\"  [page]=\"first$ | async\"  (pageChange)=\"updateResultPage($event)\"  [maxSize]=\"3\"  [rotate]=\"true\">'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveQuerySuccess.html":{"url":"classes/ArchiveQuerySuccess.html","title":"class - ArchiveQuerySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveQuerySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.ArchiveQuerySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArchiveState.html":{"url":"interfaces/ArchiveState.html","title":"interface - ArchiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArchiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/archive.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filters\n                                \n                                \n                                        loading\n                                \n                                \n                                        resultPage\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultPage\n                                    \n                                \n                                \n                                    \n                                        resultPage:     Page\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Page\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n// import { IArchiveFilter } from '@ofModel/archive-filter.model';\n\nexport interface ArchiveState {\n    selectedCardId: string;\n    resultPage: Page;\n    filters: Map;\n    loading: boolean;\n}\n\nexport const archiveInitialState: ArchiveState = {\n        selectedCardId: null,\n        resultPage: new Page(1, 0 , []),\n        filters: new Map(),\n        loading: false\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {select, Store} from '@ngrx/store';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {selectArchiveLightCards, selectArchiveLightCardSelection} from '@ofSelectors/archive.selectors';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  lightCards$: Observable;\n  selection$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.lightCards$ = this.store.pipe(\n        select(selectArchiveLightCards),\n        catchError(err => of([]))\n    );\n    this.selection$ = this.store.select(selectArchiveLightCardSelection);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n    \n\n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchiveFiltersComponent\n                        \n                        \n                            ArchiveListComponent\n                        \n                        \n                            ArchiveListPageComponent\n                        \n                        \n                            ArchivesComponent\n                        \n                        \n                            DatetimeFilterComponent\n                        \n                        \n                            MultiFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                        \n                            CardsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport { ArchiveListPageComponent } from './components/archive-list/archive-list-page/archive-list-page.component';\nimport {ArchivesComponent} from './archives.component';\nimport {ArchiveListComponent} from './components/archive-list/archive-list.component';\nimport { ArchiveFiltersComponent } from './components/archive-filters/archive-filters.component';\nimport { MultiFilterComponent } from './components/archive-filters/multi-filter/multi-filter.component';\nimport { DatetimeFilterComponent } from './components/archive-filters/datetime-filter/datetime-filter.component';\nimport {CardsModule} from '../cards/cards.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArchivesRoutingModule,\n    CardsModule,\n    TranslateModule,\n    NgbModule\n  ],\n  declarations: [\n    ArchivesComponent,\n    ArchiveListComponent,\n    ArchiveFiltersComponent,\n    MultiFilterComponent,\n    ArchiveListPageComponent,\n    DatetimeFilterComponent\n  ]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n        ]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:428\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:431\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:433\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:432\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:434\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        isImplicitlyAuthenticated\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isImplicitlyAuthenticated\n                                    \n                                \n                                \n                                    \n                                        isImplicitlyAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n    isImplicitlyAuthenticated: boolean;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null,\n    isImplicitlyAuthenticated: false\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                CheckImplicitFlowAuthentication\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                            \n                                UnableToRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice handling request of cards\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nobject to get translation \n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:146\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        redirectToCurrentLocation(this.router);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => {\n                                            redirectToCurrentLocation(this.router);\n                                            return new AcceptLogIn(auth);\n                                        })\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:189\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:70\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckImplicitFlowAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => redirectToCurrentLocation(this.router)),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:247\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:165\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:98\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:125\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UnableToRefreshToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.UnableToRefreshOrGetToken),\n            switchMap(() => {\n                window.alert(this.translate.instant(\"login.error.disconnected\"));\n                return of(new TryToLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:264\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {from, Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    CheckImplicitFlowAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '@ofServices/authentication/authentication.service';\nimport {catchError, flatMap, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {Router} from '@angular/router';\nimport {ConfigActionTypes, LoadConfigSuccess} from '@ofActions/config.actions';\nimport {selectCode} from '@ofSelectors/authentication.selectors';\nimport {Message, MessageLevel} from '@ofModel/message.model';\nimport {I18n} from '@ofModel/i18n.model';\nimport {Map} from '@ofModel/map';\nimport {CardService} from '@ofServices/card.service';\nimport {EmptyLightCards} from '@ofActions/light-card.actions';\nimport {ClearCard} from '@ofActions/card.actions';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\nimport {redirectToCurrentLocation} from \"../../app-routing.module\";\nimport { combineLatest } from 'rxjs';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructorCheckImplicitFlowAuthenticationStatus\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param cardService - service handling request of cards\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     * @param translate - object to get translation \n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router,\n                private translate: TranslateService) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogIn\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut flow on demand\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        redirectToCurrentLocation(this.router);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => {\n                                            redirectToCurrentLocation(this.router);\n                                            return new AcceptLogIn(auth);\n                                        })\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n\n    @Effect()\n    CheckImplicitFlowAuthentication: Observable =\n        this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => redirectToCurrentLocation(this.router)),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }));\n    @Effect()\n    UnableToRefreshToken: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.UnableToRefreshOrGetToken),\n            switchMap(() => {\n                window.alert(this.translate.instant(\"login.error.disconnected\"));\n                return of(new TryToLogOut());\n            })\n        );\n\n    handleErrorOnTokenGeneration(errorResponse, category: string) {\n        let message, key;\n        const params = new Map();\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        this.authService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    private resetState() {\n        this.authService.clearAuthenticationInformation();\n        combineLatest(\n            this.store.select(buildConfigSelector('security.provider-realm')),\n            this.store.select(buildConfigSelector('security.provider-url'))\n        ).subscribe(([realm, url]) => {\n            if(realm && url) {\n                const redirect = this.authService.computeRedirectUri();\n                window.location.href = `${url}/auth/realms/${realm}/protocol/openid-connect/logout?redirect_uri=${redirect}`;\n            }\n        });\n        this.cardService.unsubscribeCardOperation();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationModeHandler.html":{"url":"interfaces/AuthenticationModeHandler.html","title":"interface - AuthenticationModeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationModeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                interface to handle the mode of authentication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extractToken\n                                \n                                \n                                    initializeAuthentication\n                                \n                                \n                                    linkAuthenticationStatus\n                                \n                                \n                                    move\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \nextractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:471\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentHrefLocation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:467\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentHrefLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:469\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:473\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html'\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CalcHeightDirective.html":{"url":"directives/CalcHeightDirective.html","title":"directive - CalcHeightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CalcHeightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/utilities/calc-height.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [calcHeightDirective]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resizeSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                calcHeightClass\n                            \n                            \n                                fixedHeightClass\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/calc-height.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        calcHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fixedHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:22\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:42\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calcHeight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixedHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    calcHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizeSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive, ElementRef,\n    Input, HostListener, OnInit\n} from '@angular/core';\nimport {debounceTime} from \"rxjs/operators\";\nimport {Subject} from \"rxjs\";\n\n@Directive({\n    selector: '[calcHeightDirective]'\n})\nexport class CalcHeightDirective {\n\n    @Input()\n    parentId: any;\n\n    @Input()\n    fixedHeightClass: any;\n\n    @Input()\n    calcHeightClass: any;\n\n    private _resizeSubject$: Subject;\n\n    constructor(private el: ElementRef) {\n\n        this._resizeSubject$ = new Subject();\n        this._resizeSubject$.asObservable().pipe(\n            debounceTime(300),\n        ).subscribe(x => this.calcHeight(this.parentId, this.fixedHeightClass, this.calcHeightClass));\n\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        this._resizeSubject$.next();\n    }\n\n    private calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string) {\n\n        let parent : HTMLElement;\n\n        parent = document.getElementById(this.parentId);\n\n        //If no parentId was provided or search didn't yield any element, fallback is element calling the directive\n        if(!parent){\n            parent = this.el.nativeElement;\n        }\n\n        if(!parent){\n            return;\n        }\n\n        //Get elements that should be allowed to define their own height (based on content), which are then \"fixed\" for this calculation\n        const fixedElements = parent.getElementsByClassName(fixedHeightClass);\n\n        //Get elements that for which the height should be calculated\n        //For now all elements bearing the calcHeightClass will have their height updated to the same calculated value\n        //Which makes sense if they're next to one another, but another option would be to divide the available height equally\n        const calcElements = parent.getElementsByClassName(calcHeightClass);\n\n        if (!calcElements) return;\n\n        //Sum heights of fixed elements\n        const sumFixElemHeights = Array.from(fixedElements)\n            .map(x => x.getBoundingClientRect().height).reduce((prev, curr) => {\n                return prev + curr;\n            }, 0);\n\n        // Calculate available height by subtracting the heights of fixed elements from the total window height\n        let availableHeight = parent.clientHeight - sumFixElemHeights;\n\n        //console.log(\"CalcHeightDirective \"+fixedHeightClass+\" \"+parent.clientHeight+\" \"+sumFixElemHeights+\" \"+availableHeight);\n\n        // Apply height and overflow\n        Array.from(calcElements)\n            .forEach((x: HTMLElement) => x.style.height = `${availableHeight}px`\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _i18nPrefix\n                            \n                            \n                                    Private\n                                actions\n                            \n                            \n                                actionsAppear\n                            \n                            \n                                actionsUrlPath\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                            \n                                    Private\n                                ngUnsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                getActions\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                transformActionMapToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformActionMapToArray\n                        \n                        \n                    \n                \n            \n            \n                \ntransformActionMapToArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsAppear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsUrlPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:118\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TimeService} from '@ofServices/time.service';\nimport {Action} from '@ofModel/thirds.model';\nimport {Subject} from 'rxjs';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\nimport { selectCardActionsAppearState } from '@ofStore/selectors/card.selectors';\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    protected _i18nPrefix: string;\n    dateToDisplay: string;\n    actionsUrlPath: string;\n    private actions: Action[];\n    actionsAppear = false;\n\n    private ngUnsubscribe: Subject = new Subject();\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService\n    ) {\n    }\n\n    ngOnInit() {\n        const card = this.lightCard;\n        this._i18nPrefix = `${card.publisher}.${card.publisherVersion}.`;\n        this.store.select(selectCurrentUrl).subscribe(url => {\n            if (url) {\n                const urlParts = url.split('/');\n                this.currentPath = urlParts[1];\n            }\n        });\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n        // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, card)))\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe(computedDate => this.dateToDisplay = computedDate);\n\n        this.actionsUrlPath = `/publisher/${card.publisher}/process/${card.processId}/states/${card.state}/actions`;\n        // check if the current card is in the store\n        this.store.select(selectCardActionsAppearState).subscribe(d => {\n            const currentSelected = card.id;\n            if (d.includes(currentSelected)) {\n                this.actionsAppear = true;\n            }\n        });\n    }\n\n    computeDisplayedDates(config: string, lightCard: LightCard): string {\n        switch (config) {\n            case 'NONE':\n                return '';\n            case 'LTTD':\n                return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION':\n                return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START':\n                return this.handleDate(lightCard.startDate);\n            default:\n                return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp: number): string {\n        return this.time.formatDateTime(timeStamp);\n    }\n\n    public select() {\n        this.store.dispatch(new AddActionsAppear(this.lightCard.id));\n        this.router.navigate(['/' + this.currentPath, 'cards', this.lightCard.id]);\n    }\n\n    /* necessary otherwise action buttons are weirdly refresh */\n    getActions() {\n        if (!this.actions) {\n            this.actions = this.transformActionMapToArray();\n        }\n        return this.actions;\n    }\n\n    transformActionMapToArray() {\n        const actions = this.lightCard.actions;\n        if (actions) {\n            const entries = Array.from(actions.entries());\n            return entries.map(([key, action]: [string, Action]) => {\n                return {...action, key: key}\n            });\n        }\n        return [];\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix + lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix + lightCard.summary.key}}\n                \n                    \n                    \n                \n        \n    \n\n    \n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix + lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix + lightCard.summary.key}}                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                currentPath\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDetails\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport { ClearLightCardSelection } from '@ofStore/actions/light-card.actions';\nimport { Router } from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n    currentPath: any;\n\n    constructor(private store: Store,\n        private thirdsService: ThirdsService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if (card) {\n                    if (card.details) {\n                        this.details = [...card.details];\n                    } else {\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion).subscribe(third => {\n                            if (third) {\n                                const state = third.extractState(this.card);\n                                if (state != null) {\n                                    this.details.push(...state.details);\n                                }\n                            }\n                        },\n                        error => console.log(`something went wrong while trying to fetch third for ${this.card.publisher} with ${this.card.publisherVersion} version.`))\n                    ;\n                }\n            });\n            this.store.select(selectCurrentUrl).subscribe(url => {\n                if (url) {\n                    const urlParts = url.split('/');\n                    this.currentPath = urlParts[1];\n                }\n            });\n    }\n    closeDetails() {\n        this.store.dispatch(new ClearLightCardSelection());\n        this.router.navigate(['/' + this.currentPath, 'cards']);\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      &times;\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ×          '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clearCardSelection\n                            \n                            \n                                loadArchivedById\n                            \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadArchivedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from '@ofStore/index';\nimport {CardActionTypes,\n        LoadArchivedCard, LoadArchivedCardFailure,\n        LoadArchivedCardSuccess,\n        LoadCard,\n        LoadCardFailure,\n        LoadCardSuccess,\n        ClearCard} from '@ofActions/card.actions';\nimport {Card} from '@ofModel/card.model';\nimport { ClearLightCardSelection, LightCardActionTypes } from '@ofStore/actions/light-card.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {}\n\n    @Effect()\n    loadById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    loadArchivedById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    clearCardSelection: Observable = this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: whether there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: whether there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card2.publishDate - card1.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n            \n                styleUrls\n                ./card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:34\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from 'rxjs';\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss']\n})\nexport class CardListComponent extends ResizableComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.store.select(selectCurrentUrl).subscribe(url => {\n      if (url) {\n          const urlParts = url.split('/');\n          if (urlParts[3]) {\n              this.store.dispatch(new AddActionsAppear(urlParts[3]));\n          }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./card-list.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                    LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                archivesUrl\n                            \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchArchivedCards\n                            \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadArchivedCard\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, notifyService: NotifyService, guidService: GuidService, timeService: TimeService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArchivedCards\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArchivedCards(filters: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadArchivedCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadArchivedCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            archivesUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {Card} from '@ofModel/card.model';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\nimport { TimeService } from '@ofServices/time.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n    readonly archivesUrl: string;\n\n\n    constructor(private httpClient: HttpClient,\n                private notifyService: NotifyService,\n                private guidService: GuidService,\n                private timeService: TimeService,\n                private authService: AuthenticationService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n        this.archivesUrl = `${environment.urls.cards}/archives`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        const minus2Hour = new Date(new Date().valueOf() - 2 * 60 * 60 * 1000);\n        const plus48Hours = new Date(minus2Hour.valueOf() + 48 * 60 * 60 * 1000);\n        // security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {\n                headers: this.authService.getSecurityHeader(),\n                // We loose sometimes cards  when reconnecting after a heatbeat timeout\n                // there 's no way to inhibe this heardbeat timeout so putting it to 31536000000 milliseconds make it sufficiently long (1 year)\n                // Anyway the token will expire long before and the connection will restart \n                \n                heartbeatTimeout: 31536000000\n            }));\n    }\n\n\n    unsubscribeCardOperation() {\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    this.notifyService.createNotification(`New cards are being pushed`);\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data, CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`);\n                };\n\n            } catch (error) {\n                console.error('an error occurred', error);\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        });\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number): Observable {\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart: rangeStart, rangeEnd: rangeEnd});\n    }\n\n    loadArchivedCard(id: string): Observable {\n        return this.httpClient.get(`${this.archivesUrl}/${id}`);\n    }\n\n    fetchArchivedCards(filters: Map): Observable> {\n        let params = new HttpParams();\n        filters.forEach((values, key) => values.forEach(value => params = params.append(key, value)));\n        // const tmp = new HttpParams().set('publisher', 'defaultPublisher').set('size', '10');\n        return this.httpClient.get>(`${this.archivesUrl}/`, {params});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionsAppear\n                                \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionsAppear\n                                    \n                                \n                                \n                                    \n                                        actionsAppear:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from '@ofModel/card.model';\n\nexport interface CardState {\n    selected: Card;\n    loading: boolean;\n    error: string;\n    actionsAppear: string[];\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null,\n    actionsAppear: []\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nActionComponent\n\nActionComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {ActionComponent} from './components/action/action.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ConfirmModalComponent} from \"./components/action/confirm-modal/confirm-modal.component\";\n\n@NgModule({\n  declarations: [CardComponent\n      , CardDetailsComponent\n      , DetailsComponent\n      , DetailComponent\n      , ActionComponent\n      , ConfirmModalComponent],\n  imports: [\n    CommonModule,\n      TranslateModule,\n      UtilitiesModule,\n      NgbModule\n  ],\n    exports: [CardComponent\n        , CardDetailsComponent\n        , DetailsComponent\n        , DetailComponent\n        , ConfirmModalComponent\n    ],\n    providers: [HandlebarsService],\n    entryComponents: [ConfirmModalComponent]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckImplicitFlowAuthenticationStatus.html":{"url":"classes/CheckImplicitFlowAuthenticationStatus.html","title":"class - CheckImplicitFlowAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckImplicitFlowAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:130\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:444\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:448\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:447\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:446\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initSupportedLocales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, translate: TranslateService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSupportedLocales\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSupportedLocales(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/config.effects.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                this.initSupportedLocales(config);\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:58\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:76\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                private translate: TranslateService,\n\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                this.initSupportedLocales(config);\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n\n    private initSupportedLocales(config: any) {\n        if (config.i18n.supported.locales) this.translate.addLangs(config.i18n.supported.locales);\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmModalComponent.html":{"url":"components/ConfirmModalComponent.html","title":"component - ConfirmModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-modal-component\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                dismiss\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Component} from \"@angular/core\";\n\n@Component({\n    selector:'confirm-modal-component',\n    templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n    dismiss(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.DISMISS);\n    }\n\n    ok(){\n        this.modal.close(ThirdActionComporentModalReturn.OK);\n    }\n\n    cancel(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.CANCEL);\n    }\n}\n\nexport enum ThirdActionComporentModalReturn{\n    CANCEL,OK,DISMISS\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    Action Status Changed\n    \n        &times;\n    \n\n\n    The status of the Action your are about to perform has changed\" \n    Either you send another time the action or you just update the new status.\n        This operation can not be undone.\n    \n\n\n    Save action\n    Send action anyway\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Action Status Changed            ×        The status of the Action your are about to perform has changed\"     Either you send another time the action or you just update the new status.        This operation can not be undone.        Save action    Send action anyway'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplication.html":{"url":"classes/CreateUserApplication.html","title":"class - CreateUserApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplication\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnFailure.html":{"url":"classes/CreateUserApplicationOnFailure.html","title":"class - CreateUserApplicationOnFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnSuccess.html":{"url":"classes/CreateUserApplicationOnSuccess.html","title":"class - CreateUserApplicationOnSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomLogoComponent.html":{"url":"components/CustomLogoComponent.html","title":"component - CustomLogoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomLogoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/custom-logo/custom-logo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-custom-logo\n            \n\n            \n                styleUrls\n                ./custom-logo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./custom-logo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DEFAULT_HEIGHT\n                            \n                            \n                                DEFAULT_WIDTH\n                            \n                            \n                                    Public\n                                domSanitizationService\n                            \n                            \n                                MAX_HEIGHT\n                            \n                            \n                                MAX_WIDTH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHeightAndWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                base64\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizationService: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizationService\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        base64\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limitSize\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeUrl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setHeightAndWidth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHeightAndWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domSanitizationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DomSanitizer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'of-custom-logo',\n  templateUrl: './custom-logo.component.html',\n  styleUrls: ['./custom-logo.component.css']\n})\nexport class CustomLogoComponent implements OnInit {\n\n  @Input() base64: string;\n\n  @Input() limitSize: boolean;\n  @Input() height: number;\n  @Input() width: number;\n\n  DEFAULT_HEIGHT: number;\n  DEFAULT_WIDTH: number;\n\n  MAX_HEIGHT: number;\n  MAX_WIDTH: number;\n\n  constructor(public domSanitizationService: DomSanitizer) { \n    this.DEFAULT_HEIGHT = 32;\n    this.DEFAULT_WIDTH = 150;\n  \n    this.MAX_HEIGHT = 32;\n    this.MAX_WIDTH = 200;\n  }\n\n  ngOnInit() {\n    // default value, Administrator has to change explicitly\n    if (this.base64 == undefined || this.base64 == '') {\n      console.error(\"no custom-logo base64 configured, no picture loaded\");\n    }\n    if (this.height == undefined)\n      this.height = this.DEFAULT_HEIGHT;\n    if (this.width == undefined)\n      this.width = this.DEFAULT_WIDTH;\n    if (this.limitSize == undefined)\n      this.limitSize = true;   \n\n    this.setHeightAndWidth();\n  }\n\n  private setHeightAndWidth() {\n    // in case, we want to limit the customLogo size. By default, it is limited.\n    if (this.limitSize) {\n      if (this.height > this.MAX_HEIGHT)\n        this.height = this.MAX_HEIGHT;\n      if (this.width > this.MAX_WIDTH)\n        this.width = this.MAX_WIDTH;\n    } \n  }\n\n  public getImage(): SafeUrl {\n    return this.domSanitizationService.bypassSecurityTrustUrl(this.base64);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./custom-logo.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomLogoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToArchivedCard\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToArchivedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:72\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {\n    ROUTER_NAVIGATED,\n    ROUTER_NAVIGATION,\n    ROUTER_REQUEST,\n    RouterNavigationAction,\n    RouterRequestAction\n} from \"@ngrx/router-store\";\nimport {filter, map, switchMap} from \"rxjs/operators\";\nimport {LoadArchivedCard, LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {SelectArchivedLightCard} from \"@ofActions/archive.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToArchivedCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeNgb.html":{"url":"classes/DateTimeNgb.html","title":"class - DateTimeNgb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeNgb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/datetime-ngb.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateParserFormatter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                formatDateTime\n                            \n                            \n                                formatTime\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: NgbDateStruct, time?: NgbTimeStruct)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/datetime-ngb.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    NgbTimeStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDateTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatDateTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgbDateParserFormatter, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nexport function padNumber(value: any) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\nexport class DateTimeNgb extends NgbDateParserFormatter {\n\n  /* istanbul ignore next */\n  constructor(readonly date?: NgbDateStruct, private time?: NgbTimeStruct) {\n    super();\n  }\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-').reverse();\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {day: toInteger(dateParts[0]), month: null, year: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n  format(): string {\n    const {date} = this;\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n\n  // a function that transform timestruct to string\n  formatTime(): string {\n    const {time} = this;\n    return time ?\n    `${isNumber(time.hour) ? padNumber(time.hour) : ''}:${isNumber(time.minute) ? padNumber(time.minute) : ''}` : '';\n  }\n\n  formatDateTime() {\n    let result = '';\n    const {date, time} = this;\n    // if date is present\n    if (date) {\n      if (!time) {\n        this.time = {hour: 0, minute: 0, second: 0};\n      }\n      result = `${this.format()}T${this.formatTime()}`;\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeFilterComponent.html":{"url":"components/DatetimeFilterComponent.html","title":"component - DatetimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                                {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                of-datetime-filter\n            \n\n            \n                styleUrls\n                ./datetime-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./datetime-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datetimeForm\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChanges\n                        \n                        \n                    \n                \n            \n            \n                \nonChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datetimeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {hour: 0, minute: 0}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  Validator} from '@angular/forms';\n\n@Component({\n  selector: 'of-datetime-filter',\n  templateUrl: './datetime-filter.component.html',\n  styleUrls: ['./datetime-filter.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatetimeFilterComponent),\n    multi: true\n  }, {\n   provide: NG_VALIDATORS,\n   useExisting: forwardRef(() => DatetimeFilterComponent),\n   multi: true\n }\n]\n})\nexport class DatetimeFilterComponent implements ControlValueAccessor, Validator {\n\n  disabled = true;\n  time = {hour: 0, minute: 0};\n  @Input() filterPath: string;\n  public datetimeForm: FormGroup = new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  });\n  constructor() {\n    this.onChanges();\n  }\n  /* istanbul ignore next */\n  public onTouched: () => void = () => {};\n  /* istanbul ignore next */\n  writeValue(val: any): void {\n    val && this.datetimeForm.setValue(val, { emitEvent: false });\n  }\n  /* istanbul ignore next */\n  registerOnChange(fn: any): void {\n    this.datetimeForm.valueChanges.subscribe(fn);\n  }\n  /* istanbul ignore next */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  /* istanbul ignore next */\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.datetimeForm.disable() : this.datetimeForm.enable();\n  }\n  /* istanbul ignore next */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this.datetimeForm.valid ? null : { invalidForm: {valid: false, message: 'datetimeForm fields are invalid'}};\n  }\n  /* istanbul ignore next */\n  onChanges(): void {\n    this.datetimeForm.get('date').valueChanges.subscribe(val => {\n      if (val) {\n        this.disabled = false;\n      }\n    });\n  }\n  /* istanbul ignore next */\n  onChange(event): void {\n    if (event.target.value === '') {\n      this.disabled = true;\n      this.time = {hour: 0, minute: 0};\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            archive.filters.{{filterPath}}\n            \n        \n        \n            Time\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./datetime-filter.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  legend.accessibility {\n    position:absolute;\n    left:-9999px;\n    width:100px;\n    height:auto;\n    overflow:hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        archive.filters.{{filterPath}}                                        Time                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelayedLightCardUpdate.html":{"url":"classes/DelayedLightCardUpdate.html","title":"class - DelayedLightCardUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelayedLightCardUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:164\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:166\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.DelayedLightCardUpdate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:164\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                currentCard\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                            \n                                    Private\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                handelActionButtonText\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handelActionButtonText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handelActionButtonText(label: I18n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                I18n\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:94\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, SimpleChanges, OnChanges} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {HandlebarsService} from '../../services/handlebars.service';\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from '@angular/platform-browser';\nimport {Action, Third} from '@ofModel/thirds.model';\nimport {zip} from 'rxjs';\nimport {DetailContext} from '@ofModel/detail-context.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectAuthenticationState} from '@ofSelectors/authentication.selectors';\nimport {UserContext} from '@ofModel/user-context.model';\nimport {TranslateService} from '@ngx-translate/core';\nimport {I18n} from '@ofModel/i18n.model';\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit, OnChanges {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    currentCard: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n    private userContext: UserContext;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer,\n                private store: Store,\n                private translate: TranslateService ) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n        this.store.select(selectAuthenticationState).subscribe(authState => {\n            this.userContext = new UserContext(\n                authState.identifier,\n                authState.token,\n                authState.firstName,\n                authState.lastName\n            );\n        });\n    }\n    ngOnChanges(): void {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                // needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}'\n                and with local version '${safeCssUrl.toLocaleString()}'`);\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThirdFromCard(this.card),\n        this.handlebars.executeTemplate(this.detail.templateName, new DetailContext(this.card,null)))\n            .subscribe(\n                ([third, html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (const button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if (!!state && !!state.actions[actionId]) {\n                        this.attachAction(button, state.actions[actionId], actionId);\n                    }\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (const c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n    private handelActionButtonText(label: I18n) {\n        if (label) {\n            if (this.card) {\n                console.log('card exists!');\n            } else {\n                console.log(`card doesn't exist yet`);\n            }\n            return this.translate.instant(`${this.card.publisher}.${this.card.publisherVersion}.${label.key}`, label.parameters);\n        }\n        return 'Undefined';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailContext.html":{"url":"classes/DetailContext.html","title":"class - DetailContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detail-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card, userContext: UserContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detail-context.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContext\n                                                  \n                                                        \n                                                                        UserContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\nexport class DetailContext{\n    constructor(readonly card:Card, readonly userContext: UserContext){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:34\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:17\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent extends ResizableComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n        super();\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      {{i18nPrefix+detailC.detail.title.key}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.calc-height-details {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{i18nPrefix+detailC.detail.title.key}}              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:14\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:25\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:35\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:47\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {TextSettingComponent} from '../text-setting/text-setting.component';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Validators} from '@angular/forms';\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html'\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    @Input() disabled: boolean;\n    constructor(protected store: Store) {\n        super(store);\n        console.log(this.disabled);\n    }\n\n    computeTextValidators() {\n      const validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, notifyService: NotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as moment from 'moment';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store, private notifyService: NotifyService) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide')).subscribe(\n            v => this.hideTimeLine = v\n        );\n        moment.updateLocale('en', { week: {\n            dow: 6, // First day of week is Saturday\n            doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n        }});\n        this.store.select(buildConfigSelector('feed.notify')).subscribe(\n            (notif) => {\n                if (notif) {\n                    this.notifyService.requestPermission();\n                }\n            }\n        );\n    }\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedSoFar\n                            \n                            \n                                    Private\n                                followClockTick\n                            \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                    Private\n                                refreshThreshold\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedSoFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            followClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:76\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    private followClockTick = false;\n\n    //Constants used by the updateFilterOnClockTick effect if the feed.timeFilter.followClockTick property is set to true\n    private elapsedSoFar = 0;\n    /*The time filter should only be refreshed once the accumulated shift in time is 1m\n    (since the time filter component only displays the time up to minutes)*/\n    private refreshThreshold = 60000;\n\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n\n        this.store.select(buildConfigSelector('feed.timeFilter.followClockTick')).subscribe(x => this.followClockTick = x);\n\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/time-line/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/tick-format-pipe/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/directives/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/directives/app-draggable\";\nimport {InitChartComponent} from \"./components/time-line/init-chart/init-chart.component\";\nimport {TagsFilterComponent} from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:44\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:57\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:68\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const compliant = Severity.COMPLIANT;\n        const information = Severity.INFORMATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.compliant && card.severity == compliant ||\n                    status.information && card.severity == information;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                compliant: true,\n                information: true\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  hideTags$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n    \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString(): string {\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:107\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-5.html":{"url":"classes/HandleUnexpectedError-5.html","title":"class - HandleUnexpectedError-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-6.html":{"url":"classes/HandleUnexpectedError-6.html","title":"class - HandleUnexpectedError-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerJson\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, context: DetailContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                DetailContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n    private _locale: string;\n\n    constructor(private time: TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService,\n                private store: Store){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n        this.registerJson();\n        this.store.select(buildSettingsOrConfigSelector('locale')).subscribe(locale => this.changeLocale(locale))\n    }\n\n    public changeLocale(locale:string){ \n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n    }\n\n    public executeTemplate(templateName: string, context: DetailContext):Observable {\n        return this.queryTemplate(context.card.publisher,context.card.publisherVersion,templateName).pipe(\n            map(t=>t(context)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this._locale;\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerJson() {\n        Handlebars.registerHelper('json', function (obj) {\n            return new Handlebars.SafeString(JSON.stringify(obj))\n        });\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (...args: any[]) {\n            if(args.length === 3)\n                return args[0].split(args[1]);\n            if(args.length === 4)\n                return args[0].split(args[1])[args[2]];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this._locale);\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this._locale, options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                            \n                                    Private\n                                    Static\n                                loadedLocales\n                            \n                            \n                                    Private\n                                    Static\n                                localUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                            \n                                    Private\n                                loadLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            loadedLocales\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            localUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:61\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {combineLatest,Observable} from \"rxjs\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n    private static loadedLocales = new Set();\n    private static localUrl = \"\";\n\n    constructor(private httpClient: HttpClient,private translate: TranslateService,private store: Store) {\n        const i18nPath = \"/assets/i18n/\"\n        const prodI18nPath = \"/ui/assets/i18n/\"\n        I18nService.localUrl = environment.production?prodI18nPath:i18nPath;\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n        if  (!I18nService.loadedLocales.has(this._locale)) this.loadLocale(this._locale);\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n\n   private loadLocale(locale:string ) {\n        this.httpClient.get(`${I18nService.localUrl}${locale}.json`).subscribe(translation => {\n            I18nService.loadedLocales.add(locale);\n            this.translate.setTranslation(locale,translation,true);\n        },\n        error => console.log(`Error : impossible to load locale ${I18nService.localUrl}${locale}.json`)); \n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSize\n                            \n                            \n                                    Private\n                                setSprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bright\n                            \n                            \n                                icon\n                            \n                            \n                                sizeIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/icon/icon.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bright\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSprites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSprites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() sizeIcon:string;\n  @Input() bright:string;\n\n  size:string;\n  sprites:string;\n  iconPath:string;\n\n  constructor(platformLocation: PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.setSize();\n    this.setSprites();\n  }\n\n  private setSize() {\n    switch (this.sizeIcon) {\n      case 'big':\n        this.size = '64px';\n        break;\n      case 'medium':\n        this.size = '32px';\n        break;\n      case 'small':\n        this.size = '16px';\n        break;\n      default:\n        this.size = '32px'  \n    }   \n  }\n\n  private setSprites() {\n    if (this.bright == 'dark' || this.bright == 'light') {\n      this.sprites='sprites-mono.svg'\n    } else {\n      this.bright = undefined; // wrong value set by the user\n      this.sprites='sprites.svg'\n    }\n  }\n  \n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {selectMenuStateSelectedIframeURL,} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n .fill-available {\n     height: 100%;\n     width: 100%;\n }\n .no-border {\n     border: none;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitAuthenticationHandler.html":{"url":"classes/ImplicitAuthenticationHandler.html","title":"class - ImplicitAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Implementation class of @Interface AuthenticationModeHandler\nuse the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n\n            \n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:514\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:530\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentLocationHref: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:520\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentLocationHref\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:526\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:534\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitlyAuthenticated.html":{"url":"classes/ImplicitlyAuthenticated.html","title":"class - ImplicitlyAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitlyAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.ImplicitallyAuthenticated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:141\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    {{userName$|async}}\n    {{description$|async}}\n    {{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.navbar-info-block {\n  display: inline-block;\n  line-height: 90%;\n\n  > .time {\n    font-size: small;\n  }\n\n  > .user-description {\n    font-size: small;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}    {{description$|async}}    {{time$|async}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:153\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCard.html":{"url":"classes/LightCard.html","title":"class - LightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, processId?: string, lttd?: number, title?: I18n, summary?: I18n, tags?: string[], timeSpans?: TimeSpan[], process?: string, state?: string, actions?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpans\n                                                  \n                                                        \n                                                                        TimeSpan[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", INFORMATION = \"INFORMATION\", COMPLIANT = \"COMPLIANT\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.COMPLIANT:\n            result = 2;\n            break;\n        case Severity.INFORMATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    INFORMATION, COMPLIANT\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCardAlreadyUpdated.html":{"url":"classes/LightCardAlreadyUpdated.html","title":"class - LightCardAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCardAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:171\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LightCardAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:171\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delayUpdateLightCard\n                            \n                            \n                                updateAThirdAction\n                            \n                            \n                                updateThirdActions\n                            \n                            \n                                uploadActions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delayUpdateLightCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAThirdAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateThirdActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (!lightCard) return of(new LoadLightCardsFailure({error: new Error(\"Light card not loaded in the store yet\")}));\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:93\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, delay, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    AddThirdActions,\n    DelayedLightCardUpdate,\n    LightCardActionTypes,\n    LightCardAlreadyUpdated,\n    LoadLightCardsFailure,\n    ThirdActionAlreadyLoaded,\n    ThirdActionAlreadyUpdated,\n    UpdateALightCard,\n    UpdateAnAction,\n    UpdateAnActionFailure\n} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {fetchLightCard} from \"@ofSelectors/feed.selectors\";\nimport {CardActionTypes, LoadCard} from \"@ofActions/card.actions\";\nimport {Action as ThirdAction, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateThirdActions: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        );\n\n    @Effect()\n    updateAThirdAction: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        );\n\n    @Effect()\n    uploadActions: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (!lightCard) return of(new LoadLightCardsFailure({error: new Error(\"Light card not loaded in the store yet\")}));\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        );\n    @Effect()\n    delayUpdateLightCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html'\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('ListSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}          {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCard.html":{"url":"classes/LoadArchivedCard.html","title":"class - LoadArchivedCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardFailure.html":{"url":"classes/LoadArchivedCardFailure.html","title":"class - LoadArchivedCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardSuccess.html":{"url":"classes/LoadArchivedCardSuccess.html","title":"class - LoadArchivedCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeOrImplicitFlow\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeOrImplicitFlow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {OAuthService} from \"angular-oauth2-oidc\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeOrImplicitFlow: boolean;\n    loginMessage: Message;\n    codeProvider: any;\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private service: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.useCodeOrImplicitFlow = this.service.isAuthModeCodeOrImplicitFlow();\n        this.store.select(selectMessage).pipe(filter(m => m != null && m.level === MessageLevel.ERROR))\n            .subscribe(m => this.loginMessage = m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider => this.codeProvider = {name: provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void {\n        this.service.move();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:62\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink,\n    SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuLinkComponent.html":{"url":"components/MenuLinkComponent.html","title":"component - MenuLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/menus/menu-link/menu-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-menu-link\n            \n\n            \n                styleUrls\n                ./menu-link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menusOpenInBoth\n                            \n                            \n                                menusOpenInIframes\n                            \n                            \n                                menusOpenInTabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                menuEntry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         ThirdMenu\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuEntry\n                    \n                \n                \n                    \n                        Type :         ThirdMenuEntry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInBoth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInIframes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInTabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-menu-link',\n  templateUrl: './menu-link.component.html',\n  styleUrls: ['./menu-link.component.scss']\n})\nexport class MenuLinkComponent implements OnInit {\n\n  @Input() public menu: ThirdMenu;\n  @Input() public menuEntry: ThirdMenuEntry;\n  menusOpenInTabs: boolean;\n  menusOpenInIframes: boolean;\n  menusOpenInBoth: boolean;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n    this.store.select(buildConfigSelector('navbar.thirdmenus.type', 'BOTH'))\n        .subscribe(v=> {\n          if(v == 'TAB') {\n            this.menusOpenInTabs = true;\n          } else if (v == 'IFRAME') {\n            this.menusOpenInIframes = true;\n          } else {\n            if (!(v == 'BOTH')) {\n              console.log(\"MenuLinkComponent - Property navbar.thirdmenus.type has an unexpected value: \"+v+\". Default (BOTH) will be applied.\")\n            }\n            this.menusOpenInBoth = true;\n          }\n        })\n  }\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n  \n    \n  \n\n    \n\n    \n                \n                    ./menu-link.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.text-link {\n    color: inherit;\n    text-decoration: none;\n}\n\n.icon-link {\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:18\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:28\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:23\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:41\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiFilterComponent.html":{"url":"components/MultiFilterComponent.html","title":"component - MultiFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-filter\n            \n\n            \n                styleUrls\n                ./multi-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                            \n                                parentForm\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentForm\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { I18n } from '@ofModel/i18n.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'of-multi-filter',\n  templateUrl: './multi-filter.component.html',\n  styleUrls: ['./multi-filter.component.css']\n})\nexport class MultiFilterComponent implements OnInit {\n\n  preparedList: { value: string, label: Observable }[];\n  @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n  @Input() parentForm: FormGroup;\n\n  @Input() filterPath: string;\n  constructor(private translateService: TranslateService) {\n    this.parentForm = new   FormGroup({\n      [this.filterPath]: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.preparedList = [];\n    if (this.values) {\n      for (const v of this.values) {\n        if (typeof v === 'string') {\n          this.preparedList.push({value: v, label: of(v)});\n        } else if (typeof v.label === 'string') {\n          this.preparedList.push({value: v.value, label: of(v.label)});\n        } else {\n          this.preparedList.push({\n            value: v.value,\n            label: this.translateService.get(v.label.key, v.label.parameters)\n          });\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  archive.filters.{{filterPath}}\n  \n    {{v.label|async}}\n  \n\n\n    \n\n    \n                \n                    ./multi-filter.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archive.filters.{{filterPath}}      {{v.label|async}}  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html'\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                customLogo\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customLogo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:86\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    customLogo: string;\n    height: Number;\n    width: Number;\n    limitSize: Boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n\n        this.store.select(buildConfigSelector('logo.base64')).subscribe(\n            data => {\n              if (data) this.customLogo = `data:image/svg+xml;base64,${data}`\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.height')).subscribe(\n            height => {\n              if (height) this.height = height;\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.width')).subscribe(\n            width => {\n              if (width) this.width = width;\n            }\n        );\n        this.store.select(buildConfigSelector('logo.limitSize')).subscribe(\n            (limitSize:boolean) => {\n                // BE CAREFUL, as a boolean it has to be test with undefined value to know if it has been set.\n              if (limitSize!=undefined && typeof(limitSize) =='boolean') this.limitSize = limitSize;\n            }\n        );\n    }\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n       \n    \n    \n      \n        \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n                href=\"javascript:void(0)\"\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n          \n        \n        \n        \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate                href=\"javascript:void(0)\"        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                                                                                                                    menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifyService.html":{"url":"injectables/NotifyService.html","title":"injectable - NotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNotification\n                            \n                            \n                                isSupported\n                            \n                            \n                                requestPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notify.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNotification(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupported\n                        \n                        \n                    \n                \n            \n            \n                \nisSupported(window)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    window\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestPermission\n                        \n                        \n                    \n                \n            \n            \n                \nrequestPermission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notify.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NotifyService {\n\n    permission: string;\n    constructor() {\n    }\n\n    isSupported(window): boolean {\n        return 'Notification' in window;\n    }\n    requestPermission(): void {\n        if (this.isSupported(window)) {\n            Notification.requestPermission(status => {\n                this.permission = status;\n            });\n        }\n    }\n\n    createNotification(title: string) {\n        if (this.isSupported(window) && this.permission === 'granted') {\n            return new Notification(title);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Page.html":{"url":"classes/Page.html","title":"class - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/page.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(totalPages: number, totalElements: number, content: T[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/page.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        totalPages\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalElements\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Page {\n    /* istanbul ignore next */\n    constructor(\n        readonly totalPages: number,\n        readonly totalElements: number,\n        readonly content: T[]\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:170\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordOrCodeAuthenticationHandler.html":{"url":"classes/PasswordOrCodeAuthenticationHandler.html","title":"class - PasswordOrCodeAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordOrCodeAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Implementation class of @Interface AuthenticationModeHandler\nuse the OperatorFabric legacy code to manage the authentication in\nOAuth 2.0 password grant or code flow mode\n\n            \n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:481\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:501\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentLocationHref: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:487\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentLocationHref\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:496\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:505\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTranslation.html":{"url":"classes/RefreshTranslation.html","title":"class - RefreshTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.RefreshTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:101\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResizableComponent.html":{"url":"components/ResizableComponent.html","title":"component - ResizableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/utilities/components/resizable/resizable.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-resizable\n            \n\n            \n                styleUrls\n                ./resizable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./resizable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:34\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'of-resizable',\n  templateUrl: './resizable.component.html',\n  styleUrls: ['./resizable.component.css']\n})\nexport class ResizableComponent implements AfterViewInit {\n\n  resized: boolean;\n  constructor() { }\n  ngAfterViewInit() {\n    // Trigger resize event to make sure that height is calculated once parent height is available (see OC-362)\n    if (typeof(Event) === 'function') {\n      // modern browsers\n      window.dispatchEvent(new Event('resize'));\n    } else {\n      // for IE and other old browsers\n      // causes deprecation warning on modern browsers\n      const evt = window.document.createEvent('UIEvents');\n      evt.initUIEvent('resize', true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resized = true;\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  resizable works!\n\n\n    \n\n    \n                \n                    ./resizable.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  resizable works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResizableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectArchivedLightCard.html":{"url":"classes/SelectArchivedLightCard.html","title":"class - SelectArchivedLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectArchivedLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SelectArchivedLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendArchiveQuery.html":{"url":"classes/SendArchiveQuery.html","title":"class - SendArchiveQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendArchiveQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SendArchiveQuery\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            NotifyService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdActionService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from '@ofServices/guid.service';\nimport {TimeService} from '@ofServices/time.service';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {FilterService} from '@ofServices/filter.service';\nimport {ConfigService} from '@ofServices/config.service';\nimport {I18nService} from '@ofServices/i18n.service';\nimport {SettingsService} from '@ofServices/settings.service';\nimport { UserService } from './user.service';\nimport {ThirdActionService} from '@ofServices/third-action.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService,\n        UserService,\n        ThirdActionService,\n        NotifyService\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disableInfos$\n                            \n                            \n                                dispalyInfos\n                            \n                            \n                                hideTags$\n                            \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableInfos$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispalyInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsInputs\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n  dispalyInfos: SettingsInputs;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n    this.store.select(buildConfigSelector('settings.infos')).subscribe((d: SettingsInputs) => {\n      this.dispalyInfos = d\n    });\n  }\n\n}\n\ninterface SettingsInputs {\n  email: boolean;\n  description: boolean;\n  language: boolean;\n  timezone: boolean;\n  timeformat: boolean;\n  dateformat: boolean;\n  datetimeformat: boolean;\n  tags: boolean;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:43\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:61\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess,\n    PatchSettings,\n    PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\nimport { AcceptLogIn } from '@ofStore/actions/authentication.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsInputs.html":{"url":"interfaces/SettingsInputs.html","title":"interface - SettingsInputs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsInputs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/components/settings/settings.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateformat\n                                \n                                \n                                        datetimeformat\n                                \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        language\n                                \n                                \n                                        tags\n                                \n                                \n                                        timeformat\n                                \n                                \n                                        timezone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateformat\n                                    \n                                \n                                \n                                    \n                                        dateformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datetimeformat\n                                    \n                                \n                                \n                                    \n                                        datetimeformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeformat\n                                    \n                                \n                                \n                                    \n                                        timeformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n  dispalyInfos: SettingsInputs;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n    this.store.select(buildConfigSelector('settings.infos')).subscribe((d: SettingsInputs) => {\n      this.dispalyInfos = d\n    });\n  }\n\n}\n\ninterface SettingsInputs {\n  email: boolean;\n  description: boolean;\n  language: boolean;\n  timezone: boolean;\n  timeformat: boolean;\n  dateformat: boolean;\n  datetimeformat: boolean;\n  tags: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {BaseSettingComponent} from './components/settings/base-setting/base-setting.component';\nimport {TextSettingComponent} from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {EmailSettingComponent} from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport {MultiSettingsComponent} from './components/settings/multi-settings/multi-settings.component';\nimport {TypeAheadSettingsComponent} from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[], {emitEvent: false});\n            } else {\n                this.tagFilterForm.get('tags').setValue([], {emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.tags-field {\n  ::ng-deep .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from '../base-setting/base-setting.component';\nimport {AppState} from '@ofStore/index';\nimport {Store} from '@ngrx/store';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html'\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern: string;\n    @Input() disabled: boolean;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup() {\n        const validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null, validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        const validators = [];\n        if (this.requiredField) {\n            validators.push(Validators.required);\n        }\n        if (this.pattern) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value, {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called');\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n\n    \n\n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyLoaded.html":{"url":"classes/ThirdActionAlreadyLoaded.html","title":"class - ThirdActionAlreadyLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:150\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyLoaded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:150\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyUpdated.html":{"url":"classes/ThirdActionAlreadyUpdated.html","title":"class - ThirdActionAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdActionService.html":{"url":"injectables/ThirdActionService.html","title":"injectable - ThirdActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/third-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                callModalAndHandleResponse\n                            \n                            \n                                callModalIfNecessary\n                            \n                            \n                                checkIfReceivedStatusIsDifferentFromCurrentOne\n                            \n                            \n                                dispatchUpdateThirdAction\n                            \n                            \n                                postActionAndUpdateIfNecessary\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/third-action.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalAndHandleResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfReceivedStatusIsDifferentFromCurrentOne\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formerStatus\n                                    \n                                                ActionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdateThirdAction\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdateThirdAction(updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postActionAndUpdateIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \npostActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(lightCardId: string, currentActionPath: string, action: Action, modalService: NgbModal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            actionUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/third-action.service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {Action, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport {map} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {\n    ConfirmModalComponent,\n    ThirdActionComporentModalReturn\n} from \"../modules/cards/components/action/confirm-modal/confirm-modal.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {UpdateAnAction} from \"@ofActions/light-card.actions\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ThirdActionService {\n    readonly actionUrl: string;\n\n    constructor(private httpClient: HttpClient\n        , private store: Store) {\n        this.actionUrl = `${environment.urls.actions}`;\n    }\n\n    checkIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus) {\n        const status = extractActionStatusFromPseudoActionStatus(formerStatus);\n        return map((currentStatus: ActionStatus) => {\n            const normalizedCurrentStatus = extractActionStatusFromPseudoActionStatus(currentStatus);\n            const hasChanged = !_.isEqual(status, normalizedCurrentStatus);\n            return [hasChanged, currentStatus];\n        });\n    }\n\n    postActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action) {\n        return this.httpClient.post(`${this.actionUrl}${currentActionPath}`, action).pipe(\n            this.checkIfReceivedStatusIsDifferentFromCurrentOne(action),\n            map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n                if (hasChanged) {\n                    const updateThirdActionAction = new UpdateAnAction({\n                        cardId: lightCardId,\n                        actionKey: action.key\n                        , status: currentStatus\n                    });\n                    this.dispatchUpdateThirdAction(updateThirdActionAction);\n                }\n            })\n        );\n    }\n\n    callModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable) {\n        return map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n            if (hasChanged) {\n                const updateThirdAction = new UpdateAnAction({\n                    cardId: lightCardId\n                    , actionKey: actionKey\n                    , status: currentStatus\n                });\n                this.callModalAndHandleResponse(modalService, postAction$, updateThirdAction);\n            } else {\n                postAction$.subscribe();\n            }\n        });\n    }\n\n    callModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction) {\n        modalService\n            .open(ConfirmModalComponent)\n            .result\n            .then(performPost => {\n                if (performPost) postAction$.subscribe()\n            })\n            .catch(error => {\n                switch (error) {\n                    case ThirdActionComporentModalReturn.CANCEL: {\n                        // save new status of action and do nothing\n                        this.dispatchUpdateThirdAction(updateThirdAction);\n                        break;\n                    }\n                    case ThirdActionComporentModalReturn.DISMISS: {\n                        // do nothing leaves the former action status untouched\n                        break;\n                    }\n                    default:\n                        console.log('unknown error from update action status modal', error);\n                }\n            });\n    }\n\n    submit(lightCardId: string\n        , currentActionPath: string\n        , action: Action\n        , modalService: NgbModal) {\n\n        const postAction$ = this.postActionAndUpdateIfNecessary(lightCardId, currentActionPath, action);\n\n        if (action.updateStateBeforeAction) {\n            this.httpClient.get(`${this.actionUrl}${currentActionPath}`).pipe(\n                this.checkIfReceivedStatusIsDifferentFromCurrentOne(action as ActionStatus),\n                this.callModalIfNecessary(lightCardId, action.key, modalService, postAction$)\n            ).subscribe();\n        } else {\n            postAction$.subscribe();\n        }\n    }\n\n    /* istanbul ignore next */\n    dispatchUpdateThirdAction(updateThirdAction: UpdateAnAction) {\n        this.store.dispatch(updateThirdAction);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IframeDisplayComponent} from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:161\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t => \n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            // json empty in this case no action \n            if (json.length>1)\n                {\n                const obj = JSON.parse(json);\n                return new Map(Object.entries(obj));\n                }\n            return new Map();\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askForI18nJson\n                            \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                    Private\n                                convertJsonToI18NObject\n                            \n                            \n                                fetchActionMap\n                            \n                            \n                                fetchActionMapFromLightCard\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                queryThirdFromCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askForI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \naskForI18nJson(publisher: string, locale: string, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertJsonToI18NObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertJsonToI18NObject(locale, publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (r: any) => {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMap\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMap(publisher: string, process: string, state: string, apiVersion?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    process\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMapFromLightCard\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMapFromLightCard(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThirdFromCard\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThirdFromCard(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t => \n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            // json empty in this case no action \n            if (json.length>1)\n                {\n                const obj = JSON.parse(json);\n                return new Map(Object.entries(obj));\n                }\n            return new Map();\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: TickPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        TickPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TickPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickPayload.html":{"url":"classes/TickPayload.html","title":"class - TickPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clock tick (heart beat) payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                elapsedSinceLast\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentTime: moment.Moment, elapsedSinceLast: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentTime\n                                                  \n                                                        \n                                                                    moment.Moment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedSinceLast\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elapsedSinceLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:42\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:56\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {UserActionsTypes} from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n\n        //Update the values of the filter form if the state of the filter has been changed by other means (timeline, followClockTick, etc.)\n        //With {emitEvent:false}, this update won't trigger a valueChanges, so no ApplyFilter action will be dispatched\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start), {emitEvent:false});\n                    else\n                        this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end) {\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end), {emitEvent: false});\n                    }\n                    else\n                        this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n            }\n        });\n\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                    Public\n                                domains\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructMomentObj\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                periodStartToEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            constructMomentObj\n                        \n                        \n                    \n                \n            \n            \n                \nconstructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mommentOjb\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startOf\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            periodStartToEnd\n                        \n                        \n                    \n                \n            \n            \n                \nperiodStartToEnd(conf, future: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:256\n                \n            \n\n\n            \n                \n                    return a moment\nadd time to moment depending of configue object when future is true. compute a domain end\nsubtract time when future is false\nuse startOf function on each time's unit pass in list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    future\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domains\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\nimport { buildSettingsOrConfigSelector } from '@ofStore/selectors/settings.x.config.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom = [];\n    public domains: any;\n\n    constructor(private store: Store) {}\n    ngOnInit() {\n        this.store.select(buildSettingsOrConfigSelector('locale')).subscribe(\n            l => moment.locale(l)\n        )\n        // DOMAIN CONF from moment() to our conf\n        const domain7DayConf = this.constructMomentObj([0, 0, 0, 8, 0, 0, 0], ['day'], null);\n        const domainWeekConf = this.constructMomentObj([0, 0, 1, 0, 0, 0, 0], ['week'], null);\n\n        const domainMonthConf = this.constructMomentObj([0, 1, 0, 0, 0, 0, 0], ['month'], null);\n        const domainYearConf = this.constructMomentObj([1, 0, 0, 0, 0, 0, 0], ['year'], null);\n        const currentMoment = moment();\n\n        const startDomain7Day = moment(currentMoment);\n        startDomain7Day.minutes(0).second(0).millisecond(0);\n        const endDomain7Day = this.periodStartToEnd(domain7DayConf, true);\n\n        const startDomainWeek = moment(currentMoment.startOf('week'));\n        startDomainWeek.minutes(0).second(0).millisecond(0);\n        const endDomainWeek = this.periodStartToEnd(domainWeekConf, true);\n\n        const startDomainMonth = moment(currentMoment.startOf('month'));\n        startDomainMonth.minutes(0).second(0).millisecond(0);\n        const endDomainMonth = this.periodStartToEnd(domainMonthConf, true);\n\n        const startDomainYear = moment(currentMoment.startOf('year'));\n        startDomainYear.hour(0).minutes(0).second(0).millisecond(0);\n        const endDomainYear = this.periodStartToEnd(domainYearConf, true);\n\n        // Adding two domains required by SEA Team\n        const startDomainTR = moment().minutes(0).second(0).millisecond(0).subtract(2, 'hours');\n        const endDomainTR = moment().minutes(0).second(0).millisecond(0).add(10, 'hours');\n\n        const startDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0);\n        const endDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0).add(1, 'days');\n        // FORWARD CONF (movement on domain)\n        const forwardYearConf = {\n            start: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n        };\n        const forwardMonthConf = {\n            start: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0])\n        };\n        const forwardWeekConf = {\n            start: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n        };\n        const forwardDayConf = {\n            start: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n        };\n        const forwardTRConf = {\n            start: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n        };\n\n        const ticks4HoursConf = this.constructMomentObj([0, 0, 0, 0, 4, 0, 0]);\n\n        const ticksDayConf = this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]);\n        const ticksHalfMonthConf = this.constructMomentObj([0, 0, 0, 0, 0, 0, 0], null, [1, 16]);\n\n        const ticks15minConf = this.constructMomentObj([0, 0, 0, 0, 0, 15, 0]);\n        const ticks30minConf = this.constructMomentObj([0, 0, 0, 0, 0, 30, 0]);\n\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            zoomOnButton: true,\n            autoScale: false,\n            showGridLines: true,\n            realTimeBar: true,\n        };\n\n        this.domains = {\n            J: {\n                startDomain: startDomainJ.valueOf(),\n                endDomain: endDomainJ.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'J',\n                forwardConf: forwardDayConf,\n                backwardConf: forwardDayConf,\n                ticksConf: ticks30minConf,\n                formatTicks: 'HH[h]mm'\n            }, TR: {\n                startDomain: startDomainTR.valueOf(),\n                endDomain: endDomainTR.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'TR',\n                forwardConf: forwardTRConf,\n                backwardConf: forwardTRConf,\n                ticksConf: ticks15minConf\n            }, '7D': {\n                startDomain: startDomain7Day.valueOf(),\n                endDomain: endDomain7Day.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: '7D',\n                forwardConf: forwardDayConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: true,\n                firstMoveStartOfUnit: true,\n                homeDomainExtraTicks: true\n            }, 'W': {\n                startDomain: startDomainWeek.valueOf(),\n                endDomain: endDomainWeek.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'W',\n                forwardConf: forwardWeekConf,\n                backwardConf: forwardWeekConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, M: {\n                startDomain: startDomainMonth.valueOf(),\n                endDomain: endDomainMonth.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'M',\n                forwardConf: forwardMonthConf,\n                ticksConf: ticksDayConf,\n                // formatTicks: 'DD',\n                // formatTooltipsDate: 'DD/MM',\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, Y: {\n                startDomain: startDomainYear.valueOf(),\n                endDomain: endDomainYear.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'Y',\n                forwardConf: forwardYearConf,\n                ticksConf: ticksHalfMonthConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }\n        };\n        this.store.pipe(select(buildConfigSelector('feed.timeline.domains')), catchError(() => of([]))).subscribe(d => {\n            if (d) {\n                d.map(domain => {\n                    if (Object.keys(this.domains).includes(domain)) {\n                        this.confZoom.push(this.domains[domain]);\n                    }\n                });\n            }\n        });\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(value => {\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({data: []}));\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                if (val.timeSpans && val.timeSpans.length > 0) {\n                    val.timeSpans.forEach(d => {\n                        const myCardTimelineTimespans = {\n                            displayDate: d.start, publishDate: d.start, // useless\n                            startDate: d.start, // useless\n                            endDate: d.end, // useless\n                            severity: val.severity, publisher: val.publisher,\n                            publisherVersion: val.publisherVersion, summary: val.title\n                        };\n                        myCardsTimeline.push(myCardTimelineTimespans);\n                    });\n                } else {\n                    // val.endDate val.startDate val.severity\n                    const myCardTimeline = {\n                        displayDate: val.startDate,\n                        publishDate: val.publishDate, // useless\n                        startDate: val.startDate, // useless\n                        endDate: val.endDate, // useless\n                        severity: val.severity, publisher: val.publisher,\n                        publisherVersion: val.publisherVersion, summary: val.title\n                    };\n                    myCardsTimeline.push(myCardTimeline);\n                }\n            }\n            this.store.dispatch(new SetCardDataTimeline({cardsTimeline: myCardsTimeline}));\n        });\n    }\n\n    constructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array) {\n        const obj: any = {};\n        obj.year = mommentOjb[0];\n        obj.month = mommentOjb[1];\n        obj.week = mommentOjb[2];\n        obj.day = mommentOjb[3];\n        obj.hour = mommentOjb[4];\n        obj.minute = mommentOjb[5];\n        obj.second = mommentOjb[6];\n        if (startOf) {\n            obj.startOf = startOf;\n        }\n        if (date) {\n            obj.date = date;\n        }\n        return obj;\n    }\n    /**\n     * return a moment\n     * add time to moment depending of configue object when future is true. compute a domain end\n     * subtract time when future is false\n     * use startOf function on each time's unit pass in list\n     * @param conf\n     * @param future\n     */\n    periodStartToEnd(conf, future: boolean): moment.Moment {\n        const tmpMoment = moment();\n        // Test bug\n        // tmpMoment.date(2);\n        const newDate = _.cloneDeep(tmpMoment);\n        Object.keys(conf).forEach(key => {\n            if (key === 'startOf') {\n                conf[key].forEach(value => {\n                    newDate.startOf(value);\n                });\n            } else if (conf[key] > 0) {\n                if (future) {\n                    newDate.add(conf[key], key);\n                } else {\n                    newDate.subtract(conf[key], key);\n                }\n            }\n        });\n        return newDate;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, end?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", INFORMATION = \"INFORMATION\", COMPLIANT = \"COMPLIANT\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.COMPLIANT:\n            result = 2;\n            break;\n        case Severity.INFORMATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    INFORMATION, COMPLIANT\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nerror: last message during state processing before error\ndata: an array of data Card (less information than lightCard)\nwhich are use for display on the chart the number of card on timescale\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication/authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    constructor(private authService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const securityHeader = this.authService.getSecurityHeader();\n            const update = {setHeaders: securityHeader};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionalThirdWithItSVersion.html":{"url":"classes/TransitionalThirdWithItSVersion.html","title":"class - TransitionalThirdWithItSVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionalThirdWithItSVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                third\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(third: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:200\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            third\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    private static i18nBundleVersionLoaded = new Map>();\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n            return of(TranslateEffects.extractThirdToUpdate(versions, TranslateEffects.i18nBundleVersionLoaded));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        let thirdsAndVersions: TransitionalThirdWithItSVersion[];\n        thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        \n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n        \n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) {\n            TranslateEffects.i18nBundleVersionLoaded = {...TranslateEffects.i18nBundleVersionLoaded, ...versionToUpdate};\n            return new UpdateTranslation({versions: versionToUpdate});\n            }\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string, public version:string){}\n};\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateEffects.html":{"url":"injectables/TranslateEffects.html","title":"injectable - TranslateEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                i18nBundleVersionLoaded\n                            \n                            \n                                updateTranslateService\n                            \n                            \n                                verifyTranslationNeeded\n                            \n                            \n                                verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                consolidateThirdAndVersions\n                            \n                            \n                                    Private\n                                extractI18nToUpdate\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFrom\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFromCards\n                            \n                            \n                                    Static\n                                extractThirdToUpdate\n                            \n                            \n                                mapLanguages\n                            \n                            \n                                mapThirds\n                            \n                            \n                                mapVersions\n                            \n                            \n                                    Static\n                                sendTranslateAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, translate: TranslateService, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            consolidateThirdAndVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consolidateThirdAndVersions(thirdsAndVersions: TransitionalThirdWithItSVersion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                            TransitionalThirdWithItSVersion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractI18nToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractI18nToUpdate(versions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFromCards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractThirdToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionInput\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cachedVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapLanguages\n                        \n                        \n                    \n                \n            \n            \n                \nmapLanguages(thirdsAndVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapThirds\n                        \n                        \n                    \n                \n            \n            \n                \nmapThirds(locale: string, thirdsAndVersion: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdsAndVersion\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapVersions\n                        \n                        \n                    \n                \n            \n            \n                \nmapVersions(locale: string, publisher: string, versions: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    versions\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sendTranslateAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTranslateAction(versionToUpdate: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionToUpdate\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            i18nBundleVersionLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTranslateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:129\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    private static i18nBundleVersionLoaded = new Map>();\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n            return of(TranslateEffects.extractThirdToUpdate(versions, TranslateEffects.i18nBundleVersionLoaded));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        let thirdsAndVersions: TransitionalThirdWithItSVersion[];\n        thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        \n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n        \n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) {\n            TranslateEffects.i18nBundleVersionLoaded = {...TranslateEffects.i18nBundleVersionLoaded, ...versionToUpdate};\n            return new UpdateTranslation({versions: versionToUpdate});\n            }\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string, public version:string){}\n};\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationUpToDate.html":{"url":"classes/TranslationUpToDate.html","title":"class - TranslationUpToDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationUpToDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.TranslationUpToDate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout`\n *\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.tags-field {\n    ::ng-deep .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            compliant: new FormControl(),\n            information: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm, {emitEvent: false});\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action, {emitEvent: false});\n                this.typeFilterForm.get('compliant').setValue(!next.active || next.status.compliant, {emitEvent: false});\n                this.typeFilterForm.get('information').setValue(!next.active || next.status.information, {emitEvent: false});\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('action').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('compliant').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('information').setValue(true,{emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.compliant && form.information),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                \n                feed.filters.type.action.label\n            \n            \n                \n                \n                feed.filters.type.compliant.label\n            \n            \n                \n                \n                feed.filters.type.information.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.fa-circle {\n  margin-right: 0.3rem;\n}  \n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n::ng-deep .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        feed.filters.type.alarm.label                                                                        feed.filters.type.action.label                                                                        feed.filters.type.compliant.label                                                                        feed.filters.type.information.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnAuthenticationFromImplicitFlow.html":{"url":"classes/UnAuthenticationFromImplicitFlow.html","title":"class - UnAuthenticationFromImplicitFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnAuthenticationFromImplicitFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UnAuthenticationFromImplicitFlow\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:146\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnableToRefreshOrGetToken.html":{"url":"classes/UnableToRefreshOrGetToken.html","title":"class - UnableToRefreshOrGetToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnableToRefreshOrGetToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UnableToRefreshOrGetToken\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:151\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateALightCard.html":{"url":"classes/UpdateALightCard.html","title":"class - UpdateALightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateALightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateALightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnAction.html":{"url":"classes/UpdateAnAction.html","title":"class - UpdateAnAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:138\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnActionFailure.html":{"url":"classes/UpdateAnActionFailure.html","title":"class - UpdateAnActionFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnActionFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:143\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnActionFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:143\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchiveFilter.html":{"url":"classes/UpdateArchiveFilter.html","title":"class - UpdateArchiveFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchiveFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchiveFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchivePage.html":{"url":"classes/UpdateArchivePage.html","title":"class - UpdateArchivePage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchivePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchivePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslation.html":{"url":"classes/UpdateTranslation.html","title":"class - UpdateTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationFailed.html":{"url":"classes/UpdateTranslationFailed.html","title":"class - UpdateTranslationFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationFailed\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationSuccessful.html":{"url":"classes/UpdateTranslationSuccessful.html","title":"class - UpdateTranslationSuccessful","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationSuccessful\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationSuccessful\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:98\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UselessAuthAction.html":{"url":"classes/UselessAuthAction.html","title":"class - UselessAuthAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UselessAuthAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UselessAuthAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:135\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationNotRegistered.html":{"url":"classes/UserApplicationNotRegistered.html","title":"class - UserApplicationNotRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationNotRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationNotRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationRegistered.html":{"url":"classes/UserApplicationRegistered.html","title":"class - UserApplicationRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserContext.html":{"url":"classes/UserContext.html","title":"class - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, token: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user-context.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserContext{\n    constructor(\n        readonly login:string,\n        readonly token:string,\n        readonly firstName:string,\n        readonly lastName:string,\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/user.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserApplication\n                            \n                            \n                                CreateUserApplication\n                            \n                            \n                                transition2CreateUserApplication\n                            \n                            \n                                transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/user.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:45\n                            \n                        \n\n                \n                    \n                        after that the user is authentificated throught the token,\ndetect if the user is already registered in the application and raise the UserApplicationRegistered action\nif not, set the creation user workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:81\n                            \n                        \n\n                \n                    \n                        create the user application (first time in the application)\nraise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:66\n                            \n                        \n\n                \n                    \n                        transition to the creation user application workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:106\n                            \n                        \n\n                \n                    \n                        transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {UserService} from '@ofServices/user.service';\nimport {Observable} from 'rxjs';\nimport {\n    CreateUserApplication,\n    CreateUserApplicationOnFailure,\n    CreateUserApplicationOnSuccess,\n    UserActions,\n    UserActionsTypes,\n    UserApplicationNotRegistered,\n    UserApplicationRegistered\n} from '@ofStore/actions/user.actions';\nimport {AcceptLogIn, AuthenticationActionTypes} from '@ofStore/actions/authentication.actions';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {User} from '@ofModel/user.model';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\n\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private userService: UserService,\n                private authService: AuthenticationService\n    ) {\n    }\n\n    /**\n     * after that the user is authentificated throught the token,\n     * detect if the user is already registered in the application and raise the UserApplicationRegistered action\n     * if not, set the creation user workflow\n     */\n    @Effect()\n    checkUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        );\n\n    /**\n     * transition to the creation user application workflow\n     */\n    @Effect()\n    transition2CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        );\n\n    /**\n     * create the user application (first time in the application)\n     * raise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n     */\n    @Effect()\n    CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        );\n\n    /**\n     * transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n     */\n    @Effect()\n    transition2UserApplicationRegistered: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askCreateUser\n                            \n                            \n                                askUserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular build-in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askCreateUser\n                        \n                        \n                    \n                \n            \n            \n                \naskCreateUser(userData: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askUserApplicationRegistered\n                        \n                        \n                    \n                \n            \n            \n                \naskUserApplicationRegistered(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { environment } from '@env/environment';\nimport { Observable, of } from 'rxjs';\nimport { User } from '@ofModel/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class UserService {\n\n    readonly userUrl : string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     */\n    constructor(private httpClient : HttpClient) {\n        this.userUrl = `${environment.urls.users}`;\n    }\n\n    askUserApplicationRegistered(user : string) : Observable {\n        console.log(\"user in askUserApplicationRegistered service : \" + user);\n        return this.httpClient.get(`${this.userUrl}/users/${user}`);\n    }\n\n    askCreateUser(userData : User) : Observable {\n        console.log(\"user in askCreateUser service : \" + userData.login);\n        return this.httpClient.put(`${this.userUrl}/users/${userData.login}`, userData);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/user.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        registered\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserState {\n    registered : boolean,\n    group : string[]\n}\n\nexport const userInitialState : UserState = {\n    registered : false,\n    group : null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/utilities/utilities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalcHeightDirective } from \"./calc-height.directive\";\nimport { ResizableComponent } from './components/resizable/resizable.component';\n//TODO Find out where directive would be best put\n\n@NgModule({\n  declarations: [CalcHeightDirective, ResizableComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      CalcHeightDirective, ResizableComponent\n  ]\n})\nexport class UtilitiesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:86\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:62\n                \n            \n\n\n            \n                \n                    special format function used for wrote all ticks on one horizontal line\nif cluster level is correct return a string formatted from value\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:23\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  constructor(private timeService: TimeService) {\n  }\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n      const date = moment(value);\n      switch (clusterLevel) {\n        case 'Min':\n        case 'Sec': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') +\n              'h' + this.timeService.predefinedFormat(date, 'minutesOnly');\n        }\n        case 'Hou': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') + 'h';\n        }\n        case 'Day':\n        case 'Dat':\n        case 'Wee':\n        case 'Mon':\n        case 'Yea':\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * special format function used for wrote all ticks on one horizontal line\n   * if cluster level is correct return a string formatted from value\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        if (clusterLevel === 'Hou') {\n          return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n        } else if (clusterLevel === 'Min') {\n          return this.timeService.predefinedFormat(date, 'minutesOnly');\n        } else if (clusterLevel === 'Sec') {\n          return this.timeService.predefinedFormat(date, 'secondedsOnly');\n        } else if (clusterLevel === 'nbW') {\n          return this.timeService.predefinedFormat(date, 'weekNumberOnly');\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n      switch (clusterLevel) {\n        case 'Hou' : {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format( 'DD MMM YY');\n            // return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n          }\n          if (date.hours() === 0) {\n            return this.timeService.predefinedFormat(date, 'dateOnDay');\n          } else {\n            return this.timeService.predefinedFormat(date, 'hoursOnly');\n          }\n        }\n        case 'Min': {\n          if (date.minutes() === 0) {\n            if (date.hour() === 0) {\n              return this.timeService.predefinedFormat(date, 'dateOnDay');\n            } else {\n              return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n            }\n          }\n        }\n        case 'Sec': {\n          if (date.seconds() === 0) {\n            if (date.minutes() === 0) {\n              if (date.hour() === 0) {\n                return this.timeService.predefinedFormat(date, 'dateOnDay');\n              } else {\n                return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n              }\n            } else {\n              return this.timeService.predefinedFormat(date, 'minutesOnly');\n            }\n          }\n        }\n        case 'Day': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateOnDay');\n        }\n        case 'Dat': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDay');\n        }\n        case 'Wee': {\n          return this.timeService.predefinedFormat(date, 'dateOnWeek');\n        }\n        case 'Mon': {\n          return this.timeService.predefinedFormat(date, 'dateOnMonth');\n        }\n        case 'Yea': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @fortawesome/angular-fontawesome : ^0.5.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.27\n        \n            @fortawesome/free-solid-svg-icons : ^5.12.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.2.2\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            @types/jwt-decode : ^2.2.1\n        \n            angular-oauth2-oidc : ^8.0.4\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.15\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.27\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.1\n        \n            tslib : ^1.9.3\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            ArchiveActionTypes   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterDateTypes   (src/.../archive-filters.component.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            ThirdActionComporentModalReturn   (src/.../confirm-modal.component.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                        \n                            TranslateActionsTypes   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActionsTypes   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                Value : EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                Value : JNLP\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n                        \n                            \n                                Value : URL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/archive.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ArchiveActionTypes\n                    \n                \n                        \n                            \n                                 UpdateArchiveFilter\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update Filter\n                            \n                        \n                        \n                            \n                                 SendArchiveQuery\n                            \n                        \n                        \n                            \n                                Value : [Archive] Send Query\n                            \n                        \n                        \n                            \n                                 ArchiveQuerySuccess\n                            \n                        \n                        \n                            \n                                Value : [Archive] Query was successful\n                            \n                        \n                        \n                            \n                                 UpdateArchivePage\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update query result page\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Archive] Handle unexpected error related to archived card issue\n                            \n                        \n                        \n                            \n                                 SelectArchivedLightCard\n                            \n                        \n                        \n                            \n                                Value : [Archive] Select one archived light card\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 CheckImplicitFlowAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status specifically for the Implicit Flow\n                            \n                        \n                        \n                            \n                                 UselessAuthAction\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Test purpose action\n                            \n                        \n                        \n                            \n                                 ImplicitallyAuthenticated\n                            \n                        \n                        \n                            \n                                Value : [Authentication] User is authentication using Implicit Flow\n                            \n                        \n                        \n                            \n                                 UnAuthenticationFromImplicitFlow\n                            \n                        \n                        \n                            \n                                Value : [Authentication] User is log out by implicit Flow internal managment\n                            \n                        \n                        \n                            \n                                 UnableToRefreshOrGetToken\n                            \n                        \n                        \n                            \n                                Value : [Authentication] The token can not be refresh or we cannot get a token\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 LoadArchivedCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Success\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n                        \n                            \n                                 AddActionsAppear\n                            \n                        \n                        \n                            \n                                Value : [Card] Add Actions Appear\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 INFORMATION\n                            \n                        \n                        \n                            \n                                Value : INFORMATION\n                            \n                        \n                        \n                            \n                                 COMPLIANT\n                            \n                        \n                        \n                            \n                                Value : COMPLIANT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 INFORMATION\n                            \n                        \n                        \n                            \n                                 COMPLIANT\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterDateTypes\n                    \n                \n                        \n                            \n                                 PUBLISH_DATE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateFrom\n                            \n                        \n                        \n                            \n                                 PUBLISH_DATE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateTo\n                            \n                        \n                        \n                            \n                                 ACTIVE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeFrom\n                            \n                        \n                        \n                            \n                                 ACTIVE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeTo\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n                        \n                            \n                                 AddThirdActions\n                            \n                        \n                        \n                            \n                                Value : [LCard] Adds some Third Actions to existing card\n                            \n                        \n                        \n                            \n                                 UpdateALightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update a Light Card\n                            \n                        \n                        \n                            \n                                 UpdateAnAction\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update one Action of a LightCard\n                            \n                        \n                        \n                            \n                                 UpdateAnActionFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] No actions where available to update for the current selected card in the state\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyLoaded\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card contains actions\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Third Action unchanged\n                            \n                        \n                        \n                            \n                                 DelayedLightCardUpdate\n                            \n                        \n                        \n                            \n                                Value : [LCard] update Light Card actions later\n                            \n                        \n                        \n                            \n                                 LightCardAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card already Updated\n                            \n                        \n            \n        \n\n    src/app/services/authentication/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ThirdActionComporentModalReturn\n                    \n                \n                        \n                            \n                                 CANCEL\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 DISMISS\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n    src/app/store/actions/translate.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TranslateActionsTypes\n                    \n                \n                        \n                            \n                                 UpdateTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation need an update\n                            \n                        \n                        \n                            \n                                 UpdateTranslationSuccessful\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation successfully updated\n                            \n                        \n                        \n                            \n                                 UpdateTranslationFailed\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation update failed\n                            \n                        \n                        \n                            \n                                 TranslationUpToDate\n                            \n                        \n                        \n                            \n                                Value : [i18n] all Translation materials are already loaded\n                            \n                        \n                        \n                            \n                                 RefreshTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] translate handler has been refreshed\n                            \n                        \n            \n        \n\n    src/app/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionsTypes\n                    \n                \n                        \n                            \n                                 UserApplicationRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application registered\n                            \n                        \n                        \n                            \n                                 UserApplicationNotRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application not registered\n                            \n                        \n                        \n                            \n                                 CreateUserApplication\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnSuccess\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on success\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnFailure\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on failure\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [User] Handle unexpected error related to user creation issue\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    119 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArchiveActions   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            Omit   (src/.../thirds.model.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                        \n                            TranslateActions   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActions   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/archive.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveActions\n                \n            \n            \n                \n                        UpdateArchiveFilter | SendArchiveQuery | HandleUnexpectedError | ArchiveQuerySuccess | UpdateArchivePage | SelectArchivedLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess | CheckImplicitFlowAuthenticationStatus | UselessAuthAction | ImplicitlyAuthenticated | UnAuthenticationFromImplicitFlow | UnableToRefreshOrGetToken\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | LoadArchivedCard | LoadArchivedCardSuccess | LoadArchivedCardFailure | HandleUnexpectedError | AddActionsAppear\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | AddThirdActions | UpdateALightCard | UpdateAnAction | UpdateAnActionFailure | ThirdActionAlreadyLoaded | ThirdActionAlreadyUpdated | DelayedLightCardUpdate | LightCardAlreadyUpdated | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/model/thirds.model.ts\n    \n    \n        \n            \n                \n                    \n                    Omit\n                \n            \n            \n                \n                        Pick>\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n    src/app/store/actions/translate.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TranslateActions\n                \n            \n            \n                \n                        UpdateTranslation | UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation\n\n                \n            \n        \n    \n    src/app/store/actions/user.actions.ts\n    \n    \n        \n            \n                \n                    \n                    UserActions\n                \n            \n            \n                \n                        UserApplicationRegistered | UserApplicationNotRegistered | CreateUserApplication | CreateUserApplicationOnSuccess | CreateUserApplicationOnFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
