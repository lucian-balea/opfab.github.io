var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.279,1,2.388]],["body/classes/AcceptLogIn.html",[0,0.546,1,3.721,2,0.498,3,0.022,4,0.022,5,0.025,6,2.186,7,1.639,8,1.065,9,4.074,10,1.612,11,1.551,12,3.263,13,3.203,14,0.948,15,0.159,16,0.357,17,0.9,18,1.505,19,1.221,20,0.188,21,0.257,22,1.102,23,3.947,24,0.2,25,6.088,26,0.29,27,0.005,28,0.284,29,0.29,30,4.214,31,0.438,32,0.381,33,3.316,34,0.084,35,0.363,36,3.201,37,1.887,38,2.223,39,1.887,40,0.06,41,0.578,42,2.136,43,3.263,44,1.131,45,2.162,46,3.544,47,2.727,48,3.798,49,2.98,50,4.741,51,4.062,52,3.544,53,2.239,54,3.469,55,2.627,56,3.469,57,3.318,58,3.544,59,3.544,60,1.438,61,3.544,62,2.239,63,3.263,64,3.575,65,3.624,66,1.924,67,2.239,68,1.962,69,1.818,70,0.983,71,2.295,72,2.893,73,1.116,74,2.239,75,2.239,76,2.003,77,3.263,78,2.239,79,2.239,80,3.263,81,3.084,82,1.887,83,1.472,84,1.924,85,0.863,86,1.924,87,1.962,88,1.639,89,2.295,90,2.295,91,3.316,92,3.235,93,1.893,94,3.235,95,1.364,96,1.364,97,1.275,98,2.295,99,2.295,100,2.239,101,2.045,102,2.295,103,2.045,104,1.667,105,2.239,106,2.186,107,3.159,108,2.239,109,3.019,110,1.334,111,2.045,112,2.239,113,0.578,114,2.295,115,2.239,116,2.295,117,2.239,118,1.563,119,2.295,120,2.295,121,2.295,122,2.835,123,2.295,124,2.295,125,2.295,126,2.186,127,0.002,128,0.003,129,0.002]],["title/classes/AcceptLogOut.html",[0,0.279,58,2.492]],["body/classes/AcceptLogOut.html",[0,0.547,1,3.421,2,0.504,3,0.022,4,0.022,5,0.026,6,2.214,7,1.66,8,1.066,9,4.089,10,1.13,11,1.087,12,3.267,13,3.222,14,0.95,15,0.161,16,0.36,17,0.841,18,1.328,19,1.223,20,0.187,21,0.303,23,2.92,24,0.172,27,0.005,31,0.443,32,0.386,33,2.324,34,0.085,35,0.368,36,3.224,37,1.911,38,2.243,39,1.911,40,0.06,41,0.586,42,2.163,43,3.287,44,1.145,45,2.177,46,3.569,47,2.751,48,3.825,49,3.025,50,4.759,51,4.085,52,3.569,53,2.267,54,3.493,55,2.65,56,3.493,57,3.337,58,3.905,59,3.569,60,1.451,61,3.569,62,2.267,63,3.287,64,3.595,65,3.649,66,1.948,67,2.267,68,1.987,69,1.841,70,0.995,71,2.324,72,2.92,73,1.13,74,2.267,75,2.267,76,2.028,77,3.287,78,2.267,79,2.267,80,3.287,81,3.106,82,1.911,83,1.48,84,1.948,85,0.867,86,1.948,87,1.987,88,1.66,89,2.324,90,2.324,91,3.346,92,3.264,93,1.91,94,3.264,95,1.366,96,1.366,97,1.277,98,2.324,99,2.324,100,2.267,101,2.071,102,2.324,103,2.071,104,1.688,105,2.267,106,2.214,107,3.734,108,2.267,109,3.046,110,1.346,111,2.071,112,2.267,113,0.586,114,3.346,115,3.264,116,3.346,117,3.264,118,1.582,119,2.324,120,2.324,121,2.324,122,2.861,123,2.324,124,2.324,125,2.324,126,2.214,127,0.002,128,0.003,129,0.002,130,6.143]],["title/classes/AcceptLogOutSuccess.html",[0,0.279,59,2.492]],["body/classes/AcceptLogOutSuccess.html",[0,0.548,1,3.431,2,0.507,3,0.022,4,0.022,5,0.026,6,2.226,7,1.669,8,1.067,9,4.096,10,1.136,11,1.093,12,3.269,13,3.23,14,0.951,15,0.162,16,0.362,17,0.843,18,1.331,19,1.224,20,0.187,21,0.181,23,2.931,24,0.12,27,0.005,31,0.446,32,0.388,33,2.337,34,0.085,35,0.37,36,3.233,37,1.921,38,2.251,39,1.921,40,0.06,41,0.589,42,2.175,43,3.296,44,1.151,45,2.184,46,3.58,47,2.762,48,3.836,49,2.992,50,4.767,51,4.095,52,3.58,53,2.279,54,3.504,55,2.661,56,3.504,57,3.345,58,3.58,59,3.914,60,1.456,61,3.58,62,2.279,63,3.296,64,3.604,65,3.661,66,1.959,67,2.279,68,1.998,69,1.851,70,1,71,2.337,72,2.931,73,1.136,74,2.279,75,2.279,76,2.039,77,3.296,78,2.279,79,2.279,80,3.296,81,3.115,82,1.921,83,1.483,84,1.959,85,0.869,86,1.959,87,1.998,88,1.669,89,2.337,90,2.337,91,3.359,92,3.277,93,1.917,94,3.277,95,1.367,96,1.367,97,1.278,98,2.337,99,2.337,100,2.279,101,2.082,102,2.337,103,2.082,104,1.697,105,2.279,106,2.226,107,3.199,108,2.279,109,3.58,110,1.582,111,2.082,112,2.279,113,0.589,114,2.337,115,2.279,116,2.337,117,2.279,118,2.287,119,3.359,120,2.337,121,2.337,122,2.872,123,2.337,124,2.337,125,2.337,126,2.226,127,0.002,128,0.003,129,0.002,131,4.29]],["title/classes/Action.html",[0,0.279,8,0.522]],["body/classes/Action.html",[0,0.527,2,0.542,3,0.023,4,0.023,5,0.028,8,0.671,11,1.647,17,0.462,19,1.309,20,0.16,21,0.406,24,0.128,26,0.315,27,0.005,28,0.505,29,0.315,32,0.585,34,0.088,40,0.06,41,0.887,70,1.069,85,1.076,95,1.265,96,1.265,97,1.183,127,0.003,128,0.003,129,0.002,132,2.71,133,4.113,134,4.957,135,5.644,136,3.626,137,4.673,138,2.904,139,5.121,140,5.121,141,5.121,142,4.303,143,3.488,144,4.583,145,2.378,146,0.997,147,3.354,148,1.875,149,2.134,150,0.932,151,5.121,152,2.178,153,1.465,154,2.895,155,2.886,156,2.886,157,2.886,158,2.562,159,2.886,160,4.303,161,2.793,162,2.886,163,2.71,164,4.07,165,2.128,166,3.205,167,2.71,168,4.07,169,1.6,170,2.36,171,2.222,172,2.734,173,1.978,174,2.793,175,2.886,176,2.562,177,3.94,178,3.94,179,3.009,180,2.886,181,2.183,182,2.886,183,2.793,184,2.793,185,2.914,186,2.886,187,2.886,188,2.793,189,1.942,190,2.497,191,2.633,192,2.886,193,2.562,194,2.886,195,2.886,196,2.71,197,3.01,198,2.886,199,1.138,200,2.633,201,2.793,202,2.053,203,2.793,204,2.435,205,2.497,206,1.908,207,2.886,208,2.886,209,3.064,210,2.886,211,2.886,212,2.886,213,4.07,214,2.886,215,2.886,216,2.886,217,2.886,218,3.94,219,1.349,220,1.349,221,2.793,222,2.793,223,2.793,224,2.134,225,1.908,226,2.886,227,2.886,228,2.157,229,2.886,230,2.562,231,3.94,232,2.886,233,2.886]],["title/components/ActionComponent.html",[234,0.984,235,1.702]],["body/components/ActionComponent.html",[0,0.275,3,0.025,4,0.035,5,0.041,8,0.989,14,0.658,15,0.187,16,0.4,17,0.5,20,0.178,21,0.288,24,0.266,26,0.34,27,0.005,28,0.567,29,0.34,34,0.104,40,0.03,44,1.33,73,1.313,85,0.947,95,0.671,96,0.671,97,0.628,127,0.002,128,0.003,129,0.002,136,2.942,146,1.053,149,2.308,205,4.583,219,1.459,220,2.009,225,3.674,234,1.53,235,2.849,236,2.246,237,1.729,238,2.138,239,1.755,240,1.755,241,4.955,242,2.807,243,1.654,244,3.561,245,3.117,246,7.808,247,2.381,248,6.826,249,2.337,250,7.008,251,1.572,252,3.12,253,6.983,254,3.385,255,7.808,256,7.324,257,6.48,258,4.955,259,7.551,260,7.808,261,6.826,262,6.826,263,4.955,264,4.955,265,4.955,266,4.955,267,4.955,268,1.552,269,2.179,270,4.955,271,0.89,272,1.654,273,2.699,274,3.02,275,2.571,276,4.447,277,4.447,278,6.826,279,4.955,280,4.955,281,4.955,282,4.955,283,4.955,284,6.826,285,1.782,286,1.755,287,1.782,288,1.782,289,1.782,290,1.782,291,1.52,292,1.585,293,1.782,294,1.782,295,1.782,296,1.729,297,1.654,298,1.755,299,1.782,300,1.782,301,1.782,302,1.141,303,1.782,304,1.52,305,2.417,306,2.381,307,1.585,308,2.979,309,1.755,310,1.755,311,1.678,312,1.755,313,1.678,314,2.395,315,2.417,316,1.678,317,2.417,318,1.678,319,1.755,320,1.654,321,1.755,322,1.678,323,1.755,324,2.979,325,1.678,326,1.755,327,1.63,328,2.417,329,1.678,330,1.654,331,1.63,332,1.729,333,1.755,334,1.678,335,2.381,336,1.755,337,1.703,338,1.607,339,2.417,340,1.678,341,1.755,342,2.979,343,1.63,344,1.755,345,1.678,346,1.678,347,1.729,348,1.654,349,1.755,350,1.678,351,1.678,352,1.755,353,1.654,354,1.755,355,1.678,356,1.755,357,1.703,358,1.678,359,1.654,360,1.755,361,1.678,362,1.439,363,1.755,364,1.678,365,2.381,366,1.678,367,2.765,368,1.678,369,1.755,370,1.678,371,1.755,372,1.678,373,1.755,374,1.63,375,1.678,376,1.562,377,1.755,378,1.678,379,1.654,380,1.678,381,1.678,382,1.856,383,1.678,384,1.755,385,1.678,386,1.678,387,1.678,388,1.231,389,1.654,390,1.654,391,1.755,392,1.654,393,1.755,394,1.654,395,1.729,396,1.755]],["title/classes/ActionStatus.html",[0,0.279,185,1.955]],["body/classes/ActionStatus.html",[0,0.529,2,0.549,3,0.024,4,0.024,5,0.028,8,0.482,11,1.662,17,0.468,19,1.31,20,0.153,21,0.407,24,0.13,26,0.319,27,0.005,28,0.508,29,0.319,32,0.59,34,0.089,40,0.06,41,0.895,70,1.082,85,1.073,95,1.269,96,1.269,97,1.187,127,0.003,128,0.003,129,0.002,132,2.744,134,3.975,135,5.605,136,3.635,137,4.699,138,2.881,139,5.149,140,5.149,141,5.149,142,2.667,143,2.161,146,1.006,147,3.384,148,1.899,149,2.161,150,0.944,151,5.149,152,2.206,153,1.484,154,2.921,155,2.922,156,2.922,157,2.922,158,2.595,159,2.922,160,4.332,161,2.829,162,2.922,163,2.744,164,4.106,165,2.137,166,3.234,167,2.744,168,4.106,169,1.611,170,2.381,171,2.241,172,2.753,173,2.003,174,2.829,175,2.922,176,2.595,177,3.975,178,3.975,179,3.019,180,2.922,181,2.192,182,2.922,183,2.829,184,2.829,185,3.182,186,2.922,187,2.922,188,2.829,189,1.967,190,2.528,191,2.667,192,2.922,193,2.595,194,2.922,195,2.922,196,2.744,197,3.037,198,2.922,199,1.153,200,2.667,201,2.829,202,2.079,203,2.829,204,2.466,205,2.528,206,1.932,207,2.922,208,2.922,209,3.085,210,2.922,211,2.922,212,2.922,213,4.106,214,2.922,215,2.922,216,2.922,217,2.922,218,3.975,219,1.366,220,1.366,221,2.829,222,2.829,223,2.829,224,2.161,225,1.932,226,2.922,227,2.922,228,2.177,229,2.922,230,2.595,231,3.975,232,2.922,233,2.922,397,4.165,398,4.641]],["title/classes/AddActionsAppear.html",[0,0.279,399,2.738]],["body/classes/AddActionsAppear.html",[0,0.544,2,0.626,3,0.027,4,0.027,5,0.032,8,1.038,14,0.954,15,0.199,16,0.419,17,0.72,18,1.685,19,1.231,20,0.191,21,0.223,22,1.384,24,0.226,26,0.364,27,0.005,28,0.357,29,0.364,31,0.55,32,0.479,34,0.084,35,0.456,40,0.06,41,0.726,60,1.686,70,1.234,83,1.714,85,0.966,95,1.327,96,1.327,97,1.241,113,1.305,127,0.002,128,0.003,129,0.002,146,1.61,148,2.165,171,2.453,199,1.315,399,4.71,400,3.129,401,7.138,402,5.291,403,4.494,404,3.04,405,4.4,406,1.932,407,4.096,408,2.702,409,4.516,410,4.516,411,2.073,412,4.292,413,4.191,414,4.516,415,4.516,416,1.86,417,1.298,418,1.348,419,1.516,420,1.516,421,2.059,422,3.129,423,1.496,424,1.645,425,3.332,426,3.332,427,3.332,428,3.332,429,3.332,430,3.332,431,3.332,432,3.332,433,3.225]],["title/classes/AddLightCardFailure.html",[0,0.279,434,2.251]],["body/classes/AddLightCardFailure.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.444,435,3.581,436,1.889,437,1.852,438,5.921,439,4.056,440,2.874,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889]],["title/classes/AddThirdActions.html",[0,0.279,464,2.251]],["body/classes/AddThirdActions.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.444,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,2.874,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,505,5.921,506,4.056]],["title/components/AppComponent.html",[234,0.984,311,1.702]],["body/components/AppComponent.html",[0,0.23,3,0.021,4,0.031,5,0.036,8,0.624,12,2.447,14,0.579,15,0.156,16,0.352,17,0.783,19,0.872,20,0.176,21,0.298,24,0.259,26,0.413,27,0.005,28,0.556,29,0.413,31,0.806,32,0.702,34,0.111,35,0.357,40,0.025,44,1.898,45,2.348,47,2.69,73,1.096,85,0.806,93,2.413,110,1.944,127,0.002,128,0.003,129,0.002,138,2.543,146,0.927,165,0.989,172,2.582,179,2.829,191,4.064,219,1.218,220,1.768,234,1.386,235,1.401,236,1.976,237,1.443,238,1.785,239,1.465,240,1.465,242,2.543,243,1.381,244,3.527,245,2.743,247,2.095,249,2.278,251,1.383,252,2.878,268,1.366,269,1.676,271,0.743,285,1.487,286,1.465,287,1.487,288,1.487,289,1.487,290,1.487,291,1.269,292,1.323,293,1.487,294,1.487,295,1.487,296,1.443,297,1.381,298,1.465,299,1.487,300,1.487,301,1.487,302,0.953,303,1.487,304,1.269,305,2.127,306,2.095,307,1.323,308,2.748,309,1.465,310,1.465,311,2.629,312,1.465,313,1.401,314,2.169,315,2.127,316,1.401,317,2.127,318,1.401,319,1.465,320,1.381,321,1.465,322,1.401,323,1.465,324,2.748,325,1.401,326,1.465,327,1.361,328,2.127,329,1.401,330,1.381,331,1.361,332,1.443,333,1.465,334,1.401,335,2.095,336,1.465,337,1.422,338,1.342,339,2.127,340,1.401,341,1.465,342,2.748,343,1.361,344,1.465,345,1.401,346,1.401,347,1.443,348,1.381,349,1.465,350,1.401,351,1.401,352,1.465,353,1.381,354,1.465,355,1.401,356,1.465,357,1.422,358,1.401,359,1.381,360,1.465,361,1.401,362,1.201,363,1.465,364,1.401,365,2.095,366,1.401,367,2.505,368,1.401,369,1.465,370,1.401,371,1.465,372,1.401,373,1.465,374,1.361,375,1.401,376,1.304,377,1.465,378,1.401,379,1.381,380,1.401,381,1.401,382,1.633,383,1.401,384,1.465,385,1.401,386,1.401,387,1.401,388,1.028,389,1.381,390,1.381,391,1.465,392,1.381,393,1.465,394,1.381,395,1.443,396,1.465,457,1.286,470,2.546,477,2.798,507,4.137,508,4.683,509,7.073,510,6.007,511,7.073,512,5.514,513,7.073,514,5.818,515,7.761,516,6.007,517,6.007,518,1.443,519,6.957,520,7.073,521,4.96,522,6.007,523,6.007,524,6.007,525,4.683,526,4.087,527,6.007,528,4.137,529,5.514,530,6.007,531,4.683,532,5.391,533,4.441,534,3.451,535,6.007,536,4.137,537,4.137,538,4.137,539,4.137,540,1.948,541,4.137,542,4.137,543,4.239,544,4.137,545,2.92,546,2.801,547,1.154,548,1.139,549,1.17,550,3.058,551,4.137,552,3.713,553,3.225,554,3.782,555,3.433,556,1.966,557,4.137,558,4.137,559,2.146,560,3.713,561,3.272,562,1.139,563,4.137,564,4.137,565,4.137,566,4.137,567,4.137,568,4.137,569,4.137,570,3.225,571,4.137,572,4.137,573,4.239,574,4.137,575,4.137,576,4.137,577,2.377,578,4.137,579,4.137,580,4.137,581,1.889,582,4.137,583,4.137,584,4.137,585,4.137,586,4.137,587,3.916,588,6.007,589,6.007,590,6.007,591,3.433,592,2.92,593,3.225,594,3.713,595,2.521,596,2.446,597,3.225,598,4.137,599,2.92,600,4.137,601,3.713,602,4.137,603,3.225]],["title/modules/AppModule.html",[604,2.209,605,3.715]],["body/modules/AppModule.html",[0,0.314,3,0.029,4,0.038,5,0.045,17,0.57,27,0.005,34,0.124,40,0.034,57,2.397,73,1.498,127,0.003,128,0.003,129,0.003,271,1.016,273,3.081,274,3.448,275,4.608,285,2.034,286,2.003,287,2.034,288,2.034,289,2.034,290,2.034,291,1.735,292,1.809,293,2.034,294,2.034,295,2.034,296,1.973,297,1.888,298,2.003,299,2.034,300,2.034,301,2.034,302,1.303,303,2.034,304,1.735,311,3.444,334,3.211,351,3.211,355,3.211,359,3.165,361,3.211,368,3.211,529,4.409,545,5.267,546,3.83,604,2.486,605,7.833,606,2.868,607,3.25,608,5.091,609,4.413,610,3.006,611,5.077,612,5.077,613,5.077,614,5.077,615,7.009,616,6.825,617,6.825,618,6.419,619,4.413,620,3.448,621,5.656,622,4.065,623,7.463,624,4.065,625,7.463,626,5.656,627,7.463,628,2.935,629,4.699,630,6.698,631,7.463,632,3.344,633,5.818,634,5.818,635,2.868,636,5.656,637,5.818,638,5.656,639,3.83,640,5.656,641,5.656,642,5.077,643,5.656,644,4.182,645,2.805,646,2.805,647,6.698,648,4.695,649,4.695,650,3.83,651,4.695,652,5.818,653,4.695,654,5.656,655,5.656,656,4.695,657,4.695,658,4.695,659,5.656,660,5.656,661,5.656,662,5.077,663,5.656,664,5.656,665,5.077,666,5.656,667,5.656,668,3.561,669,3.688,670,3.688,671,5.656,672,5.656,673,5.656,674,5.656,675,5.656,676,5.656,677,4.182,678,4.409]],["title/modules/AppRoutingModule.html",[604,2.209,615,3.715]],["body/modules/AppRoutingModule.html",[0,0.326,3,0.03,4,0.039,5,0.046,8,0.609,12,1.849,17,0.591,27,0.005,34,0.1,40,0.051,63,2.678,64,2.678,68,2.732,73,1.554,82,2.627,127,0.003,128,0.004,129,0.003,165,2.365,179,2.797,197,2.732,199,1.457,206,3.182,234,1.149,269,1.637,271,1.053,285,2.109,286,2.077,287,2.109,288,2.109,289,2.109,290,2.109,291,1.799,292,1.876,293,2.109,294,2.109,295,2.109,296,2.046,297,1.958,298,2.077,299,2.109,300,2.109,301,2.109,302,1.351,303,2.109,314,1.799,359,2.551,508,4.572,561,3.195,606,2.974,610,3.117,615,5.65,622,3.195,624,4.163,630,5.264,642,5.264,679,5.866,680,4.336,681,7.642,682,5.182,683,5.65,684,5.872,685,3.37,686,8.501,687,4.163,688,8.501,689,6.343,690,7.311,691,9.007,692,5.866,693,5.866,694,7.021,695,7.021,696,5.866,697,5.866,698,4.868,699,5.866,700,5.866,701,2.578,702,5.866,703,5.866,704,4.868,705,4.868,706,3.824,707,5.866,708,5.866,709,5.866,710,5.264,711,5.866,712,4.812,713,4.868,714,3.965,715,4.868,716,5.866,717,5.866,718,5.866,719,4.572,720,4.868,721,5.866,722,5.866,723,5.866,724,8.501,725,5.866,726,7.642,727,5.866,728,2.627,729,5.866,730,3.971,731,3.693,732,3.971,733,5.866,734,5.866,735,5.866,736,5.866,737,5.866,738,5.866,739,5.866,740,7.642,741,5.866,742,3.468,743,5.866,744,4.868,745,5.866,746,5.866]],["title/interfaces/AppState.html",[548,1.384,747,1.955]],["body/interfaces/AppState.html",[3,0.027,4,0.027,5,0.032,12,2.854,15,0.201,16,0.421,20,0.187,27,0.005,34,0.126,35,0.46,40,0.055,49,2.854,110,1.777,127,0.002,128,0.003,129,0.002,146,1.397,165,2.075,200,4.123,314,2.776,338,2.936,362,2.629,382,2.461,423,2.029,548,1.976,682,5.683,687,4.931,701,3.979,747,2.075,748,2.905,749,5.333,750,4.81,751,7.199,752,7.199,753,7.199,754,7.199,755,7.199,756,7.199,757,8.674,758,7.199,759,7.199,760,7.199,761,7.199,762,5.333,763,5.064,764,4.157,765,4.786,766,9.917,767,7.176,768,5.333,769,7.176,770,7.176,771,2.767,772,2.834,773,7.176,774,5.333,775,5.956,776,5.333,777,5.956,778,5.333,779,5.333,780,5.956,781,5.333,782,7.176,783,4.786,784,7.176,785,5.333,786,7.176,787,5.333,788,5.333,789,7.176,790,5.333,791,7.176,792,5.333,793,7.176,794,5.333,795,7.176,796,5.333,797,7.176,798,5.333,799,7.176,800,5.333,801,5.333,802,5.333,803,4.374,804,5.333,805,5.333,806,5.333,807,5.956,808,5.333,809,5.333,810,5.333,811,5.956,812,5.333,813,5.333,814,4.786,815,5.956,816,5.333,817,5.333,818,5.333,819,5.956,820,5.333,821,5.333,822,5.956,823,5.333,824,5.333,825,5.956,826,5.333,827,7.176,828,5.333,829,5.333,830,5.956,831,5.333,832,5.594,833,5.333,834,4.786,835,4.786,836,5.333,837,7.176,838,4.786,839,4.786,840,5.333]],["title/classes/ApplyFilter.html",[0,0.279,841,2.887]],["body/classes/ApplyFilter.html",[0,0.501,2,0.788,3,0.034,4,0.034,5,0.04,8,1.009,14,0.909,15,0.251,16,0.486,17,0.836,18,1.522,19,1.197,20,0.194,21,0.349,22,1.742,24,0.252,26,0.458,27,0.005,28,0.449,29,0.458,31,0.692,32,0.603,34,0.106,35,0.574,40,0.059,41,0.914,44,1.788,45,2.507,83,1.47,95,1.222,96,1.222,97,1.143,127,0.003,128,0.004,129,0.003,138,1.909,150,1.355,193,3.725,388,2.241,437,2.39,687,4.915,841,5.424,842,4.925,843,8.288,844,6.662,845,6.879,846,4.343,847,4.195,848,4.901,849,4.061,850,4.925,851,4.634,852,5.194,853,6.108,854,4.702,855,5.53,856,4.061,857,5.612,858,5.53,859,5.53,860,5.53,861,5.194]],["title/injectables/ArchiveEffects.html",[825,4.171,862,1.402]],["body/injectables/ArchiveEffects.html",[0,0.309,3,0.028,4,0.028,5,0.034,8,0.86,10,1.954,11,1.88,15,0.209,16,0.433,20,0.155,21,0.234,24,0.232,26,0.382,27,0.005,28,0.375,29,0.382,31,0.766,32,0.668,34,0.12,35,0.479,40,0.034,70,2.245,93,2.293,95,0.753,96,0.753,97,0.704,104,3.275,110,2.067,113,1.21,127,0.003,128,0.003,129,0.003,150,1.13,165,2.109,169,2.089,181,2.163,202,4.111,209,3.608,220,2.171,249,1.954,271,0.998,314,2.262,388,1.832,416,1.28,441,1.681,442,1.728,443,1.704,518,1.939,540,2.528,547,1.551,548,1.531,549,1.572,562,1.531,581,4.308,714,5.134,825,6.122,862,2.059,863,2.443,864,5.557,865,8.279,866,8.279,867,5.749,868,5.557,869,6.52,870,7.376,871,5.75,872,4.895,873,6.122,874,7.376,875,7.376,876,7.376,877,7.376,878,7.376,879,6.224,880,5.616,881,7.915,882,4.018,883,5.557,884,7.376,885,7.376,886,7.376,887,5.139,888,7.376,889,7.376,890,7.376,891,7.376,892,6.62,893,5.557,894,3.027,895,2.883,896,4.332,897,2.443,898,2.641,899,4.108,900,1.968,901,3.623,902,3.387,903,3.286,904,4.612,905,5.557,906,4.988,907,3.499,908,3.387,909,5.557]],["title/components/ArchiveFiltersComponent.html",[234,0.984,313,1.702]],["body/components/ArchiveFiltersComponent.html",[0,0.22,3,0.02,4,0.03,5,0.035,14,0.561,15,0.149,16,0.341,17,0.399,20,0.168,21,0.167,24,0.256,26,0.272,27,0.005,28,0.513,29,0.272,31,0.411,32,0.624,34,0.11,35,0.342,40,0.046,41,0.544,44,1.063,73,1.049,85,0.605,88,2.958,110,1.855,127,0.003,128,0.003,129,0.002,138,1.135,143,1.845,146,0.898,150,1.546,161,4.205,165,2.148,166,1.964,169,1.474,179,1.303,181,2.248,209,2.823,219,1.166,220,2.238,234,1.351,235,1.341,236,1.915,237,1.382,238,1.709,239,1.403,240,1.403,242,2.48,243,1.322,244,3.518,245,2.657,247,2.03,249,1.049,251,1.34,252,2.82,268,1.324,269,1.925,271,0.711,273,2.158,274,2.414,275,2.055,285,1.424,286,1.403,287,1.424,288,1.424,289,1.424,290,1.424,291,1.785,292,1.267,293,1.424,294,1.424,295,1.424,296,1.382,297,1.322,298,1.403,299,1.424,300,1.424,301,1.424,302,0.912,303,1.424,304,1.215,305,2.061,306,3.053,307,1.267,308,2.692,309,1.403,310,1.403,311,1.341,312,1.403,313,2.575,314,2.931,315,2.061,316,1.341,317,2.061,318,1.341,319,1.403,320,1.322,321,1.403,322,1.341,323,1.403,324,2.692,325,1.341,326,1.403,327,1.303,328,2.061,329,1.341,330,1.322,331,1.303,332,1.382,333,1.403,334,1.341,335,2.03,336,1.403,337,1.361,338,1.285,339,2.061,340,1.341,341,1.403,342,2.692,343,1.303,344,1.403,345,1.341,346,1.341,347,1.382,348,1.322,349,1.403,350,1.341,351,1.341,352,1.403,353,1.322,354,1.403,355,1.341,356,1.403,357,1.361,358,1.341,359,1.322,360,1.403,361,1.341,362,1.15,363,1.403,364,1.341,365,2.03,366,1.341,367,2.443,368,1.341,369,1.403,370,1.341,371,1.403,372,1.341,373,1.403,374,1.303,375,1.341,376,1.249,377,1.403,378,1.341,379,2.703,380,1.341,381,1.341,382,2.202,383,1.341,384,1.403,385,1.341,386,1.341,387,1.341,388,1.446,389,1.322,390,1.322,391,1.403,392,1.322,393,1.403,394,1.322,395,1.382,396,1.403,518,1.382,540,2.524,547,1.105,548,1.091,549,1.12,556,1.883,559,2.055,562,1.091,581,1.809,592,4.107,603,5.927,635,2.008,872,2.342,887,4.413,892,3.555,910,6.575,911,7.733,912,3.555,913,6.898,914,5.223,915,6.898,916,6.898,917,4.079,918,4.869,919,7.603,920,5.176,921,5.82,922,3.961,923,3.961,924,4.251,925,3.961,926,5.82,927,3.961,928,3.961,929,3.961,930,3.961,931,3.088,932,5.511,933,3.961,934,3.288,935,3.961,936,3.961,937,5.223,938,5.223,939,2.414,940,5.223,941,3.555,942,5.223,943,3.555,944,5.223,945,3.555,946,5.223,947,3.555,948,5.223,949,3.961,950,3.961,951,2.796,952,3.961,953,1.709,954,3.961,955,3.961,956,3.961,957,5.82,958,3.961,959,3.961,960,3.961,961,3.961,962,3.288,963,3.555,964,3.555,965,3.555,966,3.961,967,3.961,968,3.961,969,3.961,970,3.961,971,5.82,972,3.961,973,3.961,974,3.961,975,3.961,976,3.961,977,3.961,978,3.961,979,3.961,980,3.961,981,5.82,982,3.555,983,6.191,984,5.223,985,3.555,986,3.961,987,3.961,988,3.088,989,3.961]],["title/components/ArchiveListComponent.html",[234,0.984,316,1.702]],["body/components/ArchiveListComponent.html",[0,0.282,3,0.026,4,0.035,5,0.042,14,0.669,15,0.191,17,0.797,20,0.167,21,0.214,24,0.238,26,0.349,27,0.005,28,0.573,29,0.349,34,0.111,35,0.438,40,0.031,44,1.362,73,1.345,110,2.013,127,0.002,128,0.003,129,0.002,137,2.917,146,1.071,219,1.495,220,2.502,225,3.292,234,1.549,235,1.719,236,2.283,237,1.771,238,2.191,239,1.798,240,1.798,242,2.843,243,1.695,244,3.565,245,3.169,247,2.421,251,1.598,252,3.152,254,3.442,268,1.155,269,1.937,271,0.912,285,1.825,286,1.798,287,1.825,288,1.825,289,1.825,290,1.825,291,1.557,292,1.623,293,1.825,294,1.825,295,1.825,296,1.771,297,1.695,298,1.798,299,1.825,300,1.825,301,1.825,302,1.169,303,1.825,304,1.557,305,2.458,306,2.421,307,1.623,308,3.01,309,1.798,310,1.798,311,1.719,312,1.798,313,1.719,314,3.013,315,2.458,316,2.879,317,2.458,318,1.719,319,1.798,320,1.695,321,1.798,322,1.719,323,1.798,324,3.01,325,1.719,326,1.798,327,1.67,328,2.458,329,1.719,330,1.695,331,1.67,332,1.771,333,1.798,334,1.719,335,2.421,336,1.798,337,1.745,338,1.647,339,2.458,340,1.719,341,1.798,342,3.01,343,1.67,344,1.798,345,1.719,346,1.719,347,1.771,348,1.695,349,1.798,350,1.719,351,1.719,352,1.798,353,1.695,354,1.798,355,1.719,356,1.798,357,1.745,358,1.719,359,1.695,360,1.798,361,1.719,362,1.475,363,1.798,364,1.719,365,2.421,366,1.719,367,2.8,368,1.719,369,1.798,370,1.719,371,1.798,372,1.719,373,1.798,374,1.67,375,1.719,376,1.601,377,1.798,378,1.719,379,1.695,380,1.719,381,1.719,382,1.887,383,1.719,384,1.798,385,1.719,386,1.719,387,1.719,388,1.261,389,1.695,390,1.695,391,1.798,392,1.695,393,1.798,394,1.695,395,1.771,396,1.798,441,2.392,442,1.579,443,1.557,457,1.579,460,3.412,484,3.412,518,1.771,540,2.178,547,1.417,548,1.398,549,1.436,562,1.398,595,4.23,596,4.104,597,3.958,687,3.781,897,2.231,900,1.798,910,6.281,990,7.387,991,4.556,992,7.097,993,6.229,994,6.229,995,5.077,996,5.077,997,2.839,998,4.556,999,4.556,1000,3.958,1001,5.41,1002,3.958,1003,3.958,1004,4.214]],["title/components/ArchiveListPageComponent.html",[234,0.984,318,1.702]],["body/components/ArchiveListPageComponent.html",[0,0.26,3,0.024,4,0.033,5,0.04,14,0.632,15,0.176,16,0.385,17,0.472,20,0.168,21,0.197,24,0.251,26,0.451,27,0.005,28,0.583,29,0.451,34,0.111,35,0.403,40,0.028,44,1.255,73,1.239,110,1.962,127,0.002,128,0.003,129,0.002,146,1.012,219,1.377,220,3.049,225,1.947,234,1.483,235,1.584,236,2.157,237,1.632,238,2.018,239,1.656,240,1.656,242,2.722,243,1.561,244,3.551,245,2.994,247,2.287,251,1.51,252,3.043,268,1.491,269,2.29,271,0.84,285,1.682,286,1.656,287,1.682,288,1.682,289,1.682,290,1.682,291,1.434,292,1.496,293,1.682,294,1.682,295,1.682,296,1.632,297,1.561,298,1.656,299,1.682,300,1.682,301,1.682,302,1.077,303,1.682,304,1.434,305,2.322,306,2.287,307,1.496,308,2.906,309,1.656,310,1.656,311,1.584,312,1.656,313,1.584,314,2.964,315,2.322,316,1.584,317,2.322,318,2.779,319,1.656,320,1.561,321,1.656,322,1.584,323,1.656,324,2.906,325,1.584,326,1.656,327,1.539,328,2.322,329,1.584,330,1.561,331,1.539,332,1.632,333,1.656,334,1.584,335,2.287,336,1.656,337,1.608,338,1.517,339,2.322,340,1.584,341,1.656,342,2.906,343,1.539,344,1.656,345,1.584,346,1.584,347,1.632,348,1.561,349,1.656,350,1.584,351,1.584,352,1.656,353,1.561,354,1.656,355,1.584,356,1.656,357,1.608,358,1.584,359,1.561,360,1.656,361,1.584,362,1.359,363,1.656,364,1.584,365,2.287,366,1.584,367,2.681,368,1.584,369,1.656,370,1.584,371,1.656,372,1.584,373,1.656,374,1.539,375,1.584,376,1.475,377,1.656,378,1.584,379,1.561,380,1.584,381,1.584,382,1.783,383,1.584,384,1.656,385,1.584,386,1.584,387,1.584,388,1.162,389,1.561,390,1.561,391,1.656,392,1.561,393,1.656,394,1.561,395,1.632,396,1.656,457,1.454,518,1.632,540,2.534,547,1.305,548,1.288,549,1.323,556,2.223,562,1.288,581,2.136,714,3.402,728,2.095,897,2.056,900,1.656,903,2.766,904,3.882,910,6.492,917,4.477,918,6.099,962,3.882,963,4.198,964,4.198,965,4.198,990,7.634,997,2.615,999,4.198,1005,8.255,1006,4.678,1007,7.572,1008,6.557,1009,7.572,1010,6.557,1011,6.557,1012,4.678,1013,6.557,1014,4.678,1015,6.557,1016,4.678,1017,4.678,1018,4.678,1019,3.458,1020,4.678,1021,3.882,1022,4.678,1023,3.301,1024,4.678,1025,4.678,1026,6.322,1027,6.557,1028,6.557,1029,6.557,1030,6.557,1031,6.557]],["title/classes/ArchiveQuerySuccess.html",[0,0.279,902,3.063]],["body/classes/ArchiveQuerySuccess.html",[0,0.531,2,0.689,3,0.03,4,0.03,5,0.035,8,1.026,10,2.016,14,0.938,15,0.22,16,0.446,17,0.767,18,1.684,19,1.217,20,0.193,21,0.246,22,1.524,24,0.237,26,0.401,27,0.005,28,0.393,29,0.401,31,0.606,32,0.528,34,0.1,35,0.503,40,0.06,41,0.8,83,1.695,85,0.606,95,1.319,96,1.319,97,1.233,113,1.163,127,0.003,128,0.003,129,0.003,146,1.175,150,1.548,209,2.385,228,1.946,302,1.343,314,2.932,388,1.448,413,3.949,416,1.952,417,1.43,418,1.486,419,1.671,420,1.671,437,2.245,441,1.763,442,1.813,443,1.788,457,1.813,459,2.232,488,2.345,534,3.349,714,4.662,872,5.012,887,3.176,901,3.801,902,5.477,903,5.012,907,3.67,908,5.166,1032,3.801,1033,7.612,1034,5.83,1035,5.372,1036,5.336,1037,3.801,1038,5.166,1039,4.114,1040,4.114,1041,4.114,1042,3.947,1043,4.114,1044,4.114,1045,3.947]],["title/interfaces/ArchiveState.html",[747,1.955,751,4.171]],["body/interfaces/ArchiveState.html",[3,0.037,4,0.037,5,0.044,15,0.274,16,0.513,20,0.182,27,0.005,34,0.111,40,0.053,85,0.974,127,0.003,128,0.004,129,0.003,138,2.688,150,1.978,165,1.739,170,2.656,179,2.393,181,2.145,441,2.2,442,2.262,443,2.231,488,4.004,587,6.489,714,5.048,747,2.83,748,3.962,751,7.783,847,4.579,887,5.423,907,4.579,1042,6.739,1046,7.273,1047,7.273,1048,7.273,1049,7.273,1050,7.273,1051,2.877]],["title/components/ArchivesComponent.html",[234,0.984,320,1.677]],["body/components/ArchivesComponent.html",[0,0.294,3,0.027,4,0.036,5,0.043,14,0.687,15,0.199,16,0.418,17,0.533,20,0.169,21,0.223,24,0.242,26,0.363,27,0.005,28,0.583,29,0.363,34,0.112,35,0.456,40,0.032,44,1.418,73,1.4,110,2.037,127,0.002,128,0.003,129,0.002,146,1.101,150,1.075,219,1.556,220,2.1,234,1.581,235,1.79,236,2.347,237,1.844,238,2.281,239,1.872,240,1.872,242,2.902,243,1.764,244,3.572,245,3.257,247,2.488,251,1.643,252,3.205,268,1.202,269,1.475,271,0.949,285,1.9,286,1.872,287,1.9,288,1.9,289,1.9,290,1.9,291,1.621,292,1.69,293,1.9,294,1.9,295,1.9,296,1.844,297,1.764,298,1.872,299,1.9,300,1.9,301,1.9,302,1.217,303,1.9,304,1.621,305,2.526,306,2.488,307,1.69,308,3.06,309,1.872,310,1.872,311,1.79,312,1.872,313,1.79,314,2.476,315,2.526,316,1.79,317,2.526,318,1.79,319,1.872,320,2.885,321,1.872,322,1.79,323,1.872,324,3.06,325,1.79,326,1.872,327,1.739,328,2.526,329,1.79,330,1.764,331,1.739,332,1.844,333,1.872,334,1.79,335,2.488,336,1.872,337,1.817,338,1.714,339,2.526,340,1.79,341,1.872,342,3.06,343,1.739,344,1.872,345,1.79,346,1.79,347,1.844,348,1.764,349,1.872,350,1.79,351,1.79,352,1.872,353,1.764,354,1.872,355,1.79,356,1.872,357,1.817,358,1.79,359,1.764,360,1.872,361,1.79,362,1.535,363,1.872,364,1.79,365,2.488,366,1.79,367,2.859,368,1.79,369,1.872,370,1.79,371,1.872,372,1.79,373,1.872,374,1.739,375,1.79,376,1.667,377,1.872,378,1.79,379,1.764,380,1.79,381,1.79,382,1.939,383,1.79,384,1.872,385,1.79,386,1.79,387,1.79,388,1.313,389,1.764,390,1.764,391,1.872,392,1.764,393,1.872,394,1.764,395,1.844,396,1.872,441,1.599,442,1.644,443,1.621,457,1.644,460,3.483,484,3.483,518,1.844,540,2.486,547,1.475,548,1.456,549,1.495,562,1.456,689,5.92,897,2.323,900,1.872,906,4.744,997,2.955,998,4.744,1021,4.387,1023,3.73,1052,5.286,1053,8.073,1054,7.133,1055,7.133,1056,5.286,1057,5.286,1058,5.286,1059,4.387,1060,5.286,1061,4.744,1062,5.286]],["title/modules/ArchivesModule.html",[604,2.209,1063,3.917]],["body/modules/ArchivesModule.html",[0,0.341,3,0.031,4,0.04,5,0.048,17,0.62,27,0.005,34,0.122,40,0.037,57,2.604,73,1.628,127,0.003,128,0.004,129,0.003,220,2.319,271,1.104,273,3.348,274,3.746,275,4.087,285,2.21,286,2.176,287,2.21,288,2.21,289,2.21,290,2.21,291,1.885,292,1.965,293,2.21,294,2.21,295,2.21,296,2.144,297,2.051,298,2.176,299,2.21,300,2.21,301,2.21,302,1.415,303,2.21,304,1.885,313,3.284,316,3.284,318,3.284,320,3.237,340,3.284,364,3.284,604,2.701,606,3.116,607,3.531,608,5.298,609,3.634,610,3.266,619,4.657,620,3.746,622,4.291,624,4.291,629,4.959,632,3.634,633,6.14,634,6.14,635,3.116,637,6.14,639,4.161,644,5.823,645,3.048,646,3.048,689,5.101,911,5.101,990,6.537,1005,5.516,1063,8.225,1064,5.516,1065,5.516,1066,5.516,1067,7.169,1068,6.844,1069,6.146,1070,9.478,1071,6.146,1072,5.516,1073,5.516,1074,6.146,1075,5.516,1076,5.516,1077,7.069,1078,5.516,1079,5.516,1080,5.516]],["title/modules/ArchivesRoutingModule.html",[604,2.209,1067,3.715]],["body/modules/ArchivesRoutingModule.html",[0,0.378,3,0.035,4,0.043,5,0.051,17,0.687,27,0.005,34,0.117,40,0.041,73,1.805,127,0.003,128,0.004,129,0.003,165,1.63,234,1.864,271,1.224,285,2.45,286,2.413,287,2.45,288,2.45,289,2.45,290,2.45,291,2.09,292,2.179,293,2.45,294,2.45,295,2.45,296,2.377,297,2.275,298,2.413,299,2.45,300,2.45,301,2.45,302,1.57,303,2.45,320,2.805,327,2.999,343,2.765,493,3.218,606,3.455,610,3.621,622,3.713,624,4.579,680,5.038,683,6.214,684,5.942,685,3.916,690,7.359,694,5.313,695,6.552,705,5.656,1067,6.214,1072,6.116,1081,6.815,1082,6.116,1083,6.116,1084,5.313,1085,5.656,1086,6.116,1087,8.18,1088,6.116,1089,6.116,1090,6.116,1091,6.116,1092,5.313]],["title/classes/AuthObject.html",[0,0.279,1093,3.547]],["body/classes/AuthObject.html",[0,0.451,2,0.268,3,0.012,4,0.012,5,0.014,7,0.881,8,0.235,9,2.194,12,2.849,13,1.535,14,0.361,15,0.085,16,0.22,17,0.987,18,0.633,20,0.144,21,0.236,23,3.651,24,0.173,26,0.258,27,0.005,28,0.324,29,0.33,31,0.235,34,0.105,35,0.195,36,2.993,37,1.014,38,1.37,40,0.046,41,0.311,43,1.033,47,1.68,49,1.183,55,0.977,63,3.508,64,2.553,66,1.033,68,1.054,72,3.364,73,2.035,76,2.657,77,1.713,80,1.713,81,4.1,82,1.014,84,3.508,85,1.029,86,4.083,87,3.578,88,2.175,101,1.098,103,2.713,104,3.285,110,1.78,111,1.098,113,0.66,122,1.747,127,0.001,128,0.002,129,0.001,138,2.122,145,1.174,150,0.46,165,2.26,169,2.133,170,2.041,171,1.289,172,1.755,179,1.581,181,2.193,189,0.959,190,1.233,204,2.554,206,0.942,209,1.535,228,2.712,249,2.436,269,2.467,271,0.406,291,1.474,297,1.866,302,1.288,331,0.745,382,1.685,388,0.562,406,0.826,417,0.92,423,0.64,454,0.839,457,0.704,473,0.789,514,3.946,521,3.466,526,1.076,540,2.04,543,1.597,547,0.632,548,0.623,549,0.64,556,1.076,559,1.174,561,4.61,562,1.324,573,2.648,581,2.194,595,2.287,628,1.174,650,1.532,668,2.362,669,2.446,670,3.133,701,2.112,706,3.645,728,1.68,730,3.254,732,3.254,742,3.306,747,2.175,750,1.994,771,1.174,772,1.203,862,1.047,897,1.649,898,1.076,900,0.801,953,2.074,997,1.265,1026,2.648,1051,0.895,1093,4.375,1094,1.597,1095,3.52,1096,5.232,1097,4.582,1098,4.582,1099,2.263,1100,2.263,1101,2.263,1102,2.263,1103,2.263,1104,2.263,1105,3.126,1106,1.597,1107,1.532,1108,1.475,1109,3.52,1110,1.532,1111,1.673,1112,5.861,1113,1.597,1114,1.174,1115,1.265,1116,4.133,1117,2.774,1118,2.774,1119,2.774,1120,3.946,1121,2.774,1122,1.673,1123,1.673,1124,1.673,1125,1.673,1126,1.338,1127,1.597,1128,2.774,1129,1.597,1130,1.673,1131,1.673,1132,3.553,1133,1.673,1134,1.673,1135,1.673,1136,1.673,1137,1.673,1138,1.673,1139,1.673,1140,1.673,1141,1.673,1142,1.673,1143,5.422,1144,1.673,1145,4.995,1146,1.673,1147,1.597,1148,1.265,1149,1.673,1150,1.673,1151,1.673,1152,1.673,1153,2.774,1154,1.673,1155,1.673,1156,4.582,1157,1.597,1158,1.673,1159,1.673,1160,1.673,1161,1.673,1162,1.673,1163,1.673,1164,1.673,1165,1.673,1166,3.133,1167,1.3,1168,1.673,1169,1.338,1170,1.673,1171,5.232,1172,5.475,1173,2.774,1174,4.582,1175,1.673,1176,3.553,1177,1.673,1178,2.774,1179,1.673,1180,4.133,1181,2.774,1182,1.673,1183,1.673,1184,1.673,1185,1.673,1186,1.673,1187,1.673,1188,2.774,1189,1.673,1190,2.774,1191,2.774,1192,1.673,1193,1.673,1194,2.648,1195,1.673,1196,2.774,1197,1.673,1198,1.673,1199,1.597,1200,3.133,1201,1.673,1202,1.532,1203,1.673,1204,1.673,1205,1.673,1206,2.774,1207,1.673,1208,3.553,1209,1.673,1210,5.226,1211,3.553,1212,3.553,1213,3.553,1214,3.553,1215,3.553,1216,3.392,1217,1.673,1218,1.673,1219,1.673,1220,1.673,1221,2.774,1222,2.648,1223,2.774,1224,1.597,1225,2.618,1226,2.648,1227,2.774,1228,2.044,1229,1.673,1230,3.553,1231,2.761,1232,2.774,1233,1.673,1234,2.774,1235,1.673,1236,2.648,1237,1.673,1238,2.774,1239,1.673,1240,1.673,1241,2.774,1242,2.774,1243,1.673,1244,1.673,1245,1.673,1246,1.673,1247,1.673,1248,1.673,1249,1.673,1250,2.774,1251,1.673,1252,1.673,1253,1.673,1254,1.673,1255,1.673,1256,1.673,1257,1.673,1258,0.959,1259,1.673,1260,1.673,1261,1.673,1262,1.673,1263,1.673,1264,1.673,1265,1.673,1266,4.582,1267,4.133,1268,1.673,1269,1.673,1270,3.946,1271,1.673,1272,1.597,1273,1.673,1274,1.673,1275,2.842,1276,1.673,1277,2.774,1278,1.673,1279,2.774,1280,1.673,1281,1.532,1282,1.673,1283,1.673,1284,1.673,1285,1.673,1286,1.673,1287,1.673,1288,1.532,1289,1.673,1290,2.362,1291,1.673,1292,1.673,1293,1.673,1294,1.673,1295,1.673,1296,1.673,1297,1.673,1298,1.673,1299,1.673,1300,1.673,1301,1.673,1302,1.673,1303,1.673,1304,1.673,1305,2.774,1306,1.673,1307,1.673,1308,3.553,1309,2.774,1310,1.673,1311,1.673,1312,2.774,1313,2.774,1314,1.673,1315,1.673,1316,1.673,1317,1.673,1318,1.673,1319,1.673,1320,1.673,1321,3.553,1322,2.774,1323,1.597,1324,1.673,1325,1.673,1326,1.673,1327,1.532,1328,1.673,1329,1.673,1330,1.673,1331,1.673,1332,1.673,1333,1.673,1334,2.648,1335,1.673,1336,1.673,1337,1.673,1338,2.774,1339,2.774,1340,1.673,1341,1.673,1342,1.673,1343,1.673,1344,1.673,1345,1.673,1346,1.673,1347,1.673,1348,1.673,1349,1.673,1350,1.673,1351,1.425,1352,1.673,1353,3.553,1354,1.673,1355,2.774,1356,1.673,1357,1.673,1358,1.673,1359,1.673,1360,1.673,1361,1.673,1362,1.673,1363,1.673,1364,1.673,1365,1.673,1366,1.597,1367,1.673,1368,1.673,1369,1.673,1370,1.673,1371,1.673,1372,1.673,1373,1.673,1374,1.673,1375,1.673,1376,1.673,1377,1.673,1378,1.673,1379,1.673,1380,1.673,1381,1.673,1382,1.673,1383,1.233,1384,2.332,1385,3.553,1386,2.761,1387,2.774,1388,1.673,1389,1.673,1390,1.265,1391,1.673,1392,1.673,1393,1.597,1394,1.673,1395,1.673,1396,1.673,1397,1.203,1398,1.673,1399,1.673,1400,1.673,1401,4.133,1402,1.673,1403,3.946,1404,1.673,1405,1.673,1406,1.673,1407,3.254,1408,1.597,1409,1.673,1410,1.597,1411,1.673,1412,2.774,1413,2.648,1414,1.713,1415,1.673,1416,1.597,1417,1.673,1418,1.673,1419,2.648,1420,2.218,1421,1.673,1422,1.673,1423,1.597,1424,2.774,1425,1.673,1426,2.774,1427,1.673,1428,1.475,1429,1.673,1430,1.673,1431,1.673,1432,1.673,1433,1.673,1434,1.673,1435,1.673,1436,1.673,1437,2.774,1438,1.673,1439,1.673,1440,1.673,1441,1.673,1442,1.673]],["title/interfaces/AuthState.html",[747,1.955,752,4.171]],["body/interfaces/AuthState.html",[3,0.035,4,0.035,5,0.041,15,0.257,16,0.493,20,0.192,27,0.005,34,0.099,36,4.378,37,3.052,38,3.749,39,3.052,40,0.051,73,2.589,81,4.217,84,4.463,85,1.095,86,4.463,87,4.552,88,3.546,127,0.003,128,0.004,129,0.003,138,2.612,165,1.63,170,3.683,179,2.242,181,1.672,747,2.652,748,3.713,752,7.565,1443,6.815,1444,7.619,1445,9.774,1446,7.619,1447,6.815,1448,6.815]],["title/injectables/AuthenticationEffects.html",[780,4.171,862,1.402]],["body/injectables/AuthenticationEffects.html",[0,0.132,1,3.023,3,0.012,4,0.012,5,0.014,7,1.519,8,0.984,11,1.467,12,3.02,13,3.089,15,0.089,16,0.229,18,1.273,20,0.175,21,0.1,24,0.236,26,0.497,27,0.005,28,0.509,29,0.341,31,0.812,32,0.683,34,0.11,35,0.205,38,2.939,39,1.063,40,0.014,42,1.204,45,1.181,46,2.464,47,2.578,49,2.704,51,2.025,52,2.464,54,3.508,56,3.508,58,4.091,59,2.464,61,2.464,63,2.628,64,2.269,70,1.761,73,1.812,74,2.074,81,3.474,85,0.516,88,1.519,93,2.127,95,0.529,96,0.529,97,0.494,100,2.074,104,3.263,105,2.074,107,2.025,108,2.074,110,1.713,112,2.074,113,0.682,115,3.059,117,2.074,126,4.45,127,0.002,128,0.002,129,0.001,136,0.894,142,3.307,143,2.681,149,1.106,150,1.744,152,1.128,165,1.925,169,2.149,172,1.814,181,2.416,191,3.307,197,1.818,199,0.97,202,4.366,204,3.059,209,1.597,249,2,251,0.899,268,1.13,269,0.663,271,0.426,405,2.707,406,2.102,418,0.605,449,2.226,493,1.494,518,0.828,521,4.221,526,3.251,529,1.851,531,3.042,540,2.729,547,1.089,548,0.654,549,0.671,553,1.851,555,1.97,556,1.128,561,3.726,562,0.654,591,3.239,593,3.042,639,1.607,645,1.177,646,1.177,682,5.135,685,1.364,687,2.126,713,4.125,714,3.549,720,4.778,730,4.631,742,2.308,744,3.239,780,3.239,862,1.089,863,1.043,867,4.922,869,5.056,871,3.042,873,3.239,882,4.113,894,1.293,895,1.232,896,1.851,897,2.184,898,3.435,899,1.755,900,0.841,917,2.308,931,3.042,997,4.041,1019,1.755,1023,2.754,1051,0.939,1095,5.304,1108,1.548,1126,1.404,1143,2.754,1166,2.544,1199,2.754,1200,2.544,1202,4.631,1224,2.754,1258,3.199,1270,2.754,1334,1.675,1383,1.293,1384,2.412,1386,2.242,1408,4.063,1449,2.374,1450,5.756,1451,4.97,1452,4.97,1453,5.756,1454,4.97,1455,3.903,1456,5.756,1457,5.756,1458,4.487,1459,3.059,1460,3.509,1461,2.374,1462,3.903,1463,3.903,1464,3.903,1465,3.903,1466,2.642,1467,3.897,1468,3.903,1469,2.457,1470,3.903,1471,4.97,1472,2.374,1473,3.903,1474,3.903,1475,2.374,1476,3.903,1477,2.374,1478,3.903,1479,3.903,1480,2.374,1481,6.266,1482,6.839,1483,3.903,1484,5.332,1485,3.903,1486,3.903,1487,3.903,1488,4.337,1489,3.903,1490,3.903,1491,3.903,1492,3.903,1493,3.903,1494,3.903,1495,6.839,1496,5.756,1497,5.756,1498,5.756,1499,5.756,1500,6.839,1501,5.756,1502,5.999,1503,3.903,1504,3.903,1505,3.903,1506,3.903,1507,3.903,1508,3.903,1509,3.903,1510,4.894,1511,3.903,1512,3.903,1513,3.903,1514,3.503,1515,3.903,1516,3.903,1517,3.903,1518,3.903,1519,2.374,1520,3.903,1521,3.239,1522,2.885,1523,3.903,1524,3.903,1525,3.903,1526,2.544,1527,3.042,1528,2.457,1529,3.903,1530,3.903,1531,3.129,1532,6.839,1533,3.903,1534,2.374,1535,3.903,1536,3.903,1537,3.903,1538,4.97,1539,3.903,1540,3.903,1541,3.903,1542,3.903,1543,3.903,1544,3.903,1545,3.903,1546,2.374,1547,3.903,1548,5.166,1549,2.374,1550,2.544,1551,3.903,1552,3.903,1553,3.903,1554,6.361,1555,2.374,1556,3.903,1557,3.903,1558,3.903,1559,4.97,1560,3.903,1561,3.903,1562,2.457,1563,3.903,1564,3.903,1565,2.374,1566,3.903,1567,2.379,1568,3.903,1569,3.903,1570,2.374,1571,1.607,1572,2.374,1573,1.755,1574,1.607,1575,1.495,1576,1.755,1577,2.374,1578,2.374,1579,4.147,1580,6.361,1581,2.374,1582,2.374,1583,2.374,1584,2.374,1585,2.374,1586,1.851,1587,2.374,1588,2.374,1589,2.374,1590,2.374,1591,2.374,1592,2.374,1593,3.903,1594,2.374,1595,2.374,1596,3.903,1597,2.374,1598,2.374,1599,2.374,1600,2.374,1601,2.374,1602,2.374,1603,2.374]],["title/interfaces/AuthenticationModeHandler.html",[747,1.955,1145,3.547]],["body/interfaces/AuthenticationModeHandler.html",[0,0.441,3,0.012,4,0.012,5,0.014,7,0.887,8,0.237,9,1.723,12,2.853,13,1.544,14,0.364,15,0.086,17,0.954,18,0.637,20,0.125,21,0.204,23,3.661,24,0.157,26,0.332,27,0.005,28,0.379,29,0.259,31,0.237,34,0.106,35,0.197,36,2.163,37,1.021,38,1.378,40,0.047,41,0.313,43,1.041,47,1.69,49,1.19,55,0.984,63,3.517,64,2.564,66,1.041,68,1.062,72,3.374,73,2.04,76,2.296,77,1.723,80,1.723,81,4.105,82,1.021,84,2.841,85,1.021,86,3.872,87,3.588,88,2.185,101,1.106,103,2.725,104,3.221,110,1.784,111,1.106,113,0.663,122,1.758,127,0.001,128,0.002,129,0.001,138,2.208,150,0.463,165,2.263,169,2.134,170,2.05,171,1.297,172,1.763,179,1.589,181,2.197,189,0.966,190,1.242,204,2.567,206,1.571,209,1.544,228,2.479,249,2.439,251,0.869,268,1.277,269,2.57,271,0.409,291,1.481,297,1.874,302,1.293,331,0.75,382,1.692,388,0.566,406,0.832,417,1.185,423,0.645,454,0.845,457,0.709,473,0.795,514,4.392,521,3.479,526,1.083,540,2.046,543,1.609,547,0.636,548,0.628,549,0.645,556,1.083,559,1.183,561,4.619,562,1.33,573,2.664,581,2.205,595,2.301,628,1.183,650,1.543,668,2.376,669,2.461,670,3.149,701,2.123,706,3.661,728,1.69,730,3.27,732,3.27,742,3.32,747,2.421,748,1.242,750,2.006,771,1.183,772,1.211,862,1.053,897,1.659,898,1.083,900,0.807,953,2.084,997,1.274,1026,2.664,1051,0.902,1093,3.963,1094,1.609,1095,3.041,1096,4.958,1097,2.79,1098,1.685,1105,3.14,1106,1.609,1107,1.543,1108,1.486,1109,3.536,1110,1.543,1111,1.685,1112,5.873,1113,1.609,1114,1.183,1115,1.274,1116,4.151,1117,2.79,1118,2.79,1119,2.79,1120,3.963,1121,2.79,1122,1.685,1123,1.685,1124,1.685,1125,1.685,1126,1.348,1127,1.609,1128,2.79,1129,1.609,1130,1.685,1131,1.685,1132,3.571,1133,1.685,1134,1.685,1135,1.685,1136,1.685,1137,1.685,1138,1.685,1139,1.685,1140,1.685,1141,1.685,1142,1.685,1143,5.603,1144,1.685,1145,5.242,1146,1.685,1147,1.609,1148,1.274,1149,1.685,1150,1.685,1151,1.685,1152,1.685,1153,2.79,1154,1.685,1155,1.685,1156,4.6,1157,1.609,1158,1.685,1159,1.685,1160,1.685,1161,1.685,1162,1.685,1163,1.685,1164,1.685,1165,1.685,1166,3.149,1167,1.31,1168,1.685,1169,1.348,1170,1.685,1171,5.249,1172,5.491,1173,2.79,1174,4.6,1175,1.685,1176,3.571,1177,1.685,1178,2.79,1179,1.685,1180,4.151,1181,2.79,1182,1.685,1183,1.685,1184,1.685,1185,1.685,1186,1.685,1187,1.685,1188,2.79,1189,1.685,1190,2.79,1191,2.79,1192,1.685,1193,1.685,1194,2.664,1195,1.685,1196,2.79,1197,1.685,1198,1.685,1199,1.609,1200,3.149,1201,1.685,1202,1.543,1203,1.685,1204,1.685,1205,1.685,1206,2.79,1207,1.685,1208,3.571,1209,1.685,1210,5.242,1211,3.571,1212,3.571,1213,3.571,1214,3.571,1215,3.571,1216,3.409,1217,1.685,1218,1.685,1219,1.685,1220,1.685,1221,2.79,1222,2.664,1223,2.79,1224,1.609,1225,2.631,1226,2.664,1227,2.79,1228,2.056,1229,1.685,1230,3.571,1231,2.775,1232,2.79,1233,1.685,1234,2.79,1235,1.685,1236,2.664,1237,1.685,1238,2.79,1239,1.685,1240,1.685,1241,2.79,1242,2.79,1243,1.685,1244,1.685,1245,1.685,1246,1.685,1247,1.685,1248,1.685,1249,1.685,1250,2.79,1251,1.685,1252,1.685,1253,1.685,1254,1.685,1255,1.685,1256,1.685,1257,1.685,1258,0.966,1259,1.685,1260,1.685,1261,1.685,1262,1.685,1263,1.685,1264,1.685,1265,1.685,1266,4.6,1267,5.249,1268,1.685,1269,1.685,1270,3.963,1271,1.685,1272,1.609,1273,1.685,1274,1.685,1275,2.856,1276,1.685,1277,2.79,1278,1.685,1279,2.79,1280,1.685,1281,1.543,1282,1.685,1283,1.685,1284,1.685,1285,1.685,1286,1.685,1287,1.685,1288,1.543,1289,1.685,1290,2.376,1291,1.685,1292,1.685,1293,1.685,1294,1.685,1295,1.685,1296,1.685,1297,1.685,1298,1.685,1299,1.685,1300,1.685,1301,1.685,1302,1.685,1303,1.685,1304,1.685,1305,2.79,1306,1.685,1307,1.685,1308,3.571,1309,2.79,1310,1.685,1311,1.685,1312,2.79,1313,2.79,1314,1.685,1315,1.685,1316,1.685,1317,1.685,1318,1.685,1319,1.685,1320,1.685,1321,3.571,1322,2.79,1323,1.609,1324,1.685,1325,1.685,1326,1.685,1327,1.543,1328,1.685,1329,1.685,1330,1.685,1331,1.685,1332,1.685,1333,1.685,1334,2.664,1335,1.685,1336,1.685,1337,1.685,1338,2.79,1339,2.79,1340,1.685,1341,1.685,1342,1.685,1343,1.685,1344,1.685,1345,1.685,1346,1.685,1347,1.685,1348,1.685,1349,1.685,1350,1.685,1351,1.435,1352,1.685,1353,3.571,1354,1.685,1355,2.79,1356,1.685,1357,1.685,1358,1.685,1359,1.685,1360,1.685,1361,1.685,1362,1.685,1363,1.685,1364,1.685,1365,1.685,1366,1.609,1367,1.685,1368,1.685,1369,1.685,1370,1.685,1371,1.685,1372,1.685,1373,1.685,1374,1.685,1375,1.685,1376,1.685,1377,1.685,1378,1.685,1379,1.685,1380,1.685,1381,1.685,1382,1.685,1383,1.242,1384,2.344,1385,3.571,1386,2.775,1387,2.79,1388,1.685,1389,1.685,1390,1.274,1391,1.685,1392,1.685,1393,1.609,1394,1.685,1395,1.685,1396,1.685,1397,1.211,1398,1.685,1399,3.571,1400,1.685,1401,4.6,1402,1.685,1403,5.011,1404,1.685,1405,1.685,1406,1.685,1407,3.27,1408,1.609,1409,1.685,1410,1.609,1411,1.685,1412,2.79,1413,2.664,1414,1.723,1415,1.685,1416,1.609,1417,1.685,1418,2.79,1419,2.664,1420,2.232,1421,1.685,1422,1.685,1423,1.609,1424,2.79,1425,1.685,1426,2.79,1427,1.685,1428,1.486,1429,1.685,1430,1.685,1431,1.685,1432,1.685,1433,1.685,1434,1.685,1435,1.685,1436,1.685,1437,2.79,1438,1.685,1439,1.685,1440,1.685,1441,1.685,1442,1.685,1604,3.133,1605,2.28,1606,2.28,1607,2.28,1608,2.28,1609,1.892,1610,2.28]],["title/components/BaseSettingComponent.html",[234,0.984,322,1.702]],["body/components/BaseSettingComponent.html",[0,0.225,3,0.021,4,0.021,5,0.024,14,0.569,15,0.152,16,0.347,17,0.704,20,0.178,21,0.171,24,0.279,26,0.561,27,0.005,28,0.609,29,0.561,31,0.614,32,0.772,34,0.112,35,0.349,40,0.024,44,1.085,85,0.798,97,0.512,110,1.869,127,0.002,128,0.003,129,0.002,138,2.001,146,0.912,150,0.823,165,0.967,169,1.492,170,1.477,181,1.45,189,1.714,197,1.884,219,1.191,220,1.74,225,3.198,234,1.504,235,1.37,236,1.944,237,1.411,239,1.432,240,1.432,242,2.511,243,1.35,244,3.523,247,2.062,249,2.44,251,1.361,252,2.848,254,2.931,268,2.054,269,2.28,271,0.726,291,2.355,292,2.233,304,1.241,305,2.093,306,2.062,307,1.294,308,2.72,309,1.432,310,1.432,311,1.37,312,1.432,313,1.37,314,2.141,315,2.093,316,1.37,317,2.093,318,1.37,319,1.432,320,1.35,321,1.432,322,2.601,323,3.12,324,2.72,325,1.37,326,1.432,327,1.331,328,2.093,329,1.37,330,1.35,331,1.331,332,1.411,333,1.432,334,1.37,335,2.062,336,1.432,337,1.39,338,1.312,339,2.093,340,1.37,341,1.432,342,2.72,343,1.331,344,1.432,345,1.37,346,1.37,347,1.411,348,1.35,349,1.432,350,1.37,351,1.37,352,1.432,353,1.35,354,1.432,355,1.37,356,1.432,357,1.39,358,1.37,359,1.35,360,1.432,361,1.37,362,1.175,363,1.432,364,1.37,365,2.062,366,1.37,367,2.473,368,1.37,369,1.432,370,1.37,371,1.432,372,1.37,373,1.432,374,1.331,375,1.37,376,1.275,377,1.432,378,1.37,379,1.35,380,1.37,381,1.37,382,1.607,383,1.37,384,1.432,385,1.37,386,1.37,387,1.37,388,1.468,389,1.35,390,1.35,391,1.432,392,1.35,393,1.432,394,1.35,395,1.411,396,1.432,518,1.411,547,1.129,548,1.114,549,1.144,556,1.923,559,2.099,581,1.847,635,2.051,701,2.598,900,1.432,917,2.392,924,4.294,1114,2.099,1126,2.392,1258,2.504,1275,3.494,1351,2.547,1397,3.14,1611,10.013,1612,7.402,1613,3.153,1614,4.129,1615,6.219,1616,4.607,1617,4.928,1618,4.256,1619,6.864,1620,4.928,1621,4.928,1622,4.171,1623,4.541,1624,5.42,1625,4.171,1626,4.928,1627,4.928,1628,4.928,1629,5.91,1630,4.045,1631,3.631,1632,3.631,1633,2.855,1634,4.045,1635,2.855,1636,4.045,1637,4.045,1638,4.171,1639,5.144,1640,4.045,1641,2.855,1642,4.045,1643,4.045,1644,4.045,1645,2.855,1646,4.045,1647,4.045,1648,4.045,1649,4.045,1650,3.631,1651,2.324,1652,3.357,1653,3.631,1654,3.631,1655,3.153,1656,4.607,1657,2.991,1658,2.855,1659,3.631,1660,2.855,1661,4.045,1662,4.045,1663,4.045,1664,3.631,1665,2.855,1666,4.045,1667,4.045,1668,5.91,1669,4.045,1670,5.304,1671,4.045,1672,4.045,1673,4.045,1674,4.045,1675,4.607,1676,4.045,1677,3.153,1678,4.045,1679,3.153,1680,4.045,1681,4.045,1682,4.045,1683,4.045,1684,4.045,1685,4.045,1686,4.045,1687,3.153,1688,3.153,1689,4.045,1690,4.045,1691,4.045,1692,4.045,1693,4.045,1694,4.045,1695,4.045,1696,4.045,1697,4.045,1698,3.631,1699,4.045,1700,4.607]],["title/directives/CalcHeightDirective.html",[307,1.607,390,1.677]],["body/directives/CalcHeightDirective.html",[0,0.312,3,0.029,4,0.029,5,0.034,15,0.212,16,0.436,20,0.177,21,0.237,24,0.27,26,0.51,27,0.005,28,0.501,29,0.51,32,0.508,34,0.098,40,0.034,85,1.03,97,0.711,127,0.003,128,0.003,129,0.003,165,1.99,169,1.778,181,1.378,225,3.687,242,2.019,243,1.875,244,2.479,249,2.506,251,1.711,254,3.683,268,1.277,269,1.567,271,1.008,292,2.832,302,1.293,306,2.591,307,2.661,389,1.875,390,2.956,470,3.148,480,2.222,547,1.567,562,1.547,595,3.423,596,5.707,715,4.661,720,4.661,900,1.989,1001,4.378,1051,2.222,1527,4.378,1701,9.798,1702,5.616,1703,8.322,1704,7.428,1705,9.651,1706,9.651,1707,9.21,1708,5.242,1709,6.488,1710,5.616,1711,7.948,1712,7.428,1713,7.428,1714,5.616,1715,5.616,1716,5.616,1717,5.616,1718,7.428,1719,5.616,1720,4.378,1721,5.041,1722,5.616,1723,5.616,1724,5.616,1725,5.616,1726,5.616,1727,5.616,1728,5.616,1729,5.041,1730,5.041,1731,5.616,1732,7.469,1733,7.428,1734,5.616,1735,5.041,1736,5.616,1737,5.616,1738,5.616,1739,5.616,1740,7.428,1741,5.616,1742,9.21,1743,5.616,1744,5.616,1745,5.616,1746,8.322,1747,5.616,1748,5.616,1749,5.616,1750,6.666,1751,5.616,1752,5.616,1753,5.616,1754,5.616,1755,5.616,1756,6.666,1757,5.616,1758,5.616,1759,5.616,1760,7.428,1761,5.616,1762,5.616,1763,7.428,1764,8.322,1765,5.616,1766,5.616,1767,5.616,1768,7.428,1769,5.616,1770,5.616,1771,5.616,1772,5.616,1773,4.661,1774,7.428,1775,7.428,1776,5.616,1777,5.616,1778,5.616,1779,5.616,1780,5.616]],["title/classes/Card.html",[0,0.279,146,0.775]],["body/classes/Card.html",[0,0.441,2,0.735,3,0.032,4,0.032,5,0.038,11,2.227,19,1.306,20,0.116,21,0.368,24,0.174,26,0.427,27,0.005,28,0.419,29,0.427,34,0.094,40,0.053,41,0.854,85,1.108,95,1.075,96,1.075,97,1.005,127,0.003,128,0.004,129,0.003,136,3.771,145,5.193,146,1.225,147,4.777,149,2.896,166,4.334,171,3.004,176,4.887,228,3.441,238,2.683,376,3.117,442,1.933,443,1.907,454,3.241,516,6.234,599,4.389,1781,5.161,1782,5.581,1783,5.168,1784,6.169,1785,6.169,1786,6.462,1787,6.462,1788,6.814,1789,6.814,1790,6.169,1791,6.462,1792,6.218,1793,6.186,1794,7.254,1795,4.847,1796,4.054,1797,5.581,1798,5.161]],["title/components/CardComponent.html",[234,0.984,325,1.702]],["body/components/CardComponent.html",[0,0.197,3,0.018,4,0.027,5,0.032,8,0.876,14,0.516,15,0.133,16,0.314,17,0.819,20,0.177,21,0.149,24,0.275,26,0.443,27,0.005,28,0.548,29,0.443,31,0.747,32,0.584,34,0.112,35,0.305,40,0.021,44,0.95,47,1.585,70,1.801,73,0.938,82,1.585,85,0.999,88,1.377,93,1.101,95,0.479,96,0.479,97,0.448,110,1.903,127,0.002,128,0.002,129,0.002,138,1.534,143,2.492,146,1.44,147,1.836,150,0.72,165,1.847,169,1.968,172,1.292,174,2.158,179,2.366,181,1.313,196,2.093,219,1.9,220,1.575,225,2.686,228,2.154,234,1.264,235,1.199,236,1.761,237,1.235,238,1.527,239,1.253,240,1.253,242,2.32,243,1.181,244,3.493,245,2.444,247,1.867,249,2.355,251,1.232,252,2.667,254,2.654,256,7.002,268,1.919,269,2.007,271,0.636,272,1.181,285,1.273,286,1.253,287,1.273,288,1.273,289,1.273,290,1.273,291,1.085,292,2.598,293,1.273,294,1.273,295,1.273,296,1.235,297,1.181,298,1.253,299,1.273,300,1.273,301,1.273,302,0.815,303,1.273,304,1.085,305,1.895,306,1.867,307,1.132,308,2.547,309,1.253,310,1.253,311,1.199,312,1.253,313,1.199,314,1.979,315,1.895,316,1.199,317,1.895,318,1.199,319,1.253,320,1.181,321,1.253,322,1.199,323,1.253,324,2.547,325,2.436,326,1.253,327,1.164,328,1.895,329,1.199,330,1.181,331,1.164,332,1.235,333,1.253,334,1.199,335,1.867,336,1.253,337,1.216,338,1.148,339,1.895,340,1.199,341,1.253,342,2.547,343,1.164,344,1.253,345,1.199,346,1.199,347,1.235,348,1.181,349,1.253,350,1.199,351,1.199,352,1.253,353,1.181,354,1.253,355,1.199,356,1.253,357,1.216,358,1.199,359,1.181,360,1.253,361,1.199,362,1.028,363,1.253,364,1.199,365,1.867,366,1.199,367,2.285,368,1.199,369,1.253,370,1.199,371,1.253,372,1.199,373,1.253,374,1.164,375,1.199,376,1.116,377,1.253,378,1.199,379,1.181,380,1.199,381,1.199,382,2.1,383,1.199,384,1.253,385,1.199,386,1.199,387,1.199,388,0.879,389,1.181,390,1.181,391,1.253,392,1.181,393,1.253,394,1.181,395,1.235,396,1.253,399,1.928,441,2.823,442,1.101,443,1.085,457,2.236,459,1.355,493,1.355,512,5.03,516,2.396,547,0.988,548,0.975,549,1.001,550,2.617,556,1.682,559,1.836,562,0.975,570,4.172,581,1.616,592,2.498,645,1.755,646,1.755,682,4.952,685,2.034,742,2.093,750,2.844,900,1.253,918,4.554,920,4.253,939,2.158,953,1.527,988,2.759,1167,2.034,1383,1.928,1384,3.491,1386,3.075,1420,2.093,1459,3.429,1460,4.384,1488,3.707,1614,3.815,1618,3.933,1619,4.369,1623,4.253,1658,2.498,1670,3.177,1790,2.498,1796,2.308,1799,3.54,1800,6.453,1801,5.351,1802,5.791,1803,5.791,1804,6.453,1805,6.453,1806,5.351,1807,7.192,1808,5.351,1809,7.192,1810,6.453,1811,3.369,1812,3.54,1813,5.351,1814,3.54,1815,3.54,1816,5.351,1817,3.54,1818,3.54,1819,5.351,1820,3.54,1821,3.54,1822,3.54,1823,3.54,1824,3.54,1825,3.54,1826,3.54,1827,3.54,1828,3.54,1829,3.54,1830,3.54,1831,3.54,1832,3.177,1833,3.54,1834,2.938,1835,3.177,1836,3.54,1837,3.177,1838,3.54,1839,4.803,1840,3.54,1841,2.759,1842,2.938,1843,2.759,1844,3.177,1845,3.54,1846,3.54,1847,3.54,1848,3.54,1849,6.453,1850,3.54,1851,3.54,1852,3.54,1853,3.54,1854,3.54,1855,3.177,1856,3.54,1857,3.54,1858,3.54,1859,3.54,1860,3.54,1861,3.54,1862,5.351,1863,3.54,1864,3.54,1865,3.54,1866,2.938,1867,3.54,1868,3.54,1869,3.177,1870,3.54,1871,3.54,1872,3.54,1873,3.54,1874,3.54,1875,3.54,1876,3.54,1877,5.351,1878,5.351,1879,3.54,1880,3.956,1881,3.54,1882,3.54,1883,3.54,1884,3.54,1885,6.455,1886,3.54,1887,5.355,1888,3.54,1889,3.54,1890,3.54,1891,3.54,1892,3.54,1893,3.54,1894,3.54]],["title/components/CardDetailsComponent.html",[234,0.984,327,1.653]],["body/components/CardDetailsComponent.html",[0,0.268,3,0.025,4,0.025,5,0.029,11,1.706,14,0.645,15,0.182,16,0.393,20,0.169,21,0.203,24,0.253,26,0.331,27,0.005,28,0.561,29,0.331,34,0.113,35,0.416,40,0.029,44,1.293,110,1.981,113,0.662,127,0.002,128,0.003,129,0.002,146,1.551,147,3.992,148,1.972,153,2.141,154,2.159,165,1.601,170,1.76,172,1.76,176,4.885,219,1.419,220,1.971,234,1.507,235,1.632,236,2.203,237,1.681,239,1.707,240,1.707,242,2.766,243,1.609,244,3.556,247,2.336,249,1.774,251,1.542,252,3.083,268,1.523,269,1.869,271,0.865,304,1.478,305,2.371,306,2.336,307,1.541,308,2.944,309,1.707,310,1.707,311,1.632,312,1.707,313,1.632,314,2.36,315,2.371,316,1.632,317,2.371,318,1.632,319,1.707,320,1.609,321,1.707,322,1.632,323,1.707,324,2.944,325,1.632,326,1.707,327,2.735,328,2.371,329,1.632,330,1.609,331,1.586,332,1.681,333,1.707,334,1.632,335,2.336,336,1.707,337,1.656,338,1.563,339,2.371,340,1.632,341,1.707,342,2.944,343,1.586,344,1.707,345,1.632,346,1.632,347,1.681,348,1.609,349,1.707,350,1.632,351,1.632,352,1.707,353,1.609,354,1.707,355,1.632,356,1.707,357,1.656,358,1.632,359,1.609,360,1.707,361,1.632,362,1.4,363,1.707,364,1.632,365,2.336,366,1.632,367,2.725,368,1.632,369,1.707,370,1.632,371,1.707,372,1.632,373,1.707,374,1.586,375,1.632,376,1.52,377,1.707,378,1.632,379,1.609,380,1.632,381,1.632,382,1.82,383,1.632,384,1.707,385,1.632,386,1.632,387,1.632,388,1.197,389,1.609,390,1.609,391,1.707,392,1.609,393,1.707,394,1.609,395,1.681,396,1.707,458,2.889,493,1.845,512,5.998,518,1.681,548,1.328,549,1.363,550,3.563,562,1.328,570,5.22,581,2.201,682,5.653,685,2.769,1084,7.23,1550,3.142,1575,3.035,1665,3.402,1834,4,1837,4.326,1841,3.757,1842,4,1843,3.757,1844,4.326,1866,4,1895,9.275,1896,4.82,1897,6.01,1898,8.314,1899,5.186,1900,6.696,1901,4.82,1902,4.82,1903,4.82,1904,4.82,1905,4.82,1906,3.263,1907,4.326,1908,4.82,1909,4.82,1910,4.326,1911,6.696,1912,6.696,1913,4.82,1914,4.82,1915,4.326,1916,4.82,1917,4.82,1918,3.402,1919,4,1920,4.326,1921,4.326,1922,4.326]],["title/injectables/CardEffects.html",[775,4.171,862,1.402]],["body/injectables/CardEffects.html",[0,0.315,3,0.029,4,0.029,5,0.034,8,0.59,15,0.214,16,0.439,20,0.166,21,0.239,24,0.249,26,0.39,27,0.005,28,0.383,29,0.39,31,0.869,32,0.757,34,0.118,35,0.489,40,0.034,70,2.257,95,0.769,96,0.769,97,0.719,104,3.309,110,2.079,127,0.003,128,0.003,129,0.003,146,1.533,148,2.323,150,1.701,169,2.143,181,2.328,202,4.334,249,1.981,271,1.019,404,3.261,405,4.558,407,2.878,409,3.174,410,3.174,412,3.016,414,3.174,415,3.174,446,2.449,458,2.449,518,1.98,540,2.665,547,1.584,548,1.564,549,1.605,562,1.564,581,4.061,775,6.208,862,2.088,863,2.495,867,5.798,869,7.016,880,5.642,882,4.558,894,3.092,895,2.945,896,4.425,897,2.495,898,2.698,900,2.01,1414,2.592,1575,3.574,1576,4.197,1907,5.095,1923,5.677,1924,8.366,1925,8.366,1926,8.366,1927,5.677,1928,7.48,1929,5.677,1930,7.48,1931,6.276,1932,7.48,1933,7.982,1934,7.48,1935,6.276,1936,7.48,1937,5.677,1938,6.714,1939,7.48,1940,7.48,1941,7.48,1942,5.677,1943,4.711,1944,4.711,1945,4.711]],["title/interfaces/CardFeedState.html",[747,1.955,755,4.171]],["body/interfaces/CardFeedState.html",[3,0.026,4,0.026,5,0.031,7,2.012,11,2.354,15,0.195,16,0.412,20,0.173,24,0.145,27,0.005,34,0.101,38,3.127,40,0.059,49,1.63,85,0.96,113,1.229,127,0.004,128,0.003,129,0.002,138,2.648,146,1.084,150,1.741,165,1.681,169,1.974,170,1.888,171,2.415,179,1.701,181,1.268,188,3.152,206,3.846,376,2.216,388,1.983,441,3.122,442,1.608,443,1.586,445,2.361,471,3.089,480,2.78,488,3.802,493,3.279,587,6.162,687,5.239,747,2.012,748,2.817,755,6.625,846,3.371,847,3.256,848,3.057,849,3.152,854,3.649,887,5.149,917,5.064,953,2.231,1051,2.78,1527,5.478,1586,5.478,1785,4.96,1790,4.96,1946,5.171,1947,6.307,1948,8.039,1949,8.482,1950,7.687,1951,5.832,1952,8.565,1953,6.307,1954,6.307,1955,5.832,1956,6.307,1957,7.027,1958,7.027,1959,9.451,1960,7.027,1961,8.565,1962,5.832,1963,6.307,1964,7.027,1965,7.027,1966,7.027,1967,6.307,1968,4.283,1969,7.027,1970,7.983,1971,5.171,1972,5.171,1973,9.239,1974,5.171,1975,5.171,1976,5.171,1977,5.171,1978,5.171,1979,5.171,1980,5.171,1981,5.171,1982,5.171,1983,5.171,1984,5.171,1985,5.171,1986,5.171,1987,5.171,1988,7.027,1989,7.027,1990,7.027,1991,5.171,1992,4.641,1993,5.171,1994,4.031,1995,5.171,1996,5.171,1997,5.171,1998,6.307,1999,5.171,2000,5.171,2001,5.171,2002,5.171,2003,5.171,2004,5.171,2005,5.171,2006,5.171,2007,5.171,2008,5.171,2009,4.641]],["title/components/CardListComponent.html",[234,0.984,329,1.702]],["body/components/CardListComponent.html",[0,0.267,3,0.024,4,0.034,5,0.04,14,0.643,15,0.181,16,0.392,17,0.774,20,0.169,21,0.202,24,0.259,26,0.33,27,0.005,28,0.56,29,0.33,34,0.111,35,0.414,40,0.029,44,1.288,73,1.271,110,1.979,127,0.002,128,0.003,129,0.002,137,2.758,138,1.376,146,1.481,165,1.148,172,1.753,219,1.413,220,2.443,225,3.197,234,1.504,235,1.626,236,2.197,237,1.674,238,2.071,239,1.7,240,1.7,242,2.76,243,1.602,244,3.556,245,3.049,247,2.329,251,1.538,252,3.078,254,3.311,268,1.519,269,2.143,271,0.862,285,1.726,286,1.7,287,1.726,288,1.726,289,1.726,290,1.726,291,1.472,292,1.535,293,1.726,294,1.726,295,1.726,296,1.674,297,1.602,298,1.7,299,1.726,300,1.726,301,1.726,302,1.106,303,1.726,304,1.472,305,2.364,306,2.329,307,1.535,308,2.939,309,1.7,310,1.7,311,1.626,312,1.7,313,1.626,314,2.355,315,2.364,316,1.626,317,2.364,318,1.626,319,1.7,320,1.602,321,1.7,322,1.626,323,1.7,324,2.939,325,1.626,326,1.7,327,1.579,328,2.364,329,2.811,330,1.602,331,1.579,332,1.674,333,1.7,334,1.626,335,2.329,336,1.7,337,1.65,338,1.557,339,2.364,340,1.626,341,1.7,342,2.939,343,1.579,344,1.7,345,1.626,346,1.626,347,1.674,348,1.602,349,1.7,350,1.626,351,1.626,352,1.7,353,1.602,354,1.7,355,1.626,356,1.7,357,1.65,358,1.626,359,1.602,360,1.7,361,1.626,362,1.394,363,1.7,364,1.626,365,2.329,366,1.626,367,2.719,368,1.626,369,1.7,370,1.626,371,1.7,372,3.138,373,1.7,374,1.579,375,1.626,376,1.514,377,1.7,378,1.626,379,1.602,380,1.626,381,1.626,382,1.815,383,1.626,384,1.7,385,1.626,386,1.626,387,1.626,388,1.192,389,1.602,390,1.602,391,1.7,392,1.602,393,1.7,394,1.602,395,1.674,396,1.7,399,2.615,441,2.322,442,1.493,443,1.472,460,3.313,484,3.313,518,1.674,540,2.115,547,1.34,548,1.322,549,1.358,550,3.549,562,1.322,581,2.192,595,4.07,596,3.948,597,3.742,687,3.638,991,4.308,992,6.891,993,5.993,994,4.308,1000,3.742,1001,5.205,1002,3.742,1003,3.742,1004,3.984,1708,4.712,1709,5.985,1834,3.984,1835,4.308,1841,3.742,1842,3.984,1843,3.742,1968,4.07,2010,6.157,2011,7.829,2012,5.542,2013,5.985,2014,6.677,2015,5.198,2016,4.308,2017,4.8,2018,4.308,2019,4.308,2020,4.308,2021,3.984,2022,4.8,2023,4.8]],["title/classes/CardOperation.html",[0,0.279,2024,4.171]],["body/classes/CardOperation.html",[0,0.382,2,0.814,3,0.035,4,0.035,5,0.042,10,1.823,14,0.815,15,0.259,19,1.208,20,0.187,21,0.357,24,0.237,26,0.581,27,0.005,28,0.57,29,0.581,32,0.829,34,0.081,40,0.051,41,0.945,85,1.05,95,0.932,96,0.932,97,0.872,127,0.003,128,0.004,129,0.003,143,3.206,145,4.388,169,1.807,224,4.264,228,3.407,251,1.948,268,1.566,421,2.679,441,2.889,443,2.111,459,2.635,493,3.505,2024,7.926,2025,8.217,2026,6.178,2027,8.458,2028,6.884,2029,9.155,2030,7.926,2031,9.155,2032,6.884,2033,6.884,2034,6.884,2035,6.884,2036,6.884,2037,6.884,2038,6.884,2039,5.714]],["title/injectables/CardOperationEffects.html",[777,4.171,862,1.402]],["body/injectables/CardOperationEffects.html",[0,0.25,3,0.023,4,0.023,5,0.027,8,0.885,12,2.546,15,0.17,16,0.375,18,1.078,20,0.166,21,0.19,24,0.226,26,0.31,27,0.005,28,0.304,29,0.31,31,0.983,32,0.672,34,0.117,35,0.389,40,0.027,49,2.546,70,2.123,82,2.862,93,1.987,95,0.611,96,0.611,97,0.571,104,2.936,110,1.939,113,1.277,127,0.002,128,0.004,129,0.002,146,1.435,150,1.509,166,3.169,169,2.126,171,2.196,181,2.403,202,4.077,220,1.881,249,1.693,271,0.81,388,1.12,407,3.763,416,1.038,434,3.324,446,1.946,451,3.203,459,2.446,461,3.324,462,3.457,463,2.02,471,3.549,484,2.757,488,2.57,493,2.446,504,2.1,518,1.573,525,4.981,540,2.507,547,1.258,548,1.242,549,1.275,562,1.242,581,4.042,777,5.304,841,4.897,848,2.666,849,2.748,850,3.334,862,1.783,863,1.982,867,5.264,879,6.247,880,5.628,881,7.247,882,4.043,894,2.456,895,2.34,896,3.515,897,1.982,898,3.528,899,3.334,900,1.597,1051,2.528,1258,4.064,1351,4.673,1383,3.481,1384,3.919,1488,5.086,1522,5.969,1574,3.053,1575,2.839,1576,3.334,1586,4.981,1658,3.182,1951,5.304,2030,3.742,2040,8.524,2041,4.509,2042,7.422,2043,4.509,2044,5.304,2045,6.39,2046,6.39,2047,8.074,2048,6.39,2049,6.39,2050,6.39,2051,6.39,2052,6.39,2053,6.39,2054,5.735,2055,6.39,2056,6.39,2057,4.509,2058,7.247,2059,7.247,2060,4.981,2061,6.39,2062,6.39,2063,6.39,2064,8.074,2065,6.39,2066,6.39,2067,6.39,2068,6.39,2069,6.39,2070,6.39,2071,6.39,2072,6.39,2073,4.509,2074,6.39,2075,6.39,2076,6.39,2077,5.304,2078,6.39,2079,6.39,2080,6.39,2081,4.509,2082,3.182,2083,4.509,2084,4.509,2085,4.047,2086,4.047,2087,2.591,2088,3.334]],["title/injectables/CardService.html",[862,1.402,867,3.276]],["body/injectables/CardService.html",[0,0.251,3,0.023,4,0.033,5,0.027,15,0.17,16,0.375,17,0.749,19,1.207,20,0.177,21,0.19,24,0.274,26,0.608,27,0.005,28,0.597,29,0.608,31,0.469,32,0.579,34,0.116,38,2.335,40,0.027,55,1.947,81,1.947,85,1.018,86,2.061,113,1.109,127,0.002,128,0.003,129,0.002,143,2.102,146,0.696,148,1.847,150,1.51,165,1.932,169,2.05,171,2.198,181,2.172,199,1.121,209,3.039,228,2.955,249,2.14,251,1.473,268,2.071,269,1.26,271,0.81,273,2.459,292,2.375,407,3.242,412,3.398,441,1.365,442,1.403,443,1.384,493,2.448,521,4.516,540,2.721,547,1.26,562,1.243,628,2.342,712,2.842,714,2.342,728,2.021,771,2.342,772,2.398,862,1.785,863,1.984,867,4.169,887,2.459,907,2.842,920,5.384,939,2.751,1105,4.951,1109,5.733,1110,3.056,1129,4.513,1210,3.185,1226,3.185,1327,4.329,1366,3.185,1393,4.513,1458,5.789,1466,3.056,1962,3.746,1963,4.051,2024,3.746,2085,4.051,2086,4.051,2089,4.513,2090,7.426,2091,7.426,2092,7.426,2093,7.426,2094,6.394,2095,6.394,2096,8.078,2097,8.078,2098,6.394,2099,3.056,2100,6.426,2101,6.394,2102,6.394,2103,4.513,2104,6.394,2105,8.527,2106,4.513,2107,6.394,2108,4.513,2109,6.394,2110,4.513,2111,6.394,2112,4.513,2113,4.513,2114,6.394,2115,8.527,2116,4.513,2117,7.426,2118,4.513,2119,4.513,2120,4.513,2121,3.056,2122,3.746,2123,5.307,2124,3.746,2125,4.513,2126,6.394,2127,4.513,2128,4.513,2129,4.513,2130,4.513,2131,4.513,2132,4.513,2133,4.513,2134,4.513,2135,4.513,2136,6.704,2137,4.513,2138,4.513,2139,4.513,2140,4.513,2141,4.513,2142,4.513,2143,4.513,2144,4.051,2145,4.513,2146,4.513,2147,4.051,2148,4.513,2149,4.513,2150,4.513,2151,4.513,2152,4.513,2153,4.051,2154,4.513,2155,4.513,2156,4.513,2157,6.394,2158,4.513,2159,4.051,2160,4.513,2161,6.394,2162,3.518,2163,4.051,2164,4.513,2165,4.513,2166,4.513,2167,4.513,2168,4.513,2169,4.513,2170,4.513,2171,4.513,2172,4.513,2173,4.513,2174,4.513,2175,4.513,2176,3.746,2177,6.394,2178,4.513,2179,4.513,2180,4.513,2181,4.513,2182,4.513,2183,4.513,2184,4.513,2185,4.513,2186,4.513,2187,4.513,2188,4.513,2189,4.513,2190,4.051,2191,4.513,2192,4.513,2193,3.337,2194,4.513]],["title/interfaces/CardState.html",[747,1.955,753,4.171]],["body/interfaces/CardState.html",[3,0.038,4,0.038,5,0.045,15,0.281,16,0.521,20,0.184,27,0.005,34,0.088,40,0.054,85,1.056,113,1.375,127,0.003,128,0.004,129,0.003,138,2.716,146,1.514,148,3.051,165,1.783,170,3.241,179,2.453,471,4.404,587,6.533,747,2.901,748,4.062,753,7.866,1803,8.994,2195,7.456,2196,7.456]],["title/modules/CardsModule.html",[604,2.209,1068,3.547]],["body/modules/CardsModule.html",[0,0.319,3,0.029,4,0.038,5,0.046,17,0.579,24,0.161,27,0.005,34,0.121,40,0.035,57,2.435,73,1.522,127,0.003,128,0.003,129,0.003,169,1.228,224,3.511,235,3.225,251,1.323,268,1.307,271,1.032,273,3.13,274,3.502,275,3.912,285,2.066,286,2.034,287,2.066,288,2.066,289,2.066,290,2.066,291,1.762,292,1.837,293,2.066,294,2.066,295,2.066,296,2.004,297,1.918,298,2.034,299,2.066,300,2.066,301,2.066,302,1.323,303,2.066,304,1.762,325,3.452,327,3.353,330,3.436,343,3.353,345,3.452,604,2.525,606,2.913,607,3.301,608,5.13,609,5.283,610,4.472,618,6.447,619,4.458,620,3.502,622,4.107,624,4.585,629,4.747,632,3.397,637,5.877,644,5.574,645,2.849,646,2.849,1068,7.477,1084,4.479,1085,4.768,1899,4.215,2197,5.156,2198,5.156,2199,5.745,2200,5.156,2201,5.156,2202,7.04,2203,5.745,2204,7.54,2205,6.985,2206,5.745,2207,6.985,2208,5.745,2209,5.156,2210,5.745,2211,5.745,2212,5.156,2213,5.156,2214,5.156,2215,5.745,2216,5.745,2217,4.479,2218,5.156]],["title/classes/ChangeSort.html",[0,0.279,853,3.402]],["body/classes/ChangeSort.html",[0,0.507,2,0.81,3,0.035,4,0.035,5,0.041,8,1.017,14,0.919,15,0.258,16,0.495,19,1.206,20,0.187,21,0.385,24,0.236,27,0.005,31,0.712,32,0.62,34,0.108,35,0.591,40,0.059,41,0.941,44,1.839,45,2.552,83,1.496,95,1.238,96,1.238,97,1.157,127,0.003,128,0.004,129,0.003,138,1.964,150,1.394,193,3.832,388,2.27,687,4.978,841,5.25,842,5.067,845,5.689,846,4.469,847,4.316,848,4.988,849,4.178,850,5.067,851,4.716,852,5.343,853,6.456,854,4.837,855,5.689,856,4.178,857,5.711,858,5.689,859,5.689,860,7.001,861,5.343,2219,8.435]],["title/classes/CheckAuthenticationStatus.html",[0,0.279,46,2.492]],["body/classes/CheckAuthenticationStatus.html",[0,0.548,1,3.435,2,0.508,3,0.022,4,0.022,5,0.026,6,2.23,7,1.672,8,1.064,9,3.978,10,1.138,11,1.095,12,3.269,13,2.957,14,0.951,15,0.162,16,0.362,17,0.844,18,1.332,19,1.225,20,0.187,21,0.181,23,2.935,24,0.12,27,0.005,31,0.446,32,0.389,33,2.341,34,0.085,35,0.371,36,3.237,37,1.925,38,2.254,39,1.925,40,0.06,41,0.59,42,2.179,43,3.3,44,1.153,45,2.186,46,3.918,47,2.765,48,3.84,49,2.993,50,4.769,51,4.099,52,3.584,53,2.284,54,3.507,55,2.664,56,3.507,57,3.348,58,3.584,59,3.584,60,1.458,61,3.584,62,2.284,63,3.3,64,3.607,65,3.664,66,1.962,67,2.284,68,2.001,69,1.854,70,1.002,71,2.341,72,2.935,73,1.138,74,2.284,75,2.284,76,2.042,77,3.3,78,2.284,79,2.284,80,3.3,81,3.118,82,1.925,83,1.484,84,1.962,85,0.869,86,1.962,87,2.001,88,1.672,89,2.341,90,2.341,91,3.937,92,3.84,93,2.247,94,3.84,95,1.367,96,1.367,97,1.278,98,2.341,99,2.341,100,3.281,101,2.086,102,2.341,103,2.086,104,1.7,105,2.284,106,2.23,107,3.204,108,2.284,109,3.062,110,1.353,111,2.086,112,2.284,113,0.59,114,2.341,115,2.284,116,2.341,117,2.284,118,1.594,119,2.341,120,2.341,121,2.341,122,2.876,123,2.341,124,2.341,125,2.341,126,2.23,127,0.002,128,0.003,129,0.002,2220,4.297]],["title/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.279,61,2.492]],["body/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.549,1,3.445,2,0.511,3,0.022,4,0.022,5,0.026,6,2.242,8,1.065,9,3.985,10,1.144,11,1.101,12,3.264,13,2.966,14,0.952,15,0.163,16,0.364,17,0.845,18,1.336,19,1.226,20,0.187,21,0.182,23,2.946,24,0.121,27,0.005,31,0.449,32,0.391,33,2.354,34,0.085,35,0.373,36,3.247,37,1.935,38,2.263,39,1.935,40,0.06,41,0.593,42,2.191,43,3.31,44,1.159,45,2.193,46,3.595,47,2.776,48,3.852,49,2.996,50,4.777,51,4.109,52,3.595,53,2.296,54,3.518,55,2.675,56,3.518,57,3.356,58,3.595,59,3.595,60,1.464,61,3.927,62,2.296,63,3.31,64,3.616,65,3.675,66,1.973,67,2.296,68,2.012,69,1.864,70,1.008,71,2.354,72,2.946,73,1.144,74,2.296,75,2.296,76,2.054,77,3.31,78,2.296,79,2.296,80,3.31,81,3.128,82,1.935,83,1.487,84,1.973,85,0.871,86,1.973,87,2.012,88,1.681,89,2.354,90,2.354,91,3.377,92,3.294,93,1.927,94,3.294,95,1.368,96,1.368,97,1.279,98,2.354,99,2.354,100,2.296,101,2.097,102,2.354,103,2.097,104,1.709,105,2.296,106,2.242,107,3.216,108,2.296,109,3.074,110,1.358,111,2.097,112,2.296,113,0.593,114,2.354,115,2.296,116,2.354,117,2.296,118,1.602,119,2.354,120,3.377,121,2.354,122,2.887,123,2.354,124,2.354,125,2.354,126,2.242,127,0.002,128,0.003,129,0.002,2221,4.321]],["title/classes/CheckTokenResponse.html",[0,0.279,1410,3.547]],["body/classes/CheckTokenResponse.html",[0,0.451,2,0.268,3,0.012,4,0.012,5,0.014,7,0.882,8,0.235,9,1.715,12,2.82,13,1.537,14,0.362,15,0.085,16,0.22,17,0.98,18,0.634,20,0.139,21,0.236,23,3.653,24,0.157,26,0.258,27,0.005,28,0.324,29,0.487,31,0.235,34,0.105,35,0.195,36,2.155,37,1.015,38,1.371,40,0.046,41,0.311,43,1.035,47,1.682,49,1.184,55,0.978,63,3.51,64,2.555,66,1.035,68,1.056,72,3.366,73,2.036,76,2.286,77,1.715,80,1.715,81,4.142,82,1.015,84,2.832,85,1.029,86,4.084,87,3.58,88,2.177,101,1.1,103,2.716,104,3.286,110,1.781,111,1.1,113,0.66,122,1.749,127,0.001,128,0.002,129,0.001,138,2.124,145,2.496,150,0.461,165,2.261,169,2.133,170,2.043,171,1.291,172,1.756,179,1.583,181,2.194,189,0.96,190,1.235,204,2.556,206,0.944,209,1.537,228,2.713,249,2.437,269,2.468,271,0.407,291,1.475,297,1.868,302,1.429,331,0.746,382,1.686,388,0.563,406,0.828,417,0.921,423,0.641,454,0.84,457,0.705,473,0.791,514,3.949,521,3.468,526,1.077,540,2.041,543,1.6,547,0.633,548,0.624,549,0.641,556,1.077,559,1.176,561,4.612,562,1.325,573,2.651,581,2.197,595,2.29,628,1.176,650,1.535,668,2.365,669,2.449,670,3.136,701,2.114,706,3.648,728,1.682,730,3.257,732,3.257,742,3.309,747,2.177,750,1.996,771,1.176,772,1.204,862,1.048,897,1.651,898,1.077,900,0.803,953,2.076,997,1.267,1026,2.651,1051,0.897,1093,3.949,1094,1.6,1095,3.029,1096,5.235,1097,2.777,1098,1.676,1105,3.129,1106,1.6,1107,1.535,1108,1.478,1109,3.523,1110,1.535,1111,1.676,1112,5.974,1113,1.6,1114,1.176,1115,1.267,1116,4.137,1117,2.777,1118,2.777,1119,2.777,1120,3.949,1121,2.777,1122,1.676,1123,1.676,1124,1.676,1125,1.676,1126,1.34,1127,1.6,1128,2.777,1129,1.6,1130,1.676,1131,1.676,1132,3.556,1133,1.676,1134,1.676,1135,1.676,1136,1.676,1137,1.676,1138,1.676,1139,1.676,1140,1.676,1141,1.676,1142,1.676,1143,5.425,1144,1.676,1145,4.998,1146,1.676,1147,1.6,1148,1.267,1149,1.676,1150,1.676,1151,1.676,1152,1.676,1153,2.777,1154,1.676,1155,1.676,1156,4.586,1157,1.6,1158,1.676,1159,1.676,1160,1.676,1161,1.676,1162,1.676,1163,1.676,1164,1.676,1165,1.676,1166,3.136,1167,1.302,1168,1.676,1169,1.34,1170,1.676,1171,5.235,1172,5.478,1173,2.777,1174,4.586,1175,1.676,1176,3.556,1177,1.676,1178,2.777,1179,1.676,1180,4.137,1181,4.586,1182,1.676,1183,1.676,1184,1.676,1185,1.676,1186,1.676,1187,1.676,1188,2.777,1189,1.676,1190,4.944,1191,2.777,1192,1.676,1193,1.676,1194,2.651,1195,1.676,1196,2.777,1197,1.676,1198,1.676,1199,1.6,1200,3.648,1201,1.676,1202,1.535,1203,1.676,1204,1.676,1205,1.676,1206,2.777,1207,1.676,1208,3.556,1209,1.676,1210,5.23,1211,3.556,1212,3.556,1213,3.556,1214,3.556,1215,3.556,1216,3.395,1217,1.676,1218,1.676,1219,1.676,1220,1.676,1221,2.777,1222,2.651,1223,2.777,1224,1.6,1225,2.621,1226,2.651,1227,2.777,1228,2.046,1229,1.676,1230,3.556,1231,2.764,1232,2.777,1233,1.676,1234,2.777,1235,1.676,1236,2.651,1237,1.676,1238,2.777,1239,1.676,1240,1.676,1241,2.777,1242,2.777,1243,1.676,1244,1.676,1245,1.676,1246,1.676,1247,1.676,1248,1.676,1249,1.676,1250,2.777,1251,1.676,1252,1.676,1253,1.676,1254,1.676,1255,1.676,1256,1.676,1257,1.676,1258,0.96,1259,1.676,1260,1.676,1261,1.676,1262,1.676,1263,1.676,1264,1.676,1265,1.676,1266,4.586,1267,4.137,1268,1.676,1269,1.676,1270,3.949,1271,1.676,1272,1.6,1273,1.676,1274,1.676,1275,2.844,1276,1.676,1277,2.777,1278,1.676,1279,2.777,1280,1.676,1281,1.535,1282,1.676,1283,1.676,1284,1.676,1285,1.676,1286,1.676,1287,1.676,1288,1.535,1289,1.676,1290,2.365,1291,1.676,1292,1.676,1293,1.676,1294,1.676,1295,1.676,1296,1.676,1297,1.676,1298,1.676,1299,1.676,1300,1.676,1301,1.676,1302,1.676,1303,1.676,1304,1.676,1305,2.777,1306,1.676,1307,1.676,1308,3.556,1309,2.777,1310,1.676,1311,1.676,1312,2.777,1313,2.777,1314,1.676,1315,1.676,1316,1.676,1317,1.676,1318,1.676,1319,1.676,1320,1.676,1321,3.556,1322,2.777,1323,1.6,1324,1.676,1325,1.676,1326,1.676,1327,1.535,1328,1.676,1329,1.676,1330,1.676,1331,1.676,1332,1.676,1333,1.676,1334,2.651,1335,1.676,1336,1.676,1337,1.676,1338,2.777,1339,2.777,1340,1.676,1341,1.676,1342,1.676,1343,1.676,1344,1.676,1345,1.676,1346,1.676,1347,1.676,1348,1.676,1349,1.676,1350,1.676,1351,1.427,1352,1.676,1353,3.556,1354,1.676,1355,2.777,1356,1.676,1357,1.676,1358,1.676,1359,1.676,1360,1.676,1361,1.676,1362,1.676,1363,1.676,1364,1.676,1365,1.676,1366,1.6,1367,1.676,1368,1.676,1369,1.676,1370,1.676,1371,1.676,1372,1.676,1373,1.676,1374,1.676,1375,1.676,1376,1.676,1377,1.676,1378,1.676,1379,1.676,1380,1.676,1381,1.676,1382,1.676,1383,1.235,1384,2.335,1385,3.556,1386,2.764,1387,2.777,1388,1.676,1389,1.676,1390,1.267,1391,1.676,1392,1.676,1393,1.6,1394,1.676,1395,1.676,1396,1.676,1397,1.204,1398,1.676,1399,1.676,1400,1.676,1401,4.137,1402,1.676,1403,3.949,1404,1.676,1405,1.676,1406,1.676,1407,3.789,1408,2.651,1409,2.777,1410,2.651,1411,1.676,1412,2.777,1413,2.651,1414,1.715,1415,1.676,1416,1.6,1417,1.676,1418,1.676,1419,2.651,1420,2.221,1421,1.676,1422,1.676,1423,1.6,1424,2.777,1425,1.676,1426,2.777,1427,1.676,1428,1.478,1429,1.676,1430,1.676,1431,1.676,1432,1.676,1433,1.676,1434,1.676,1435,1.676,1436,1.676,1437,2.777,1438,1.676,1439,1.676,1440,1.676,1441,1.676,1442,1.676,2222,2.266,2223,2.266,2224,2.266,2225,2.266,2226,2.266]],["title/classes/ClearCard.html",[0,0.279,405,2.738]],["body/classes/ClearCard.html",[0,0.547,2,0.641,3,0.028,4,0.028,5,0.033,8,1.042,14,0.958,15,0.204,16,0.425,18,1.639,19,1.236,20,0.189,24,0.152,27,0.005,31,0.563,32,0.49,34,0.086,35,0.467,40,0.061,41,0.744,60,1.713,70,1.264,83,1.724,85,0.849,95,1.333,96,1.333,97,1.247,113,1.313,127,0.002,128,0.003,129,0.002,146,1.613,148,2.217,171,2.492,199,1.346,399,4.453,400,3.204,403,3.411,404,3.113,405,4.756,406,1.978,407,4.145,408,2.72,409,4.571,410,4.571,411,2.106,412,4.344,413,4.241,414,4.571,415,4.571,416,1.883,417,1.329,418,1.381,419,1.553,420,1.553,421,2.108,422,3.204,423,1.532,424,1.685,425,4.566,426,3.411,427,3.411,428,3.411,429,3.411,430,3.411,431,3.411,432,3.411,433,3.302,2227,5.418]],["title/classes/ClearLightCardSelection.html",[0,0.279,458,2.168]],["body/classes/ClearLightCardSelection.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,2.794,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.346,459,3.29,460,1.782,461,3.165,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.165,470,1.75,471,1.815,472,3.165,473,1.44,474,3.165,475,1.963,476,3.165,477,1.923,478,3.165,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.004,486,2.004,487,2.004,488,1.661,489,2.912,490,2.004,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.004,500,2.004,501,2.004,502,2.004,503,2.004,504,1.923,2228,5.999]],["title/injectables/ConfigEffects.html",[815,4.171,862,1.402]],["body/injectables/ConfigEffects.html",[0,0.309,3,0.028,4,0.028,5,0.034,8,0.577,15,0.209,16,0.433,20,0.165,21,0.234,24,0.247,26,0.507,27,0.005,28,0.497,29,0.507,31,0.577,32,0.503,34,0.119,35,0.479,38,2.693,40,0.034,70,2.245,95,0.753,96,0.753,97,0.704,104,3.631,110,2.067,127,0.003,128,0.003,129,0.003,150,1.13,169,1.884,181,2.163,202,4.111,228,2.763,249,2.55,251,1.699,268,1.264,269,1.551,271,0.998,388,1.381,408,2.561,518,1.939,540,2.528,547,1.551,548,1.531,549,1.572,554,5.213,555,4.612,559,2.883,562,1.531,581,3.368,645,2.756,646,2.756,750,4.399,814,4.988,815,6.122,862,2.059,863,2.443,880,5.067,882,4.018,894,3.027,895,2.883,897,2.443,898,2.641,899,4.108,900,1.968,1051,2.198,1167,4.238,1258,3.737,1414,2.537,1459,4.399,1460,5.375,1466,4.994,1488,5.067,1531,3.499,1571,3.763,1931,5.206,1935,5.206,1943,4.612,1944,4.612,1945,4.612,2229,5.557,2230,8.279,2231,8.279,2232,7.376,2233,6.52,2234,8.279,2235,5.557,2236,7.376,2237,5.557,2238,7.376,2239,7.376,2240,7.376,2241,7.376,2242,7.376,2243,7.376,2244,5.557,2245,7.915,2246,6.62,2247,5.557,2248,8.467,2249,6.62,2250,4.988,2251,4.988,2252,4.988,2253,3.623,2254,5.557,2255,4.988,2256,5.557,2257,5.557,2258,5.557,2259,7.376,2260,7.376,2261,7.376,2262,7.376,2263,5.557,2264,5.557,2265,5.557]],["title/injectables/ConfigService.html",[862,1.402,2233,3.715]],["body/injectables/ConfigService.html",[0,0.401,3,0.037,4,0.037,5,0.044,15,0.272,16,0.511,20,0.163,21,0.305,24,0.262,26,0.497,27,0.005,28,0.487,29,0.497,34,0.119,35,0.623,40,0.044,85,0.905,110,2.237,127,0.003,128,0.004,129,0.003,169,1.545,249,2.572,251,2.007,268,1.644,271,1.298,540,2.576,547,2.018,548,1.991,549,2.044,562,1.991,628,3.751,771,3.751,772,3.841,862,2.432,863,3.177,1105,5.644,2099,4.895,2233,6.442,2266,7.229,2267,9.353,2268,9.71,2269,8.713,2270,7.229,2271,7.229,2272,7.229,2273,7.229]],["title/interfaces/ConfigState.html",[747,1.955,754,4.171]],["body/interfaces/ConfigState.html",[3,0.038,4,0.038,5,0.045,15,0.278,16,0.517,20,0.187,27,0.005,40,0.057,85,0.979,113,1.371,127,0.003,128,0.004,129,0.003,138,2.905,165,2.107,170,2.688,179,2.898,228,3.147,577,5.738,587,6.511,747,2.865,748,4.011,750,5.191,754,7.825,1051,2.913,2248,8.964,2255,6.609,2274,7.363,2275,6.609,2276,7.363,2277,7.363]],["title/components/ConfirmModalComponent.html",[234,0.984,330,1.677]],["body/components/ConfirmModalComponent.html",[0,0.291,3,0.027,4,0.027,5,0.032,8,1.027,10,1.877,15,0.197,16,0.415,17,0.714,20,0.161,21,0.221,24,0.252,26,0.36,27,0.005,28,0.58,29,0.36,34,0.084,40,0.043,41,0.718,44,1.404,45,2.805,83,0.928,127,0.002,128,0.003,129,0.002,146,1.093,181,1.738,219,1.541,220,2.086,234,1.762,235,1.772,236,2.331,237,1.825,239,1.853,240,1.853,243,1.747,244,3.569,247,2.471,251,1.632,268,1.827,269,2.242,271,0.94,273,2.851,274,3.19,275,2.715,304,1.605,305,2.509,306,2.471,307,1.673,308,3.048,309,1.853,310,1.853,311,1.772,312,1.853,313,1.772,314,2.463,315,2.509,316,1.772,317,2.509,318,1.772,319,1.853,320,1.747,321,1.853,322,1.772,323,1.853,324,3.048,325,1.772,326,1.853,327,1.722,328,2.509,329,1.772,330,2.873,331,2.832,332,3.307,333,1.853,334,1.772,335,2.471,336,1.853,337,1.799,338,1.697,339,2.509,340,1.772,341,1.853,342,3.048,343,1.722,344,1.853,345,1.772,346,1.772,347,1.825,348,1.747,349,1.853,350,1.772,351,1.772,352,1.853,353,1.747,354,1.853,355,1.772,356,1.853,357,1.799,358,1.772,359,1.747,360,1.853,361,1.772,362,1.52,363,1.853,364,1.772,365,2.471,366,1.772,367,2.844,368,1.772,369,1.853,370,1.772,371,1.853,372,1.772,373,1.853,374,1.722,375,1.772,376,1.65,377,1.853,378,1.772,379,1.747,380,1.772,381,1.772,382,2.34,383,1.772,384,1.853,385,1.772,386,1.772,387,1.772,388,1.3,389,1.747,390,1.747,391,1.853,392,1.747,393,1.853,394,1.747,395,1.825,396,1.853,534,4.945,1288,4.797,1522,6.363,1756,6.359,1922,4.697,2163,6.359,2217,7.228,2278,8.321,2279,4.697,2280,7.085,2281,7.725,2282,7.725,2283,5.233,2284,8.994,2285,5.233,2286,5.233,2287,5.233,2288,5.233,2289,5.233,2290,5.233,2291,5.233,2292,5.233,2293,5.233,2294,4.343,2295,5.233,2296,7.725,2297,7.085,2298,7.085,2299,7.085]],["title/classes/CreateUserApplication.html",[0,0.279,2300,3.063]],["body/classes/CreateUserApplication.html",[0,0.529,2,0.682,3,0.029,4,0.029,5,0.035,8,1.024,14,0.936,15,0.218,16,0.444,17,0.763,18,1.681,19,1.215,20,0.193,21,0.243,22,1.51,24,0.236,26,0.397,27,0.005,28,0.389,29,0.397,31,0.6,32,0.522,34,0.089,35,0.498,40,0.06,41,0.792,49,3.315,60,1.363,83,1.691,95,1.292,96,1.292,97,1.208,113,1.334,127,0.003,128,0.003,129,0.003,416,1.943,417,1.416,418,1.471,419,1.654,420,1.654,437,2.234,526,4.417,1115,3.228,1148,4.716,1228,4.12,2087,3.317,2300,5.456,2301,3.764,2302,7.563,2303,5.773,2304,5.338,2305,5.142,2306,5.142,2307,5.142,2308,5.142,2309,3.145,2310,3.764,2311,4.074,2312,4.074,2313,4.074,2314,4.074,2315,4.074,2316,3.764]],["title/classes/CreateUserApplicationOnFailure.html",[0,0.279,2308,3.063]],["body/classes/CreateUserApplicationOnFailure.html",[0,0.529,2,0.682,3,0.029,4,0.029,5,0.035,8,1.024,14,0.936,15,0.218,16,0.444,17,0.763,18,1.681,19,1.215,20,0.193,21,0.243,22,1.51,24,0.236,26,0.397,27,0.005,28,0.389,29,0.397,31,0.6,32,0.522,34,0.089,35,0.498,40,0.06,41,0.792,49,3.315,60,1.363,83,1.691,95,1.292,96,1.292,97,1.208,113,1.334,127,0.003,128,0.003,129,0.003,416,1.943,417,1.416,418,1.471,419,1.654,420,1.654,437,2.234,526,4.417,1115,3.228,1148,4.716,1228,4.12,2087,3.317,2300,5.142,2301,3.764,2304,4.074,2305,5.142,2306,5.142,2307,5.142,2308,5.456,2309,3.145,2310,3.764,2311,4.074,2312,4.074,2313,4.074,2314,5.338,2315,4.074,2316,3.764,2317,7.563,2318,5.773]],["title/classes/CreateUserApplicationOnSuccess.html",[0,0.279,2307,3.063]],["body/classes/CreateUserApplicationOnSuccess.html",[0,0.529,2,0.682,3,0.029,4,0.029,5,0.035,8,1.024,14,0.936,15,0.218,16,0.444,17,0.763,18,1.681,19,1.215,20,0.193,21,0.243,22,1.51,24,0.236,26,0.397,27,0.005,28,0.389,29,0.397,31,0.6,32,0.522,34,0.089,35,0.498,40,0.06,41,0.792,49,3.315,60,1.363,83,1.691,95,1.292,96,1.292,97,1.208,113,1.334,127,0.003,128,0.003,129,0.003,416,1.943,417,1.416,418,1.471,419,1.654,420,1.654,437,2.234,526,4.417,1115,3.228,1148,4.716,1228,4.12,2087,3.317,2300,5.142,2301,3.764,2304,4.074,2305,5.142,2306,5.142,2307,5.456,2308,5.142,2309,3.145,2310,3.764,2311,4.074,2312,4.074,2313,5.338,2314,4.074,2315,4.074,2316,3.764,2319,7.563,2320,5.773]],["title/components/CustomLogoComponent.html",[234,0.984,334,1.702]],["body/components/CustomLogoComponent.html",[0,0.243,3,0.022,4,0.032,5,0.038,14,0.603,15,0.165,16,0.367,17,0.884,20,0.182,21,0.185,24,0.275,26,0.301,27,0.005,28,0.537,29,0.301,31,0.65,32,0.396,34,0.074,40,0.026,44,1.174,73,1.159,83,0.776,85,0.65,127,0.002,128,0.003,129,0.002,138,1.793,146,0.965,169,0.935,219,1.288,220,1.842,225,3.509,228,3.252,234,1.43,235,1.482,236,2.058,237,1.527,238,1.888,239,1.55,240,1.55,242,2.625,243,1.461,244,3.538,245,2.856,247,2.182,249,1.934,251,1.441,252,2.954,254,3.102,268,1.66,269,1.746,271,0.786,285,1.573,286,1.55,287,1.573,288,1.573,289,1.573,290,1.573,291,1.342,292,1.399,293,1.573,294,1.573,295,1.573,296,1.527,297,1.461,298,1.55,299,1.573,300,1.573,301,1.573,302,1.008,303,1.573,304,1.342,305,2.215,306,2.182,307,1.399,308,2.821,309,1.55,310,1.55,311,1.482,312,1.55,313,1.482,314,2.239,315,2.215,316,1.482,317,2.215,318,1.482,319,1.55,320,1.461,321,1.55,322,1.482,323,1.55,324,2.821,325,1.482,326,1.55,327,1.44,328,2.215,329,1.482,330,1.461,331,1.44,332,1.527,333,1.55,334,2.698,335,3.324,336,1.55,337,1.504,338,1.419,339,2.215,340,1.482,341,1.55,342,2.821,343,1.44,344,1.55,345,1.482,346,1.482,347,1.527,348,1.461,349,1.55,350,1.482,351,1.482,352,1.55,353,1.461,354,1.55,355,1.482,356,1.55,357,1.504,358,1.482,359,1.461,360,1.55,361,1.482,362,1.271,363,1.55,364,1.482,365,2.182,366,1.482,367,2.585,368,1.482,369,1.55,370,1.482,371,1.55,372,1.482,373,1.55,374,1.44,375,1.482,376,1.38,377,1.55,378,1.482,379,1.461,380,1.482,381,1.482,382,1.701,383,1.482,384,1.55,385,1.482,386,1.482,387,1.482,388,1.087,389,1.461,390,1.461,391,1.55,392,1.461,393,1.55,394,1.461,395,1.527,396,1.55,545,3.089,546,2.963,577,2.514,596,4.317,665,8.885,719,3.412,851,2.447,918,3.089,953,1.888,1384,2.124,1880,5.397,2321,9.9,2322,4.376,2323,7.301,2324,7.301,2325,6.256,2326,7.301,2327,7.301,2328,7.966,2329,7.301,2330,7.301,2331,7.966,2332,7.966,2333,7.966,2334,6.552,2335,4.376,2336,6.994,2337,6.256,2338,4.376,2339,4.376,2340,4.376,2341,4.376,2342,4.376,2343,6.552,2344,4.376,2345,4.376,2346,4.376,2347,4.376,2348,4.376,2349,4.376,2350,6.256,2351,6.256,2352,6.256,2353,4.376,2354,7.301,2355,7.301,2356,4.376,2357,4.376,2358,4.376,2359,6.256,2360,5.889,2361,4.376,2362,4.376,2363,7.15,2364,7.15,2365,6.552,2366,4.376,2367,4.376,2368,4.376,2369,3.928,2370,4.376,2371,4.376]],["title/injectables/CustomRouterEffects.html",[803,3.063,862,1.402]],["body/injectables/CustomRouterEffects.html",[0,0.271,3,0.025,4,0.025,5,0.029,8,0.804,15,0.363,16,0.396,18,1.139,20,0.174,21,0.206,24,0.245,26,0.532,27,0.005,28,0.455,29,0.335,31,0.868,32,0.756,34,0.116,35,0.421,40,0.029,70,2.246,110,2.039,127,0.002,128,0.003,129,0.002,150,0.992,153,2.673,165,2.171,169,2.151,172,2.466,181,2.436,202,4.313,249,1.292,271,0.876,362,2.428,388,1.212,407,2.474,412,2.593,456,2.185,458,3.342,518,1.702,540,2.712,547,1.362,548,1.344,549,1.38,562,1.344,698,5.605,763,3.443,803,4.116,862,1.885,863,2.144,869,7.012,882,4.553,894,2.658,895,2.531,898,2.319,900,1.728,904,4.05,1038,2.974,1481,5.605,1562,4.252,1567,4.116,1574,3.303,1575,3.072,1576,3.607,1931,6.406,2054,6.061,2372,9.077,2373,4.879,2374,7.744,2375,7.744,2376,7.744,2377,5.449,2378,4.879,2379,6.753,2380,9.485,2381,7.744,2382,6.753,2383,6.753,2384,4.879,2385,9.077,2386,9.306,2387,6.753,2388,9.077,2389,9.077,2390,6.753,2391,9.485,2392,6.753,2393,4.879,2394,6.753,2395,6.753,2396,4.879,2397,6.753,2398,6.753,2399,6.753,2400,4.403,2401,6.753,2402,6.753,2403,4.879,2404,7.744,2405,6.061,2406,6.753,2407,8.358,2408,6.753,2409,4.403,2410,5.449,2411,3.88,2412,6.061,2413,4.45,2414,4.116,2415,4.403,2416,4.116,2417,4.879,2418,4.879,2419,3.607]],["title/classes/CustomRouterStateSerializer.html",[0,0.279,2420,3.917]],["body/classes/CustomRouterStateSerializer.html",[0,0.441,2,0.737,3,0.032,4,0.041,5,0.038,11,2.23,13,3.252,14,0.766,15,0.235,19,1.078,20,0.149,21,0.263,24,0.222,26,0.633,27,0.005,28,0.536,29,0.546,34,0.094,40,0.053,85,0.648,93,1.939,95,0.844,96,0.844,97,0.79,110,1.741,127,0.003,128,0.004,129,0.003,165,2.204,169,1.699,172,3.365,181,1.529,199,1.975,209,4.256,224,2.904,249,2.318,251,1.831,268,1.99,382,1.695,454,2.312,473,2.175,682,3.8,685,3.582,731,3.925,763,4.4,764,6.822,1036,3.925,1051,2.466,1225,3.396,1290,3.925,1384,3.026,2414,4.845,2420,6.197,2421,5.595,2422,7.649,2423,7.949,2424,7.949,2425,7.134,2426,8.271,2427,6.234,2428,7.134,2429,7.901,2430,6.234,2431,7.134,2432,5.595,2433,5.595,2434,8.271,2435,5.595,2436,5.175,2437,5.595,2438,7.263,2439,5.595,2440,5.595,2441,6.597,2442,5.595,2443,5.595,2444,5.595,2445,5.595,2446,5.595,2447,5.595,2448,5.595,2449,5.595,2450,5.595,2451,5.595,2452,5.595,2453,5.595]],["title/classes/DateTimeNgb.html",[0,0.279,934,4.171]],["body/classes/DateTimeNgb.html",[0,0.31,2,0.66,3,0.028,4,0.028,5,0.034,15,0.21,20,0.138,21,0.235,24,0.257,26,0.508,27,0.005,28,0.499,29,0.508,32,0.751,34,0.066,40,0.053,85,1.029,88,3.75,95,0.756,96,0.756,97,0.707,127,0.004,128,0.003,129,0.003,145,3.839,165,2.113,169,2.154,170,3.226,206,3.679,228,2.47,249,1.479,251,1.704,268,2.009,273,3.042,274,3.403,275,2.897,382,2.62,712,4.658,728,2.501,934,6.141,937,8.478,938,7.93,1051,3.283,1413,3.941,1968,4.51,2021,4.634,2162,6.469,2193,4.128,2454,9.447,2455,5.583,2456,8.298,2457,7.333,2458,8.835,2459,8.835,2460,6.64,2461,5.583,2462,5.583,2463,5.583,2464,5.583,2465,5.583,2466,7.399,2467,5.583,2468,5.583,2469,7.399,2470,5.583,2471,5.583,2472,5.583,2473,5.583,2474,4.634,2475,5.583,2476,5.583,2477,5.583,2478,8.298,2479,8.298,2480,6.469,2481,8.298,2482,7.448,2483,7.399,2484,7.399,2485,3.941,2486,5.583,2487,5.583,2488,5.583,2489,5.583,2490,5.583,2491,5.583,2492,5.583,2493,5.011,2494,5.583,2495,5.583,2496,5.583,2497,5.583,2498,5.583,2499,5.011,2500,5.011,2501,5.011,2502,5.583,2503,5.583]],["title/components/DatetimeFilterComponent.html",[234,0.984,340,1.702]],["body/components/DatetimeFilterComponent.html",[0,0.205,3,0.019,4,0.028,5,0.033,14,0.531,15,0.139,16,0.323,17,0.862,20,0.174,21,0.279,24,0.266,26,0.567,27,0.005,28,0.606,29,0.604,31,0.762,32,0.664,34,0.065,38,1.345,40,0.022,44,0.989,73,0.976,85,0.573,88,2.146,92,2.931,95,1.191,96,1.191,97,1.114,127,0.002,128,0.003,129,0.002,138,1.895,146,0.851,169,0.787,170,2.414,179,2.175,181,2.023,197,1.716,206,1.534,219,1.085,220,1.624,225,2.297,234,1.295,235,1.248,236,1.815,237,1.285,238,1.59,239,1.305,240,1.305,242,1.325,243,1.23,244,3.502,245,2.519,247,1.924,251,1.27,254,2.735,268,1.945,269,2.656,271,0.662,285,1.325,286,1.953,287,1.325,288,1.325,289,1.325,290,1.325,291,1.13,292,1.178,293,1.325,294,1.325,295,1.325,296,1.285,297,1.23,298,1.305,299,1.325,300,1.325,301,1.325,302,0.849,303,1.325,304,1.13,305,1.953,306,1.924,307,1.178,308,2.599,309,1.305,310,1.305,311,1.248,312,1.305,313,1.248,314,2.027,315,1.953,316,1.248,317,1.953,318,1.248,319,1.305,320,1.23,321,1.305,322,1.248,323,1.305,324,2.599,325,1.248,326,1.305,327,1.212,328,1.953,329,1.248,330,1.23,331,1.212,332,1.285,333,1.305,334,1.248,335,1.924,336,1.305,337,1.266,338,1.195,339,1.953,340,2.978,341,3.114,342,2.599,343,1.212,344,1.305,345,1.248,346,1.248,347,1.285,348,1.23,349,1.305,350,1.248,351,1.248,352,1.305,353,1.23,354,1.305,355,1.248,356,1.305,357,1.266,358,1.248,359,1.23,360,1.305,361,1.248,362,1.07,363,1.305,364,1.248,365,2.877,366,1.248,367,2.341,368,1.248,369,1.305,370,1.248,371,1.305,372,1.248,373,1.305,374,1.212,375,1.248,376,1.162,377,1.305,378,1.248,379,1.23,380,1.248,381,1.248,382,2.444,383,1.248,384,1.305,385,1.248,386,1.248,387,1.248,388,1.642,389,1.23,390,1.23,391,1.305,392,1.23,393,1.305,394,1.23,395,1.285,396,1.305,592,3.893,603,4.3,609,3.261,635,1.868,677,5.426,910,6.781,924,4.394,932,4.948,953,3.69,982,3.307,983,4.951,984,4.951,985,3.307,1051,3.263,1078,8.623,1079,8.623,1200,2.402,1202,2.495,2121,2.495,2499,3.307,2500,5.933,2501,5.933,2504,2.724,2505,6.611,2506,6.611,2507,6.611,2508,7.339,2509,7.859,2510,6.611,2511,5.933,2512,4.078,2513,7.339,2514,5.487,2515,6.611,2516,5.516,2517,6.092,2518,5.516,2519,5.516,2520,5.516,2521,5.516,2522,5.933,2523,3.685,2524,3.307,2525,5.516,2526,3.685,2527,3.685,2528,5.516,2529,3.685,2530,6.611,2531,5.516,2532,3.685,2533,3.685,2534,3.685,2535,5.516,2536,5.516,2537,6.587,2538,3.685,2539,6.611,2540,5.516,2541,3.307,2542,5.933,2543,3.685,2544,3.685,2545,3.307,2546,3.058,2547,2.724,2548,3.685,2549,3.685,2550,2.601,2551,3.685,2552,3.685,2553,3.685,2554,3.685,2555,3.685,2556,3.685,2557,3.685,2558,3.685,2559,3.685,2560,5.516,2561,3.685,2562,4.951,2563,3.685,2564,3.685,2565,3.307,2566,3.685,2567,3.685,2568,3.685,2569,3.685]],["title/classes/DelayedLightCardUpdate.html",[0,0.279,476,2.251]],["body/classes/DelayedLightCardUpdate.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.444,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,2.874,503,1.968,504,1.889,2570,5.921,2571,4.056]],["title/classes/Detail.html",[0,0.279,147,2.607]],["body/classes/Detail.html",[0,0.461,2,0.791,3,0.034,4,0.034,5,0.04,11,1.705,19,1.313,20,0.125,21,0.381,24,0.187,26,0.46,27,0.005,28,0.451,29,0.46,34,0.098,40,0.055,41,0.918,85,1.098,95,1.126,96,1.126,97,1.052,127,0.003,128,0.004,129,0.003,136,3.733,146,1.032,147,4.69,149,3.116,166,3.318,171,2.299,176,3.741,228,3.156,238,3.9,376,2.85,442,2.08,443,2.052,454,2.481,516,6.401,599,4.722,1781,5.553,1783,3.956,1784,4.722,1785,4.722,1786,4.946,1787,4.946,1788,5.216,1789,5.216,1790,4.722,1791,4.946,1793,5.216,1794,8.224,1795,5.216,1796,4.362,1797,8.113,1798,7.502,2572,6.69,2573,6.69]],["title/components/DetailComponent.html",[234,0.984,343,1.653]],["body/components/DetailComponent.html",[0,0.205,3,0.019,4,0.019,5,0.022,8,0.888,11,1.407,14,0.532,15,0.139,16,0.324,17,0.667,19,0.815,20,0.174,21,0.155,24,0.275,26,0.504,27,0.005,28,0.577,29,0.504,31,0.573,32,0.499,34,0.113,35,0.318,40,0.022,44,0.99,85,0.687,94,1.96,110,1.874,127,0.002,128,0.003,129,0.002,135,3.171,136,2.766,146,1.413,147,4.563,148,1.509,149,1.717,153,2.514,154,1.652,165,2.19,169,1.413,171,1.267,172,1.346,179,1.816,181,1.801,199,0.916,219,1.086,220,1.625,225,2.754,234,1.438,235,1.249,236,1.816,237,1.286,239,1.954,240,1.306,242,2.378,243,1.231,244,3.502,247,1.925,249,2.643,251,1.271,252,2.723,254,2.737,268,2,269,2.51,271,0.662,272,1.231,286,1.306,304,1.131,305,2.342,306,2.561,307,1.179,308,2.6,309,1.306,310,1.306,311,1.249,312,1.306,313,1.249,314,2.028,315,1.954,316,1.249,317,1.954,318,1.249,319,1.306,320,1.231,321,1.306,322,1.249,323,1.306,324,2.6,325,1.249,326,1.306,327,1.213,328,1.954,329,1.249,330,1.231,331,1.213,332,1.286,333,1.306,334,1.249,335,1.925,336,1.306,337,1.267,338,1.196,339,1.954,340,1.249,341,1.306,342,2.6,343,2.416,344,1.306,345,1.249,346,1.249,347,1.286,348,1.231,349,1.306,350,1.249,351,1.249,352,1.306,353,1.231,354,1.306,355,1.249,356,1.306,357,1.267,358,1.249,359,1.231,360,1.306,361,1.249,362,1.071,363,1.306,364,1.249,365,1.925,366,1.249,367,2.342,368,1.249,369,1.306,370,1.249,371,1.306,372,1.249,373,1.306,374,1.213,375,1.249,376,1.163,377,1.306,378,1.249,379,1.231,380,1.249,381,1.249,382,1.5,383,1.249,384,1.306,385,1.249,386,1.249,387,1.249,388,0.916,389,1.231,390,1.231,391,1.306,392,1.231,393,1.306,394,1.231,395,1.286,396,1.306,459,1.412,545,2.603,546,2.497,547,1.029,548,1.016,549,1.043,562,1.016,591,4.581,645,1.829,646,1.829,744,3.061,856,4.031,1051,1.459,1126,2.18,1351,2.322,1459,3.515,1460,4.475,1711,6.59,1783,2.18,1784,3.895,1811,3.475,1869,3.31,1899,4.105,1906,2.497,1910,3.31,1915,3.31,1920,3.31,1921,3.31,2121,3.737,2202,5.428,2213,3.31,2336,6.094,2360,2.726,2411,2.119,2517,5.489,2574,3.688,2575,5.519,2576,6.614,2577,6.614,2578,6.614,2579,6.668,2580,5.519,2581,5.519,2582,5.519,2583,7.342,2584,7.342,2585,6.59,2586,7.342,2587,6.614,2588,3.688,2589,5.156,2590,5.489,2591,5.936,2592,5.519,2593,3.688,2594,3.688,2595,5.519,2596,6.614,2597,8.251,2598,3.688,2599,3.688,2600,3.688,2601,5.519,2602,3.688,2603,3.688,2604,3.688,2605,3.688,2606,3.688,2607,3.688,2608,6.614,2609,3.688,2610,3.688,2611,3.688,2612,4.302,2613,3.688,2614,3.688,2615,3.688,2616,3.31,2617,3.688,2618,3.31,2619,2.875,2620,3.31,2621,4.581,2622,3.688,2623,3.31,2624,5.519,2625,5.519,2626,3.688,2627,3.688,2628,3.688,2629,3.688,2630,3.688,2631,3.688,2632,3.688,2633,3.688,2634,3.688,2635,3.688,2636,3.688,2637,3.688,2638,3.688,2639,3.688,2640,4.953,2641,5.519,2642,3.688,2643,3.688,2644,3.688,2645,3.688,2646,3.688,2647,3.688,2648,3.688,2649,3.688,2650,3.688,2651,3.688,2652,3.688,2653,3.688,2654,5.519,2655,3.688,2656,3.31,2657,3.688,2658,3.688,2659,3.688,2660,3.688,2661,3.688,2662,3.688,2663,3.688,2664,3.688,2665,5.519,2666,3.688,2667,5.519,2668,3.688,2669,5.519,2670,3.688,2671,3.688,2672,3.688,2673,3.688,2674,3.688,2675,3.688,2676,3.688,2677,3.688,2678,3.688,2679,3.31,2680,3.31,2681,3.688,2682,3.688]],["title/classes/DetailContext.html",[0,0.279,2619,3.917]],["body/classes/DetailContext.html",[0,0.433,2,0.922,3,0.04,4,0.04,5,0.047,19,0.961,20,0.146,21,0.329,24,0.218,26,0.536,27,0.005,28,0.526,29,0.536,34,0.107,40,0.047,127,0.004,128,0.004,129,0.004,146,1.536,148,3.191,2474,6.472,2579,8.078,2619,7.105,2621,6.472,2623,6.999,2683,9.114,2684,6.999,2685,7.798,2686,7.798,2687,7.798]],["title/components/DetailsComponent.html",[234,0.984,345,1.702]],["body/components/DetailsComponent.html",[0,0.25,3,0.023,4,0.033,5,0.039,14,0.614,15,0.169,16,0.374,17,0.643,20,0.174,21,0.312,24,0.274,26,0.438,27,0.005,28,0.574,29,0.438,34,0.095,40,0.027,44,1.207,49,1.418,73,1.191,85,0.662,127,0.002,128,0.003,129,0.002,137,2.583,138,1.289,146,1.434,147,3.309,148,1.84,169,0.961,176,4.945,179,1.479,219,1.324,220,1.877,225,2.655,234,1.452,235,1.523,236,2.098,237,1.568,238,1.94,239,1.592,240,1.592,243,1.501,244,3.544,245,2.912,247,2.225,249,2.343,251,1.469,254,3.162,256,6.151,268,1.937,269,2.538,271,0.807,285,1.617,286,1.592,287,1.617,288,1.617,289,1.617,290,1.617,291,1.379,292,1.438,293,1.617,294,1.617,295,1.617,296,1.568,297,1.501,298,1.592,299,1.617,300,1.617,301,1.617,302,1.036,303,1.617,304,1.379,305,2.258,306,2.225,307,1.438,308,2.856,309,1.592,310,1.592,311,1.523,312,1.592,313,1.523,314,2.273,315,2.258,316,1.523,317,2.258,318,1.523,319,1.592,320,1.501,321,1.592,322,1.523,323,1.592,324,2.856,325,1.523,326,1.592,327,1.479,328,2.258,329,1.523,330,1.501,331,1.479,332,1.568,333,1.592,334,1.523,335,2.225,336,1.592,337,1.545,338,1.458,339,2.258,340,1.523,341,1.592,342,2.856,343,2.801,344,1.592,345,2.731,346,1.523,347,1.568,348,1.501,349,1.592,350,1.523,351,1.523,352,1.592,353,1.501,354,1.592,355,1.523,356,1.592,357,1.545,358,1.523,359,1.501,360,1.592,361,1.523,362,1.306,363,1.592,364,1.523,365,2.225,366,1.523,367,2.624,368,1.523,369,1.592,370,1.523,371,1.592,372,3.08,373,1.592,374,1.479,375,1.523,376,1.418,377,1.592,378,1.523,379,1.501,380,1.523,381,1.523,382,1.734,383,1.523,384,1.592,385,1.523,386,1.523,387,1.523,388,1.117,389,1.501,390,1.501,391,1.592,392,1.501,393,1.592,394,1.501,395,1.568,396,1.592,596,2.659,856,2.741,882,2.449,917,2.659,953,1.94,1000,3.505,1001,4.971,1002,3.505,1003,3.505,1004,3.732,1051,1.779,1567,2.741,1708,4.501,1709,5.777,1802,6.651,1811,4.015,1832,4.035,1839,5.724,1897,5.724,1968,3.887,2012,5.293,2013,7.09,2015,5.017,2016,4.035,2018,4.035,2019,4.035,2020,4.035,2021,3.732,2517,6.151,2585,5.724,2616,7.237,2656,4.035,2688,4.496,2689,6.151,2690,7.411,2691,6.377,2692,8.064,2693,6.377,2694,4.496,2695,4.496,2696,6.377,2697,4.496,2698,4.496,2699,6.377,2700,4.496,2701,4.496,2702,7.411,2703,6.377,2704,4.496,2705,4.496,2706,4.496,2707,4.496,2708,6.377,2709,4.496,2710,4.496,2711,4.496,2712,4.496,2713,5.724,2714,2.389,2715,6.377,2716,4.496,2717,4.496,2718,4.496,2719,4.496,2720,4.496,2721,6.377,2722,4.496,2723,4.496,2724,6.377]],["title/directives/DraggableDirective.html",[307,1.607,392,1.677]],["body/directives/DraggableDirective.html",[0,0.321,3,0.03,4,0.03,5,0.035,15,0.218,16,0.444,20,0.158,24,0.272,27,0.005,31,0.601,32,0.524,34,0.068,40,0.035,73,1.533,127,0.003,128,0.003,129,0.003,169,1.805,179,2.948,181,2.072,219,1.704,243,1.932,244,2.528,249,2.237,269,2.501,271,1.039,307,2.422,389,1.932,392,2.528,422,3.422,457,1.799,561,4.601,953,4.195,1169,4.479,1272,4.084,1403,5.347,1484,7.438,1708,5.347,1720,4.511,2039,4.803,2121,7.03,2640,5.194,2714,3.075,2725,7.687,2726,8.85,2727,5.787,2728,7.576,2729,8.446,2730,6.799,2731,8.446,2732,8.446,2733,8.446,2734,7.576,2735,7.576,2736,7.576,2737,8.725,2738,5.787,2739,5.787,2740,5.787,2741,7.01,2742,5.787,2743,9.541,2744,5.787,2745,10.203,2746,5.347,2747,5.787,2748,5.787,2749,5.787,2750,5.787,2751,5.787,2752,8.042,2753,5.787,2754,5.787,2755,9.541,2756,5.787,2757,5.787,2758,5.787,2759,5.787,2760,5.787,2761,5.787,2762,5.787,2763,5.787,2764,5.787,2765,5.787,2766,5.194,2767,6.799,2768,5.787,2769,5.787,2770,5.787,2771,5.787,2772,5.787]],["title/components/EmailSettingComponent.html",[234,0.984,346,1.702]],["body/components/EmailSettingComponent.html",[0,0.231,3,0.021,4,0.021,5,0.025,14,0.581,15,0.157,16,0.354,20,0.184,21,0.175,24,0.288,26,0.611,27,0.005,28,0.635,29,0.611,31,0.627,32,0.78,34,0.097,35,0.359,40,0.025,44,1.117,85,0.737,110,1.888,127,0.002,128,0.003,129,0.002,138,2.47,146,0.931,165,0.995,169,0.889,181,1.021,197,1.938,219,1.776,220,1.776,225,2.512,234,1.39,235,1.41,236,1.985,237,1.452,239,1.474,240,1.474,242,2.552,243,1.389,244,3.528,247,2.105,249,2.282,251,1.39,252,2.632,254,2.992,268,2.215,269,2.405,271,0.747,291,1.85,292,1.331,304,1.276,305,2.137,306,2.105,307,1.331,308,2.756,309,1.474,310,1.474,311,1.41,312,1.474,313,1.41,314,2.177,315,2.137,316,1.41,317,2.137,318,1.41,319,1.474,320,1.389,321,1.474,322,3.387,323,1.474,324,2.756,325,1.41,326,1.474,327,1.369,328,2.137,329,1.41,330,1.389,331,1.369,332,1.452,333,1.474,334,1.41,335,2.105,336,1.474,337,1.43,338,1.35,339,2.137,340,1.41,341,1.474,342,2.756,343,1.369,344,1.474,345,1.41,346,2.636,347,2.882,348,1.389,349,1.474,350,1.41,351,1.41,352,1.474,353,1.389,354,1.474,355,1.41,356,1.474,357,1.43,358,1.41,359,1.389,360,1.474,361,1.41,362,1.209,363,1.474,364,1.41,365,2.105,366,1.41,367,2.513,368,1.41,369,1.474,370,1.41,371,1.474,372,1.41,373,1.474,374,1.369,375,1.41,376,1.312,377,1.474,378,1.41,379,1.389,380,3.192,381,1.41,382,1.64,383,1.41,384,1.474,385,1.41,386,1.41,387,1.41,388,1.034,389,1.389,390,1.389,391,1.474,392,1.389,393,1.474,394,1.389,395,1.452,396,1.474,518,1.452,548,1.146,549,1.177,635,2.11,924,3.373,1275,3.568,1397,3.206,1613,3.244,1614,4.197,1615,5.493,1616,4.703,1617,4.258,1618,3.678,1619,6.805,1620,4.258,1621,6.081,1622,5.493,1623,4.197,1624,5.009,1625,5.493,1626,4.258,1627,4.258,1628,4.258,1632,3.735,1633,2.937,1635,2.937,1638,4.258,1639,4.901,1641,4.258,1645,4.258,1660,2.937,1968,3.678,2015,6.91,2514,6.858,2547,5.247,2773,7.784,2774,6.986,2775,7.978,2776,5.415,2777,6.034,2778,4.162,2779,4.162,2780,3.077,2781,3.077,2782,3.077,2783,4.162,2784,4.162,2785,4.162,2786,4.162,2787,3.077,2788,3.077,2789,3.077,2790,3.077,2791,3.077,2792,3.077,2793,3.077,2794,3.077,2795,3.077,2796,3.077,2797,3.077,2798,3.077,2799,3.077,2800,3.454,2801,3.077,2802,3.077,2803,4.162,2804,4.162,2805,4.162,2806,4.703,2807,5.008,2808,5.008]],["title/classes/EmptyLightCards.html",[0,0.279,449,2.251]],["body/classes/EmptyLightCards.html",[0,0.56,2,0.49,3,0.021,4,0.021,5,0.025,8,1.066,10,2.186,11,1.057,12,1.308,14,0.976,15,0.156,16,0.353,18,1.588,19,1.253,20,0.191,21,0.374,24,0.116,27,0.005,31,0.431,32,0.375,34,0.092,35,0.358,40,0.061,41,0.569,45,1.255,60,0.979,70,1.924,83,1.67,85,0.807,93,1.29,95,1.292,96,1.292,97,1.208,113,1.219,118,1.538,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.924,185,2.342,199,1.03,272,1.384,302,1.386,406,1.514,408,2.257,411,1.748,416,1.631,417,1.017,418,1.057,419,1.189,420,1.189,421,1.614,423,1.173,424,1.29,434,3.173,435,2.803,436,1.932,440,2.013,441,2.603,442,1.29,443,1.272,444,1.971,445,1.894,446,1.79,447,3.234,448,4.796,449,3.48,450,1.823,451,3.056,452,2.803,453,1.971,454,1.538,455,3.173,456,3.173,457,1.29,458,3.056,459,3.295,460,1.79,461,3.173,462,1.932,463,3.173,464,3.173,465,1.971,466,1.971,467,3.173,468,3.113,469,3.173,470,1.758,471,1.823,472,3.173,473,1.447,474,3.173,475,1.971,476,3.173,477,1.932,478,3.173,479,1.727,480,1.641,481,2.013,482,2.921,483,2.013,484,1.79,485,2.013,486,2.013,487,2.013,488,1.668,489,2.013,490,2.013,491,2.013,492,2.013,493,1.588,494,2.013,495,2.013,496,2.013,497,1.971,498,1.971,499,2.013,500,2.013,501,2.013,502,2.013,503,2.013,504,1.932,2809,4.147]],["title/classes/FailToUpdateTimeReference.html",[0,0.279,2810,3.276]],["body/classes/FailToUpdateTimeReference.html",[0,0.51,2,0.73,3,0.032,4,0.032,5,0.037,7,2.404,8,1.009,10,2.308,14,0.885,15,0.233,16,0.463,17,0.879,18,1.601,19,1.17,20,0.189,21,0.26,22,1.615,24,0.244,26,0.424,27,0.005,28,0.417,29,0.424,31,0.642,32,0.559,34,0.108,35,0.533,38,2.885,39,2.767,40,0.059,41,0.848,55,2.666,69,2.666,83,1.629,88,2.404,93,2.457,109,3.919,113,1.196,127,0.003,128,0.004,129,0.003,228,2.062,236,2.032,382,2.64,411,1.794,437,2.308,473,2.155,526,3.756,533,5.842,851,3.454,1397,3.283,1414,3.608,1467,4.183,1550,5.152,1918,5.577,2810,5.681,2811,4.36,2812,5.577,2813,6.161,2814,7.16,2815,5.842,2816,6.161,2817,7.903,2818,6.178,2819,6.161,2820,4.028,2821,4.36,2822,3.766,2823,4.36,2824,4.816,2825,5.431,2826,4.816,2827,5.577,2828,4.816,2829,6.442,2830,6.442,2831,4.816,2832,4.816,2833,6.161,2834,4.567,2835,4.183,2836,4.816,2837,4.816,2838,4.567,2839,4.816,2840,4.183,2841,4.567,2842,5.152,2843,4.816,2844,4.816,2845,4.567]],["title/components/FeedComponent.html",[234,0.984,348,1.677]],["body/components/FeedComponent.html",[0,0.269,3,0.025,4,0.034,5,0.041,14,0.647,15,0.183,16,0.394,17,0.488,20,0.169,21,0.204,24,0.253,26,0.333,27,0.005,28,0.562,29,0.333,34,0.115,35,0.418,40,0.029,44,1.3,73,1.283,110,1.984,127,0.002,128,0.003,129,0.002,138,1.926,146,1.037,219,1.426,220,1.978,234,1.511,235,1.641,236,2.211,237,1.69,238,2.09,239,1.715,240,1.715,242,2.774,243,1.617,244,3.557,245,3.068,247,2.344,249,1.283,251,1.548,252,3.09,268,1.528,269,1.875,271,0.87,285,1.742,286,1.715,287,1.742,288,1.742,289,1.742,290,1.742,291,1.486,292,1.549,293,1.742,294,1.742,295,1.742,296,2.691,297,1.617,298,1.715,299,1.742,300,1.742,301,1.742,302,1.116,303,1.742,304,1.486,305,2.379,306,2.344,307,1.549,308,2.951,309,1.715,310,1.715,311,1.641,312,1.715,313,1.641,314,2.366,315,2.379,316,1.641,317,2.379,318,1.641,319,1.715,320,1.617,321,1.715,322,1.641,323,1.715,324,2.951,325,1.641,326,1.715,327,1.594,328,2.379,329,1.641,330,1.617,331,1.594,332,1.69,333,1.715,334,1.641,335,2.344,336,1.715,337,1.665,338,1.571,339,2.379,340,1.641,341,1.715,342,2.951,343,1.594,344,1.715,345,1.641,346,1.641,347,1.69,348,2.781,349,1.715,350,1.641,351,1.641,352,1.715,353,1.617,354,1.715,355,1.641,356,1.715,357,1.665,358,1.641,359,1.617,360,1.715,361,1.641,362,1.407,363,1.715,364,1.641,365,2.344,366,1.641,367,2.732,368,1.641,369,1.715,370,1.641,371,1.715,372,1.641,373,1.715,374,1.594,375,1.641,376,1.527,377,1.715,378,1.641,379,1.617,380,1.641,381,1.641,382,1.827,383,1.641,384,1.715,385,1.641,386,1.641,387,1.641,388,1.203,389,1.617,390,1.617,391,1.715,392,1.617,393,1.715,394,1.617,395,1.69,396,1.715,441,1.465,442,1.506,443,1.486,457,1.506,460,3.329,484,3.329,493,2.572,518,1.69,540,2.411,547,1.352,548,1.334,549,1.37,556,2.302,559,2.513,562,1.334,728,3.01,897,2.129,900,1.715,917,3.973,1021,4.021,1023,3.419,1059,4.021,1061,4.348,1414,3.068,2013,6.496,2100,6.555,2124,4.021,2162,3.776,2480,3.776,2689,6.403,2846,4.844,2847,7.715,2848,6.72,2849,7.715,2850,6.72,2851,4.844,2852,4.844,2853,4.844,2854,4.844,2855,4.348,2856,3.28,2857,4.844,2858,4.844,2859,4.844,2860,4.844,2861,4.844,2862,6.924,2863,4.844,2864,6.031,2865,4.844,2866,4.844,2867,4.844,2868,4.844,2869,4.844,2870,4.844,2871,4.844,2872,6.72,2873,4.844]],["title/injectables/FeedFiltersEffects.html",[811,4.171,862,1.402]],["body/injectables/FeedFiltersEffects.html",[0,0.229,3,0.021,4,0.021,5,0.025,8,0.92,9,1.879,12,1.887,15,0.155,16,0.351,20,0.161,21,0.173,24,0.248,26,0.283,27,0.005,28,0.475,29,0.283,31,0.943,32,0.777,34,0.115,35,0.355,40,0.025,45,1.81,49,1.887,70,2.066,95,0.557,96,0.557,97,0.521,104,2.789,110,1.88,127,0.002,128,0.003,129,0.002,146,0.923,150,1.434,165,2.053,169,2.094,170,3.432,179,1.969,181,1.899,202,4.065,228,1.997,230,3.346,234,0.806,249,2.522,271,0.739,296,3.359,382,2.333,388,2.043,450,2.63,518,1.435,531,3.208,540,2.44,547,1.148,548,1.133,549,1.164,556,1.956,559,2.135,562,1.133,599,2.904,750,3.18,811,4.967,841,4.052,848,2.433,849,2.508,856,4.719,857,2.786,862,1.67,863,1.809,882,3.842,894,2.242,895,2.135,899,3.042,900,1.457,953,3.043,1002,3.208,1051,3.063,1169,5.366,1258,3.637,1484,4.665,1488,4.931,1522,4.424,1652,3.416,1967,5.371,1994,3.208,2058,5.371,2059,5.371,2060,4.665,2077,4.967,2082,2.904,2087,2.364,2088,3.042,2612,6.036,2714,2.187,2746,6.796,2812,4.223,2823,2.904,2825,4.17,2834,5.213,2841,5.724,2856,2.786,2874,9.076,2875,4.115,2876,7.052,2877,5.853,2878,7.052,2879,7.052,2880,7.052,2881,7.743,2882,5.724,2883,5.984,2884,4.115,2885,4.115,2886,9.4,2887,5.984,2888,5.984,2889,5.984,2890,5.984,2891,5.984,2892,5.984,2893,7.743,2894,5.984,2895,7.743,2896,5.984,2897,5.984,2898,4.967,2899,5.984,2900,5.984,2901,4.115,2902,5.984,2903,4.967,2904,5.984,2905,4.115,2906,5.984,2907,5.984,2908,7.052,2909,5.984,2910,9.076,2911,5.984,2912,5.984,2913,7.743,2914,8.583,2915,5.984,2916,5.984,2917,5.984,2918,5.984,2919,5.984,2920,5.984,2921,7.743,2922,5.984,2923,8.583,2924,8.583,2925,5.984,2926,5.984,2927,5.984,2928,4.115,2929,2.364,2930,2.508,2931,3.693,2932,3.208,2933,4.115,2934,4.115,2935,2.786,2936,4.115,2937,4.115,2938,4.115,2939,4.115,2940,4.115]],["title/modules/FeedModule.html",[604,2.209,2941,3.917]],["body/modules/FeedModule.html",[0,0.281,3,0.026,4,0.035,5,0.042,17,0.511,20,0.095,27,0.005,34,0.124,40,0.031,57,2.147,73,1.342,127,0.002,128,0.003,129,0.002,271,0.91,273,2.76,274,3.088,275,3.596,285,1.821,286,1.794,287,1.821,288,1.821,289,1.821,290,1.821,291,1.554,292,1.62,293,1.821,294,1.821,295,1.821,296,1.767,297,1.691,298,1.794,299,1.821,300,1.821,301,1.821,302,1.167,303,1.821,304,1.554,329,3.11,337,3.156,338,2.248,348,3.336,350,3.11,357,3.156,370,3.11,375,3.11,378,3.11,381,3.11,383,3.11,386,1.716,387,3.11,392,3.065,394,3.065,604,2.227,606,2.569,607,2.911,608,4.815,609,4.098,610,4.197,618,6.217,619,4.098,620,3.088,622,3.775,624,3.775,629,4.363,632,2.995,633,5.402,634,5.402,635,2.569,637,3.949,639,3.43,644,5.123,645,3.436,646,2.512,647,6.22,648,4.205,649,4.205,650,3.43,651,4.205,652,5.402,653,4.205,656,4.205,657,4.205,658,4.205,677,3.745,678,3.949,687,2.76,920,4.67,939,3.088,1068,6.481,1073,4.547,1077,7.089,1080,4.547,2011,4.547,2209,8.241,2214,4.547,2457,4.205,2726,4.547,2825,2.995,2941,8.299,2942,4.547,2943,4.547,2944,4.547,2945,4.547,2946,7.158,2947,6.788,2948,5.066,2949,4.547,2950,5.066,2951,4.547,2952,5.066,2953,9.182,2954,4.547,2955,5.066,2956,5.066,2957,4.547,2958,4.547,2959,4.547,2960,4.547,2961,5.066,2962,5.066,2963,5.066,2964,6.93,2965,6.93,2966,4.547,2967,4.547,2968,5.066,2969,5.066,2970,6.93,2971,4.547,2972,4.547,2973,4.547,2974,5.066,2975,4.547,2976,5.066,2977,5.066,2978,5.066,2979,5.066,2980,4.547,2981,4.547,2982,6.22,2983,4.547,2984,4.547,2985,5.066,2986,5.066,2987,5.066,2988,5.066,2989,5.066]],["title/modules/FeedRoutingModule.html",[604,2.209,2947,3.715]],["body/modules/FeedRoutingModule.html",[0,0.378,3,0.035,4,0.043,5,0.051,17,0.687,27,0.005,34,0.117,40,0.041,73,1.805,127,0.003,128,0.004,129,0.003,165,1.63,234,1.864,271,1.224,285,2.45,286,2.413,287,2.45,288,2.45,289,2.45,290,2.45,291,2.09,292,2.179,293,2.45,294,2.45,295,2.45,296,2.377,297,2.275,298,2.413,299,2.45,300,2.45,301,2.45,302,1.57,303,2.45,327,2.999,343,2.765,348,2.805,493,3.218,606,3.455,610,3.621,622,3.713,624,4.579,680,5.038,683,6.214,684,5.942,685,3.916,690,7.359,694,5.313,695,6.552,705,5.656,1082,6.116,1083,6.116,1084,5.313,1085,5.656,1086,6.116,1087,8.18,1088,6.116,1089,6.116,1090,6.116,1091,6.116,1092,5.313,2947,6.214,2949,6.116,2990,6.815]],["title/classes/Filter.html",[0,0.279,388,1.248]],["body/classes/Filter.html",[0,0.277,2,0.59,3,0.025,4,0.025,5,0.03,7,1.942,11,2.151,15,0.188,16,0.402,17,0.922,19,0.615,20,0.171,21,0.356,24,0.262,26,0.58,27,0.005,28,0.569,29,0.58,34,0.059,40,0.03,45,3.037,57,2.907,93,2.133,95,0.676,96,0.676,97,1.24,110,1.503,127,0.002,128,0.003,129,0.002,138,2.535,146,1.596,169,1.953,179,2.579,181,1.224,191,3.941,206,3.263,224,3.65,234,1.344,251,1.58,268,2.079,269,1.393,298,2.429,388,2.619,441,2.927,442,1.552,443,1.531,561,4.82,687,3.737,742,4.056,841,3.941,856,5.144,887,4.598,953,3.382,1051,2.714,1236,4.842,1419,4.842,1420,4.056,1527,6.579,1994,5.348,2249,6.157,2405,7.574,2436,5.694,2741,5.694,2898,5.694,2991,9.538,2992,4.992,2993,6.86,2994,6.157,2995,6.86,2996,6.86,2997,9.538,2998,6.157,2999,6.86,3000,6.86,3001,6.86,3002,6.86,3003,6.86,3004,6.86,3005,6.86,3006,6.157,3007,8.44,3008,7.838,3009,4.992,3010,4.992,3011,4.992,3012,4.992,3013,4.992,3014,6.86,3015,4.992,3016,6.86,3017,8.44,3018,4.992,3019,8.44,3020,6.86,3021,6.86,3022,6.86,3023,4.992,3024,6.86,3025,6.86,3026,4.992,3027,4.992,3028,4.992,3029,4.992,3030,4.992,3031,4.992,3032,4.992,3033,4.992,3034,4.992,3035,4.992,3036,4.992,3037,4.992,3038,6.86,3039,4.992]],["title/injectables/FilterService.html",[862,1.402,2882,3.715]],["body/injectables/FilterService.html",[0,0.325,3,0.03,4,0.03,5,0.035,8,0.883,13,3.476,15,0.221,16,0.448,17,0.857,21,0.358,24,0.273,27,0.005,31,0.609,32,0.53,34,0.106,40,0.046,41,0.804,45,2.57,127,0.004,128,0.004,129,0.003,146,1.178,150,1.947,165,2.29,169,2.083,179,1.927,181,2.348,189,2.483,249,2.734,251,1.759,268,2.123,271,1.052,376,1.847,379,1.955,388,2.236,441,1.772,442,1.822,443,1.797,508,4.567,846,3.819,847,3.689,848,3.464,857,5.752,862,2.131,863,2.575,887,4.16,953,4.029,1051,2.317,1114,3.04,2882,5.645,3040,5.258,3041,8.496,3042,9.002,3043,9.002,3044,9.002,3045,9.002,3046,7.636,3047,5.858,3048,5.858,3049,5.858,3050,5.858,3051,5.858,3052,5.258,3053,7.636,3054,5.858,3055,6.281,3056,4.862,3057,4.862,3058,6.281,3059,4.862,3060,4.862,3061,5.858,3062,9.002,3063,5.858,3064,5.858,3065,5.858,3066,5.858,3067,5.858,3068,5.858,3069,5.858,3070,5.858,3071,5.858,3072,5.858,3073,5.858,3074,5.858,3075,5.858,3076,5.858,3077,5.858,3078,5.258,3079,5.258,3080,5.258,3081,5.258,3082,5.258]],["title/components/FiltersComponent.html",[234,0.984,350,1.702]],["body/components/FiltersComponent.html",[0,0.311,3,0.029,4,0.029,5,0.034,14,0.714,15,0.211,16,0.435,20,0.165,21,0.236,24,0.232,26,0.385,27,0.005,28,0.596,29,0.385,34,0.108,35,0.483,40,0.034,44,1.502,110,2.071,127,0.003,128,0.003,129,0.003,146,1.143,219,1.648,220,2.181,234,1.627,235,1.895,236,2.438,237,1.952,239,1.982,240,1.982,242,2.987,243,1.868,244,3.581,247,2.585,251,1.707,252,3.28,268,1.273,269,1.562,271,1.005,304,1.716,305,2.624,306,2.585,307,1.79,308,3.132,309,1.982,310,1.982,311,1.895,312,1.982,313,1.895,314,2.548,315,2.624,316,1.895,317,2.624,318,1.895,319,1.982,320,1.868,321,1.982,322,1.895,323,1.982,324,3.132,325,1.895,326,1.982,327,1.841,328,2.624,329,1.895,330,1.868,331,1.841,332,1.952,333,1.982,334,1.895,335,2.585,336,1.982,337,1.923,338,1.815,339,2.624,340,1.895,341,1.982,342,3.132,343,1.841,344,1.982,345,1.895,346,1.895,347,1.952,348,1.868,349,1.982,350,2.995,351,1.895,352,1.982,353,1.868,354,1.982,355,1.895,356,1.982,357,1.923,358,1.895,359,1.868,360,1.982,361,1.895,362,1.625,363,1.982,364,1.895,365,2.585,366,1.895,367,2.942,368,1.895,369,1.982,370,1.895,371,1.982,372,1.895,373,1.982,374,1.841,375,1.895,376,1.765,377,1.982,378,1.895,379,1.868,380,1.895,381,1.895,382,2.015,383,1.895,384,1.982,385,1.895,386,1.895,387,1.895,388,1.39,389,1.868,390,1.868,391,1.982,392,1.868,393,1.982,394,1.868,395,1.952,396,1.982,518,1.952,540,2.288,547,1.562,548,1.541,549,1.583,556,2.66,562,1.541,887,4.037,914,6.651,1019,4.137,2010,6.241,3083,5.596,3084,6.895,3085,7.41,3086,5.596,3087,4.645,3088,4.645]],["title/classes/GuidService.html",[0,0.279,1109,3.164]],["body/classes/GuidService.html",[0,0.406,2,0.865,3,0.037,4,0.037,5,0.044,15,0.276,16,0.515,19,1.159,20,0.137,21,0.396,24,0.273,27,0.005,34,0.104,36,4.653,37,3.278,40,0.044,85,0.912,127,0.003,128,0.004,129,0.003,169,1.876,249,2.491,251,2.021,268,1.996,271,1.314,508,5.705,1109,5.526,2250,7.878,3052,6.568,3089,7.318,3090,9.75,3091,9.75,3092,8.778,3093,7.318,3094,7.318,3095,8.778,3096,7.318,3097,7.318]],["title/classes/HandleUnexpectedError.html",[0,0.279,416,1.157]],["body/classes/HandleUnexpectedError.html",[0,0.531,2,0.689,3,0.03,4,0.03,5,0.035,8,1.026,10,2.016,14,0.938,15,0.22,16,0.446,17,0.767,18,1.684,19,1.217,20,0.193,21,0.246,22,1.524,24,0.237,26,0.401,27,0.005,28,0.393,29,0.401,31,0.606,32,0.528,34,0.1,35,0.503,40,0.06,41,0.8,83,1.695,85,0.606,95,1.319,96,1.319,97,1.233,113,1.163,127,0.003,128,0.003,129,0.003,146,1.175,150,1.548,209,2.385,228,1.946,302,1.343,314,2.932,388,1.448,413,3.949,416,2.069,417,1.43,418,1.486,419,1.671,420,1.671,437,2.245,441,1.763,442,1.813,443,1.788,457,1.813,459,2.232,488,2.345,534,3.349,714,4.662,872,5.012,887,3.176,901,3.801,902,5.166,903,5.012,907,3.67,908,5.166,1032,3.801,1035,4.114,1036,5.336,1037,3.801,1038,5.166,1039,4.114,1040,4.114,1041,5.372,1042,3.947,1043,4.114,1044,4.114,1045,3.947,3098,7.612,3099,5.83]],["title/classes/HandleUnexpectedError-1.html",[0,0.232,416,0.963,728,1.872]],["body/classes/HandleUnexpectedError-1.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.089,408,2.699,409,4.509,410,4.509,411,2.069,412,4.285,413,4.184,414,4.509,415,4.509,416,1.989,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,3.321,427,3.321,428,3.321,429,3.321,430,3.321,431,3.321,432,4.484,433,3.215,437,2.136,3100,7.122,3101,5.274]],["title/classes/HandleUnexpectedError-2.html",[0,0.232,416,0.963,712,2.632]],["body/classes/HandleUnexpectedError-2.html",[0,0.515,2,0.751,3,0.032,4,0.032,5,0.038,8,1.016,14,0.922,15,0.239,16,0.472,17,0.811,18,1.649,19,1.205,20,0.193,21,0.268,22,1.661,24,0.247,26,0.436,27,0.005,28,0.428,29,0.436,31,0.66,32,0.575,34,0.075,35,0.548,40,0.059,41,0.872,60,1.5,83,1.565,95,1.257,96,1.257,97,1.175,113,1.314,127,0.003,128,0.004,129,0.003,199,1.578,408,2.564,411,1.845,416,2.137,417,1.558,418,1.619,419,1.82,420,1.82,423,1.796,424,1.975,437,2.338,554,5.558,750,5.341,1167,3.649,1531,5.558,1571,4.3,2253,5.755,3102,4.482,3103,8.043,3104,6.351,3105,6.27,3106,4.951,3107,4.951,3108,4.951,3109,4.695]],["title/classes/HandleUnexpectedError-3.html",[0,0.232,416,0.963,2485,2.95]],["body/classes/HandleUnexpectedError-3.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.771,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,2.874,492,1.968,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,3110,5.921,3111,4.056]],["title/classes/HandleUnexpectedError-4.html",[0,0.232,416,0.963,3112,3.47]],["body/classes/HandleUnexpectedError-4.html",[0,0.525,2,0.61,3,0.026,4,0.026,5,0.031,8,1.041,14,0.926,15,0.194,16,0.411,17,0.708,18,1.691,19,1.201,20,0.191,21,0.296,22,1.349,24,0.223,26,0.588,27,0.005,28,0.348,29,0.355,31,0.536,32,0.467,34,0.083,35,0.445,40,0.059,41,0.708,60,1.657,69,2.226,83,1.637,85,0.889,95,1.279,96,1.279,97,1.196,113,1.319,127,0.002,128,0.003,129,0.002,153,1.65,154,2.311,171,2.412,172,2.562,173,3.028,199,1.282,272,1.722,362,3.023,408,2.316,411,1.499,416,1.971,417,1.266,418,1.315,423,1.459,424,1.604,437,2.112,457,2.479,473,2.781,540,1.421,803,3.145,1225,3.823,1231,2.964,1390,2.885,1526,3.364,1562,3.248,1567,3.145,1579,3.364,2309,2.811,2377,3.364,2400,5.198,2409,5.198,2410,3.364,2411,5.142,2413,4.581,2414,3.145,2415,3.364,2416,4.86,3113,3.248,3114,7.017,3115,5.159,3116,4.751,3117,3.051,3118,4.581,3119,4.458,3120,4.715,3121,4.715,3122,4.715,3123,3.493,3124,3.493,3125,3.493,3126,3.493,3127,3.493,3128,3.364,3129,5.399,3130,5.399,3131,4.751,3132,3.493,3133,3.493,3134,3.493,3135,3.493,3136,3.364]],["title/classes/HandleUnexpectedError-5.html",[0,0.232,416,0.963,2275,3.752]],["body/classes/HandleUnexpectedError-5.html",[0,0.538,2,0.674,3,0.029,4,0.029,5,0.034,8,1.033,14,0.947,15,0.215,16,0.44,17,0.757,18,1.677,19,1.226,20,0.193,21,0.24,22,1.491,24,0.235,26,0.392,27,0.005,28,0.385,29,0.392,31,0.593,32,0.516,34,0.067,35,0.492,40,0.06,41,0.783,49,1.798,60,1.772,83,1.685,95,1.287,96,1.287,97,1.204,113,1.33,127,0.003,128,0.003,129,0.003,199,1.417,408,2.436,411,2.179,416,2.052,417,1.399,418,1.454,419,1.635,420,1.635,423,1.613,424,1.774,437,2.221,701,4.556,1651,4.818,2929,4.818,2930,3.477,3137,3.591,3138,7.504,3139,5.704,3140,5.081,3141,4.959,3142,4.959,3143,5.467,3144,4.959,3145,4.959,3146,3.862,3147,3.862,3148,3.862,3149,3.862,3150,3.719,3151,3.862,3152,3.862,3153,3.719]],["title/classes/HandleUnexpectedError-6.html",[0,0.232,416,0.963,2864,3.752]],["body/classes/HandleUnexpectedError-6.html",[0,0.529,2,0.682,3,0.029,4,0.029,5,0.035,8,1.024,14,0.936,15,0.218,16,0.444,17,0.763,18,1.681,19,1.215,20,0.193,21,0.243,22,1.51,24,0.236,26,0.397,27,0.005,28,0.389,29,0.397,31,0.6,32,0.522,34,0.089,35,0.498,40,0.06,41,0.792,49,3.315,60,1.363,83,1.691,95,1.292,96,1.292,97,1.208,113,1.334,127,0.003,128,0.003,129,0.003,416,2.062,417,1.416,418,1.471,419,1.654,420,1.654,437,2.234,526,4.417,1115,3.228,1148,4.716,1228,4.12,2087,3.317,2300,5.142,2301,3.764,2304,4.074,2305,5.142,2306,5.142,2307,5.142,2308,5.142,2309,3.145,2310,3.764,2311,4.074,2312,4.074,2313,4.074,2314,4.074,2315,5.338,2316,3.764,3154,7.563,3155,5.773]],["title/injectables/HandlebarsService.html",[862,1.402,2202,3.715]],["body/injectables/HandlebarsService.html",[0,0.198,3,0.018,4,0.018,5,0.022,15,0.318,16,0.315,17,0.821,20,0.152,21,0.15,24,0.279,26,0.496,27,0.005,28,0.57,29,0.496,31,0.558,32,0.737,34,0.114,35,0.307,36,2.406,37,1.594,40,0.022,85,1,110,1.851,127,0.004,128,0.002,129,0.002,143,1.657,146,0.549,148,1.456,150,1.574,152,1.691,154,2.406,165,1.851,169,2.186,181,1.769,206,3.89,228,1.793,237,1.241,249,2.798,251,1.237,268,2.235,269,2.708,271,0.639,382,1.461,540,1.783,547,0.993,548,0.98,549,1.006,562,0.98,645,1.764,646,1.764,728,2.406,862,1.499,863,1.564,900,1.26,920,4.264,939,2.169,951,3.792,953,1.535,997,1.989,1051,3.22,1383,1.938,1384,4.587,1386,4.448,1414,2.453,1459,3.44,1460,4.396,1783,2.104,1798,2.953,1899,4.032,2202,3.972,2212,3.193,2485,3.792,2589,5.046,2590,2.953,2619,5.046,2620,3.193,2621,2.953,3112,2.953,3156,3.558,3157,5.809,3158,5.373,3159,4.822,3160,5.373,3161,5.373,3162,7.211,3163,7.211,3164,7.211,3165,7.211,3166,7.211,3167,6.473,3168,7.211,3169,7.211,3170,7.211,3171,7.211,3172,7.211,3173,7.211,3174,7.211,3175,7.211,3176,6.473,3177,3.558,3178,5.373,3179,3.193,3180,3.558,3181,4.568,3182,5.373,3183,6.473,3184,3.558,3185,3.558,3186,3.558,3187,3.558,3188,3.558,3189,3.558,3190,3.558,3191,3.558,3192,3.558,3193,3.558,3194,3.558,3195,3.558,3196,3.558,3197,3.558,3198,3.558,3199,3.558,3200,3.558,3201,3.558,3202,3.558,3203,3.558,3204,2.774,3205,2.953,3206,3.558,3207,3.558,3208,3.558,3209,3.558,3210,3.558,3211,3.558,3212,3.558,3213,3.558,3214,3.558,3215,3.558,3216,3.558,3217,3.558,3218,3.558,3219,3.558,3220,3.558,3221,3.558,3222,3.558,3223,3.193,3224,3.193,3225,3.193,3226,5.809,3227,3.193,3228,3.558,3229,3.558,3230,3.558,3231,3.558,3232,2.953,3233,3.558,3234,3.558,3235,3.558,3236,3.558,3237,3.558,3238,3.558,3239,3.558,3240,3.558,3241,3.558,3242,2.774,3243,3.558,3244,3.558,3245,8.905,3246,6.473,3247,8.905,3248,8.905,3249,3.558,3250,3.558,3251,3.558,3252,7.741,3253,5.373,3254,3.558,3255,3.558,3256,3.558,3257,3.558,3258,8.14,3259,3.558,3260,7.741,3261,3.558,3262,3.558,3263,3.558,3264,3.558,3265,5.373,3266,3.558,3267,3.558,3268,3.558,3269,3.558,3270,3.558,3271,3.558,3272,2.953,3273,3.558,3274,3.558,3275,3.558,3276,3.558,3277,3.558,3278,3.558,3279,3.558,3280,3.558,3281,3.558,3282,3.558,3283,3.558,3284,3.558,3285,3.558,3286,3.558,3287,3.558,3288,3.558,3289,3.558,3290,5.373,3291,6.473,3292,6.473,3293,3.558]],["title/classes/I18n.html",[0,0.279,136,1.893]],["body/classes/I18n.html",[0,0.429,2,0.914,3,0.039,4,0.039,5,0.047,19,1.118,20,0.145,21,0.382,24,0.216,26,0.682,27,0.005,28,0.521,29,0.531,34,0.091,40,0.047,85,1,95,1.048,96,1.048,97,0.98,127,0.004,128,0.004,129,0.004,136,3.417,143,4.224,145,4.013,150,2.019,152,3.676,3294,7.735,3295,7.735,3296,7.735]],["title/injectables/I18nService.html",[519,3.715,862,1.402]],["body/injectables/I18nService.html",[0,0.317,3,0.029,4,0.029,5,0.034,15,0.215,16,0.44,17,0.933,20,0.178,21,0.24,24,0.278,26,0.576,27,0.005,28,0.565,29,0.576,31,0.78,32,0.679,34,0.117,35,0.492,40,0.034,85,1.043,110,2.122,113,0.783,127,0.003,128,0.003,129,0.003,165,1.795,169,1.603,181,1.841,224,4.426,249,2.736,251,1.728,268,1.707,269,2.094,271,1.024,408,1.657,519,5.548,547,1.592,548,1.571,549,1.613,562,1.571,628,2.959,645,2.828,646,2.828,771,2.959,772,3.031,862,2.094,863,2.507,931,4.446,1105,5.175,1414,3.426,1459,4.456,1460,5.112,1811,4.725,2099,3.862,2714,3.987,2822,6.119,3157,6.735,3159,6.735,3179,5.119,3181,6.837,3204,4.446,3205,4.734,3223,5.119,3224,5.119,3225,5.119,3226,7.526,3227,5.119,3297,5.704,3298,7.504,3299,8.386,3300,8.386,3301,7.504,3302,7.504,3303,5.704,3304,5.704,3305,5.704,3306,5.704,3307,5.704,3308,5.704,3309,5.704,3310,5.704,3311,5.704,3312,5.704,3313,5.704,3314,5.704,3315,5.704,3316,5.704,3317,5.704,3318,5.704,3319,5.704,3320,5.704,3321,5.704,3322,5.704,3323,5.704,3324,5.119,3325,5.119,3326,5.704,3327,5.704,3328,5.704,3329,5.704,3330,5.704,3331,5.704,3332,7.504,3333,5.704,3334,5.704,3335,5.704,3336,5.704,3337,5.704,3338,5.704,3339,5.704,3340,5.704,3341,5.704]],["title/components/IconComponent.html",[234,0.984,351,1.702]],["body/components/IconComponent.html",[0,0.265,3,0.024,4,0.034,5,0.04,14,0.64,15,0.18,16,0.39,17,0.481,20,0.179,21,0.201,24,0.271,26,0.328,27,0.005,28,0.558,29,0.328,31,0.495,32,0.431,34,0.09,40,0.029,44,1.279,49,1.503,73,1.263,85,0.936,127,0.002,128,0.003,129,0.002,146,1.025,219,1.403,220,1.956,225,3.445,234,1.498,235,1.614,236,2.186,237,1.663,238,2.057,239,1.688,240,1.688,242,2.75,243,1.591,244,3.554,245,3.034,247,1.663,249,2.387,251,1.53,252,3.068,254,3.295,268,1.74,269,2.135,271,0.856,285,1.714,286,1.688,287,1.714,288,1.714,289,1.714,290,1.714,291,1.462,292,1.524,293,1.714,294,1.714,295,1.714,296,1.663,297,1.591,298,1.688,299,1.714,300,1.714,301,1.714,302,1.098,303,1.714,304,1.462,305,2.353,306,2.318,307,1.524,308,2.93,309,1.688,310,1.688,311,1.614,312,1.688,313,1.614,314,2.346,315,2.353,316,1.614,317,2.353,318,1.614,319,1.688,320,1.591,321,1.688,322,1.614,323,1.688,324,2.93,325,1.614,326,1.688,327,1.568,328,2.353,329,1.614,330,1.591,331,1.568,332,1.663,333,1.688,334,1.614,335,2.318,336,1.688,337,1.638,338,1.546,339,2.353,340,1.614,341,1.688,342,2.93,343,1.568,344,1.688,345,1.614,346,1.614,347,1.663,348,1.591,349,1.688,350,1.614,351,2.802,352,1.688,353,1.591,354,1.688,355,1.614,356,1.688,357,1.638,358,1.614,359,1.591,360,1.688,361,1.614,362,1.384,363,1.688,364,1.614,365,2.318,366,1.614,367,2.709,368,1.614,369,1.688,370,1.614,371,1.688,372,1.614,373,1.688,374,1.568,375,1.614,376,1.503,377,1.688,378,1.614,379,1.591,380,1.614,381,1.614,382,1.806,383,1.614,384,1.688,385,1.614,386,1.614,387,1.614,388,1.184,389,1.591,390,1.591,391,1.688,392,1.591,393,1.688,394,1.591,395,1.663,396,1.688,459,2.928,632,2.818,918,4.689,962,6.868,1383,2.597,1384,3.712,1386,4.395,1550,3.108,1887,3.956,2360,3.524,2714,2.533,3342,4.767,3343,7.426,3344,7.649,3345,4.767,3346,6.644,3347,6.644,3348,8.274,3349,8.274,3350,6.644,3351,6.644,3352,6.644,3353,8.701,3354,6.644,3355,4.767,3356,4.767,3357,4.767,3358,4.767,3359,4.767,3360,4.767,3361,4.767,3362,4.767,3363,4.767,3364,4.767,3365,4.767,3366,4.767,3367,4.767,3368,4.767,3369,4.767,3370,4.767,3371,4.767,3372,4.767,3373,4.767,3374,4.767,3375,4.767,3376,4.767,3377,4.767,3378,4.767,3379,4.767,3380,6.644,3381,4.767,3382,7.649,3383,6.865,3384,4.767,3385,4.767,3386,4.767,3387,4.278,3388,5.963]],["title/components/IframeDisplayComponent.html",[234,0.984,353,1.677]],["body/components/IframeDisplayComponent.html",[0,0.288,3,0.026,4,0.036,5,0.043,14,0.678,15,0.196,16,0.413,17,0.523,20,0.16,21,0.219,24,0.24,26,0.356,27,0.005,28,0.578,29,0.356,34,0.106,35,0.447,40,0.031,44,1.392,73,1.374,110,2.026,127,0.002,128,0.003,129,0.002,146,1.087,169,1.109,219,1.527,220,2.073,234,1.566,235,1.757,236,2.317,237,1.81,238,2.238,239,1.837,240,1.837,242,2.875,243,1.731,244,3.569,245,3.216,247,2.457,249,2.272,251,1.622,252,3.18,268,1.18,269,1.448,271,0.931,285,1.865,286,1.837,287,1.865,288,1.865,289,1.865,290,1.865,291,1.591,292,1.659,293,1.865,294,1.865,295,1.865,296,1.81,297,1.731,298,1.837,299,1.865,300,1.865,301,1.865,302,1.195,303,1.865,304,1.591,305,2.494,306,2.457,307,1.659,308,3.037,309,1.837,310,1.837,311,1.757,312,1.837,313,1.757,314,2.452,315,2.494,316,1.757,317,2.494,318,1.757,319,1.837,320,1.731,321,1.837,322,1.757,323,1.837,324,3.037,325,1.757,326,1.837,327,1.707,328,2.494,329,1.757,330,1.731,331,1.707,332,1.81,333,1.837,334,1.757,335,2.457,336,1.837,337,1.783,338,1.682,339,2.494,340,1.757,341,1.837,342,3.037,343,1.707,344,1.837,345,1.757,346,1.757,347,1.81,348,1.731,349,1.837,350,1.757,351,1.757,352,1.837,353,2.863,354,1.837,355,1.757,356,1.837,357,1.783,358,1.757,359,1.731,360,1.837,361,1.757,362,1.507,363,1.837,364,1.757,365,2.457,366,1.757,367,2.831,368,1.757,369,1.837,370,1.757,371,1.837,372,1.757,373,1.837,374,1.707,375,1.757,376,1.636,377,1.837,378,1.757,379,1.731,380,1.757,381,1.757,382,1.915,383,1.757,384,1.837,385,1.757,386,1.757,387,1.757,388,1.289,389,1.731,390,1.731,391,1.837,392,1.731,393,1.837,394,1.731,395,1.81,396,1.837,470,2.198,518,1.81,545,3.661,546,3.512,548,1.429,549,1.467,562,1.429,596,3.067,597,5.49,988,5.49,1796,3.382,1811,4.434,1880,3.835,2336,7.118,2343,7.697,2591,7.176,3388,4.656,3389,5.188,3390,7.043,3391,7.996,3392,7.043,3393,7.996,3394,7.996,3395,7.043,3396,5.188,3397,5.188,3398,5.188,3399,5.188,3400,4.656,3401,5.188,3402,5.188,3403,7.043,3404,5.188]],["title/classes/ImplicitAuthenticationHandler.html",[0,0.279,1194,3.547]],["body/classes/ImplicitAuthenticationHandler.html",[0,0.45,2,0.265,3,0.011,4,0.011,5,0.014,7,0.873,8,0.233,9,1.7,12,2.843,13,1.524,14,0.46,15,0.085,17,0.962,18,0.628,20,0.132,21,0.234,23,3.639,24,0.173,26,0.382,27,0.005,28,0.416,29,0.328,31,0.233,34,0.105,35,0.193,36,2.139,37,1.005,38,1.36,40,0.046,41,0.308,43,1.024,47,1.668,49,1.174,55,0.968,63,3.605,64,2.539,66,1.024,68,1.045,72,3.35,73,2.028,76,2.27,77,1.7,80,1.7,81,4.094,82,1.005,84,2.816,85,1.019,86,3.854,87,3.566,88,2.163,101,1.089,103,2.698,104,3.204,110,1.907,111,1.089,113,0.655,122,1.734,127,0.001,128,0.002,129,0.001,138,2.194,150,0.456,165,2.257,169,2.13,170,2.03,171,1.28,172,1.743,179,1.571,181,2.189,189,0.951,190,1.222,204,2.537,206,1.55,209,1.524,228,2.463,249,2.431,251,0.858,268,1.264,269,2.562,271,0.403,291,1.464,297,2.059,302,1.28,331,0.738,382,1.677,388,0.557,406,0.819,417,0.913,423,0.634,454,0.832,457,0.697,473,0.782,514,4.353,521,4.125,526,1.066,540,2.032,543,1.583,547,0.626,548,0.618,549,0.634,556,1.066,559,1.164,561,4.598,562,1.315,573,2.628,581,2.18,595,2.27,628,1.164,650,2.521,668,2.345,669,2.428,670,3.625,701,2.099,706,4.021,728,1.668,730,3.233,732,3.233,742,3.287,747,2.4,750,1.979,771,1.164,772,1.192,862,1.039,897,1.637,898,1.066,900,0.794,953,2.06,997,1.254,1026,2.628,1051,0.887,1093,3.924,1094,1.583,1095,3.007,1096,4.918,1097,2.753,1098,1.658,1105,3.108,1106,1.583,1107,1.519,1108,1.462,1109,3.501,1110,1.519,1111,1.658,1112,5.844,1113,1.583,1114,1.164,1115,1.254,1116,4.11,1117,2.753,1118,2.753,1119,2.753,1120,3.924,1121,2.753,1122,1.658,1123,1.658,1124,1.658,1125,1.658,1126,1.326,1127,1.583,1128,2.753,1129,1.583,1130,1.658,1131,1.658,1132,3.53,1133,1.658,1134,1.658,1135,1.658,1136,1.658,1137,1.658,1138,1.658,1139,1.658,1140,1.658,1141,1.658,1142,1.658,1143,5.572,1144,1.658,1145,5.404,1146,1.658,1147,1.583,1148,1.254,1149,1.658,1150,1.658,1151,1.658,1152,1.658,1153,2.753,1154,1.658,1155,1.658,1156,4.918,1157,1.583,1158,1.658,1159,1.658,1160,1.658,1161,1.658,1162,1.658,1163,1.658,1164,1.658,1165,1.658,1166,3.113,1167,1.289,1168,1.658,1169,1.326,1170,1.658,1171,5.211,1172,5.455,1173,2.753,1174,4.56,1175,1.658,1176,3.53,1177,1.658,1178,2.753,1179,1.658,1180,4.11,1181,2.753,1182,1.658,1183,1.658,1184,1.658,1185,1.658,1186,1.658,1187,1.658,1188,2.753,1189,1.658,1190,2.753,1191,2.753,1192,1.658,1193,1.658,1194,3.37,1195,1.658,1196,2.753,1197,1.658,1198,1.658,1199,1.583,1200,3.113,1201,1.658,1202,1.519,1203,1.658,1204,1.658,1205,1.658,1206,2.753,1207,1.658,1208,3.53,1209,1.658,1210,5.207,1211,3.53,1212,3.53,1213,3.53,1214,3.53,1215,3.53,1216,3.37,1217,1.658,1218,1.658,1219,1.658,1220,1.658,1221,2.753,1222,2.628,1223,2.753,1224,1.583,1225,2.601,1226,2.628,1227,2.753,1228,2.029,1229,1.658,1230,3.53,1231,2.744,1232,2.753,1233,1.658,1234,2.753,1235,1.658,1236,2.628,1237,1.658,1238,2.753,1239,1.658,1240,1.658,1241,2.753,1242,2.753,1243,1.658,1244,1.658,1245,1.658,1246,1.658,1247,1.658,1248,1.658,1249,1.658,1250,2.753,1251,1.658,1252,1.658,1253,1.658,1254,1.658,1255,1.658,1256,1.658,1257,1.658,1258,0.951,1259,1.658,1260,1.658,1261,1.658,1262,1.658,1263,1.658,1264,1.658,1265,1.658,1266,4.56,1267,5.211,1268,1.658,1269,1.658,1270,3.924,1271,1.658,1272,1.583,1273,1.658,1274,1.658,1275,2.823,1276,1.658,1277,2.753,1278,1.658,1279,2.753,1280,1.658,1281,1.519,1282,1.658,1283,1.658,1284,1.658,1285,1.658,1286,1.658,1287,1.658,1288,1.519,1289,1.658,1290,2.345,1291,1.658,1292,1.658,1293,1.658,1294,1.658,1295,1.658,1296,1.658,1297,1.658,1298,1.658,1299,1.658,1300,1.658,1301,1.658,1302,1.658,1303,1.658,1304,1.658,1305,2.753,1306,1.658,1307,1.658,1308,3.53,1309,2.753,1310,1.658,1311,1.658,1312,2.753,1313,2.753,1314,1.658,1315,1.658,1316,1.658,1317,1.658,1318,1.658,1319,1.658,1320,1.658,1321,3.53,1322,2.753,1323,1.583,1324,1.658,1325,1.658,1326,1.658,1327,1.519,1328,1.658,1329,1.658,1330,1.658,1331,1.658,1332,1.658,1333,1.658,1334,2.628,1335,1.658,1336,1.658,1337,1.658,1338,2.753,1339,2.753,1340,1.658,1341,1.658,1342,1.658,1343,1.658,1344,1.658,1345,1.658,1346,1.658,1347,1.658,1348,1.658,1349,1.658,1350,1.658,1351,1.412,1352,1.658,1353,3.53,1354,1.658,1355,2.753,1356,1.658,1357,1.658,1358,1.658,1359,1.658,1360,1.658,1361,1.658,1362,1.658,1363,1.658,1364,1.658,1365,1.658,1366,1.583,1367,1.658,1368,1.658,1369,1.658,1370,1.658,1371,1.658,1372,1.658,1373,1.658,1374,1.658,1375,1.658,1376,1.658,1377,1.658,1378,1.658,1379,1.658,1380,1.658,1381,1.658,1382,1.658,1383,1.222,1384,2.317,1385,3.53,1386,2.744,1387,2.753,1388,1.658,1389,1.658,1390,1.254,1391,1.658,1392,1.658,1393,1.583,1394,1.658,1395,1.658,1396,1.658,1397,1.192,1398,1.658,1399,3.53,1400,1.658,1401,4.56,1402,1.658,1403,4.975,1404,1.658,1405,1.658,1406,1.658,1407,3.233,1408,1.583,1409,1.658,1410,1.583,1411,1.658,1412,2.753,1413,2.628,1414,1.7,1415,1.658,1416,1.583,1417,1.658,1418,1.658,1419,3.37,1420,2.823,1421,1.658,1422,1.658,1423,1.583,1424,3.53,1425,1.658,1426,2.753,1427,1.658,1428,1.462,1429,1.658,1430,1.658,1431,1.658,1432,1.658,1433,1.658,1434,1.658,1435,1.658,1436,2.753,1437,4.918,1438,1.658,1439,1.658,1440,1.658,1441,1.658,1442,1.658,1604,3.091,1609,1.862,3405,2.013,3406,2.243,3407,2.243,3408,2.243,3409,2.013,3410,2.243,3411,2.243]],["title/classes/ImplicitlyAuthenticated.html",[0,0.279,122,2.34]],["body/classes/ImplicitlyAuthenticated.html",[0,0.549,1,3.445,2,0.511,3,0.022,4,0.022,5,0.026,6,2.242,8,1.065,9,3.985,10,1.144,11,1.101,12,3.264,13,2.966,14,0.952,15,0.163,16,0.364,17,0.845,18,1.336,19,1.226,20,0.187,21,0.182,23,2.946,24,0.121,27,0.005,31,0.449,32,0.391,33,2.354,34,0.085,35,0.373,36,3.247,37,1.935,38,2.263,39,1.935,40,0.06,41,0.593,42,2.191,43,3.31,44,1.159,45,2.193,46,3.595,47,2.776,48,3.852,49,2.996,50,4.777,51,4.109,52,3.595,53,2.296,54,3.518,55,2.675,56,3.518,57,3.356,58,3.595,59,3.595,60,1.464,61,3.595,62,2.296,63,3.31,64,3.616,65,3.675,66,1.973,67,2.296,68,2.012,69,1.864,70,1.008,71,2.354,72,2.946,73,1.144,74,2.296,75,2.296,76,2.054,77,3.31,78,2.296,79,2.296,80,3.31,81,3.128,82,1.935,83,1.487,84,1.973,85,0.871,86,1.973,87,2.012,88,1.681,89,2.354,90,2.354,91,3.377,92,3.294,93,1.927,94,3.294,95,1.368,96,1.368,97,1.279,98,2.354,99,2.354,100,2.296,101,2.097,102,2.354,103,2.097,104,1.709,105,2.296,106,2.242,107,3.216,108,2.296,109,3.074,110,1.358,111,2.097,112,2.296,113,0.593,114,2.354,115,2.296,116,2.354,117,2.296,118,1.602,119,2.354,120,2.354,121,2.354,122,3.376,123,3.377,124,2.354,125,2.354,126,2.242,127,0.002,128,0.003,129,0.002,3412,4.321]],["title/components/InfoComponent.html",[234,0.984,355,1.702]],["body/components/InfoComponent.html",[0,0.263,3,0.042,4,0.034,5,0.04,7,3.211,14,0.637,15,0.179,16,0.388,17,0.478,20,0.168,21,0.2,24,0.263,26,0.326,27,0.005,28,0.556,29,0.326,34,0.116,35,0.409,40,0.029,44,1.271,49,1.494,73,1.255,106,3.956,110,1.97,127,0.002,128,0.003,129,0.002,146,1.021,150,0.963,169,1.629,219,1.395,220,1.948,234,1.494,235,1.605,236,2.177,237,1.653,238,2.044,239,1.678,240,1.678,242,2.741,243,1.581,244,3.553,245,3.021,247,2.308,249,2.567,251,1.524,252,3.06,268,1.078,269,1.322,271,0.851,285,1.703,286,1.678,287,1.703,288,1.703,289,1.703,290,1.703,291,1.453,292,1.515,293,1.703,294,1.703,295,1.703,296,1.653,297,1.581,298,1.678,299,1.703,300,1.703,301,1.703,302,1.091,303,1.703,304,1.453,305,2.343,306,2.308,307,1.515,308,2.922,309,1.678,310,1.678,311,1.605,312,1.678,313,1.605,314,2.338,315,2.343,316,1.605,317,2.343,318,1.605,319,1.678,320,1.581,321,1.678,322,1.605,323,1.678,324,2.922,325,1.605,326,1.678,327,1.559,328,2.343,329,1.605,330,1.581,331,1.559,332,1.653,333,1.678,334,1.605,335,2.308,336,1.678,337,1.628,338,1.537,339,2.343,340,1.605,341,1.678,342,2.922,343,1.559,344,1.678,345,1.605,346,1.605,347,1.653,348,1.581,349,1.678,350,1.605,351,1.605,352,1.678,353,1.581,354,1.678,355,2.795,356,1.678,357,1.628,358,1.605,359,1.581,360,1.678,361,1.605,362,1.376,363,1.678,364,1.605,365,2.308,366,1.605,367,2.7,368,1.605,369,1.678,370,1.605,371,1.678,372,1.605,373,1.678,374,1.559,375,1.605,376,1.494,377,1.678,378,1.605,379,1.581,380,1.605,381,1.605,382,2.445,383,1.605,384,1.678,385,1.605,386,1.605,387,1.605,388,1.177,389,1.581,390,1.581,391,1.678,392,1.581,393,1.678,394,1.581,395,1.653,396,1.678,518,1.653,540,2.543,547,1.322,548,1.305,549,1.34,562,1.305,596,2.802,704,3.933,900,1.678,918,4.67,920,5.458,931,5.158,939,2.888,1126,2.802,1258,2.008,1414,3.021,1528,2.983,1653,4.252,1654,4.252,1811,4.166,1885,5.939,1887,5.492,2766,5.939,3204,3.694,3205,3.933,3324,4.252,3325,4.252,3413,4.738,3414,7.624,3415,6.617,3416,7.624,3417,7.624,3418,7.624,3419,6.617,3420,4.738,3421,4.738,3422,4.738,3423,4.738,3424,4.738,3425,4.738,3426,4.738,3427,4.738,3428,4.738,3429,4.738,3430,4.738,3431,4.252,3432,6.617,3433,4.738,3434,6.617,3435,4.738,3436,6.617,3437,4.738,3438,4.738,3439,4.738,3440,6.617,3441,6.617,3442,6.617,3443,4.738,3444,3.344,3445,4.738]],["title/classes/InitAuthStatus.html",[0,0.279,43,2.295]],["body/classes/InitAuthStatus.html",[0,0.546,1,3.394,2,0.497,3,0.021,4,0.021,5,0.025,6,2.182,7,1.637,8,1.061,9,3.949,10,1.114,11,1.072,12,3.263,13,2.922,14,0.947,15,0.159,16,0.357,17,0.899,18,1.504,19,1.22,20,0.191,21,0.256,22,1.1,23,2.89,24,0.2,26,0.289,27,0.005,28,0.284,29,0.289,31,0.437,32,0.381,33,2.291,34,0.084,35,0.363,36,3.198,37,1.884,38,2.22,39,1.884,40,0.06,41,0.577,42,2.133,43,3.572,44,1.129,45,2.16,46,3.541,47,2.723,48,3.794,49,2.978,50,4.739,51,4.058,52,3.541,53,2.235,54,3.465,55,2.623,56,3.465,57,3.315,58,3.541,59,3.541,60,1.436,61,3.541,62,2.235,63,3.26,64,3.572,65,3.62,66,1.921,67,2.235,68,1.959,69,1.815,70,0.981,71,2.291,72,2.89,73,1.114,74,2.235,75,2.235,76,1.999,77,3.26,78,2.235,79,2.235,80,3.26,81,3.081,82,1.884,83,1.471,84,1.921,85,0.862,86,1.921,87,1.959,88,1.637,89,2.291,90,2.291,91,3.89,92,3.794,93,2.22,94,3.794,95,1.363,96,1.363,97,1.275,98,3.312,99,2.291,100,2.235,101,2.041,102,2.291,103,2.041,104,1.664,105,2.235,106,2.182,107,3.154,108,2.235,109,3.015,110,1.332,111,2.041,112,2.235,113,0.577,114,2.291,115,2.235,116,2.291,117,2.235,118,1.56,119,2.291,120,2.291,121,2.291,122,2.832,123,2.291,124,2.291,125,2.291,126,2.182,127,0.002,128,0.003,129,0.002,437,1.891,3446,6.08,3447,4.206]],["title/classes/InitFilters.html",[0,0.279,857,3.402]],["body/classes/InitFilters.html",[0,0.501,2,0.788,3,0.034,4,0.034,5,0.04,8,1.009,14,0.909,15,0.251,16,0.486,17,0.836,18,1.522,19,1.197,20,0.194,21,0.349,22,1.742,24,0.252,26,0.458,27,0.005,28,0.449,29,0.458,31,0.692,32,0.603,34,0.106,35,0.574,40,0.059,41,0.914,44,1.788,45,2.507,83,1.47,95,1.222,96,1.222,97,1.143,127,0.003,128,0.004,129,0.003,138,1.909,150,1.355,193,3.725,388,2.241,437,2.39,687,4.915,841,5.184,842,4.925,845,5.53,846,4.343,847,4.195,848,4.901,849,4.061,850,4.925,851,4.634,852,5.194,853,6.108,854,4.702,855,5.53,856,4.061,857,6.108,858,6.879,859,5.53,860,5.53,861,5.194,3448,8.288,3449,6.662]],["title/classes/InitTimeline.html",[0,0.279,3450,3.547]],["body/classes/InitTimeline.html",[0,0.48,2,0.843,3,0.036,4,0.036,5,0.043,8,1.004,14,0.896,15,0.269,16,0.507,17,0.871,18,1.568,19,1.191,20,0.195,21,0.301,22,1.865,24,0.26,26,0.49,27,0.005,28,0.481,29,0.49,31,0.741,32,0.645,34,0.084,35,0.615,40,0.058,41,0.979,44,1.914,83,1.532,127,0.003,128,0.004,129,0.003,146,1.1,338,3.016,437,2.463,454,2.645,2714,3.79,3450,6.822,3451,5.56,3452,8.642,3453,7.132,3454,7.756,3455,5.919,3456,6.563,3457,6.401,3458,6.401,3459,6.401,3460,5.919]],["title/classes/Input.html",[0,0.279,225,2.092]],["body/classes/Input.html",[0,0.526,2,0.538,3,0.023,4,0.023,5,0.028,8,0.473,11,1.639,17,0.459,19,1.308,20,0.16,21,0.405,24,0.127,26,0.313,27,0.005,28,0.577,29,0.313,32,0.734,34,0.088,40,0.06,41,0.883,70,1.062,85,1.084,95,1.263,96,1.263,97,1.181,127,0.003,128,0.003,129,0.002,132,2.692,133,4.086,134,3.921,135,5.638,136,3.621,137,3.696,138,2.786,139,4.051,140,4.051,141,4.051,142,2.615,143,2.12,146,0.993,147,3.338,148,1.863,149,2.12,150,0.926,151,5.105,152,2.164,153,1.456,154,2.881,155,2.866,156,2.866,157,2.866,158,2.545,159,2.866,160,4.287,161,2.775,162,2.866,163,2.692,164,4.051,165,2.124,166,3.19,167,2.692,168,4.051,169,1.594,170,2.349,171,2.211,172,2.724,173,1.964,174,2.775,175,2.866,176,2.545,177,3.921,178,3.921,179,3.003,180,2.866,181,2.178,182,2.866,183,2.775,184,2.775,185,2.903,186,2.866,187,2.866,188,2.775,189,1.929,190,2.48,191,2.615,192,2.866,193,2.545,194,2.866,195,2.866,196,2.692,197,2.996,198,2.866,199,1.131,200,2.615,201,2.775,202,2.039,203,2.775,204,2.419,205,2.48,206,1.895,207,2.866,208,2.866,209,3.053,210,2.866,211,2.866,212,2.866,213,4.051,214,2.866,215,2.866,216,2.866,217,2.866,218,4.943,219,1.34,220,1.34,221,2.775,222,2.775,223,2.775,224,2.12,225,2.678,226,4.698,227,4.698,228,2.964,229,4.698,230,4.172,231,4.943,232,4.698,233,4.698,3461,4.552]],["title/classes/LightCard.html",[0,0.279,441,1.52]],["body/classes/LightCard.html",[0,0.419,2,0.681,3,0.029,4,0.029,5,0.035,8,0.875,11,2.147,13,3.448,19,1.295,20,0.108,21,0.355,24,0.161,26,0.396,27,0.005,28,0.388,29,0.396,34,0.089,40,0.058,41,1.157,70,1.761,85,1.102,95,0.78,96,0.78,97,0.729,127,0.004,128,0.003,129,0.003,136,3.658,145,5.169,149,2.682,150,1.535,166,4.178,169,1.231,171,2.896,206,2.398,228,3.438,272,1.922,376,3.142,379,2.812,441,2.284,516,5.705,712,3.626,728,2.579,1051,2.278,1169,3.405,1383,3.137,1384,4.34,1386,5.138,1528,4.755,1782,5.169,1783,4.982,1784,5.947,1785,5.947,1786,6.229,1787,6.229,1788,6.568,1789,6.568,1790,5.947,1791,6.229,1793,5.887,2485,4.065,2746,4.065,2835,6.055,3055,5.583,3056,4.78,3057,4.78,3058,6.229,3059,4.78,3060,4.78,3444,4.065,3462,6.268,3463,4.78,3464,7.562,3465,5.759,3466,5.169,3467,5.169,3468,4.78,3469,4.78,3470,5.169]],["title/classes/LightCardAlreadyUpdated.html",[0,0.279,478,2.251]],["body/classes/LightCardAlreadyUpdated.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,2.794,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.049,459,3.29,460,1.782,461,3.165,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.165,470,1.75,471,1.815,472,3.165,473,1.44,474,3.165,475,1.963,476,3.165,477,1.923,478,3.473,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.004,486,2.004,487,2.004,488,1.661,489,2.004,490,2.004,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.004,500,2.004,501,2.004,502,2.004,503,2.912,504,1.923,3471,5.999]],["title/injectables/LightCardEffects.html",[200,2.887,862,1.402]],["body/injectables/LightCardEffects.html",[0,0.225,3,0.021,4,0.021,5,0.025,8,0.799,15,0.153,16,0.347,20,0.153,21,0.171,24,0.229,26,0.279,27,0.005,28,0.273,29,0.279,31,0.799,32,0.696,34,0.114,35,0.35,40,0.025,70,2.347,95,0.549,96,0.549,97,0.514,110,1.98,127,0.002,128,0.003,129,0.002,146,1.318,150,1.422,165,2.434,169,2.209,181,2.431,185,2.721,189,1.719,200,3.402,201,4.263,202,4.129,249,1.568,257,6.382,271,0.728,272,1.354,404,2.33,407,2.056,441,2.872,442,1.261,443,1.244,444,1.928,446,1.75,455,1.816,464,3.132,467,1.816,468,3.074,469,3.132,470,2.509,472,3.132,474,3.132,476,3.132,478,3.132,518,1.415,540,2.539,547,1.132,548,1.117,549,1.147,562,1.117,577,3.402,862,1.652,863,1.782,871,5.994,879,4.179,880,4.418,882,4.189,894,2.209,895,2.104,897,1.782,898,1.928,900,1.436,1114,2.104,1258,3.831,1488,5.193,1510,5.206,1574,2.746,1575,4.403,1576,2.998,1855,5.314,1899,4.299,1906,2.746,1931,4.179,1933,5.314,1938,5.314,2251,3.64,2856,2.746,2903,4.914,3472,8.539,3473,4.056,3474,6.993,3475,6.993,3476,6.993,3477,5.804,3478,4.056,3479,5.921,3480,7.689,3481,8.539,3482,5.921,3483,5.921,3484,5.921,3485,8.539,3486,5.921,3487,4.056,3488,5.921,3489,5.921,3490,5.921,3491,5.921,3492,7.689,3493,5.921,3494,5.921,3495,8.539,3496,7.689,3497,5.921,3498,7.689,3499,5.921,3500,5.921,3501,7.689,3502,5.921,3503,9.039,3504,7.689,3505,4.056,3506,5.921,3507,5.921,3508,4.056,3509,5.921,3510,5.921,3511,5.921,3512,5.921,3513,5.921,3514,5.921,3515,5.921,3516,5.921,3517,5.921,3518,7.689,3519,5.921,3520,5.314,3521,4.056,3522,4.056,3523,3.64]],["title/components/ListSettingComponent.html",[234,0.984,358,1.702]],["body/components/ListSettingComponent.html",[0,0.206,3,0.019,4,0.019,5,0.022,14,0.534,15,0.14,16,0.325,20,0.182,21,0.156,24,0.284,26,0.589,27,0.005,28,0.618,29,0.589,31,0.576,32,0.815,34,0.104,35,0.32,40,0.022,44,0.996,85,0.936,110,1.812,127,0.002,128,0.003,129,0.002,135,4.529,136,2.089,138,2.259,142,2.132,146,0.856,149,1.728,169,1.574,179,1.221,181,1.628,197,1.728,219,1.092,220,2.435,225,2.309,230,3.712,234,1.3,235,1.257,236,1.824,237,1.294,239,1.314,240,1.314,242,2.387,243,1.239,244,3.504,247,1.934,249,2.429,251,1.277,252,3.178,254,2.75,268,2.188,269,2.392,271,0.666,291,1.7,292,1.187,296,2.316,304,1.138,305,1.963,306,1.934,307,1.187,308,2.608,309,1.314,310,1.314,311,1.257,312,1.314,313,1.257,314,2.036,315,1.963,316,1.257,317,1.963,318,1.257,319,1.314,320,1.239,321,1.314,322,3.383,323,1.963,324,2.608,325,1.257,326,1.314,327,1.221,328,1.963,329,1.257,330,1.239,331,1.221,332,1.294,333,1.314,334,1.257,335,1.934,336,1.314,337,1.275,338,1.203,339,1.963,340,1.257,341,1.314,342,2.608,343,1.221,344,1.314,345,1.257,346,1.257,347,1.294,348,1.239,349,1.314,350,1.257,351,1.257,352,1.314,353,1.239,354,1.314,355,1.257,356,1.314,357,1.275,358,2.494,359,1.239,360,1.314,361,1.257,362,1.078,363,1.314,364,1.257,365,1.934,366,1.257,367,2.351,368,1.257,369,1.314,370,1.257,371,1.314,372,1.257,373,1.314,374,1.221,375,1.257,376,1.17,377,1.314,378,1.257,379,1.239,380,1.257,381,1.257,382,1.507,383,1.257,384,1.314,385,1.257,386,1.257,387,1.257,388,0.922,389,1.239,390,1.239,391,1.314,392,1.239,393,1.314,394,1.239,395,1.294,396,1.314,437,1.469,518,1.294,540,1.527,547,1.036,548,1.022,549,1.049,635,1.881,645,1.84,646,1.84,851,2.075,924,4.118,932,3.491,951,3.913,1200,2.419,1275,3.279,1397,2.946,1460,5.224,1612,2.743,1613,2.893,1614,3.925,1615,5.563,1616,4.323,1617,3.913,1618,3.38,1619,6.762,1620,3.913,1621,6.049,1622,5.198,1623,3.925,1624,4.685,1625,5.198,1626,3.913,1627,3.913,1628,3.913,1633,2.619,1635,2.619,1638,4.685,1639,4.963,1641,3.913,1645,4.685,1650,3.33,1660,2.619,1968,3.38,2015,6.615,2537,4.976,2547,5.827,2550,2.619,2780,2.743,2781,2.743,2782,2.743,2787,2.743,2788,2.743,2789,2.743,2790,2.743,2791,2.743,2792,2.743,2793,2.743,2794,2.743,2795,2.743,2796,2.743,2797,2.743,2798,2.743,2799,2.743,2801,2.743,2802,2.743,2806,4.323,2807,4.602,2808,4.602,3524,9.171,3525,8.231,3526,5.958,3527,7.365,3528,7.365,3529,5.545,3530,3.711,3531,3.711,3532,3.711,3533,3.711,3534,3.711,3535,3.711,3536,5.545,3537,3.711,3538,3.33,3539,4.976,3540,4.976,3541,3.33,3542,3.33,3543,4.976,3544,3.33,3545,3.33,3546,3.33,3547,3.33,3548,3.711,3549,3.711,3550,3.711,3551,2.743,3552,3.08,3553,3.08,3554,3.711,3555,3.711,3556,3.33,3557,3.33,3558,3.711,3559,3.711,3560,4.976]],["title/classes/LoadArchivedCard.html",[0,0.279,412,2.67]],["body/classes/LoadArchivedCard.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.089,408,2.699,409,4.509,410,4.509,411,2.069,412,4.588,413,4.184,414,4.509,415,4.509,416,1.857,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,3.321,427,3.321,428,3.321,429,4.484,430,3.321,431,3.321,432,3.321,433,3.215,437,2.136,3561,7.122,3562,5.274]],["title/classes/LoadArchivedCardFailure.html",[0,0.279,415,2.81]],["body/classes/LoadArchivedCardFailure.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.089,408,2.699,409,4.509,410,4.509,411,2.069,412,4.285,413,4.184,414,4.509,415,4.828,416,1.857,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,3.321,427,3.321,428,3.321,429,3.321,430,4.484,431,3.321,432,3.321,433,3.215,437,2.136,3563,7.122,3564,5.274]],["title/classes/LoadArchivedCardSuccess.html",[0,0.279,414,2.81]],["body/classes/LoadArchivedCardSuccess.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.089,408,2.699,409,4.509,410,4.509,411,2.069,412,4.285,413,4.184,414,4.828,415,4.509,416,1.857,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,3.321,427,3.321,428,3.321,429,3.321,430,3.321,431,4.484,432,3.321,433,3.215,437,2.136,3565,7.122,3566,5.274]],["title/classes/LoadCard.html",[0,0.279,407,2.548]],["body/classes/LoadCard.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.378,408,2.699,409,4.509,410,4.509,411,2.069,412,4.285,413,4.184,414,4.509,415,4.509,416,1.857,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,4.484,427,3.321,428,3.321,429,3.321,430,3.321,431,3.321,432,3.321,433,3.215,437,2.136,3567,7.122,3568,5.274]],["title/classes/LoadCardFailure.html",[0,0.279,410,2.81]],["body/classes/LoadCardFailure.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.089,408,2.699,409,4.509,410,4.828,411,2.069,412,4.285,413,4.184,414,4.509,415,4.509,416,1.857,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,3.321,427,4.484,428,3.321,429,3.321,430,3.321,431,3.321,432,3.321,433,3.215,437,2.136,3569,7.122,3570,5.274]],["title/classes/LoadCardSuccess.html",[0,0.279,409,2.81]],["body/classes/LoadCardSuccess.html",[0,0.544,2,0.623,3,0.027,4,0.027,5,0.032,8,1.037,14,0.953,15,0.199,16,0.418,17,0.718,18,1.684,19,1.23,20,0.193,21,0.222,22,1.379,24,0.226,26,0.362,27,0.005,28,0.356,29,0.362,31,0.548,32,0.477,34,0.084,35,0.455,40,0.06,41,0.724,60,1.682,70,1.23,83,1.713,85,0.838,95,1.326,96,1.326,97,1.24,113,1.304,127,0.002,128,0.003,129,0.002,146,1.609,148,2.158,171,2.448,199,1.31,399,4.393,400,3.118,403,3.321,404,3.03,405,4.393,406,1.926,407,4.089,408,2.699,409,4.828,410,4.509,411,2.069,412,4.285,413,4.184,414,4.509,415,4.509,416,1.857,417,1.294,418,1.344,419,1.511,420,1.511,421,2.052,422,3.118,423,1.491,424,1.64,425,3.321,426,3.321,427,3.321,428,4.484,429,3.321,430,3.321,431,3.321,432,3.321,433,3.215,437,2.136,3571,7.122,3572,5.274]],["title/classes/LoadConfig.html",[0,0.279,554,3.164]],["body/classes/LoadConfig.html",[0,0.521,2,0.776,3,0.033,4,0.033,5,0.04,8,1.024,14,0.931,15,0.247,16,0.481,18,1.511,19,1.215,20,0.187,24,0.184,27,0.005,31,0.682,32,0.594,34,0.077,35,0.566,40,0.06,41,0.901,60,1.55,83,1.589,95,1.272,96,1.272,97,1.189,113,1.327,127,0.003,128,0.004,129,0.003,199,1.63,408,2.602,411,1.906,416,2.063,417,1.609,418,1.672,419,1.88,420,1.88,423,1.856,424,2.04,554,5.911,750,5.375,1167,3.77,1531,5.641,1571,4.442,2253,5.841,3102,4.631,3105,5.115,3106,6.4,3107,5.115,3108,5.115,3109,4.851,3573,6.561]],["title/classes/LoadConfigFailure.html",[0,0.279,2253,3.276]],["body/classes/LoadConfigFailure.html",[0,0.515,2,0.751,3,0.032,4,0.032,5,0.038,8,1.016,14,0.922,15,0.239,16,0.472,17,0.811,18,1.649,19,1.205,20,0.193,21,0.268,22,1.661,24,0.247,26,0.436,27,0.005,28,0.428,29,0.436,31,0.66,32,0.575,34,0.075,35,0.548,40,0.059,41,0.872,60,1.5,83,1.565,95,1.257,96,1.257,97,1.175,113,1.314,127,0.003,128,0.004,129,0.003,199,1.578,408,2.564,411,1.845,416,2.033,417,1.558,418,1.619,419,1.82,420,1.82,423,1.796,424,1.975,437,2.338,554,5.558,750,5.341,1167,3.649,1531,5.558,1571,4.3,2253,6.049,3102,4.482,3105,4.951,3106,4.951,3107,6.27,3108,4.951,3109,4.695,3574,8.043,3575,6.351]],["title/classes/LoadConfigSuccess.html",[0,0.279,1531,3.164]],["body/classes/LoadConfigSuccess.html",[0,0.515,2,0.751,3,0.032,4,0.032,5,0.038,8,1.016,14,0.922,15,0.239,16,0.472,17,0.811,18,1.649,19,1.205,20,0.193,21,0.268,22,1.661,24,0.247,26,0.436,27,0.005,28,0.428,29,0.436,31,0.66,32,0.575,34,0.075,35,0.548,40,0.059,41,0.872,60,1.5,83,1.565,95,1.257,96,1.257,97,1.175,113,1.314,127,0.003,128,0.004,129,0.003,199,1.578,408,2.564,411,1.845,416,2.033,417,1.558,418,1.619,419,1.82,420,1.82,423,1.796,424,1.975,437,2.338,554,5.558,750,5.341,1167,3.649,1531,5.842,1571,4.3,2253,5.755,3102,4.482,3105,4.951,3106,4.951,3107,4.951,3108,6.27,3109,4.695,3576,8.043,3577,6.351]],["title/classes/LoadLightCards.html",[0,0.279,447,2.295]],["body/classes/LoadLightCards.html",[0,0.56,2,0.49,3,0.021,4,0.021,5,0.025,8,1.066,10,2.186,11,1.057,12,1.308,14,0.976,15,0.156,16,0.353,18,1.588,19,1.253,20,0.191,21,0.374,24,0.116,27,0.005,31,0.431,32,0.375,34,0.092,35,0.358,40,0.061,41,0.569,45,1.255,60,0.979,70,1.924,83,1.67,85,0.807,93,1.29,95,1.292,96,1.292,97,1.208,113,1.219,118,1.538,127,0.002,128,0.003,129,0.002,146,1.488,150,0.843,153,1.924,185,2.342,199,1.03,272,1.384,302,1.386,406,1.514,408,2.257,411,1.748,416,1.631,417,1.017,418,1.057,419,1.189,420,1.189,421,1.614,423,1.173,424,1.29,434,3.173,435,2.803,436,1.932,440,2.013,441,2.603,442,1.29,443,1.272,444,1.971,445,1.894,446,1.79,447,3.548,448,4.796,449,3.173,450,1.823,451,3.056,452,2.803,453,1.971,454,1.538,455,3.173,456,3.173,457,1.29,458,3.056,459,3.295,460,1.79,461,3.173,462,1.932,463,3.173,464,3.173,465,1.971,466,1.971,467,3.173,468,3.113,469,3.173,470,1.758,471,1.823,472,3.173,473,1.447,474,3.173,475,1.971,476,3.173,477,1.932,478,3.173,479,1.727,480,1.641,481,2.921,482,2.013,483,2.013,484,1.79,485,2.013,486,2.013,487,2.013,488,1.668,489,2.013,490,2.013,491,2.013,492,2.013,493,1.588,494,2.013,495,2.013,496,2.013,497,1.971,498,1.971,499,2.013,500,2.013,501,2.013,502,2.013,503,2.013,504,1.932,3578,4.147]],["title/classes/LoadLightCardsExtendedData.html",[0,0.279,452,2.34]],["body/classes/LoadLightCardsExtendedData.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,3.291,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.049,459,3.29,460,1.782,461,3.165,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.165,470,1.75,471,1.815,472,3.165,473,1.44,474,3.165,475,1.963,476,3.165,477,1.923,478,3.165,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.912,486,2.004,487,2.004,488,1.661,489,2.004,490,2.004,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.004,500,2.004,501,2.004,502,2.004,503,2.004,504,1.923,3579,5.999]],["title/classes/LoadLightCardsFailure.html",[0,0.279,455,2.251]],["body/classes/LoadLightCardsFailure.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.444,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,2.874,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,3580,5.921,3581,4.056]],["title/classes/LoadLightCardsSuccess.html",[0,0.279,451,2.168]],["body/classes/LoadLightCardsSuccess.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.318,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,2.874,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,3582,5.921,3583,4.056]],["title/classes/LoadMenu.html",[0,0.279,3118,2.887]],["body/classes/LoadMenu.html",[0,0.528,2,0.623,3,0.027,4,0.027,5,0.032,8,1.045,14,0.931,15,0.199,16,0.418,18,1.651,19,1.207,20,0.185,21,0.34,24,0.199,26,0.554,27,0.005,31,0.548,32,0.477,34,0.084,35,0.455,40,0.059,41,0.724,60,1.682,69,2.276,83,1.648,85,0.897,95,1.287,96,1.287,97,1.203,113,1.326,127,0.002,128,0.003,129,0.002,153,1.686,154,2.362,171,2.448,172,2.6,173,3.073,199,1.31,272,1.76,362,3.029,408,2.342,411,1.532,416,1.857,417,1.294,418,1.344,423,1.491,424,1.64,457,2.507,473,2.813,540,1.453,803,3.215,1225,3.88,1231,3.03,1390,2.949,1526,3.438,1562,3.321,1567,3.215,1579,3.438,2309,2.873,2377,3.438,2400,5.257,2409,5.257,2410,3.438,2411,5.181,2413,4.633,2414,3.215,2415,3.438,2416,4.915,3113,3.321,3116,3.571,3117,3.118,3118,4.961,3119,4.509,3120,4.768,3121,4.768,3122,4.768,3123,4.822,3124,3.571,3125,3.571,3126,3.571,3127,3.571,3128,3.438,3129,5.46,3130,5.46,3131,4.822,3132,3.571,3133,3.571,3134,3.571,3135,3.571,3136,3.438,3584,7.122]],["title/classes/LoadMenuFailure.html",[0,0.279,3120,2.971]],["body/classes/LoadMenuFailure.html",[0,0.525,2,0.61,3,0.026,4,0.026,5,0.031,8,1.041,14,0.926,15,0.194,16,0.411,17,0.708,18,1.691,19,1.201,20,0.191,21,0.296,22,1.349,24,0.223,26,0.588,27,0.005,28,0.348,29,0.355,31,0.536,32,0.467,34,0.083,35,0.445,40,0.059,41,0.708,60,1.657,69,2.226,83,1.637,85,0.889,95,1.279,96,1.279,97,1.196,113,1.319,127,0.002,128,0.003,129,0.002,153,1.65,154,2.311,171,2.412,172,2.562,173,3.028,199,1.282,272,1.722,362,3.023,408,2.316,411,1.499,416,1.836,417,1.266,418,1.315,423,1.459,424,1.604,437,2.112,457,2.479,473,2.781,540,1.421,803,3.145,1225,3.823,1231,2.964,1390,2.885,1526,3.364,1562,3.248,1567,3.145,1579,3.364,2309,2.811,2377,3.364,2400,5.198,2409,5.198,2410,3.364,2411,5.142,2413,4.581,2414,3.145,2415,3.364,2416,4.86,3113,3.248,3116,3.493,3117,3.051,3118,4.581,3119,4.458,3120,5.06,3121,4.715,3122,4.715,3123,3.493,3124,4.751,3125,3.493,3126,3.493,3127,3.493,3128,3.364,3129,5.399,3130,5.399,3131,4.751,3132,3.493,3133,3.493,3134,3.493,3135,3.493,3136,3.364,3585,7.017,3586,5.159]],["title/classes/LoadMenuSuccess.html",[0,0.279,3119,2.81]],["body/classes/LoadMenuSuccess.html",[0,0.525,2,0.61,3,0.026,4,0.026,5,0.031,8,1.041,14,0.926,15,0.194,16,0.411,17,0.708,18,1.691,19,1.201,20,0.191,21,0.296,22,1.349,24,0.223,26,0.588,27,0.005,28,0.348,29,0.355,31,0.536,32,0.467,34,0.083,35,0.445,40,0.059,41,0.708,60,1.657,69,2.226,83,1.637,85,0.889,95,1.279,96,1.279,97,1.196,113,1.319,127,0.002,128,0.003,129,0.002,153,1.65,154,2.311,171,2.412,172,2.562,173,3.028,199,1.282,272,1.722,362,3.023,408,2.316,411,1.499,416,1.836,417,1.266,418,1.315,423,1.459,424,1.604,437,2.112,457,2.479,473,2.781,540,1.421,803,3.145,1225,3.823,1231,2.964,1390,2.885,1526,3.364,1562,3.248,1567,3.145,1579,3.364,2309,2.811,2377,3.364,2400,5.198,2409,5.198,2410,3.364,2411,5.142,2413,4.581,2414,3.145,2415,3.364,2416,4.86,3113,3.248,3116,3.493,3117,3.051,3118,4.581,3119,4.784,3120,4.715,3121,4.715,3122,4.715,3123,3.493,3124,3.493,3125,4.751,3126,3.493,3127,3.493,3128,3.364,3129,5.399,3130,5.399,3131,4.751,3132,3.493,3133,3.493,3134,3.493,3135,3.493,3136,3.364,3587,7.017,3588,5.159]],["title/classes/LoadSettings.html",[0,0.279,3141,2.971]],["body/classes/LoadSettings.html",[0,0.542,2,0.694,3,0.03,4,0.03,5,0.036,8,1.039,14,0.953,15,0.221,16,0.449,18,1.616,19,1.232,20,0.189,24,0.164,27,0.005,31,0.61,32,0.531,34,0.069,35,0.506,40,0.06,41,0.806,49,1.852,60,1.806,83,1.699,95,1.298,96,1.298,97,1.213,113,1.339,127,0.003,128,0.004,129,0.003,199,1.459,408,2.471,411,2.222,416,1.959,417,1.441,418,1.497,419,1.683,420,1.683,423,1.661,424,1.826,701,4.571,1651,4.887,2929,4.887,2930,3.58,3137,3.698,3140,3.976,3141,5.328,3142,5.029,3143,5.545,3144,5.029,3145,5.029,3146,5.179,3147,3.976,3148,3.976,3149,3.976,3150,3.829,3151,3.976,3152,3.976,3153,3.829,3589,5.873]],["title/classes/LoadSettingsFailure.html",[0,0.279,3142,2.971]],["body/classes/LoadSettingsFailure.html",[0,0.538,2,0.674,3,0.029,4,0.029,5,0.034,8,1.033,14,0.947,15,0.215,16,0.44,17,0.757,18,1.677,19,1.226,20,0.193,21,0.24,22,1.491,24,0.235,26,0.392,27,0.005,28,0.385,29,0.392,31,0.593,32,0.516,34,0.067,35,0.492,40,0.06,41,0.783,49,1.798,60,1.772,83,1.685,95,1.287,96,1.287,97,1.204,113,1.33,127,0.003,128,0.003,129,0.003,199,1.417,408,2.436,411,2.179,416,1.931,417,1.399,418,1.454,419,1.635,420,1.635,423,1.613,424,1.774,437,2.221,701,4.556,1651,4.818,2929,4.818,2930,3.477,3137,3.591,3140,3.862,3141,4.959,3142,5.268,3143,5.467,3144,4.959,3145,4.959,3146,3.862,3147,5.081,3148,3.862,3149,3.862,3150,3.719,3151,3.862,3152,3.862,3153,3.719,3590,7.504,3591,5.704]],["title/classes/LoadSettingsSuccess.html",[0,0.279,2929,2.887]],["body/classes/LoadSettingsSuccess.html",[0,0.538,2,0.674,3,0.029,4,0.029,5,0.034,8,1.033,14,0.947,15,0.215,16,0.44,17,0.757,18,1.677,19,1.226,20,0.193,21,0.24,22,1.491,24,0.235,26,0.392,27,0.005,28,0.385,29,0.392,31,0.593,32,0.516,34,0.067,35,0.492,40,0.06,41,0.783,49,1.798,60,1.772,83,1.685,95,1.287,96,1.287,97,1.204,113,1.33,127,0.003,128,0.003,129,0.003,199,1.417,408,2.436,411,2.179,416,1.931,417,1.399,418,1.454,419,1.635,420,1.635,423,1.613,424,1.774,437,2.221,701,4.556,1651,4.818,2929,5.119,2930,3.477,3137,3.591,3140,3.862,3141,4.959,3142,4.959,3143,5.467,3144,4.959,3145,4.959,3146,3.862,3147,3.862,3148,5.081,3149,3.862,3150,3.719,3151,3.862,3152,3.862,3153,3.719,3592,7.504,3593,5.704]],["title/components/LoginComponent.html",[234,0.984,359,1.677]],["body/components/LoginComponent.html",[0,0.256,3,0.024,4,0.024,5,0.028,14,0.626,15,0.174,16,0.381,20,0.175,21,0.195,24,0.27,26,0.317,27,0.005,28,0.58,29,0.317,34,0.116,35,0.398,38,2.746,39,2.069,40,0.028,44,1.239,54,2.241,72,3.879,84,2.109,95,0.626,96,0.626,97,0.585,104,2.975,106,3.372,110,1.954,127,0.002,128,0.003,129,0.002,138,2.339,146,1.003,150,0.939,165,1.554,170,1.686,181,1.845,219,1.36,220,1.913,234,1.473,235,1.564,236,2.138,237,1.611,238,3.245,239,1.635,240,1.635,242,2.704,243,1.542,244,3.549,247,2.267,249,1.223,251,1.497,252,3.026,268,1.856,269,2.558,271,0.829,304,1.416,305,2.301,306,2.267,307,1.477,308,2.89,309,1.635,310,1.635,311,1.564,312,1.635,313,1.564,314,2.306,315,2.301,316,1.564,317,2.301,318,1.564,319,1.635,320,1.542,321,1.635,322,1.564,323,1.635,324,2.89,325,1.564,326,1.635,327,1.519,328,2.301,329,1.564,330,1.542,331,1.519,332,1.611,333,1.635,334,1.564,335,2.267,336,1.635,337,1.587,338,1.498,339,2.301,340,1.564,341,1.635,342,2.89,343,1.519,344,1.635,345,1.564,346,1.564,347,1.611,348,1.542,349,1.635,350,1.564,351,1.564,352,1.635,353,1.542,354,1.635,355,1.564,356,1.635,357,1.587,358,1.564,359,2.724,360,1.635,361,1.564,362,1.341,363,1.635,364,1.564,365,2.267,366,1.564,367,2.663,368,1.564,369,1.635,370,1.564,371,1.635,372,1.564,373,1.635,374,1.519,375,1.564,376,1.456,377,1.635,378,1.564,379,1.542,380,1.564,381,1.564,382,1.767,383,1.564,384,1.635,385,1.564,386,1.564,387,1.564,388,1.615,389,1.542,390,1.542,391,1.635,392,1.542,393,1.635,394,1.542,395,1.611,396,1.635,518,1.611,521,4.563,540,1.272,547,1.289,548,1.272,549,1.306,553,3.6,556,2.195,559,2.396,562,1.272,581,2.109,592,5.307,593,5.862,594,6.749,635,2.342,668,2.908,669,3.011,670,3.011,900,1.635,924,4.563,932,4.735,953,1.993,1095,4.092,1108,3.011,1120,3.26,1126,2.731,1502,3.833,1573,3.414,3272,5.394,3594,4.619,3595,7.52,3596,7.52,3597,6.499,3598,7.52,3599,7.52,3600,7.52,3601,7.52,3602,7.52,3603,8.161,3604,8.161,3605,8.161,3606,6.499,3607,4.619,3608,4.619,3609,4.619,3610,4.619,3611,4.619,3612,4.619,3613,4.619,3614,4.619,3615,4.619,3616,4.619,3617,4.619,3618,4.619,3619,4.619,3620,4.619,3621,4.619,3622,4.619,3623,4.619,3624,4.619,3625,4.619,3626,4.619,3627,4.619,3628,4.619,3629,4.619,3630,4.619,3631,4.619,3632,4.619,3633,4.619,3634,6.499,3635,6.499,3636,6.499,3637,6.499,3638,6.499,3639,6.499]],["title/classes/Map.html",[0,0.279,150,1.022]],["body/classes/Map.html",[0,0.448,2,0.953,3,0.041,4,0.041,5,0.049,24,0.226,27,0.005,40,0.049,85,0.965,127,0.004,128,0.004,129,0.004,143,4.327,150,1.889,3640,8.062,3641,8.062,3642,7.243,3643,8.062]],["title/injectables/MenuEffects.html",[807,4.171,862,1.402]],["body/injectables/MenuEffects.html",[0,0.306,3,0.028,4,0.028,5,0.033,8,0.95,15,0.345,16,0.43,18,1.482,20,0.171,21,0.232,24,0.231,26,0.378,27,0.005,28,0.494,29,0.378,31,0.761,32,0.663,34,0.116,35,0.475,40,0.033,70,2.24,95,0.746,96,0.746,97,0.697,104,3.26,110,2.061,113,1.206,127,0.004,128,0.003,129,0.003,150,1.119,169,1.878,172,2.676,181,2.155,202,4.098,249,2.183,271,0.989,362,2.552,408,2.394,518,1.921,540,2.645,547,1.537,548,1.517,549,1.557,562,1.517,581,3.347,682,5.854,685,3.163,713,6.084,714,4.559,732,4.963,807,6.084,862,2.046,863,2.42,880,5.048,882,3.993,894,2.999,895,2.857,897,2.42,898,2.617,900,1.95,1023,5.174,1037,4.779,1258,3.723,1407,4.963,1481,6.084,1488,5.048,1510,4.963,1514,7.886,1866,6.084,1899,5.261,1906,3.728,1931,6.201,1935,5.174,2411,4.212,2412,7.886,2413,3.163,2419,4.07,2618,4.941,3117,3.255,3118,3.163,3119,3.078,3120,3.255,3121,4.873,3122,4.873,3128,4.779,3644,5.506,3645,8.786,3646,5.506,3647,7.33,3648,7.33,3649,7.33,3650,7.33,3651,7.33,3652,5.506,3653,7.33,3654,7.33,3655,7.33,3656,7.33,3657,7.33,3658,7.33,3659,7.33,3660,5.506,3661,7.33,3662,7.33]],["title/components/MenuLinkComponent.html",[234,0.984,361,1.702]],["body/components/MenuLinkComponent.html",[0,0.263,3,0.024,4,0.034,5,0.04,14,0.637,15,0.179,16,0.388,17,0.769,20,0.176,21,0.2,24,0.258,26,0.326,27,0.005,28,0.556,29,0.326,31,0.492,32,0.429,34,0.102,35,0.409,40,0.029,44,1.271,73,1.255,110,1.97,127,0.002,128,0.003,129,0.002,138,2.578,146,1.021,160,4.381,173,3.29,219,2.43,220,1.948,225,3.174,234,1.494,235,1.605,236,2.177,237,1.653,238,2.044,239,1.678,240,1.678,242,2.741,243,1.581,244,3.553,245,3.021,247,2.308,251,1.524,252,3.06,254,3.281,268,1.078,269,1.322,271,0.851,272,1.581,285,1.703,286,1.678,287,1.703,288,1.703,289,1.703,290,1.703,291,1.453,292,1.515,293,1.703,294,1.703,295,1.703,296,2.879,297,1.581,298,1.678,299,1.703,300,1.703,301,1.703,302,1.091,303,1.703,304,1.453,305,2.343,306,2.308,307,1.515,308,2.922,309,1.678,310,1.678,311,1.605,312,1.678,313,1.605,314,2.338,315,2.343,316,1.605,317,2.343,318,1.605,319,1.678,320,1.581,321,1.678,322,1.605,323,1.678,324,2.922,325,1.605,326,1.678,327,1.559,328,2.343,329,1.605,330,1.581,331,1.559,332,1.653,333,1.678,334,1.605,335,2.308,336,1.678,337,1.628,338,1.537,339,2.343,340,1.605,341,1.678,342,2.922,343,1.559,344,1.678,345,1.605,346,1.605,347,1.653,348,1.581,349,1.678,350,1.605,351,1.605,352,1.678,353,1.581,354,1.678,355,1.605,356,1.678,357,1.628,358,1.605,359,1.581,360,1.678,361,2.795,362,2.845,363,1.678,364,1.605,365,2.308,366,1.605,367,2.7,368,1.605,369,1.678,370,1.605,371,1.678,372,1.605,373,1.678,374,1.559,375,1.605,376,1.494,377,1.678,378,1.605,379,1.581,380,1.605,381,1.605,382,1.799,383,1.605,384,1.678,385,1.605,386,1.605,387,1.605,388,1.177,389,1.581,390,1.581,391,1.678,392,1.581,393,1.678,394,1.581,395,1.653,396,1.678,418,1.207,518,1.653,548,1.305,549,1.34,556,2.252,559,2.458,562,1.305,603,3.694,662,8.452,953,3.29,1796,4.314,1994,3.694,2411,4.742,2565,4.252,2713,4.252,2994,6.843,3343,4.252,3663,9.417,3664,4.738,3665,7.624,3666,6.617,3667,7.624,3668,7.624,3669,7.624,3670,7.624,3671,6.617,3672,4.738,3673,4.738,3674,4.738,3675,4.738,3676,4.738,3677,4.738,3678,4.738,3679,4.738,3680,4.738,3681,4.738,3682,4.738,3683,4.738,3684,4.738,3685,4.738,3686,4.738,3687,8.994,3688,5.939,3689,6.617,3690,6.617,3691,4.738]],["title/interfaces/MenuState.html",[747,1.955,756,4.171]],["body/interfaces/MenuState.html",[3,0.038,4,0.038,5,0.045,15,0.283,16,0.522,20,0.184,27,0.005,34,0.088,40,0.054,85,1.043,113,1.304,127,0.003,128,0.004,129,0.003,138,2.723,165,1.794,170,2.739,173,4.242,179,2.468,272,2.504,362,2.915,587,6.544,747,2.919,748,4.087,756,7.887,3692,7.503,3693,10.038,3694,7.503,3695,7.503,3696,7.503]],["title/classes/Message.html",[0,0.279,38,1.835]],["body/classes/Message.html",[0,0.421,2,0.895,3,0.046,4,0.039,5,0.046,19,1.176,20,0.142,21,0.378,24,0.212,26,0.52,27,0.005,28,0.511,29,0.52,34,0.089,38,3.6,40,0.054,41,1.04,85,0.991,95,1.026,96,1.026,97,0.959,113,1.04,127,0.003,128,0.004,129,0.003,136,3.882,145,3.93,149,3.528,1573,5.6,3697,6.798,3698,7.574,3699,8.563,3700,7.574,3701,7.574,3702,6.798]],["title/directives/MouseWheelDirective.html",[307,1.607,394,1.677]],["body/directives/MouseWheelDirective.html",[0,0.348,3,0.032,4,0.032,5,0.038,7,2.442,15,0.237,20,0.164,24,0.273,26,0.431,27,0.005,28,0.423,29,0.431,34,0.074,40,0.048,127,0.003,128,0.004,129,0.003,181,1.958,243,2.095,244,2.664,251,1.838,268,1.427,269,2.662,271,1.127,307,2.954,389,2.095,394,2.664,395,2.784,561,3.419,599,5.634,728,2.811,1051,3.158,1390,3.509,1484,6.223,1708,5.634,1720,4.892,1795,6.223,2121,6.951,2725,7.723,2730,7.164,2737,8.561,2741,7.286,2752,7.878,2975,8.891,3703,6.276,3704,9.238,3705,7.982,3706,7.982,3707,7.982,3708,8.778,3709,8.778,3710,7.982,3711,7.982,3712,6.276,3713,6.276,3714,6.276,3715,6.276,3716,6.276,3717,6.276,3718,6.276,3719,6.276,3720,7.982,3721,6.276,3722,7.982,3723,7.982,3724,6.276,3725,6.276,3726,8.778,3727,6.276,3728,6.276,3729,6.276,3730,6.276,3731,7.982,3732,9.238,3733,6.276,3734,6.276,3735,6.276,3736,6.276,3737,6.276]],["title/components/MultiFilterComponent.html",[234,0.984,364,1.702]],["body/components/MultiFilterComponent.html",[0,0.261,3,0.024,4,0.034,5,0.04,14,0.633,15,0.177,16,0.386,17,0.473,20,0.179,21,0.198,24,0.251,26,0.323,27,0.005,28,0.554,29,0.323,32,0.687,34,0.102,40,0.028,44,1.26,73,1.244,85,0.992,127,0.002,128,0.003,129,0.002,135,4.972,136,2.477,146,1.015,149,2.187,165,1.123,181,1.613,219,1.382,220,1.936,225,3.423,230,4.243,234,1.486,235,1.59,236,2.163,237,1.638,238,2.026,239,1.663,240,1.663,242,2.728,243,1.567,244,3.552,245,3.002,247,2.294,251,1.514,252,3.049,254,3.261,268,1.068,269,1.311,271,0.843,285,1.688,286,1.663,287,1.688,288,1.688,289,1.688,290,1.688,291,1.44,292,1.502,293,1.688,294,1.688,295,1.688,296,2.868,297,1.567,298,1.663,299,1.688,300,1.688,301,1.688,302,1.082,303,1.688,304,1.44,305,2.328,306,2.294,307,1.502,308,2.911,309,1.663,310,1.663,311,1.59,312,1.663,313,1.59,314,2.327,315,2.328,316,1.59,317,2.328,318,1.59,319,1.663,320,1.567,321,1.663,322,1.59,323,1.663,324,2.911,325,1.59,326,1.663,327,1.545,328,2.328,329,1.59,330,1.567,331,1.545,332,1.638,333,1.663,334,1.59,335,2.294,336,1.663,337,1.614,338,1.523,339,2.328,340,1.59,341,1.663,342,2.911,343,1.545,344,1.663,345,1.59,346,1.59,347,1.638,348,1.567,349,1.663,350,1.59,351,1.59,352,1.663,353,1.567,354,1.663,355,1.59,356,1.663,357,1.614,358,1.59,359,1.567,360,1.663,361,1.59,362,1.364,363,1.663,364,2.784,365,3.331,366,1.59,367,2.687,368,1.59,369,1.663,370,1.59,371,1.663,372,1.59,373,1.663,374,1.545,375,1.59,376,1.481,377,1.663,378,1.59,379,1.567,380,1.59,381,1.59,382,1.788,383,1.59,384,1.663,385,1.59,386,1.59,387,1.59,388,1.885,389,1.567,390,1.567,391,1.663,392,1.567,393,1.663,394,1.567,395,1.638,396,1.663,437,1.742,540,1.811,547,1.311,562,1.293,635,2.381,645,2.329,646,2.329,910,6.499,924,4.596,932,4.14,951,4.641,1075,8.264,1076,8.264,1460,5.467,2504,3.472,2511,6.81,2512,4.861,2522,6.81,2562,5.902,3526,6.81,3538,4.215,3539,5.902,3540,5.902,3541,4.215,3542,4.215,3543,5.902,3544,4.215,3545,4.215,3546,4.215,3547,4.215,3560,5.902,3738,7.588,3739,4.696,3740,6.576,3741,4.696,3742,4.696,3743,4.696,3744,4.696,3745,4.696,3746,4.696]],["title/components/MultiSettingsComponent.html",[234,0.984,366,1.702]],["body/components/MultiSettingsComponent.html",[0,0.24,3,0.022,4,0.022,5,0.026,14,0.597,15,0.163,16,0.363,20,0.18,21,0.182,24,0.285,26,0.599,27,0.005,28,0.631,29,0.599,31,0.643,32,0.79,34,0.099,35,0.372,40,0.026,44,1.158,85,0.643,110,1.911,127,0.002,128,0.003,129,0.002,138,1.775,146,0.956,169,1.324,181,1.777,197,2.01,219,1.271,220,1.824,234,1.419,235,1.462,236,2.038,237,1.506,239,1.529,240,1.529,242,2.605,243,1.441,244,3.536,247,2.161,249,2.311,251,1.427,252,2.687,254,3.072,268,2.187,269,2.435,271,0.775,291,1.9,292,1.38,304,1.324,305,2.194,306,2.161,307,1.38,308,2.803,309,1.529,310,1.529,311,1.462,312,1.529,313,1.462,314,2.222,315,2.194,316,1.462,317,2.194,318,1.462,319,1.529,320,1.441,321,1.529,322,3.448,323,2.194,324,2.803,325,1.462,326,1.529,327,1.42,328,2.194,329,1.462,330,1.441,331,1.42,332,1.506,333,1.529,334,1.462,335,2.161,336,1.529,337,1.484,338,1.4,339,2.194,340,1.462,341,1.529,342,2.803,343,1.42,344,1.529,345,1.462,346,1.462,347,1.506,348,1.441,349,1.529,350,1.462,351,1.462,352,1.529,353,1.441,354,1.529,355,1.462,356,1.529,357,1.484,358,1.462,359,1.441,360,1.529,361,1.462,362,1.254,363,1.529,364,1.462,365,3.207,366,2.681,367,2.566,368,1.462,369,1.529,370,1.462,371,1.529,372,1.462,373,1.529,374,1.42,375,1.462,376,1.361,377,1.529,378,1.462,379,1.441,380,1.462,381,1.462,382,1.684,383,1.462,384,1.529,385,1.462,386,1.462,387,1.462,388,1.072,389,1.441,390,1.441,391,1.529,392,1.441,393,1.529,394,1.441,395,1.506,396,1.529,518,1.506,548,1.189,549,1.221,635,2.189,701,3.479,851,2.414,924,4.426,932,2.718,1275,3.663,1397,3.292,1612,3.191,1614,4.284,1615,5.113,1617,4.372,1618,3.776,1619,6.807,1620,4.372,1621,6.343,1622,4.372,1623,4.284,1624,5.113,1625,5.587,1626,4.372,1627,4.372,1628,4.372,1633,3.047,1635,3.047,1638,3.047,1639,3.9,1641,3.047,1645,5.113,1660,3.047,1700,4.829,1968,3.776,2015,6.771,2547,5.853,2780,3.191,2781,3.191,2782,3.191,2787,3.191,2788,3.191,2789,3.191,2790,3.191,2791,3.191,2792,3.191,2793,3.191,2794,3.191,2795,3.191,2796,3.191,2797,3.191,2798,3.191,2799,3.191,2801,3.191,2802,3.191,3551,3.191,3552,3.583,3553,3.583,3747,8.382,3748,6.957,3749,3.874,3750,4.829,3751,7.105,3752,3.874,3753,4.317,3754,4.317,3755,4.317,3756,4.317,3757,4.317,3758,4.317]],["title/components/NavbarComponent.html",[234,0.984,368,1.702]],["body/components/NavbarComponent.html",[0,0.233,3,0.021,4,0.031,5,0.037,14,0.584,15,0.229,16,0.356,17,0.423,20,0.179,21,0.177,24,0.279,26,0.417,27,0.005,28,0.559,29,0.417,31,0.811,32,0.75,34,0.115,35,0.361,40,0.025,44,1.125,56,2.943,66,1.914,73,1.11,85,0.811,107,4.052,110,1.892,127,0.002,128,0.003,129,0.002,138,2.375,146,0.936,169,0.896,173,1.809,179,1.379,189,1.776,219,1.234,220,1.785,228,2.883,234,1.396,235,1.419,236,1.995,237,1.462,238,1.809,239,1.484,240,1.484,242,2.562,243,1.399,244,3.53,245,2.769,247,2.115,249,1.887,251,1.397,252,2.896,268,1.776,269,2.179,271,0.753,272,1.399,285,1.507,286,1.484,287,1.507,288,1.507,289,1.507,290,1.507,291,1.285,292,1.34,293,1.507,294,1.507,295,1.507,296,1.462,297,1.399,298,1.484,299,1.507,300,1.507,301,1.507,302,0.965,303,1.507,304,1.285,305,2.147,306,2.115,307,1.34,308,2.765,309,1.484,310,1.484,311,1.419,312,1.484,313,1.419,314,2.185,315,2.147,316,1.419,317,2.147,318,1.419,319,1.484,320,1.399,321,1.484,322,1.419,323,1.484,324,2.765,325,1.419,326,1.484,327,1.379,328,2.147,329,1.419,330,1.399,331,1.379,332,1.462,333,1.484,334,1.419,335,2.115,336,1.484,337,1.44,338,1.359,339,2.147,340,1.419,341,1.484,342,2.765,343,1.379,344,1.484,345,1.419,346,1.419,347,1.462,348,1.399,349,1.484,350,1.419,351,1.419,352,1.484,353,1.399,354,1.484,355,1.419,356,1.484,357,1.44,358,1.419,359,1.399,360,1.484,361,1.419,362,1.217,363,1.484,364,1.419,365,2.115,366,1.419,367,2.523,368,2.645,369,1.484,370,1.419,371,1.484,372,1.419,373,1.484,374,1.379,375,1.419,376,1.322,377,1.484,378,1.419,379,1.399,380,1.419,381,1.419,382,1.649,383,1.419,384,1.484,385,1.419,386,1.419,387,1.419,388,1.041,389,1.399,390,1.399,391,1.484,392,1.399,393,1.484,394,1.399,395,1.462,396,1.484,454,2.249,512,5.555,518,1.462,529,3.267,540,1.963,547,1.17,548,1.154,549,1.185,550,3.099,552,3.762,556,1.992,562,1.154,570,3.267,581,2.769,596,5.107,639,2.838,704,5.033,710,7.752,728,3.869,900,1.484,953,2.617,997,2.343,1019,3.099,1108,2.732,1114,2.175,1459,3.223,1811,3.818,1841,3.267,1843,3.267,1880,6.386,2334,7.009,2360,3.099,2363,3.762,2364,3.762,2365,3.762,2369,6.395,2419,3.099,2714,2.227,3118,3.484,3400,3.762,3759,4.191,3760,7.126,3761,6.064,3762,7.126,3763,6.064,3764,6.064,3765,7.126,3766,6.064,3767,7.809,3768,7.126,3769,6.064,3770,4.191,3771,4.191,3772,4.191,3773,4.191,3774,4.191,3775,4.191,3776,4.191,3777,4.191,3778,4.191,3779,4.191,3780,4.191,3781,4.191,3782,4.191,3783,4.191,3784,4.191,3785,4.191,3786,4.191,3787,4.191,3788,4.191,3789,4.191,3790,4.191,3791,4.191,3792,4.191,3793,4.191,3794,4.191,3795,4.191,3796,4.191,3797,4.191,3798,4.191,3799,4.191,3800,4.191,3801,4.191,3802,4.191,3803,4.191,3804,4.191,3805,4.191,3806,4.191,3807,4.191,3808,4.191,3809,4.191,3810,4.191,3811,4.191,3812,4.191,3813,4.191,3814,4.191,3815,6.064,3816,6.064,3817,6.064,3818,6.064,3819,6.064,3820,6.064,3821,4.191,3822,4.191,3823,4.191]],["title/components/NoSelectionComponent.html",[234,0.984,370,1.702]],["body/components/NoSelectionComponent.html",[0,0.326,3,0.03,4,0.03,5,0.035,14,0.736,15,0.221,20,0.143,21,0.358,24,0.214,27,0.005,28,0.573,34,0.069,40,0.035,44,1.574,127,0.003,128,0.004,129,0.003,146,1.179,219,1.727,220,2.25,234,1.665,235,1.986,236,2.514,237,2.046,239,2.077,240,2.077,242,3.056,243,1.958,244,3.589,247,2.666,251,1.76,252,3.34,268,1.334,269,1.637,271,1.053,304,1.799,305,2.706,306,2.666,307,1.876,308,3.189,309,2.077,310,2.077,311,1.986,312,2.077,313,1.986,314,2.607,315,2.706,316,1.986,317,2.706,318,1.986,319,2.077,320,1.958,321,2.077,322,1.986,323,2.077,324,3.189,325,1.986,326,2.077,327,1.93,328,2.706,329,1.986,330,1.958,331,1.93,332,2.046,333,2.077,334,1.986,335,2.666,336,2.077,337,2.016,338,1.902,339,2.706,340,1.986,341,2.077,342,3.189,343,1.93,344,2.077,345,1.986,346,1.986,347,2.046,348,1.958,349,2.077,350,1.986,351,1.986,352,2.077,353,1.958,354,2.077,355,1.986,356,2.077,357,2.016,358,1.986,359,1.958,360,2.077,361,1.986,362,1.704,363,2.077,364,1.986,365,2.666,366,1.986,367,3.01,368,1.986,369,2.077,370,3.05,371,2.077,372,1.986,373,2.077,374,1.93,375,1.986,376,1.849,377,2.077,378,1.986,379,1.958,380,1.986,381,1.986,382,2.078,383,1.986,384,2.077,385,1.986,386,1.986,387,1.986,388,1.457,389,1.958,390,1.958,391,2.077,392,1.958,393,2.077,394,1.958,395,2.046,396,2.077,460,3.886,1700,5.958,2951,7.63,3824,8.501,3825,5.866,3826,7.642,3827,5.866,3828,5.866]],["title/injectables/NotifyService.html",[862,1.402,2100,3.547]],["body/injectables/NotifyService.html",[0,0.39,3,0.036,4,0.036,5,0.042,15,0.265,16,0.502,20,0.16,21,0.389,24,0.276,26,0.588,27,0.005,28,0.577,29,0.588,34,0.083,40,0.042,45,2.125,85,1.024,127,0.003,128,0.004,129,0.003,138,2.454,169,1.83,181,1.723,251,1.972,268,2.101,269,2.39,271,1.262,516,4.757,862,2.39,863,3.088,1773,7.108,2100,6.044,3829,7.026,3830,9.238,3831,8.564,3832,8.564,3833,9.617,3834,8.564,3835,8.564,3836,7.026,3837,8.564,3838,7.026,3839,7.026,3840,7.026,3841,8.564,3842,7.026,3843,8.564,3844,7.026,3845,7.026]],["title/classes/Page.html",[0,0.279,714,2.607]],["body/classes/Page.html",[0,0.422,2,0.898,3,0.039,4,0.039,5,0.046,19,1.177,20,0.142,21,0.378,24,0.213,26,0.522,27,0.005,28,0.512,29,0.522,34,0.106,40,0.046,95,1.029,96,1.029,97,0.962,127,0.003,128,0.004,129,0.003,136,2.863,149,3.539,228,3.408,376,2.396,442,2.363,443,2.33,595,5.823,714,4.657,3642,7.448,3846,7.599,3847,7.599,3848,9.554,3849,7.599,3850,8.976]],["title/classes/ParameterListItem.html",[0,0.279,231,3.063]],["body/classes/ParameterListItem.html",[0,0.53,2,0.555,3,0.024,4,0.024,5,0.028,8,0.488,11,1.676,17,0.473,19,1.31,20,0.154,21,0.408,24,0.131,26,0.323,27,0.005,28,0.512,29,0.323,32,0.744,34,0.089,40,0.061,41,0.903,70,1.095,85,1.074,95,1.273,96,1.273,97,1.19,127,0.003,128,0.003,129,0.002,132,2.777,134,4.008,135,5.618,136,3.644,137,3.778,138,2.736,139,4.14,140,4.14,141,4.14,142,2.698,143,2.187,146,1.015,147,3.412,148,1.921,149,2.187,150,0.955,151,5.176,152,2.232,153,1.502,154,2.945,155,2.957,156,2.957,157,2.957,158,2.626,159,2.957,160,4.36,161,2.862,162,2.957,163,2.777,164,4.14,165,2.145,166,3.261,167,2.777,168,4.14,169,1.621,170,2.401,171,2.26,172,2.77,173,2.026,174,2.862,175,2.957,176,2.626,177,4.008,178,4.008,179,3.029,180,2.957,181,2.2,182,2.957,183,2.862,184,2.862,185,2.952,186,2.957,187,2.957,188,2.862,189,1.99,190,2.558,191,2.698,192,2.957,193,2.626,194,2.957,195,2.957,196,2.777,197,3.062,198,2.957,199,1.167,200,2.698,201,2.862,202,2.103,203,2.862,204,2.495,205,2.558,206,1.955,207,2.957,208,2.957,209,3.105,210,2.957,211,2.957,212,2.957,213,4.14,214,2.957,215,2.957,216,2.957,217,2.957,218,4.008,219,1.382,220,1.382,221,2.862,222,2.862,223,2.862,224,2.187,225,1.955,226,2.957,227,2.957,228,2.195,229,2.957,230,2.626,231,4.625,232,2.957,233,2.957,397,4.215,3851,4.696]],["title/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.279,1423,3.547]],["body/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.45,2,0.265,3,0.011,4,0.011,5,0.014,7,0.873,8,0.233,9,1.701,12,2.843,13,1.524,14,0.46,15,0.085,17,0.962,18,0.628,20,0.132,21,0.234,23,3.64,24,0.173,26,0.382,27,0.005,28,0.416,29,0.328,31,0.233,34,0.105,35,0.193,36,2.139,37,1.005,38,1.36,40,0.046,41,0.308,43,1.025,47,1.669,49,1.175,55,0.968,63,3.497,64,2.817,66,1.025,68,1.045,72,3.507,73,2.146,76,2.27,77,1.701,80,1.701,81,4.094,82,1.005,84,2.817,85,1.019,86,3.854,87,3.566,88,2.164,101,1.089,103,2.699,104,3.205,110,1.908,111,1.089,113,0.656,122,1.735,127,0.001,128,0.002,129,0.001,138,2.195,150,0.456,165,2.257,169,2.131,170,2.03,171,1.28,172,1.744,179,1.572,181,2.189,189,0.951,190,1.222,204,2.538,206,1.551,209,1.524,228,2.463,249,2.432,251,0.858,268,1.265,269,2.562,271,0.403,291,1.465,297,2.059,302,1.281,331,0.738,382,1.677,388,0.557,406,0.819,417,0.914,423,0.635,454,0.832,457,0.698,473,0.783,514,4.354,521,4.126,526,1.067,540,2.033,543,2.629,547,0.626,548,0.618,549,0.635,556,1.067,559,1.164,561,4.598,562,1.316,573,2.629,581,2.181,595,2.271,628,1.164,650,1.519,668,2.346,669,2.429,670,3.114,701,2.099,706,4.022,728,1.669,730,3.234,732,3.234,742,3.288,747,2.4,750,1.98,771,1.164,772,1.192,862,1.04,897,1.637,898,1.067,900,0.795,953,2.061,997,1.255,1026,2.629,1051,0.888,1093,3.925,1094,1.584,1095,3.008,1096,4.919,1097,2.754,1098,1.659,1105,3.109,1106,1.584,1107,1.519,1108,1.463,1109,3.502,1110,1.519,1111,1.659,1112,5.845,1113,1.584,1114,1.164,1115,1.255,1116,4.111,1117,2.754,1118,2.754,1119,2.754,1120,3.925,1121,2.754,1122,1.659,1123,1.659,1124,1.659,1125,1.659,1126,1.327,1127,1.584,1128,2.754,1129,1.584,1130,1.659,1131,1.659,1132,3.531,1133,1.659,1134,1.659,1135,1.659,1136,1.659,1137,1.659,1138,1.659,1139,1.659,1140,1.659,1141,1.659,1142,1.659,1143,5.573,1144,1.659,1145,5.405,1146,1.659,1147,1.584,1148,1.255,1149,1.659,1150,1.659,1151,1.659,1152,1.659,1153,2.754,1154,1.659,1155,1.659,1156,4.919,1157,1.584,1158,1.659,1159,1.659,1160,1.659,1161,1.659,1162,1.659,1163,1.659,1164,1.659,1165,1.659,1166,3.114,1167,1.289,1168,1.659,1169,1.327,1170,1.659,1171,5.212,1172,5.456,1173,2.754,1174,4.561,1175,1.659,1176,3.531,1177,1.659,1178,2.754,1179,1.659,1180,4.111,1181,2.754,1182,1.659,1183,1.659,1184,1.659,1185,1.659,1186,1.659,1187,1.659,1188,2.754,1189,1.659,1190,2.754,1191,2.754,1192,1.659,1193,1.659,1194,2.629,1195,1.659,1196,2.754,1197,1.659,1198,1.659,1199,1.584,1200,3.114,1201,1.659,1202,1.519,1203,1.659,1204,1.659,1205,1.659,1206,2.754,1207,1.659,1208,3.531,1209,1.659,1210,5.208,1211,3.531,1212,3.531,1213,3.531,1214,3.531,1215,3.531,1216,3.371,1217,1.659,1218,1.659,1219,1.659,1220,1.659,1221,2.754,1222,2.629,1223,2.754,1224,1.584,1225,2.602,1226,2.629,1227,2.754,1228,2.03,1229,1.659,1230,3.531,1231,2.744,1232,2.754,1233,1.659,1234,2.754,1235,1.659,1236,2.629,1237,1.659,1238,2.754,1239,1.659,1240,1.659,1241,2.754,1242,2.754,1243,1.659,1244,1.659,1245,1.659,1246,1.659,1247,1.659,1248,1.659,1249,1.659,1250,2.754,1251,1.659,1252,1.659,1253,1.659,1254,1.659,1255,1.659,1256,1.659,1257,1.659,1258,0.951,1259,1.659,1260,1.659,1261,1.659,1262,1.659,1263,1.659,1264,1.659,1265,1.659,1266,4.561,1267,5.212,1268,1.659,1269,1.659,1270,3.925,1271,1.659,1272,1.584,1273,1.659,1274,1.659,1275,2.824,1276,1.659,1277,2.754,1278,1.659,1279,2.754,1280,1.659,1281,1.519,1282,1.659,1283,1.659,1284,1.659,1285,1.659,1286,1.659,1287,1.659,1288,1.519,1289,1.659,1290,2.346,1291,1.659,1292,1.659,1293,1.659,1294,1.659,1295,1.659,1296,1.659,1297,1.659,1298,1.659,1299,1.659,1300,1.659,1301,1.659,1302,1.659,1303,1.659,1304,1.659,1305,2.754,1306,1.659,1307,1.659,1308,3.531,1309,2.754,1310,1.659,1311,1.659,1312,2.754,1313,2.754,1314,1.659,1315,1.659,1316,1.659,1317,1.659,1318,1.659,1319,1.659,1320,1.659,1321,3.531,1322,2.754,1323,1.584,1324,1.659,1325,1.659,1326,1.659,1327,1.519,1328,1.659,1329,1.659,1330,1.659,1331,1.659,1332,1.659,1333,1.659,1334,2.629,1335,1.659,1336,1.659,1337,1.659,1338,2.754,1339,2.754,1340,1.659,1341,1.659,1342,1.659,1343,1.659,1344,1.659,1345,1.659,1346,1.659,1347,1.659,1348,1.659,1349,1.659,1350,1.659,1351,1.413,1352,1.659,1353,3.531,1354,1.659,1355,2.754,1356,1.659,1357,1.659,1358,1.659,1359,1.659,1360,1.659,1361,1.659,1362,1.659,1363,1.659,1364,1.659,1365,1.659,1366,1.584,1367,1.659,1368,1.659,1369,1.659,1370,1.659,1371,1.659,1372,1.659,1373,1.659,1374,1.659,1375,1.659,1376,1.659,1377,1.659,1378,1.659,1379,1.659,1380,1.659,1381,1.659,1382,1.659,1383,1.222,1384,2.318,1385,3.531,1386,2.744,1387,2.754,1388,1.659,1389,1.659,1390,1.255,1391,1.659,1392,1.659,1393,1.584,1394,1.659,1395,1.659,1396,1.659,1397,1.192,1398,1.659,1399,3.531,1400,1.659,1401,4.561,1402,1.659,1403,4.976,1404,1.659,1405,1.659,1406,1.659,1407,3.234,1408,1.584,1409,1.659,1410,1.584,1411,1.659,1412,2.754,1413,2.629,1414,1.701,1415,1.659,1416,1.584,1417,1.659,1418,1.659,1419,3.371,1420,2.824,1421,2.754,1422,2.754,1423,2.629,1424,3.531,1425,1.659,1426,2.754,1427,1.659,1428,1.463,1429,1.659,1430,1.659,1431,1.659,1432,1.659,1433,1.659,1434,1.659,1435,1.659,1436,1.659,1437,2.754,1438,1.659,1439,1.659,1440,1.659,1441,1.659,1442,1.659,1604,3.092,1609,1.863,3405,2.014,3409,2.014,3852,2.244,3853,2.244,3854,2.244,3855,2.244,3856,2.244]],["title/classes/PatchSettings.html",[0,0.279,1651,2.887]],["body/classes/PatchSettings.html",[0,0.538,2,0.674,3,0.029,4,0.029,5,0.034,8,1.033,14,0.947,15,0.215,16,0.44,17,0.757,18,1.677,19,1.226,20,0.193,21,0.24,22,1.491,24,0.235,26,0.392,27,0.005,28,0.385,29,0.392,31,0.593,32,0.516,34,0.067,35,0.492,40,0.06,41,0.783,49,1.798,60,1.772,83,1.685,95,1.287,96,1.287,97,1.204,113,1.33,127,0.003,128,0.003,129,0.003,199,1.417,408,2.436,411,2.179,416,1.931,417,1.399,418,1.454,419,1.635,420,1.635,423,1.613,424,1.774,437,2.221,701,4.556,1651,5.119,2929,4.818,2930,3.477,3137,3.591,3140,3.862,3141,4.959,3142,4.959,3143,5.467,3144,4.959,3145,4.959,3146,3.862,3147,3.862,3148,3.862,3149,5.081,3150,3.719,3151,3.862,3152,3.862,3153,3.719,3857,7.504,3858,5.704]],["title/classes/PatchSettingsFailure.html",[0,0.279,3145,2.971]],["body/classes/PatchSettingsFailure.html",[0,0.538,2,0.674,3,0.029,4,0.029,5,0.034,8,1.033,14,0.947,15,0.215,16,0.44,17,0.757,18,1.677,19,1.226,20,0.193,21,0.24,22,1.491,24,0.235,26,0.392,27,0.005,28,0.385,29,0.392,31,0.593,32,0.516,34,0.067,35,0.492,40,0.06,41,0.783,49,1.798,60,1.772,83,1.685,95,1.287,96,1.287,97,1.204,113,1.33,127,0.003,128,0.003,129,0.003,199,1.417,408,2.436,411,2.179,416,1.931,417,1.399,418,1.454,419,1.635,420,1.635,423,1.613,424,1.774,437,2.221,701,4.556,1651,4.818,2929,4.818,2930,3.477,3137,3.591,3140,3.862,3141,4.959,3142,4.959,3143,5.467,3144,4.959,3145,5.268,3146,3.862,3147,3.862,3148,3.862,3149,3.862,3150,3.719,3151,5.081,3152,3.862,3153,3.719,3859,7.504,3860,5.704]],["title/classes/PatchSettingsSuccess.html",[0,0.279,3144,2.971]],["body/classes/PatchSettingsSuccess.html",[0,0.538,2,0.674,3,0.029,4,0.029,5,0.034,8,1.033,14,0.947,15,0.215,16,0.44,17,0.757,18,1.677,19,1.226,20,0.193,21,0.24,22,1.491,24,0.235,26,0.392,27,0.005,28,0.385,29,0.392,31,0.593,32,0.516,34,0.067,35,0.492,40,0.06,41,0.783,49,1.798,60,1.772,83,1.685,95,1.287,96,1.287,97,1.204,113,1.33,127,0.003,128,0.003,129,0.003,199,1.417,408,2.436,411,2.179,416,1.931,417,1.399,418,1.454,419,1.635,420,1.635,423,1.613,424,1.774,437,2.221,701,4.556,1651,4.818,2929,4.818,2930,3.477,3137,3.591,3140,3.862,3141,4.959,3142,4.959,3143,5.467,3144,5.268,3145,4.959,3146,3.862,3147,3.862,3148,3.862,3149,3.862,3150,3.719,3151,3.862,3152,5.081,3153,3.719,3861,7.504,3862,5.704]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.279,23,2.388]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.542,1,3.304,2,0.475,3,0.02,4,0.02,5,0.024,6,2.083,7,1.562,8,1.052,9,3.885,10,1.063,11,1.023,12,3.249,13,2.845,14,0.932,15,0.151,16,0.345,17,1.003,18,1.374,19,1.192,20,0.19,21,0.248,23,3.304,24,0.246,26,0.276,27,0.005,28,0.271,29,0.56,33,2.187,34,0.082,35,0.346,36,3.811,37,1.798,38,2.146,39,1.798,40,0.06,41,0.551,42,2.035,43,3.174,44,1.077,45,2.103,46,3.448,47,2.632,48,3.694,49,2.947,50,4.671,51,3.97,52,3.448,53,2.133,54,3.374,55,2.536,56,3.374,57,3.243,58,3.448,59,3.448,60,1.642,61,3.448,62,2.133,63,3.174,64,3.494,65,3.525,66,1.833,67,2.133,68,1.87,69,1.732,70,0.936,71,2.187,72,2.793,73,1.063,74,2.133,75,2.133,76,1.908,77,3.174,78,2.133,79,2.133,80,3.174,81,3.793,82,1.798,83,1.444,84,3.494,85,1.034,86,3.719,87,3.793,88,2.977,89,2.187,90,2.187,91,3.202,92,3.123,93,1.827,94,3.123,95,1.355,96,1.355,97,1.267,98,2.187,99,2.187,100,2.133,101,1.948,102,2.187,103,1.948,104,1.588,105,2.133,106,2.083,107,3.049,108,2.133,109,2.914,110,1.288,111,1.948,112,2.133,113,0.551,114,2.187,115,2.133,116,2.187,117,2.133,118,1.489,119,2.187,120,2.187,121,2.187,122,2.737,123,2.187,124,2.187,125,2.187,126,2.083,127,0.002,128,0.003,129,0.002,145,3.049,1444,5.965,1446,5.965,3863,4.014,3864,4.014,3865,4.014,3866,4.014,3867,4.014,3868,4.014,3869,4.014,3870,4.014]],["title/classes/Process.html",[0,0.279,166,2.492]],["body/classes/Process.html",[0,0.531,2,0.557,3,0.024,4,0.024,5,0.028,8,0.489,11,1.679,17,0.475,19,1.311,20,0.154,21,0.408,24,0.132,26,0.324,27,0.005,28,0.512,29,0.324,32,0.596,34,0.09,40,0.061,41,0.904,70,1.098,85,1.068,95,1.274,96,1.274,97,1.191,127,0.003,128,0.003,129,0.002,132,2.785,134,4.016,135,5.561,136,3.543,137,3.786,138,2.738,139,4.149,140,4.149,141,4.149,142,2.706,143,2.194,145,2.444,146,1.017,147,3.419,148,1.927,149,2.194,150,0.958,151,5.652,152,2.239,153,1.506,154,2.951,155,2.965,156,2.965,157,2.965,158,2.633,159,2.965,160,4.367,161,2.871,162,2.965,163,2.785,164,4.149,165,2.147,166,3.769,167,2.785,168,4.149,169,1.624,170,2.406,171,2.265,172,2.775,173,2.032,174,2.871,175,4.149,176,2.633,177,4.016,178,4.016,179,3.032,180,2.965,181,2.202,182,2.965,183,2.871,184,2.871,185,2.957,186,2.965,187,2.965,188,2.871,189,1.996,190,2.566,191,2.706,192,2.965,193,2.633,194,2.965,195,2.965,196,2.785,197,3.069,198,2.965,199,1.17,200,2.706,201,2.871,202,2.11,203,2.871,204,2.503,205,2.566,206,1.961,207,2.965,208,2.965,209,3.11,210,2.965,211,2.965,212,2.965,213,4.149,214,2.965,215,2.965,216,2.965,217,2.965,218,4.016,219,1.387,220,1.387,221,2.871,222,2.871,223,2.871,224,2.194,225,1.961,226,2.965,227,2.965,228,2.199,229,2.965,230,2.633,231,4.016,232,2.965,233,2.965,3871,4.71,3872,4.71]],["title/classes/RefreshTranslation.html",[0,0.279,3873,3.276]],["body/classes/RefreshTranslation.html",[0,0.537,2,0.777,3,0.034,4,0.034,5,0.04,8,1.04,10,2.176,14,0.95,15,0.248,16,0.482,18,1.512,19,1.233,20,0.189,24,0.184,27,0.005,31,0.683,32,0.595,34,0.097,35,0.567,40,0.061,41,0.902,83,1.59,85,0.683,113,1.128,127,0.003,128,0.004,129,0.003,136,3.643,150,1.671,152,3.123,479,2.735,480,2.599,577,3.775,731,4.137,1459,3.491,1469,5.914,2935,4.448,3873,6.124,3874,4.448,3875,6.074,3876,6.57,3877,4.283,3878,5.465,3879,5.465,3880,4.637,3881,5.465,3882,4.637,3883,5.465,3884,4.637,3885,4.637,3886,4.857,3887,4.448,3888,4.857,3889,4.857,3890,4.448,3891,4.857,3892,4.283]],["title/classes/RejectLogIn.html",[0,0.279,52,2.492]],["body/classes/RejectLogIn.html",[0,0.546,1,3.392,2,0.497,3,0.021,4,0.021,5,0.025,6,2.18,7,1.635,8,1.064,9,4.071,10,1.113,11,1.071,12,3.263,13,2.92,14,0.947,15,0.158,16,0.356,17,0.899,18,1.503,19,1.22,20,0.191,21,0.256,22,1.099,23,2.888,24,0.2,26,0.289,27,0.005,28,0.283,29,0.289,31,0.437,32,0.38,33,2.289,34,0.084,35,0.362,36,3.196,37,1.882,38,2.218,39,1.882,40,0.06,41,0.577,42,2.131,43,3.259,44,1.128,45,2.159,46,3.539,47,2.721,48,3.792,49,2.978,50,4.737,51,4.057,52,3.877,53,2.233,54,3.463,55,2.622,56,3.463,57,3.313,58,3.539,59,3.539,60,1.435,61,3.539,62,2.233,63,3.259,64,3.57,65,3.618,66,1.919,67,2.233,68,1.957,69,1.813,70,0.98,71,2.289,72,2.888,73,1.113,74,2.233,75,2.233,76,1.997,77,3.259,78,2.233,79,2.233,80,3.259,81,3.079,82,1.882,83,1.471,84,1.919,85,0.862,86,1.919,87,1.957,88,1.635,89,2.289,90,2.289,91,3.31,92,3.229,93,1.889,94,3.229,95,1.363,96,1.363,97,1.275,98,2.289,99,2.289,100,2.233,101,2.04,102,2.289,103,2.04,104,1.662,105,2.233,106,2.18,107,3.152,108,2.233,109,3.539,110,1.563,111,2.949,112,3.229,113,0.577,114,2.289,115,2.233,116,2.289,117,2.233,118,1.558,119,2.289,120,2.289,121,2.289,122,2.83,123,2.289,124,2.289,125,2.289,126,2.18,127,0.002,128,0.003,129,0.002,437,1.89,3893,6.076,3894,4.202]],["title/classes/RemoveLightCard.html",[0,0.279,463,2.251]],["body/classes/RemoveLightCard.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.444,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,2.874,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,3895,5.921,3896,4.056]],["title/components/ResizableComponent.html",[234,0.984,372,1.702]],["body/components/ResizableComponent.html",[0,0.289,3,0.027,4,0.036,5,0.043,14,0.679,15,0.196,16,0.414,17,0.524,20,0.15,21,0.337,24,0.24,27,0.005,28,0.54,34,0.061,40,0.031,44,1.395,73,1.377,127,0.002,128,0.003,129,0.002,138,2.021,146,1.088,165,1.243,179,1.71,206,2.165,219,1.53,220,2.076,234,1.568,235,1.761,236,2.32,237,1.814,238,2.243,239,1.841,240,1.841,243,1.735,244,3.569,245,3.221,247,2.46,251,1.624,268,1.182,269,1.451,271,0.933,285,1.869,286,1.841,287,1.869,288,1.869,289,1.869,290,1.869,291,1.594,292,1.662,293,1.869,294,1.869,295,1.869,296,1.814,297,1.735,298,1.841,299,1.869,300,1.869,301,1.869,302,1.197,303,1.869,304,1.594,305,2.498,306,2.46,307,1.662,308,3.04,309,1.841,310,1.841,311,1.761,312,1.841,313,1.761,314,2.455,315,2.498,316,1.761,317,2.498,318,1.761,319,1.841,320,1.735,321,1.841,322,1.761,323,1.841,324,3.04,325,1.761,326,1.841,327,1.71,328,2.498,329,1.761,330,1.735,331,1.71,332,1.814,333,1.841,334,1.761,335,2.46,336,1.841,337,1.787,338,1.686,339,2.498,340,1.761,341,1.841,342,3.04,343,1.71,344,1.841,345,1.761,346,1.761,347,1.814,348,1.735,349,1.841,350,1.761,351,1.761,352,1.841,353,1.735,354,1.841,355,1.761,356,1.841,357,1.787,358,1.761,359,1.735,360,1.841,361,1.761,362,1.51,363,1.841,364,1.761,365,2.46,366,1.761,367,2.835,368,1.761,369,1.841,370,1.761,371,1.841,372,2.907,373,1.841,374,1.71,375,1.761,376,1.639,377,1.841,378,1.761,379,1.735,380,1.761,381,1.761,382,1.917,383,1.761,384,1.841,385,1.761,386,1.761,387,1.761,388,1.292,389,1.735,390,1.735,391,1.841,392,1.735,393,1.841,394,1.735,395,1.814,396,1.841,470,2.203,525,4.053,531,4.053,596,4.17,953,3.043,1051,2.057,1700,5.498,1708,4.978,1709,6.24,1720,4.053,1729,4.666,1730,4.666,1732,4.666,1750,4.666,1773,4.315,1998,4.666,2012,6.644,2013,6.692,2121,3.52,2159,4.666,2689,6.644,3897,5.199,3898,8.584,3899,8.005,3900,7.053,3901,7.053,3902,5.199,3903,5.199,3904,5.199,3905,5.199,3906,5.199,3907,5.199,3908,5.199,3909,7.053,3910,8.005,3911,5.199,3912,5.199,3913,5.199,3914,5.199,3915,5.199,3916,5.199,3917,5.199,3918,5.199,3919,5.199,3920,5.199,3921,5.199,3922,5.199]],["title/classes/RouterStateUrl.html",[0,0.279,764,3.917]],["body/classes/RouterStateUrl.html",[0,0.433,2,0.716,3,0.031,4,0.044,5,0.037,7,2.358,11,2.2,13,3.731,14,0.584,19,1.064,20,0.113,21,0.329,24,0.17,26,0.648,27,0.005,28,0.409,29,0.416,34,0.092,40,0.052,85,0.897,93,2.427,95,0.821,96,0.821,97,0.767,110,1.892,127,0.003,128,0.004,129,0.003,165,2.181,169,1.668,172,3.527,181,1.486,199,2.265,209,4.303,224,3.635,249,1.605,268,1.775,382,2.122,454,2.895,473,2.723,682,4.758,685,3.482,731,4.914,763,4.277,764,6.731,1036,4.914,1051,2.397,1225,4.252,1290,4.914,1384,3.788,2414,5.558,2420,4.724,2421,5.439,2422,7.569,2425,5.439,2426,7.005,2428,5.439,2429,7.569,2431,5.439,2432,5.439,2433,5.439,2434,8.671,2435,5.439,2436,6.478,2437,7.005,2438,8.018,2439,7.005,2440,7.005,2441,7.569,2442,7.005,2443,7.005,2444,7.005,2445,7.005,2446,7.005,2447,5.439,2448,5.439,2449,5.439,2450,5.439,2451,5.439,2452,5.439,2453,5.439,3923,6.06,3924,6.06]],["title/classes/SelectArchivedLightCard.html",[0,0.279,1038,3.063]],["body/classes/SelectArchivedLightCard.html",[0,0.531,2,0.689,3,0.03,4,0.03,5,0.035,8,1.026,10,2.016,14,0.938,15,0.22,16,0.446,17,0.767,18,1.684,19,1.217,20,0.193,21,0.246,22,1.524,24,0.237,26,0.401,27,0.005,28,0.393,29,0.401,31,0.606,32,0.528,34,0.1,35,0.503,40,0.06,41,0.8,83,1.695,85,0.606,95,1.319,96,1.319,97,1.233,113,1.163,127,0.003,128,0.003,129,0.003,146,1.175,150,1.548,209,2.385,228,1.946,302,1.343,314,2.932,388,1.448,413,3.949,416,1.952,417,1.43,418,1.486,419,1.671,420,1.671,437,2.245,441,1.763,442,1.813,443,1.788,457,1.813,459,2.232,488,2.345,534,3.349,714,4.662,872,5.012,887,3.176,901,3.801,902,5.166,903,5.012,907,3.67,908,5.166,1032,3.801,1035,4.114,1036,5.336,1037,3.801,1038,5.477,1039,4.114,1040,4.114,1041,4.114,1042,3.947,1043,4.114,1044,5.372,1045,3.947,3925,7.612,3926,5.83]],["title/classes/SelectLightCard.html",[0,0.279,456,2.251]],["body/classes/SelectLightCard.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.444,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,2.874,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,1.968,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,3927,5.921,3928,4.056]],["title/classes/SelectMenuLink.html",[0,0.279,2413,2.887]],["body/classes/SelectMenuLink.html",[0,0.52,2,0.589,3,0.025,4,0.025,5,0.03,7,1.94,8,1.043,14,0.919,15,0.188,16,0.402,17,0.691,18,1.693,19,1.192,20,0.19,21,0.289,22,1.304,24,0.219,26,0.608,27,0.005,28,0.336,29,0.343,31,0.518,32,0.451,34,0.081,35,0.43,40,0.058,41,0.684,60,1.619,69,2.958,83,1.62,85,0.876,95,1.268,96,1.268,97,1.186,113,1.309,127,0.002,128,0.003,129,0.002,153,2.192,154,3.07,171,2.899,172,2.503,173,2.958,199,1.239,272,1.664,362,3.044,408,2.275,411,1.448,416,1.804,417,1.223,418,1.271,423,1.41,424,1.55,437,2.075,457,2.436,473,2.943,540,1.888,803,4.178,1225,3.734,1231,2.865,1390,3.833,1526,4.469,1562,4.316,1567,4.178,1579,4.469,2309,2.716,2377,4.469,2400,5.107,2409,5.5,2410,4.469,2411,5.25,2413,4.847,2414,4.178,2415,4.469,2416,5.391,3113,3.14,3116,3.376,3117,2.948,3118,4.501,3119,4.38,3120,4.632,3121,4.632,3122,4.632,3123,3.376,3124,3.376,3125,3.376,3126,4.641,3127,4.641,3128,4.469,3129,5.304,3130,5.304,3131,4.641,3132,3.376,3133,3.376,3134,3.376,3135,3.376,3136,3.251,3929,6.855,3930,4.986]],["title/classes/SelectMenuLinkFailure.html",[0,0.279,3122,2.971]],["body/classes/SelectMenuLinkFailure.html",[0,0.522,2,0.601,3,0.026,4,0.026,5,0.031,7,1.977,8,1.046,14,0.923,15,0.192,16,0.407,17,0.7,18,1.698,19,1.197,20,0.19,21,0.293,22,1.329,24,0.221,26,0.612,27,0.005,28,0.343,29,0.349,31,0.528,32,0.46,34,0.082,35,0.438,40,0.059,41,0.698,60,1.64,69,2.193,83,1.63,85,0.883,95,1.274,96,1.274,97,1.192,113,1.333,127,0.002,128,0.003,129,0.002,153,1.625,154,2.276,171,2.387,172,2.536,173,2.997,199,1.263,272,1.696,362,3.025,408,2.298,411,1.476,416,1.822,417,1.247,418,1.295,423,1.437,424,1.58,437,2.096,457,2.46,473,2.966,540,1.4,803,3.098,1225,4.31,1231,2.92,1390,2.842,1526,3.313,1562,3.2,1567,3.098,1579,3.313,2309,2.769,2377,3.313,2400,5.544,2409,5.544,2410,3.313,2411,5.115,2413,4.546,2414,3.098,2415,3.313,2416,5.183,3113,3.2,3116,3.441,3117,3.005,3118,4.546,3119,4.424,3120,4.678,3121,4.678,3122,5.028,3123,3.441,3124,3.441,3125,3.441,3126,3.441,3127,3.441,3128,3.313,3129,5.757,3130,5.757,3131,4.702,3132,3.441,3133,3.441,3134,4.702,3135,4.702,3136,3.313,3931,6.945,3932,5.082]],["title/classes/SelectMenuLinkSuccess.html",[0,0.279,3121,2.971]],["body/classes/SelectMenuLinkSuccess.html",[0,0.522,2,0.599,3,0.026,4,0.026,5,0.031,7,1.971,8,1.045,14,0.922,15,0.191,16,0.406,17,0.699,18,1.697,19,1.196,20,0.19,21,0.292,22,1.325,24,0.221,26,0.611,27,0.005,28,0.342,29,0.348,31,0.526,32,0.458,34,0.082,35,0.437,40,0.059,41,0.695,60,1.637,69,2.186,83,1.628,85,0.882,95,1.273,96,1.273,97,1.191,113,1.314,127,0.002,128,0.003,129,0.002,153,1.62,154,2.269,171,2.382,172,3.101,173,2.99,199,1.259,272,1.691,362,3.024,408,2.294,411,1.471,416,1.819,417,1.243,418,1.291,423,1.433,424,1.575,437,2.092,457,2.456,473,2.962,540,1.395,803,3.088,1225,4.303,1231,3.982,1390,2.832,1526,3.303,1562,3.19,1567,3.088,1579,3.303,2309,2.76,2377,3.303,2400,5.536,2409,5.536,2410,3.303,2411,5.276,2413,4.538,2414,3.088,2415,3.303,2416,4.815,3113,3.19,3116,3.43,3117,2.995,3118,4.538,3119,4.416,3120,4.67,3121,5.021,3122,4.67,3123,3.43,3124,3.43,3125,3.43,3126,3.43,3127,3.43,3128,3.303,3129,5.75,3130,5.75,3131,5.75,3132,4.692,3133,3.43,3134,3.43,3135,3.43,3136,3.303,3933,6.93,3934,5.066]],["title/classes/SendArchiveQuery.html",[0,0.279,872,2.971]],["body/classes/SendArchiveQuery.html",[0,0.531,2,0.689,3,0.03,4,0.03,5,0.035,8,1.026,10,2.016,14,0.938,15,0.22,16,0.446,17,0.767,18,1.684,19,1.217,20,0.193,21,0.246,22,1.524,24,0.237,26,0.401,27,0.005,28,0.393,29,0.401,31,0.606,32,0.528,34,0.1,35,0.503,40,0.06,41,0.8,83,1.695,85,0.606,95,1.319,96,1.319,97,1.233,113,1.163,127,0.003,128,0.003,129,0.003,146,1.175,150,1.548,209,2.385,228,1.946,302,1.343,314,2.932,388,1.448,413,3.949,416,1.952,417,1.43,418,1.486,419,1.671,420,1.671,437,2.245,441,1.763,442,1.813,443,1.788,457,1.813,459,2.232,488,2.345,534,3.349,714,4.662,872,5.313,887,3.176,901,3.801,902,5.166,903,5.012,907,3.67,908,5.166,1032,3.801,1035,4.114,1036,5.336,1037,3.801,1038,5.166,1039,4.114,1040,5.372,1041,4.114,1042,3.947,1043,4.114,1044,4.114,1045,3.947,3935,7.612,3936,5.83]],["title/modules/ServicesModule.html",[604,2.209,616,3.715]],["body/modules/ServicesModule.html",[0,0.316,3,0.029,4,0.038,5,0.045,17,0.574,21,0.24,24,0.159,27,0.005,29,0.515,34,0.123,40,0.034,57,2.414,73,1.509,113,0.782,127,0.003,128,0.003,129,0.003,169,1.217,181,1.397,205,5.175,224,3.492,251,1.312,268,1.296,271,1.023,275,2.956,276,5.113,277,5.113,285,2.048,286,2.017,287,2.048,288,2.048,289,2.048,290,2.048,291,1.747,292,1.822,293,2.048,294,2.048,295,2.048,296,1.987,297,1.901,298,2.017,299,2.048,300,2.048,301,2.048,302,1.312,303,2.048,304,1.747,365,1.987,479,2.372,519,7.023,521,5.312,560,5.113,577,3.273,604,2.504,605,4.212,606,2.889,607,3.273,608,3.473,609,4.956,610,3.027,616,7.871,619,4.433,620,3.473,622,3.104,624,4.566,628,2.956,629,4.721,632,3.369,677,4.212,678,4.441,849,3.473,867,6.193,920,5.617,939,3.473,953,2.458,1109,4.721,1110,3.857,1664,5.113,1899,5.312,1906,3.857,2100,6.705,2122,4.728,2124,4.728,2205,6.956,2207,6.956,2233,7.023,2252,5.113,2882,7.023,3937,5.113,3938,5.113,3939,7.023,3940,7.406,3941,7.023,3942,5.697,3943,5.697,3944,7.498,3945,7.498,3946,5.697,3947,5.697,3948,5.113,3949,5.697,3950,7.498]],["title/classes/SetCardDataTimeline.html",[0,0.279,3456,3.547]],["body/classes/SetCardDataTimeline.html",[0,0.48,2,0.843,3,0.036,4,0.036,5,0.043,8,1.004,14,0.896,15,0.269,16,0.507,17,0.871,18,1.568,19,1.191,20,0.195,21,0.301,22,1.865,24,0.26,26,0.49,27,0.005,28,0.481,29,0.49,31,0.741,32,0.645,34,0.084,35,0.615,40,0.058,41,0.979,44,1.914,83,1.532,127,0.003,128,0.004,129,0.003,146,1.1,338,3.016,437,2.463,454,2.645,2714,3.79,3450,6.563,3451,5.56,3454,6.401,3455,5.919,3456,6.822,3457,6.401,3458,7.756,3459,6.401,3460,5.919,3951,8.642,3952,7.132]],["title/components/SettingsComponent.html",[234,0.984,374,1.653]],["body/components/SettingsComponent.html",[0,0.29,3,0.027,4,0.027,5,0.032,7,2.03,14,0.681,15,0.197,16,0.415,20,0.18,21,0.22,24,0.265,26,0.358,27,0.005,28,0.58,29,0.358,34,0.106,35,0.45,40,0.032,44,1.4,110,2.029,127,0.002,128,0.003,129,0.002,138,2.762,146,1.091,158,4.483,219,1.536,220,2.081,234,1.571,235,1.766,236,2.326,237,1.819,239,1.847,240,1.847,242,2.883,243,1.741,244,3.57,247,2.466,251,1.628,252,3.188,268,1.186,269,1.456,271,0.937,304,1.6,305,2.503,306,2.466,307,1.668,308,3.044,309,1.847,310,1.847,311,1.766,312,1.847,313,1.766,314,2.459,315,2.503,316,1.766,317,2.503,318,1.766,319,1.847,320,1.741,321,1.847,322,1.766,323,1.847,324,3.044,325,1.766,326,1.847,327,1.716,328,2.503,329,1.766,330,1.741,331,1.716,332,1.819,333,1.847,334,1.766,335,2.466,336,1.847,337,1.793,338,1.692,339,2.503,340,1.766,341,1.847,342,3.044,343,1.716,344,1.847,345,1.766,346,1.766,347,2.466,348,1.741,349,1.847,350,1.766,351,1.766,352,1.847,353,1.741,354,1.847,355,1.766,356,1.847,357,1.793,358,1.766,359,1.741,360,1.847,361,1.766,362,1.515,363,1.847,364,1.766,365,2.466,366,1.766,367,2.839,368,1.766,369,1.847,370,1.766,371,1.847,372,1.766,373,1.847,374,2.828,375,1.766,376,1.645,377,1.847,378,1.766,379,2.359,380,1.766,381,1.766,382,1.922,383,1.766,384,1.847,385,1.766,386,1.766,387,1.766,388,1.296,389,1.741,390,1.741,391,1.847,392,1.741,393,1.847,394,1.741,395,1.819,396,1.847,518,1.819,540,2.69,547,1.456,548,1.437,549,1.475,556,2.479,559,2.706,562,1.437,701,3.107,747,2.03,2822,3.179,3084,6.655,3087,4.329,3088,4.329,3750,5.511,3890,3.532,3953,4.681,3954,7.197,3955,7.197,3956,7.197,3957,7.069,3958,5.216,3959,5.216,3960,7.134,3961,5.216,3962,5.216,3963,5.216,3964,4.681,3965,4.681,3966,4.681,3967,4.681,3968,4.681,3969,4.681,3970,4.681,3971,4.681,3972,4.681,3973,4.329,3974,4.681,3975,4.681,3976,4.681]],["title/injectables/SettingsEffects.html",[819,4.171,862,1.402]],["body/injectables/SettingsEffects.html",[0,0.323,1,2.761,3,0.03,4,0.03,5,0.035,8,0.603,15,0.219,16,0.445,20,0.168,21,0.245,24,0.251,26,0.399,27,0.005,28,0.392,29,0.399,31,0.879,32,0.766,34,0.119,35,0.501,40,0.035,70,2.269,95,0.787,96,0.787,97,0.736,104,3.683,110,2.092,127,0.003,128,0.003,129,0.003,150,1.181,169,1.623,181,2.201,202,4.358,249,2.011,271,1.043,408,2.206,518,2.026,540,2.68,547,1.621,548,1.6,549,1.643,562,1.6,701,3.944,819,6.303,862,2.119,863,2.553,869,6.633,880,5.155,882,4.609,894,3.164,895,3.014,897,2.553,898,2.761,900,2.057,1258,3.218,1414,2.652,1466,5.141,1488,4.363,1510,6.075,1651,5.155,1652,4.821,1931,5.359,1935,6.333,1943,4.821,1944,4.821,1945,4.821,2060,5.92,2087,3.337,2088,4.294,2245,6.815,2246,6.815,2929,3.337,2930,3.54,3141,5.647,3142,3.434,3144,3.434,3145,3.434,3939,6.633,3948,5.213,3977,5.808,3978,8.461,3979,5.808,3980,7.594,3981,7.594,3982,7.594,3983,7.594,3984,7.594,3985,5.808,3986,7.594,3987,5.808,3988,7.594,3989,7.594,3990,7.594,3991,7.594,3992,7.594,3993,5.808,3994,5.213]],["title/interfaces/SettingsInputs.html",[747,1.955,3960,4.171]],["body/interfaces/SettingsInputs.html",[0,0.365,3,0.034,4,0.034,5,0.04,7,3.657,14,0.634,15,0.248,16,0.482,20,0.189,27,0.005,34,0.114,35,0.567,40,0.04,110,1.965,127,0.003,128,0.004,129,0.003,138,3.057,158,3.679,234,1.611,242,2.957,244,2.196,247,2.295,252,2.44,271,1.181,347,3.278,374,2.165,379,3.137,540,2.665,547,1.836,548,1.812,549,1.861,556,3.127,559,3.414,562,1.812,701,2.892,747,2.56,748,3.584,2822,5.729,3084,5.461,3087,5.461,3088,5.461,3750,5.129,3890,6.363,3953,5.905,3954,5.905,3955,5.905,3956,5.905,3960,7.8,3964,5.905,3965,5.905,3966,5.905,3967,5.905,3968,5.905,3969,5.905,3970,5.905,3971,5.905,3972,5.905,3973,5.461,3974,8.435,3975,8.435,3976,8.435]],["title/modules/SettingsModule.html",[604,2.209,3995,3.917]],["body/modules/SettingsModule.html",[0,0.347,3,0.032,4,0.041,5,0.048,17,0.63,20,0.117,27,0.005,34,0.122,40,0.038,57,2.649,73,1.656,127,0.003,128,0.004,129,0.003,271,1.122,275,3.243,285,2.247,286,2.213,287,2.247,288,2.247,289,2.247,290,2.247,291,1.917,292,1.999,293,2.247,294,2.247,295,2.247,296,2.18,297,2.086,298,2.213,299,2.247,300,2.247,301,2.247,302,1.44,303,2.247,304,1.917,322,3.299,346,3.299,358,3.299,366,3.299,374,3.204,380,3.299,385,3.299,386,2.967,604,2.747,606,3.169,607,3.591,608,5.341,609,3.696,610,3.322,619,4.708,620,3.81,622,4.338,624,4.338,629,5.013,632,3.696,633,6.207,634,6.207,635,3.169,639,4.232,644,5.886,645,3.948,646,3.1,701,2.747,1612,4.621,2774,5.61,2800,5.188,2801,6.82,2982,7.146,3525,5.61,3748,5.188,3995,8.236,3996,5.61,3997,5.61,3998,5.61,3999,7.201,4000,6.251,4001,5.61,4002,6.251,4003,6.251,4004,6.251,4005,6.251,4006,6.251,4007,7.146,4008,6.251,4009,5.61]],["title/modules/SettingsRoutingModule.html",[604,2.209,3999,3.715]],["body/modules/SettingsRoutingModule.html",[0,0.411,3,0.038,4,0.045,5,0.053,17,0.747,27,0.005,34,0.111,40,0.045,73,1.963,127,0.003,128,0.004,129,0.003,165,1.772,234,1.451,271,1.33,285,2.664,286,2.624,287,2.664,288,2.664,289,2.664,290,2.664,291,2.272,292,2.369,293,2.664,294,2.664,295,2.664,296,2.585,297,2.473,298,2.624,299,2.664,300,2.664,301,2.664,302,1.706,303,2.664,374,2.909,606,3.757,610,3.937,622,4.036,624,4.817,680,5.478,683,6.537,684,6.162,685,4.257,690,5.478,694,5.776,695,5.776,1092,5.776,3999,6.537,4001,6.65,4010,7.409]],["title/injectables/SettingsService.html",[862,1.402,3939,3.715]],["body/injectables/SettingsService.html",[0,0.38,3,0.035,4,0.035,5,0.041,15,0.258,16,0.494,20,0.178,21,0.289,24,0.274,26,0.579,27,0.005,28,0.568,29,0.579,34,0.119,35,0.59,40,0.041,85,0.99,110,2.212,127,0.003,128,0.004,129,0.003,169,1.801,249,2.674,251,1.941,268,1.917,271,1.229,540,2.695,547,1.91,548,1.885,549,1.936,562,1.885,628,3.551,701,3.704,771,3.551,772,3.637,862,2.352,863,3.008,1105,5.571,1126,4.047,1659,6.143,2099,4.634,3939,6.23,4011,6.844,4012,9.132,4013,9.132,4014,9.53,4015,8.428,4016,8.428,4017,6.844,4018,6.844,4019,6.844,4020,6.844,4021,6.844,4022,6.143,4023,6.844,4024,6.844,4025,6.844,4026,6.844]],["title/interfaces/SettingsState.html",[747,1.955,758,4.171]],["body/interfaces/SettingsState.html",[3,0.039,4,0.039,5,0.046,15,0.285,16,0.524,20,0.184,27,0.005,40,0.054,85,0.99,113,1.38,127,0.003,128,0.004,129,0.003,138,2.922,165,1.806,170,2.757,179,2.942,577,5.777,587,6.555,701,4.33,747,2.938,748,4.113,758,7.908,3150,4.922,4027,7.55,4028,7.55]],["title/components/SeveritySortComponent.html",[234,0.984,375,1.702]],["body/components/SeveritySortComponent.html",[0,0.302,3,0.028,4,0.028,5,0.033,14,0.7,15,0.205,16,0.426,20,0.153,21,0.229,24,0.245,26,0.374,27,0.005,28,0.589,29,0.374,31,0.565,32,0.492,34,0.103,35,0.469,40,0.033,44,1.459,110,2.054,127,0.002,128,0.003,129,0.002,146,1.122,219,1.6,220,2.14,234,1.604,235,1.841,236,2.391,237,1.896,239,1.925,240,1.925,242,2.944,243,1.815,244,3.577,247,2.536,251,1.674,252,3.242,268,1.653,269,2.285,271,0.976,304,1.667,305,2.574,306,2.536,307,1.738,308,3.096,309,1.925,310,1.925,311,1.841,312,1.925,313,1.841,314,2.511,315,2.574,316,1.841,317,2.574,318,1.841,319,1.925,320,1.815,321,1.925,322,1.841,323,1.925,324,3.096,325,1.841,326,1.925,327,1.789,328,2.574,329,1.841,330,1.815,331,1.789,332,1.896,333,1.925,334,1.841,335,2.536,336,1.925,337,1.868,338,1.763,339,2.574,340,1.841,341,1.925,342,3.096,343,1.789,344,1.925,345,1.841,346,1.841,347,1.896,348,1.815,349,1.925,350,1.841,351,1.841,352,1.925,353,1.815,354,1.925,355,1.841,356,1.925,357,1.868,358,1.841,359,1.815,360,1.925,361,1.841,362,1.579,363,1.925,364,1.841,365,2.536,366,1.841,367,2.9,368,1.841,369,1.925,370,1.841,371,1.925,372,1.841,373,1.925,374,1.789,375,2.961,376,2.873,377,1.925,378,1.841,379,1.815,380,1.841,381,1.841,382,1.976,383,1.841,384,1.925,385,1.841,386,1.841,387,1.841,388,1.351,389,1.815,390,1.815,391,1.925,392,1.815,393,1.925,394,1.815,395,1.896,396,1.925,518,1.896,548,1.497,549,1.537,562,1.497,581,2.482,853,4.921,854,5.13,953,3.136,2010,6.43,2082,3.837,2983,8.177,2984,8.177,4029,5.437,4030,7.269,4031,8.189,4032,8.742,4033,7.269,4034,5.437,4035,5.437,4036,7.269,4037,7.269,4038,7.269]],["title/classes/State.html",[0,0.279,11,1.281]],["body/classes/State.html",[0,0.53,2,0.554,3,0.024,4,0.024,5,0.028,8,0.487,11,1.932,17,0.473,19,1.31,20,0.154,21,0.408,24,0.131,26,0.322,27,0.005,28,0.511,29,0.322,32,0.594,34,0.089,40,0.06,41,0.901,70,1.768,85,1.067,95,1.272,96,1.272,97,1.189,127,0.003,128,0.003,129,0.002,132,2.771,134,4.003,135,5.555,136,3.538,137,3.773,138,2.735,139,4.134,140,4.134,141,4.134,142,2.693,143,2.183,145,3.407,146,1.013,147,4.262,148,1.918,149,2.183,150,0.953,151,5.643,152,2.228,153,1.499,154,2.941,155,2.951,156,2.951,157,2.951,158,2.62,159,2.951,160,4.355,161,2.857,162,2.951,163,2.771,164,4.134,165,2.144,166,3.256,167,2.771,168,4.134,169,1.62,170,2.397,171,2.257,172,2.767,173,2.022,174,2.857,175,2.951,176,3.671,177,4.003,178,4.003,179,3.028,180,2.951,181,2.199,182,2.951,183,2.857,184,2.857,185,2.949,186,2.951,187,2.951,188,2.857,189,1.986,190,2.553,191,2.693,192,2.951,193,2.62,194,2.951,195,2.951,196,2.771,197,3.058,198,2.951,199,1.164,200,2.693,201,2.857,202,2.099,203,2.857,204,2.49,205,2.553,206,1.951,207,2.951,208,2.951,209,3.102,210,2.951,211,2.951,212,2.951,213,4.134,214,2.951,215,2.951,216,2.951,217,2.951,218,4.003,219,1.38,220,1.38,221,2.857,222,2.857,223,2.857,224,2.183,225,1.951,226,2.951,227,2.951,228,2.192,229,2.951,230,2.62,231,4.003,232,2.951,233,2.951,4039,4.687,4040,4.687]],["title/modules/StateModule.html",[604,2.209,617,3.715]],["body/modules/StateModule.html",[0,0.357,3,0.033,4,0.041,5,0.049,9,2.935,15,0.242,17,0.648,24,0.18,27,0.005,34,0.12,35,0.699,40,0.039,57,2.724,73,1.703,110,1.776,127,0.003,128,0.004,129,0.003,169,1.374,224,3.775,251,1.48,268,1.462,271,1.154,275,3.335,285,2.311,286,2.276,287,2.311,288,2.311,289,2.311,290,2.311,291,1.971,292,2.056,293,2.311,294,2.311,295,2.311,296,2.242,297,2.146,298,2.276,299,2.311,300,2.311,301,2.311,302,1.48,303,2.311,304,1.971,335,2.242,604,2.825,606,3.259,607,3.693,608,4.94,609,4.792,610,3.416,617,7.363,619,4.792,620,3.918,622,4.415,624,4.836,629,5.103,632,3.801,677,4.752,678,5.011,682,3.918,763,5.72,765,5.769,771,4.985,772,3.416,834,5.769,835,5.769,838,5.769,839,7.274,895,3.335,1735,7.274,2205,7.367,2207,7.367,2420,6.92,2422,7.367,2429,6.727,2438,5.335,2441,5.335,2460,5.769,4041,5.769,4042,5.769,4043,6.428,4044,6.428,4045,6.428,4046,6.428,4047,6.428,4048,5.769,4049,8.105,4050,6.428,4051,6.428,4052,6.428,4053,6.428,4054,6.428,4055,6.428,4056,6.428,4057,6.428,4058,6.428,4059,6.428,4060,6.428,4061,6.428,4062,6.428]],["title/components/TagsFilterComponent.html",[234,0.984,378,1.702]],["body/components/TagsFilterComponent.html",[0,0.249,3,0.023,4,0.033,5,0.039,14,0.614,15,0.169,16,0.374,17,0.453,20,0.159,21,0.189,24,0.254,26,0.309,27,0.005,28,0.574,29,0.309,31,0.467,32,0.407,34,0.114,35,0.387,40,0.027,44,1.205,45,1.359,73,1.19,97,0.569,110,1.992,127,0.002,128,0.003,129,0.002,146,0.983,169,1.362,179,2.097,181,1.817,189,1.904,219,1.322,220,1.876,234,1.451,235,1.521,236,2.097,237,1.567,238,1.938,239,1.591,240,1.591,242,2.663,243,1.499,244,3.543,245,2.91,247,2.223,249,2.503,251,1.468,252,2.989,268,1.685,269,1.779,271,0.807,273,2.447,285,1.615,286,1.591,287,1.615,288,1.615,289,1.615,290,1.615,291,1.954,292,2.578,293,1.615,294,1.615,295,1.615,296,1.567,297,1.499,298,1.591,299,1.615,300,1.615,301,1.615,302,1.035,303,1.615,304,1.378,305,2.257,306,2.223,307,1.436,308,2.854,309,1.591,310,1.591,311,1.521,312,1.591,313,1.521,314,2.271,315,2.257,316,1.521,317,2.257,318,1.521,319,1.591,320,1.499,321,1.591,322,1.521,323,1.591,324,2.854,325,1.521,326,1.591,327,1.478,328,2.257,329,1.521,330,1.499,331,1.478,332,1.567,333,1.591,334,1.521,335,2.223,336,1.591,337,1.544,338,1.457,339,2.257,340,1.521,341,1.591,342,2.854,343,1.478,344,1.591,345,1.521,346,1.521,347,1.567,348,1.499,349,1.591,350,1.521,351,1.521,352,1.591,353,1.499,354,1.591,355,1.521,356,1.591,357,1.544,358,1.521,359,1.499,360,1.591,361,1.521,362,1.305,363,1.591,364,1.521,365,2.223,366,1.521,367,2.623,368,1.521,369,1.591,370,1.521,371,1.591,372,1.521,373,1.591,374,1.478,375,1.521,376,1.416,377,1.591,378,2.73,379,3.199,380,1.521,381,1.521,382,1.733,383,1.521,384,1.591,385,1.521,386,1.521,387,1.521,388,2.114,389,1.499,390,1.499,391,1.591,392,1.499,393,1.591,394,1.499,395,1.567,396,1.591,540,2.04,547,1.254,548,1.237,549,1.27,562,1.237,635,2.278,841,3.662,846,2.929,847,2.828,848,2.656,849,2.738,856,2.738,900,1.591,917,2.656,924,4.141,1114,2.331,1258,1.904,1428,2.929,1528,2.828,1614,4.38,1618,4.515,1623,4.766,1639,2.828,1655,3.502,1656,4.968,1657,3.321,1658,3.17,1675,3.502,1677,3.502,1679,3.502,1687,3.502,1688,3.502,1796,2.929,2010,6.557,2082,3.17,2504,3.321,2512,4.711,2524,4.032,2550,4.498,2856,3.041,2932,3.502,2980,8.338,2981,8.338,4063,6.648,4064,6.148,4065,7.407,4066,6.69,4067,4.492,4068,8.511,4069,6.373,4070,4.492,4071,4.492,4072,3.728,4073,3.728,4074,4.492,4075,6.373,4076,3.728,4077,3.728,4078,4.492,4079,3.728,4080,4.492,4081,4.492,4082,4.032,4083,3.728,4084,4.492,4085,4.492,4086,3.728,4087,4.492,4088,4.492,4089,4.492,4090,4.032,4091,3.728,4092,4.032,4093,4.032]],["title/components/TextSettingComponent.html",[234,0.984,380,1.702]],["body/components/TextSettingComponent.html",[0,0.225,3,0.021,4,0.021,5,0.025,14,0.571,15,0.153,16,0.347,20,0.181,21,0.171,24,0.286,26,0.606,27,0.005,28,0.632,29,0.606,31,0.615,32,0.773,34,0.096,35,0.35,40,0.025,44,1.089,85,0.799,110,1.871,127,0.002,128,0.003,129,0.002,138,2.448,142,2.332,146,0.914,165,1.417,169,1.495,179,1.335,181,1.716,197,1.89,219,2.408,220,1.744,225,2.913,234,1.371,235,1.375,236,1.949,237,1.416,239,1.437,240,1.437,242,2.515,243,1.355,244,3.523,247,2.067,249,2.263,251,1.364,252,2.595,253,3.369,254,2.938,268,2.184,269,2.384,271,0.729,291,1.817,292,1.298,304,1.245,305,2.098,306,2.067,307,1.298,308,2.724,309,1.437,310,1.437,311,1.375,312,1.437,313,1.375,314,2.146,315,2.098,316,1.375,317,2.098,318,1.375,319,1.437,320,1.355,321,1.437,322,3.422,323,2.098,324,2.724,325,1.375,326,1.437,327,1.335,328,2.098,329,1.375,330,1.355,331,1.335,332,1.416,333,1.437,334,1.375,335,2.067,336,1.437,337,1.395,338,1.316,339,2.098,340,1.375,341,1.437,342,2.724,343,1.335,344,1.437,345,1.375,346,1.375,347,1.416,348,1.355,349,1.437,350,1.375,351,1.375,352,1.437,353,1.355,354,1.437,355,1.375,356,1.437,357,1.395,358,1.375,359,1.355,360,1.437,361,1.375,362,1.179,363,1.437,364,1.375,365,2.067,366,1.375,367,2.478,368,1.375,369,1.437,370,1.375,371,1.437,372,1.375,373,1.437,374,1.335,375,1.375,376,1.28,377,1.437,378,1.375,379,1.355,380,2.605,381,1.375,382,1.611,383,1.375,384,1.437,385,1.375,386,1.375,387,1.375,388,1.008,389,1.355,390,1.355,391,1.437,392,1.355,393,1.437,394,1.355,395,1.416,396,1.437,518,1.416,548,1.118,549,1.148,635,2.058,924,4.301,932,2.556,1275,3.503,1397,3.148,1612,3.001,1613,3.164,1614,4.137,1615,5.774,1616,4.619,1617,4.181,1618,3.611,1619,6.841,1620,4.181,1621,6.225,1622,5.429,1623,4.137,1624,4.938,1625,5.429,1626,4.181,1627,4.181,1628,4.181,1631,3.643,1633,2.865,1635,2.865,1638,4.938,1639,5.151,1641,4.181,1645,4.938,1660,2.865,1968,3.611,2015,6.71,2514,5.807,2547,6.048,2550,2.865,2775,6.904,2776,6.279,2780,3.001,2781,3.001,2782,3.001,2787,3.001,2788,3.001,2789,3.001,2790,3.001,2791,3.001,2792,3.001,2793,3.001,2794,3.001,2795,3.001,2796,3.001,2797,3.001,2798,3.001,2799,3.001,2800,7.504,2801,3.001,2802,3.001,2806,4.619,2807,4.917,2808,4.917,3551,3.001,3552,3.369,3553,3.369,3556,3.643,3557,3.643,4094,9.041,4095,5.925,4096,4.059,4097,4.059,4098,4.059,4099,4.059,4100,4.059,4101,4.059,4102,4.059,4103,4.059,4104,4.059,4105,4.059]],["title/classes/Third.html",[0,0.279,153,1.607]],["body/classes/Third.html",[0,0.524,2,0.529,3,0.023,4,0.023,5,0.027,8,0.465,11,1.884,15,0.169,17,0.745,19,1.307,20,0.159,21,0.404,24,0.178,26,0.437,27,0.005,28,0.573,29,0.437,32,0.575,34,0.087,40,0.06,41,0.872,70,1.044,85,1.09,95,1.257,96,1.257,97,1.176,127,0.003,128,0.003,129,0.002,132,2.646,134,3.874,135,5.502,136,3.497,137,3.652,138,2.706,139,4.002,140,4.002,141,4.002,142,2.571,143,2.084,145,4.41,146,1.312,147,3.298,148,1.831,149,2.084,150,0.91,151,5.56,152,2.127,153,2.032,154,3.604,155,4.654,156,4.654,157,4.654,158,4.133,159,4.654,160,4.883,161,4.505,162,4.002,163,2.646,164,4.002,165,2.112,166,3.152,167,2.646,168,4.002,169,1.579,170,2.321,171,2.184,172,2.699,173,1.931,174,2.728,175,2.818,176,2.502,177,3.874,178,3.874,179,2.988,180,2.818,181,2.166,182,2.818,183,2.728,184,2.728,185,2.876,186,2.818,187,2.818,188,2.728,189,1.896,190,2.438,191,2.571,192,2.818,193,2.502,194,2.818,195,2.818,196,2.646,197,2.96,198,2.818,199,1.112,200,2.571,201,2.728,202,2.004,203,2.728,204,2.378,205,2.438,206,1.863,207,2.818,208,2.818,209,3.024,210,2.818,211,2.818,212,2.818,213,4.002,214,2.818,215,2.818,216,2.818,217,2.818,218,3.874,219,1.317,220,1.317,221,2.728,222,2.728,223,2.728,224,2.084,225,1.863,226,2.818,227,2.818,228,2.121,229,2.818,230,2.502,231,3.874,232,2.818,233,2.818,251,1.464,268,1.018,4106,6.356,4107,4.475,4108,4.475,4109,4.475]],["title/classes/ThirdActionAlreadyLoaded.html",[0,0.279,472,2.251]],["body/classes/ThirdActionAlreadyLoaded.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,2.794,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.049,459,3.29,460,1.782,461,3.165,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.165,470,1.75,471,1.815,472,3.473,473,1.44,474,3.165,475,1.963,476,3.165,477,1.923,478,3.165,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.004,486,2.004,487,2.004,488,1.661,489,2.004,490,2.004,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.004,500,2.912,501,2.004,502,2.004,503,2.004,504,1.923,4110,5.999]],["title/classes/ThirdActionAlreadyUpdated.html",[0,0.279,474,2.251]],["body/classes/ThirdActionAlreadyUpdated.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,2.794,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.049,459,3.29,460,1.782,461,3.165,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.165,470,1.75,471,1.815,472,3.165,473,1.44,474,3.473,475,1.963,476,3.165,477,1.923,478,3.165,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.004,486,2.004,487,2.004,488,1.661,489,2.004,490,2.004,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.004,500,2.004,501,2.912,502,2.004,503,2.004,504,1.923,4111,5.999]],["title/injectables/ThirdActionService.html",[205,2.738,862,1.402]],["body/injectables/ThirdActionService.html",[0,0.259,3,0.024,4,0.024,5,0.028,8,1.055,10,1.235,15,0.176,16,0.384,19,0.932,20,0.176,21,0.197,24,0.262,26,0.631,27,0.005,28,0.62,29,0.631,31,0.484,34,0.116,35,0.402,40,0.028,45,2.707,85,1.067,95,0.632,96,0.632,97,0.591,110,2.013,113,1.038,127,0.003,128,0.003,129,0.002,138,1.875,150,0.948,165,2.14,169,1.751,181,1.854,185,3.65,189,1.976,203,3.989,205,3.565,249,1.235,250,8.248,251,1.507,253,5.431,257,7.164,259,8.669,268,2.035,269,2.11,271,0.837,272,1.557,273,2.541,274,2.843,275,2.42,330,1.557,332,1.627,468,4.19,497,3.11,498,4.253,540,2.531,547,1.302,548,1.285,549,1.319,562,1.285,628,2.42,771,2.42,772,2.478,862,1.826,863,2.05,900,1.651,1105,5.004,1114,2.42,1288,3.158,1351,2.936,1383,2.541,1384,3.176,1386,3.76,1574,3.158,1575,2.936,2099,3.158,2217,3.636,2218,4.186,2294,3.871,2815,4.838,3523,4.186,4112,9.533,4113,4.664,4114,7.56,4115,6.544,4116,6.544,4117,6.544,4118,6.544,4119,6.544,4120,6.544,4121,9.533,4122,8.949,4123,4.664,4124,9.533,4125,6.544,4126,4.664,4127,6.544,4128,4.664,4129,4.664,4130,6.544,4131,4.664,4132,6.544,4133,4.664,4134,6.544,4135,4.664,4136,4.664,4137,4.664,4138,4.664,4139,4.664,4140,4.664,4141,6.544,4142,4.664,4143,8.196,4144,4.664,4145,8.632,4146,4.664,4147,4.664,4148,6.544,4149,6.544,4150,4.664,4151,6.544,4152,4.664,4153,4.664,4154,7.56,4155,4.664,4156,4.664,4157,4.664,4158,4.664,4159,4.664,4160,4.664,4161,4.664,4162,4.664,4163,4.664,4164,4.664,4165,4.664,4166,4.664,4167,4.664,4168,4.664,4169,4.664,4170,4.664]],["title/classes/ThirdMenu.html",[0,0.279,173,2.168]],["body/classes/ThirdMenu.html",[0,0.529,2,0.551,3,0.024,4,0.024,5,0.028,8,0.484,11,1.667,17,0.47,19,1.31,20,0.153,21,0.407,24,0.13,26,0.32,27,0.005,28,0.509,29,0.32,32,0.592,34,0.089,40,0.06,41,0.898,70,1.087,85,1.083,95,1.27,96,1.27,97,1.188,127,0.003,128,0.003,129,0.002,132,2.755,134,3.986,135,5.661,136,3.533,137,3.757,138,2.731,139,4.117,140,4.117,141,4.117,142,2.677,143,2.17,146,1.009,147,3.393,148,1.906,149,2.17,150,0.947,151,5.158,152,2.214,153,1.49,154,3.669,155,2.934,156,2.934,157,2.934,158,2.605,159,2.934,160,4.958,161,2.84,162,2.934,163,2.755,164,4.117,165,2.14,166,3.243,167,2.755,168,4.117,169,1.615,170,2.388,171,2.597,172,2.759,173,2.822,174,4.606,175,2.934,176,2.605,177,3.986,178,3.986,179,3.023,180,2.934,181,2.194,182,2.934,183,2.84,184,2.84,185,2.94,186,2.934,187,2.934,188,2.84,189,1.974,190,2.538,191,2.677,192,2.934,193,2.605,194,2.934,195,2.934,196,2.755,197,3.046,198,2.934,199,1.157,200,2.677,201,2.84,202,2.087,203,2.84,204,2.476,205,2.538,206,1.94,207,2.934,208,2.934,209,3.092,210,2.934,211,2.934,212,2.934,213,4.117,214,2.934,215,2.934,216,2.934,217,2.934,218,3.986,219,1.372,220,1.372,221,2.84,222,2.84,223,2.84,224,2.17,225,1.94,226,2.934,227,2.934,228,2.183,229,2.934,230,2.605,231,3.986,232,2.934,233,2.934,4171,4.182,4172,4.659]],["title/classes/ThirdMenuEntry.html",[0,0.279,160,2.887]],["body/classes/ThirdMenuEntry.html",[0,0.53,2,0.553,3,0.024,4,0.024,5,0.028,8,0.486,11,1.671,17,0.472,19,1.31,20,0.154,21,0.407,24,0.131,26,0.321,27,0.005,28,0.511,29,0.321,32,0.593,34,0.089,40,0.06,41,0.9,70,1.091,85,1.083,95,1.271,96,1.271,97,1.189,127,0.003,128,0.003,129,0.002,132,2.766,134,3.997,135,5.665,136,3.536,137,3.768,138,2.734,139,4.129,140,4.129,141,4.129,142,2.687,143,2.178,146,1.012,147,3.402,148,1.914,149,2.178,150,0.951,151,5.167,152,2.223,153,1.496,154,2.937,155,2.945,156,2.945,157,2.945,158,2.615,159,2.945,160,4.715,161,2.851,162,2.945,163,2.766,164,4.129,165,2.142,166,3.252,167,2.766,168,4.129,169,1.618,170,2.394,171,2.602,172,3.155,173,2.018,174,2.851,175,2.945,176,2.615,177,3.997,178,3.997,179,3.026,180,2.945,181,2.197,182,2.945,183,2.851,184,2.851,185,2.946,186,2.945,187,2.945,188,2.851,189,1.982,190,2.548,191,2.687,192,2.945,193,2.615,194,2.945,195,2.945,196,2.766,197,3.054,198,2.945,199,1.162,200,2.687,201,2.851,202,2.095,203,2.851,204,2.486,205,2.548,206,1.947,207,2.945,208,2.945,209,3.098,210,2.945,211,2.945,212,2.945,213,4.129,214,2.945,215,2.945,216,2.945,217,2.945,218,3.997,219,1.377,220,1.377,221,2.851,222,2.851,223,2.851,224,2.178,225,1.947,226,2.945,227,2.945,228,2.189,229,2.945,230,2.615,231,3.997,232,2.945,233,2.945,4171,4.198,4173,4.678]],["title/modules/ThirdpartyModule.html",[604,2.209,4174,3.917]],["body/modules/ThirdpartyModule.html",[0,0.398,3,0.037,4,0.044,5,0.052,17,0.722,27,0.005,34,0.114,40,0.043,57,3.036,73,1.898,127,0.003,128,0.004,129,0.003,271,1.286,275,3.717,285,2.576,286,2.537,287,2.576,288,2.576,289,2.576,290,2.576,291,2.197,292,2.291,293,2.576,294,2.576,295,2.576,296,2.499,297,2.391,298,2.537,299,2.576,300,2.576,301,2.576,302,1.65,303,2.576,304,2.197,353,3.362,604,3.149,606,3.632,607,4.116,608,5.679,609,4.236,610,3.807,619,5.124,620,4.367,622,4.721,624,4.721,629,5.456,632,4.236,639,4.85,698,5.946,4174,8.016,4175,6.43,4176,6.43,4177,6.43,4178,7.447,4179,7.164,4180,6.43]],["title/modules/ThirdpartyRoutingModule.html",[604,2.209,4178,3.715]],["body/modules/ThirdpartyRoutingModule.html",[0,0.413,3,0.038,4,0.045,5,0.054,17,0.751,27,0.005,34,0.112,40,0.045,73,1.972,127,0.003,128,0.004,129,0.003,165,1.78,234,1.458,271,1.337,285,2.676,286,2.636,287,2.676,288,2.676,289,2.676,290,2.676,291,2.283,292,2.38,293,2.676,294,2.676,295,2.676,296,2.597,297,2.485,298,2.636,299,2.676,300,2.676,301,2.676,302,1.714,303,2.676,353,2.96,606,3.774,610,3.956,622,4.055,624,4.831,680,5.503,683,6.556,684,6.175,685,4.277,690,5.503,1092,5.803,4178,6.556,4180,6.681,4181,7.444,4182,7.444]],["title/classes/ThirdsI18nLoader.html",[0,0.279,4183,4.171]],["body/classes/ThirdsI18nLoader.html",[0,0.357,2,0.537,3,0.023,4,0.023,5,0.027,8,0.667,11,1.157,14,0.619,15,0.171,19,0.559,20,0.12,21,0.191,24,0.18,26,0.441,27,0.005,28,0.502,29,0.441,34,0.112,40,0.045,85,1.084,113,0.623,127,0.002,128,0.003,129,0.002,136,1.71,143,2.114,146,0.991,148,1.857,150,1.515,153,2.59,154,4.428,163,2.684,165,2.228,166,2.251,167,2.684,169,2.201,172,1.657,173,3.214,181,2.406,197,2.99,199,1.128,206,1.89,209,3.975,219,1.89,249,2.145,251,1.479,268,1.032,271,0.815,272,1.515,362,1.865,388,1.128,441,1.942,442,1.411,443,1.392,450,1.995,540,2.645,547,1.267,562,1.25,628,2.355,645,2.251,646,2.251,706,2.959,728,2.033,742,2.684,771,2.355,772,2.412,862,1.792,880,2.608,897,1.995,898,2.157,900,1.607,997,2.538,1105,4.165,1107,3.073,1258,2.721,1290,2.858,1384,2.203,1420,2.684,1466,3.073,1521,3.767,1665,3.204,1783,4.405,1899,4.96,1919,3.767,1935,3.204,2123,7.363,2176,3.767,2416,4.541,2714,2.412,3181,6.437,3242,3.539,3642,5.807,4183,5.329,4184,4.074,4185,7.268,4186,6.42,4187,5.762,4188,4.539,4189,5.762,4190,4.539,4191,4.539,4192,6.686,4193,4.074,4194,4.074,4195,4.074,4196,4.074,4197,4.074,4198,4.074,4199,4.074,4200,4.074,4201,4.074,4202,5.762,4203,4.074,4204,4.074,4205,4.074,4206,4.074,4207,4.074,4208,5.762,4209,4.074,4210,4.074,4211,4.074,4212,4.074,4213,5.762,4214,4.074,4215,4.074,4216,4.074,4217,5.762,4218,4.074,4219,4.074,4220,4.074,4221,4.074,4222,4.074,4223,4.074,4224,4.074,4225,4.074,4226,4.074,4227,4.074,4228,4.074,4229,4.074,4230,4.074,4231,4.074,4232,4.074,4233,5.762,4234,4.074,4235,4.074,4236,4.074,4237,4.074,4238,4.074,4239,4.074,4240,4.074,4241,4.074,4242,4.074,4243,4.074,4244,5.762,4245,4.074,4246,4.074,4247,4.074,4248,4.074,4249,4.074,4250,4.074,4251,4.074,4252,4.074,4253,4.074,4254,4.074,4255,4.074,4256,4.074,4257,4.074,4258,3.356,4259,4.074,4260,3.767,4261,4.074,4262,4.074,4263,4.074,4264,4.074,4265,5.762,4266,4.074,4267,4.074,4268,4.074,4269,4.074,4270,4.074,4271,4.074,4272,3.767,4273,4.074,4274,4.074,4275,4.074,4276,6.686,4277,4.074,4278,4.074,4279,4.074,4280,4.074,4281,4.074,4282,4.074,4283,4.074,4284,4.074,4285,4.074]],["title/injectables/ThirdsService.html",[862,1.402,1899,2.81]],["body/injectables/ThirdsService.html",[0,0.305,3,0.019,4,0.019,5,0.022,8,0.571,11,1.68,14,0.353,15,0.138,16,0.322,19,0.812,20,0.178,21,0.155,24,0.271,26,0.638,27,0.005,28,0.647,29,0.638,31,0.381,32,0.332,34,0.106,40,0.04,85,1.109,113,0.503,127,0.002,128,0.003,129,0.002,136,1.382,143,1.708,145,2.852,146,1.271,148,1.501,150,1.489,153,2.341,154,4.549,163,2.169,165,2.1,166,3.269,167,2.169,169,2.149,172,1.339,173,2.845,181,2.332,197,2.56,199,0.911,206,1.527,209,3.799,219,1.618,249,2.491,251,1.266,268,2.112,271,0.659,272,1.224,362,1.597,388,0.911,441,2.215,442,1.14,443,1.125,450,1.612,540,2.686,547,1.024,562,1.01,628,1.903,645,1.819,646,1.819,706,2.391,728,1.643,742,2.169,771,1.903,772,1.949,862,1.534,863,1.612,880,2.107,897,1.612,898,1.743,900,1.299,997,2.051,1105,4.604,1107,2.483,1258,2.329,1290,2.309,1384,1.78,1420,2.169,1466,2.483,1521,3.044,1665,2.589,1783,5.407,1899,4.094,1919,3.044,1935,2.589,2099,2.483,2123,6.834,2176,3.044,2416,4.018,2714,1.949,3181,6.638,3242,2.859,3642,5.139,4183,3.044,4184,3.292,4185,5.917,4187,3.292,4189,3.292,4192,6.572,4193,3.292,4194,5.917,4195,5.917,4196,5.917,4197,3.292,4198,3.292,4199,3.292,4200,4.933,4201,3.292,4202,4.933,4203,4.933,4204,3.292,4205,3.292,4206,3.292,4207,3.292,4208,4.933,4209,3.292,4210,3.292,4211,3.292,4212,4.933,4213,4.933,4214,3.292,4215,4.933,4216,5.917,4217,6.572,4218,3.292,4219,3.292,4220,3.292,4221,3.292,4222,3.292,4223,3.292,4224,3.292,4225,3.292,4226,3.292,4227,3.292,4228,3.292,4229,3.292,4230,4.933,4231,3.292,4232,3.292,4233,4.933,4234,4.933,4235,5.917,4236,3.292,4237,3.292,4238,3.292,4239,3.292,4240,3.292,4241,3.292,4242,3.292,4243,4.933,4244,5.917,4245,3.292,4246,3.292,4247,4.933,4248,3.292,4249,3.292,4250,3.292,4251,3.292,4252,3.292,4253,3.292,4254,3.292,4255,3.292,4256,3.292,4257,3.292,4258,2.712,4259,3.292,4260,6.078,4261,3.292,4262,3.292,4263,3.292,4264,3.292,4265,4.933,4266,3.292,4267,3.292,4268,3.292,4269,3.292,4270,3.292,4271,3.292,4272,3.044,4273,4.933,4274,3.292,4275,4.933,4276,7.04,4277,3.292,4278,3.292,4279,3.292,4280,3.292,4281,3.292,4282,3.292,4283,3.292,4284,3.292,4285,3.292,4286,5.497,4287,5.497,4288,5.497,4289,5.497,4290,5.497,4291,5.497,4292,5.497,4293,5.497,4294,5.497,4295,5.497,4296,5.497,4297,3.668,4298,3.668,4299,3.668,4300,3.668,4301,3.668,4302,3.668,4303,3.668,4304,3.668,4305,3.668,4306,3.668,4307,3.668,4308,3.668,4309,3.668,4310,3.668,4311,3.668]],["title/classes/ThirdsServiceMock.html",[0,0.279,4312,4.51]],["body/classes/ThirdsServiceMock.html",[0,0.415,2,0.884,3,0.038,4,0.038,5,0.045,15,0.282,24,0.249,27,0.005,34,0.105,40,0.045,127,0.003,128,0.004,129,0.003,160,4.297,169,1.598,173,3.227,181,2.409,251,2.048,268,2.022,272,2.496,540,2.614,547,2.087,728,3.983,4260,8.15,4312,7.981,4313,7.479,4314,9.49,4315,7.479,4316,7.479,4317,7.479,4318,7.479,4319,7.479,4320,7.479,4321,7.479,4322,7.479,4323,7.479,4324,7.479,4325,7.479,4326,7.479,4327,7.479,4328,7.479,4329,7.479,4330,7.479,4331,7.479,4332,7.479]],["title/classes/Tick.html",[0,0.279,2825,2.971]],["body/classes/Tick.html",[0,0.509,2,0.726,3,0.031,4,0.031,5,0.037,7,2.388,8,1.007,10,2.301,14,0.883,15,0.231,16,0.462,17,0.876,18,1.598,19,1.168,20,0.181,21,0.259,22,1.605,24,0.243,26,0.422,27,0.005,28,0.414,29,0.422,31,0.638,32,0.555,34,0.108,35,0.529,38,2.873,39,2.749,40,0.059,41,0.843,55,2.648,69,3.396,83,1.625,88,3.062,93,2.701,109,3.044,113,1.08,127,0.003,128,0.004,129,0.003,228,2.049,236,2.589,382,2.635,411,1.783,473,2.745,526,4.129,533,4.538,851,4.4,1397,3.262,1414,3.594,1467,5.328,1550,4.002,1918,4.332,2810,5.131,2811,4.332,2812,4.332,2813,4.785,2814,7.143,2815,4.538,2816,4.785,2819,4.785,2820,4.002,2821,4.332,2822,3.741,2823,4.332,2824,4.785,2825,5.602,2826,4.785,2827,5.554,2828,4.785,2829,7.004,2830,7.004,2831,6.135,2832,6.135,2833,6.772,2834,5.818,2835,5.328,2836,4.785,2837,4.785,2838,6.774,2839,4.785,2840,4.156,2841,4.538,2842,5.131,2843,4.785,2844,4.785,2845,4.538,4333,7.87,4334,6.138,4335,6.138]],["title/classes/TickPayload.html",[0,0.279,2838,3.715]],["body/classes/TickPayload.html",[0,0.512,2,0.738,3,0.032,4,0.032,5,0.038,7,2.429,8,0.989,10,2.319,14,0.844,15,0.235,16,0.467,17,0.96,18,1.477,19,1.079,20,0.178,21,0.263,24,0.245,26,0.429,27,0.005,28,0.421,29,0.429,34,0.109,35,0.538,38,2.905,39,2.796,40,0.059,41,0.857,55,2.694,69,2.694,83,1.635,88,2.429,93,2.474,109,3.096,113,1.092,127,0.003,128,0.004,129,0.003,228,3.078,236,2.054,382,2.589,411,1.813,473,2.178,526,3.781,533,4.615,851,3.49,1397,3.317,1414,3.633,1467,4.227,1550,4.07,1918,4.406,2810,5.187,2811,4.406,2812,4.406,2813,4.866,2814,6.826,2815,4.615,2816,4.866,2819,4.866,2820,4.07,2821,4.406,2822,3.805,2823,4.406,2824,4.866,2825,5.631,2826,4.866,2827,5.615,2828,4.866,2829,6.817,2830,6.817,2831,4.866,2832,4.866,2833,6.826,2834,4.615,2835,4.227,2836,4.866,2837,4.866,2838,5.881,2839,7.188,2840,6.243,2841,7.041,2842,5.187,2843,4.866,2844,4.866,2845,4.615,4336,6.243,4337,6.243,4338,6.243,4339,6.243]],["title/injectables/TimeEffects.html",[822,4.171,862,1.402]],["body/injectables/TimeEffects.html",[0,0.299,3,0.028,4,0.028,5,0.033,8,0.56,10,2.308,15,0.203,16,0.424,20,0.163,21,0.227,24,0.244,26,0.371,27,0.005,28,0.364,29,0.371,31,0.751,32,0.654,34,0.12,35,0.465,38,2.978,39,2.416,40,0.033,70,2.228,104,3.594,110,2.049,113,1.196,127,0.002,128,0.003,129,0.002,136,2.032,149,2.512,150,1.772,152,2.563,165,1.729,169,1.862,181,2.438,202,4.07,249,2.407,271,0.968,382,2.543,518,1.881,526,4.142,534,4.154,540,2.709,547,1.505,548,1.486,549,1.525,562,1.486,822,6.001,862,2.018,863,2.371,882,3.939,894,2.938,895,2.798,897,2.371,898,4.319,900,1.91,920,5.152,939,3.287,1222,5.103,1258,3.693,1407,4.895,1488,5.007,1502,6.001,1510,4.895,1550,4.714,1573,3.987,1918,5.103,1955,6.001,2060,6.793,2087,3.099,2088,3.987,2153,6.489,2810,5.317,2812,5.103,2820,5.317,2821,3.806,2825,4.823,2827,5.103,2829,5.345,2830,5.345,2842,3.516,2931,4.841,3431,4.841,4258,5.345,4340,5.393,4341,8.156,4342,8.156,4343,8.156,4344,7.23,4345,7.23,4346,7.23,4347,7.23,4348,5.393,4349,7.23,4350,7.23,4351,7.23,4352,8.714,4353,8.714,4354,7.23,4355,7.23,4356,5.393,4357,7.23,4358,5.393,4359,5.393,4360,5.393]],["title/components/TimeFilterComponent.html",[234,0.984,381,1.702]],["body/components/TimeFilterComponent.html",[0,0.238,3,0.022,4,0.022,5,0.026,8,0.445,10,1.632,11,1.092,14,0.594,15,0.162,16,0.361,20,0.156,21,0.181,24,0.257,26,0.294,27,0.005,28,0.564,29,0.294,31,0.445,32,0.388,34,0.115,35,0.37,40,0.026,44,1.15,45,1.296,97,0.543,110,1.907,127,0.002,128,0.003,129,0.002,146,0.951,169,1.542,170,2.25,179,2.75,181,2.135,189,1.816,219,1.262,220,1.814,230,2.396,234,1.414,235,1.451,236,2.027,237,1.495,239,1.518,240,1.518,242,2.594,243,1.43,244,3.534,247,2.15,249,2.513,251,1.419,252,2.926,268,1.641,269,1.72,271,0.77,291,1.314,292,2.307,304,1.314,305,2.182,306,2.15,307,1.37,308,2.794,309,1.518,310,1.518,311,1.451,312,1.518,313,1.451,314,2.213,315,2.182,316,1.451,317,2.182,318,1.451,319,1.518,320,1.43,321,1.518,322,1.451,323,1.518,324,2.794,325,1.451,326,1.518,327,1.41,328,2.182,329,1.451,330,1.43,331,1.41,332,1.495,333,1.518,334,1.451,335,2.15,336,1.518,337,1.473,338,1.999,339,2.182,340,1.451,341,1.518,342,2.794,343,1.41,344,1.518,345,1.451,346,1.451,347,1.495,348,1.43,349,1.518,350,1.451,351,1.451,352,1.518,353,1.43,354,1.518,355,1.451,356,1.518,357,1.473,358,1.451,359,1.43,360,1.518,361,1.451,362,1.245,363,1.518,364,1.451,365,2.15,366,1.451,367,2.555,368,1.451,369,1.518,370,1.451,371,1.518,372,1.451,373,1.518,374,1.41,375,1.451,376,1.351,377,1.518,378,1.451,379,1.43,380,1.451,381,2.672,382,2.366,383,1.451,384,1.518,385,1.451,386,1.451,387,1.451,388,2.356,389,1.43,390,1.43,391,1.518,392,1.43,393,1.518,394,1.43,395,1.495,396,1.518,518,1.495,525,3.341,540,2.173,547,1.196,548,1.18,549,1.212,562,1.18,635,2.173,841,4.146,846,2.794,847,2.698,848,2.534,849,2.612,851,2.396,856,2.612,900,1.518,917,2.534,920,5.302,924,4.411,932,4.543,939,2.612,1114,2.224,1169,3.644,1258,1.816,1414,2.814,1428,2.794,1614,4.267,1618,4.398,1623,4.665,1639,3.88,1655,3.341,1656,4.804,1657,3.168,1658,3.025,1675,3.341,1677,3.341,1679,3.341,1687,3.341,1688,3.341,1698,3.846,1811,3.88,2010,6.596,2077,3.557,2082,3.025,2296,3.846,2504,3.168,2512,4.556,2541,3.846,2546,5.115,2550,5.899,2746,4.349,2856,2.902,2877,3.557,2932,3.341,2959,8.388,2960,8.388,3551,3.168,4064,5.989,4066,6.549,4072,3.557,4073,3.557,4076,3.557,4077,5.115,4079,3.557,4083,5.115,4086,3.557,4361,7.216,4362,4.286,4363,4.286,4364,3.846,4365,3.846,4366,6.163,4367,4.286,4368,4.286,4369,4.286,4370,6.163,4371,4.286,4372,4.286,4373,4.286,4374,4.286,4375,4.286,4376,4.286,4377,6.163,4378,4.286,4379,4.286,4380,4.286,4381,4.286,4382,6.163,4383,4.286,4384,4.286,4385,4.286,4386,4.286,4387,6.163,4388,6.163,4389,4.286,4390,4.286,4391,6.163,4392,6.163,4393,6.163]],["title/components/TimeLineComponent.html",[234,0.984,383,1.702]],["body/components/TimeLineComponent.html",[0,0.149,3,0.014,4,0.014,5,0.016,11,1.578,14,0.416,15,0.101,16,0.253,17,0.824,20,0.157,21,0.113,24,0.234,26,0.372,27,0.005,28,0.488,29,0.372,31,0.279,32,0.243,34,0.103,35,0.232,40,0.016,44,1.158,66,1.227,88,2.639,110,1.587,127,0.001,128,0.002,129,0.001,138,1.55,143,2.519,145,2.239,146,0.956,165,2.41,169,1.323,170,2.477,179,2.916,181,0.659,189,1.138,196,2.551,197,2.01,206,1.797,219,0.791,220,1.823,234,1.059,235,0.91,236,1.42,237,0.937,239,0.951,240,0.951,242,1.945,243,0.897,244,3.42,247,1.505,251,0.994,252,2.297,268,1.409,269,1.204,271,0.482,304,0.824,305,1.528,306,1.505,307,0.859,308,2.193,309,0.951,310,0.951,311,0.91,312,0.951,313,0.91,314,1.659,315,1.528,316,0.91,317,1.528,318,0.91,319,0.951,320,0.897,321,0.951,322,0.91,323,0.951,324,2.193,325,0.91,326,0.951,327,0.884,328,1.528,329,0.91,330,0.897,331,0.884,332,0.937,333,0.951,334,0.91,335,1.505,336,0.951,337,0.923,338,2.009,339,1.528,340,0.91,341,0.951,342,2.193,343,0.884,344,0.951,345,0.91,346,0.91,347,0.937,348,0.897,349,0.951,350,0.91,351,0.91,352,0.951,353,0.897,354,0.951,355,0.91,356,0.951,357,0.923,358,0.91,359,0.897,360,0.951,361,0.91,362,0.78,363,0.951,364,0.91,365,1.505,366,0.91,367,1.915,368,0.91,369,0.951,370,0.91,371,0.951,372,0.91,373,0.951,374,0.884,375,0.91,376,1.705,377,0.951,378,0.91,379,0.897,380,0.91,381,0.91,382,2.278,383,2.097,384,0.951,385,0.91,386,0.91,387,0.91,388,0.667,389,0.897,390,0.897,391,0.951,392,0.897,393,0.951,394,0.897,395,0.937,396,0.951,421,2.104,441,0.813,442,0.835,443,0.824,454,1.6,457,1.342,484,2.334,518,0.937,532,6.501,540,1.49,547,0.75,548,0.74,549,0.76,556,1.277,561,2.351,562,0.74,581,2.47,687,2.946,712,2.717,715,2.23,728,3.754,897,1.897,900,0.951,953,4.212,1003,3.364,1019,1.986,1023,1.896,1051,4.209,1059,2.23,1114,1.394,1169,4.501,1216,1.896,1414,3.729,1416,5.764,1420,2.551,1614,3.198,1623,3.662,1657,1.986,1721,2.411,1783,2.551,1784,3.046,1785,3.046,1786,3.19,1787,3.19,1791,3.19,2162,2.094,2190,3.873,2480,2.094,2482,2.411,2542,2.411,2612,6.367,2725,6.677,2746,4.787,2767,2.411,2840,2.922,2855,2.411,2856,1.819,2862,2.411,2877,5.14,2898,2.23,2954,7.687,2998,2.411,3006,3.873,3112,2.23,3204,2.094,3242,3.364,3272,3.582,3444,3.046,3450,3.046,3456,1.896,3973,2.23,4394,2.686,4395,4.315,4396,7.915,4397,5.408,4398,6.193,4399,4.315,4400,4.315,4401,4.315,4402,4.315,4403,7.915,4404,2.686,4405,2.686,4406,2.686,4407,2.686,4408,4.315,4409,2.686,4410,4.315,4411,4.315,4412,6.193,4413,4.315,4414,5.408,4415,4.315,4416,4.315,4417,2.686,4418,2.686,4419,2.686,4420,2.686,4421,2.686,4422,2.686,4423,2.686,4424,2.686,4425,2.686,4426,2.686,4427,9.193,4428,2.686,4429,2.686,4430,2.686,4431,5.408,4432,2.686,4433,2.686,4434,2.686,4435,2.686,4436,2.686,4437,2.686,4438,2.686,4439,2.686,4440,2.686,4441,2.686,4442,2.686,4443,2.686,4444,2.686,4445,2.686,4446,2.686,4447,2.686,4448,2.686,4449,2.686,4450,2.686,4451,2.686,4452,2.686,4453,2.686,4454,2.686,4455,2.686,4456,2.686,4457,2.686,4458,2.686,4459,4.315,4460,2.686,4461,2.686,4462,2.686,4463,2.686,4464,2.686,4465,2.686,4466,2.686,4467,2.686,4468,4.315,4469,4.315,4470,5.408,4471,6.193,4472,5.408,4473,5.408,4474,4.315,4475,4.315,4476,2.686,4477,4.315,4478,2.686,4479,4.315,4480,2.411,4481,2.686,4482,2.686,4483,2.686,4484,2.686,4485,2.686,4486,2.686,4487,2.686,4488,2.686,4489,4.315,4490,7.244,4491,2.686,4492,7.244,4493,2.686,4494,7.244,4495,7.244,4496,7.244,4497,7.244,4498,5.408,4499,7.244,4500,4.315,4501,2.686,4502,4.315,4503,2.686,4504,2.686,4505,4.315,4506,2.686,4507,2.686,4508,6.193,4509,6.193,4510,4.315,4511,2.686,4512,2.686,4513,2.686,4514,2.686,4515,2.411,4516,2.686,4517,2.686,4518,2.686,4519,2.686,4520,2.686,4521,2.686,4522,2.686,4523,2.686,4524,2.686,4525,2.686,4526,2.686,4527,4.315,4528,2.686,4529,2.686,4530,2.686,4531,2.686,4532,4.315,4533,2.686,4534,2.686,4535,2.686,4536,2.686,4537,4.315,4538,5.408,4539,7.244,4540,2.686,4541,5.408,4542,4.315,4543,4.315,4544,4.315,4545,2.686,4546,4.315,4547,5.408,4548,2.686,4549,2.686,4550,2.686,4551,2.686,4552,2.686,4553,2.686,4554,2.686,4555,2.686,4556,2.686,4557,2.686,4558,2.686,4559,2.686,4560,2.686,4561,2.686,4562,2.686,4563,2.686,4564,2.686,4565,2.686,4566,2.686,4567,2.686,4568,2.686,4569,2.686,4570,2.686,4571,4.315,4572,2.686,4573,2.686,4574,2.686,4575,2.686,4576,2.686,4577,2.686,4578,2.686,4579,2.686]],["title/classes/TimeReference.html",[0,0.279,2820,3.276]],["body/classes/TimeReference.html",[0,0.306,2,0.651,3,0.028,4,0.028,5,0.033,15,0.207,19,1.016,20,0.176,21,0.232,24,0.269,26,0.647,27,0.005,28,0.634,29,0.647,32,0.795,34,0.086,40,0.05,41,0.756,85,0.977,127,0.004,128,0.003,129,0.003,138,1.578,143,3.414,165,2.25,169,2.052,170,3.009,224,3.838,228,3.4,249,2.492,251,1.688,268,2.14,382,1.497,712,3.467,728,2.466,951,5.174,1414,3.763,2136,4.57,2193,4.07,2360,5.419,2474,4.57,2679,4.941,2680,4.941,2820,4.779,2822,3.356,2840,6.754,4580,4.941,4581,9.409,4582,7.33,4583,7.33,4584,8.786,4585,5.506,4586,8.786,4587,8.241,4588,9.15,4589,7.886,4590,5.506,4591,8.241,4592,5.506,4593,5.506,4594,5.506,4595,5.506,4596,5.506,4597,5.506,4598,5.506,4599,5.506,4600,5.506,4601,7.33,4602,5.506,4603,8.786,4604,7.33,4605,5.506,4606,5.506,4607,5.506,4608,5.506,4609,5.506,4610,5.506,4611,5.506,4612,5.506,4613,5.506,4614,5.506,4615,5.506,4616,5.506,4617,5.506,4618,5.506,4619,7.33,4620,5.506,4621,5.506,4622,5.506,4623,5.506,4624,5.506,4625,5.506,4626,5.506,4627,5.506,4628,5.506,4629,5.506,4630,5.506,4631,5.506,4632,5.506,4633,5.506,4634,5.506,4635,5.506,4636,7.33,4637,4.941,4638,4.941,4639,4.941,4640,4.941,4641,4.941,4642,4.941,4643,4.941,4644,4.941,4645,5.506,4646,5.506]],["title/classes/TimeSpan.html",[0,0.279,2835,3.402]],["body/classes/TimeSpan.html",[0,0.444,2,0.744,3,0.032,4,0.032,5,0.038,8,0.913,11,1.604,13,3.596,19,1.305,20,0.118,21,0.371,24,0.176,26,0.432,27,0.005,28,0.424,29,0.432,34,0.094,40,0.059,41,1.206,85,1.052,95,0.852,96,0.852,97,0.797,127,0.005,128,0.004,129,0.003,136,3.311,145,3.265,149,2.93,166,3.12,169,1.345,171,2.163,206,2.62,228,3.407,272,2.1,376,3.01,379,2.1,441,1.903,516,4.26,712,3.962,728,2.818,1051,2.489,1169,5.197,1383,3.428,1384,4.488,1386,5.313,1528,5.822,1783,3.72,1784,4.441,1785,4.441,1786,4.652,1787,4.652,1788,4.905,1789,4.905,1790,4.441,1791,4.652,1793,4.905,2485,4.441,2746,5.643,2835,5.95,3055,5.911,3056,5.222,3057,5.222,3058,6.497,3059,5.222,3060,5.222,3444,4.441,3462,6.636,3463,5.222,3464,5.647,3466,5.647,3467,5.647,3468,5.222,3469,5.222,3470,5.647,4647,6.292,4648,6.292]],["title/interfaces/TimeState.html",[747,1.955,759,4.171]],["body/interfaces/TimeState.html",[3,0.038,4,0.038,5,0.045,15,0.282,16,0.522,20,0.178,27,0.005,34,0.112,38,3.587,39,3.355,40,0.054,113,1.377,127,0.003,128,0.004,129,0.003,165,1.792,170,2.735,747,2.915,748,4.081,759,7.882,1414,4.336,2820,6.756,2821,5.287,2822,4.566,2840,6.43,4649,7.491,4650,10.034,4651,7.491,4652,7.491,4653,7.491]],["title/interfaces/TimelineState.html",[747,1.955,760,4.171]],["body/interfaces/TimelineState.html",[3,0.032,4,0.032,5,0.038,7,2.432,11,2.482,13,3.258,15,0.236,16,0.467,20,0.178,27,0.005,34,0.103,38,2.907,40,0.048,85,1.012,113,1.389,127,0.003,128,0.004,129,0.003,138,2.511,146,1.503,165,1.495,170,2.282,171,2.736,179,2.056,228,2.658,338,2.582,441,3.031,442,1.944,443,1.917,445,2.854,454,3.752,471,3.5,480,3.15,488,3.981,493,3.048,587,6.453,687,4.338,747,2.432,748,3.405,760,7.272,783,5.61,1420,4.708,1528,5.013,1586,6.207,1947,7.146,1948,8.551,1949,8.883,1950,8.279,1951,6.609,1953,7.146,1954,7.146,1955,6.609,1956,7.146,1962,6.609,1968,4.853,1992,5.61,2009,5.61,2612,6.207,4654,6.251,4655,7.962,4656,7.962,4657,7.962,4658,7.962,4659,6.251]],["title/interceptors/TokenInjector.html",[2144,4.51,3940,3.917]],["body/interceptors/TokenInjector.html",[0,0.376,3,0.035,4,0.035,5,0.041,10,1.792,14,0.652,15,0.255,20,0.17,21,0.285,24,0.254,26,0.624,27,0.005,28,0.613,29,0.624,34,0.112,40,0.041,95,0.917,96,0.917,97,1.202,127,0.003,128,0.004,129,0.003,165,2.27,169,1.788,172,2.47,251,1.927,268,1.903,271,1.215,521,5.307,540,2.502,547,1.888,562,1.864,628,3.511,862,2.336,1458,6.524,1466,6.427,2122,5.616,2147,6.073,3940,6.524,4660,6.766,4661,6.766,4662,8.368,4663,8.368,4664,6.766,4665,6.766,4666,8.368,4667,10.257,4668,6.766,4669,8.368,4670,9.492,4671,6.766,4672,6.766,4673,8.368,4674,6.766,4675,6.766,4676,8.368,4677,6.766,4678,6.766,4679,6.766,4680,8.368,4681,6.766,4682,6.766]],["title/classes/TransitionalThirdWithItSVersion.html",[0,0.279,4683,4.171]],["body/classes/TransitionalThirdWithItSVersion.html",[0,0.347,2,0.516,3,0.022,4,0.022,5,0.026,8,0.453,10,1.156,15,0.164,16,0.366,17,0.849,20,0.136,21,0.184,24,0.204,26,0.3,27,0.005,28,0.294,29,0.3,34,0.117,35,0.376,40,0.026,70,1.7,83,0.774,85,0.975,110,1.597,113,0.857,127,0.003,128,0.003,129,0.002,136,1.644,150,2.025,152,2.074,153,2.544,154,3.922,158,2.44,165,2.382,169,2.185,170,1.593,173,1.883,181,2.336,189,1.849,202,3.563,224,4.078,249,2.32,271,0.784,272,1.457,441,2.205,442,1.357,443,1.338,446,1.883,451,2.694,480,1.726,493,1.671,534,2.508,540,2.412,547,1.218,548,1.202,549,1.234,562,1.202,645,2.164,646,2.164,719,3.402,832,3.402,862,1.742,879,3.08,880,3.587,894,2.378,895,2.264,897,1.918,898,2.074,900,1.545,953,2.694,1051,2.884,1114,2.264,1166,4.752,1258,3.089,1281,4.935,1459,2.319,1460,3.806,1467,2.955,1469,2.748,1488,4.188,1510,2.955,1574,2.955,1575,2.748,1665,3.08,1783,2.581,1899,3.491,1906,2.955,2044,3.622,2419,3.226,2589,4.867,2714,2.319,3117,2.581,3119,2.44,3181,3.08,3232,3.622,3477,3.622,3877,2.845,3878,3.806,3879,2.66,3881,2.66,3883,3.806,3887,5.387,3892,4.07,4258,3.226,4683,6.05,4684,3.917,4685,4.364,4686,4.364,4687,6.243,4688,3.917,4689,5.603,4690,3.917,4691,3.917,4692,3.917,4693,3.917,4694,3.917,4695,3.917,4696,3.917,4697,3.917,4698,3.917,4699,3.917,4700,3.917,4701,3.917,4702,3.917,4703,3.917,4704,6.542,4705,3.917,4706,3.917,4707,3.917,4708,3.917,4709,3.917,4710,7.141,4711,5.603,4712,3.917,4713,3.917,4714,3.917,4715,3.917,4716,3.917,4717,3.917,4718,3.917,4719,3.917,4720,3.917,4721,3.917,4722,3.917,4723,3.917,4724,3.917,4725,3.917,4726,3.917,4727,3.917,4728,3.917,4729,3.917,4730,5.603,4731,3.917,4732,3.917,4733,3.917,4734,3.917,4735,3.917,4736,6.542,4737,3.917,4738,3.917,4739,3.917,4740,5.603,4741,3.917,4742,3.917,4743,3.917,4744,3.917,4745,3.917,4746,3.917,4747,3.917,4748,3.917,4749,3.917,4750,3.917,4751,3.917,4752,3.917,4753,5.603,4754,3.917,4755,3.917,4756,3.917,4757,3.917,4758,6.542,4759,3.917,4760,5.603,4761,3.917,4762,5.603,4763,3.917,4764,5.603,4765,3.917,4766,5.603,4767,3.917,4768,3.917,4769,5.603,4770,3.917,4771,3.917,4772,3.917,4773,3.917,4774,3.917,4775,3.917,4776,3.917,4777,5.603,4778,3.917,4779,3.917,4780,3.917,4781,3.917,4782,3.917,4783,5.603,4784,3.917,4785,3.917,4786,6.542,4787,3.917,4788,3.917]],["title/injectables/TranslateEffects.html",[832,3.917,862,1.402]],["body/injectables/TranslateEffects.html",[0,0.287,3,0.017,4,0.017,5,0.02,8,0.537,10,1.368,15,0.127,16,0.303,17,0.341,20,0.175,21,0.142,24,0.264,26,0.615,27,0.005,28,0.604,29,0.615,31,0.73,32,0.636,34,0.112,35,0.291,40,0.02,70,1.936,83,0.599,85,0.912,110,1.748,113,0.964,127,0.003,128,0.002,129,0.002,136,1.273,150,2.087,152,1.606,153,1.08,154,2.809,158,1.889,165,2.299,169,2.157,170,1.234,173,2.706,181,2.265,189,1.432,202,3.718,224,4.54,249,2.446,251,1.19,268,1.996,271,0.607,272,1.128,441,2.413,442,1.051,443,1.036,446,1.458,451,2.706,480,2.043,493,2.401,518,1.179,534,2.968,540,2.544,547,0.943,548,0.931,549,0.956,562,0.931,645,1.675,646,1.675,719,2.634,832,4.027,862,1.442,863,1.485,879,3.646,880,4.035,882,3.416,894,1.841,895,1.753,897,1.485,898,1.606,900,1.196,953,2.229,1051,2.481,1114,1.753,1166,5.202,1258,3.381,1281,4.246,1459,3.332,1460,4.28,1467,3.497,1469,3.252,1488,4.584,1510,3.497,1574,2.288,1575,2.127,1665,3.646,1783,3.708,1899,3.926,1906,2.288,2044,4.287,2419,2.498,2589,4.027,2714,3.332,3117,1.998,3119,1.889,3181,4.426,3232,2.804,3477,5.205,3877,2.203,3878,3.822,3879,2.059,3881,2.059,3883,3.149,3887,5.621,3892,4.088,4258,3.819,4272,2.804,4683,5.829,4684,3.032,4688,3.032,4689,5.628,4690,3.032,4691,3.032,4692,5.628,4693,5.628,4694,4.636,4695,4.636,4696,4.636,4697,4.636,4698,4.636,4699,4.636,4700,4.636,4701,4.636,4702,4.636,4703,4.636,4704,5.628,4705,3.032,4706,4.636,4707,3.032,4708,3.032,4709,3.032,4710,7.161,4711,4.636,4712,4.636,4713,5.628,4714,3.032,4715,3.032,4716,3.032,4717,3.032,4718,4.636,4719,3.032,4720,3.032,4721,3.032,4722,3.032,4723,5.628,4724,4.636,4725,4.636,4726,4.636,4727,4.636,4728,4.636,4729,4.636,4730,6.303,4731,4.636,4732,4.636,4733,4.636,4734,4.636,4735,3.032,4736,5.628,4737,4.636,4738,3.032,4739,3.032,4740,4.636,4741,3.032,4742,4.636,4743,4.636,4744,4.636,4745,4.636,4746,4.636,4747,4.636,4748,3.032,4749,3.032,4750,3.032,4751,3.032,4752,3.032,4753,4.636,4754,3.032,4755,3.032,4756,4.636,4757,5.628,4758,5.628,4759,3.032,4760,4.636,4761,3.032,4762,4.636,4763,3.032,4764,4.636,4765,3.032,4766,4.636,4767,3.032,4768,3.032,4769,4.636,4770,3.032,4771,3.032,4772,3.032,4773,3.032,4774,3.032,4775,3.032,4776,3.032,4777,4.636,4778,3.032,4779,3.032,4780,3.032,4781,3.032,4782,3.032,4783,4.636,4784,3.032,4785,4.636,4786,6.303,4787,3.032,4788,3.032,4789,5.166,4790,5.166,4791,5.166,4792,5.166,4793,5.166,4794,5.166,4795,5.166,4796,5.166,4797,5.166,4798,5.166,4799,3.379,4800,3.379,4801,3.379,4802,3.379,4803,3.379,4804,3.379,4805,3.379,4806,3.379,4807,3.379,4808,3.379,4809,3.379,4810,3.379,4811,3.379,4812,3.379,4813,3.379,4814,3.379]],["title/classes/TranslationUpToDate.html",[0,0.279,3883,3.063]],["body/classes/TranslationUpToDate.html",[0,0.537,2,0.777,3,0.034,4,0.034,5,0.04,8,1.04,10,2.176,14,0.95,15,0.248,16,0.482,18,1.512,19,1.233,20,0.189,24,0.184,27,0.005,31,0.683,32,0.595,34,0.097,35,0.567,40,0.061,41,0.902,83,1.59,85,0.683,113,1.128,127,0.003,128,0.004,129,0.003,136,3.643,150,1.671,152,3.123,479,2.735,480,2.599,577,3.775,731,4.137,1459,3.491,1469,5.914,2935,4.448,3873,5.845,3874,4.448,3875,4.857,3877,4.283,3878,5.465,3879,5.465,3880,4.637,3881,5.465,3882,4.637,3883,5.726,3884,4.637,3885,4.637,3886,4.857,3887,4.448,3888,6.074,3889,4.857,3890,4.448,3891,4.857,3892,4.283,4815,6.57]],["title/classes/TryToLogIn.html",[0,0.279,54,2.439]],["body/classes/TryToLogIn.html",[0,0.546,1,3.39,2,0.496,3,0.021,4,0.021,5,0.025,6,2.178,7,1.634,8,1.064,9,4.069,10,1.112,11,1.07,12,3.262,13,2.919,14,0.947,15,0.158,16,0.356,17,0.899,18,1.503,19,1.22,20,0.191,21,0.256,22,1.098,23,2.886,24,0.2,26,0.288,27,0.005,28,0.283,29,0.288,31,0.436,32,0.38,33,2.287,34,0.084,35,0.362,36,3.195,37,1.881,38,2.217,39,1.881,40,0.06,41,0.576,42,2.129,43,3.257,44,1.127,45,2.158,46,3.537,47,2.72,48,3.79,49,2.977,50,4.736,51,4.055,52,3.537,53,2.231,54,3.793,55,2.62,56,3.462,57,3.312,58,3.537,59,3.537,60,1.434,61,3.537,62,2.231,63,3.257,64,3.569,65,3.617,66,1.917,67,2.231,68,1.955,69,1.812,70,0.979,71,2.287,72,2.886,73,1.112,74,2.231,75,2.231,76,1.996,77,3.257,78,2.231,79,2.231,80,3.257,81,3.078,82,1.881,83,1.47,84,1.917,85,0.861,86,1.917,87,1.955,88,1.634,89,2.287,90,2.287,91,3.308,92,3.227,93,1.888,94,3.227,95,1.363,96,1.363,97,1.275,98,2.287,99,2.287,100,2.231,101,2.947,102,3.308,103,2.947,104,2.402,105,3.227,106,2.178,107,3.15,108,2.231,109,3.011,110,1.33,111,2.038,112,2.231,113,0.576,114,2.287,115,2.231,116,2.287,117,2.231,118,1.557,119,2.287,120,2.287,121,2.287,122,2.828,123,2.287,124,2.287,125,2.287,126,2.178,127,0.002,128,0.003,129,0.002,437,1.889,4816,6.072,4817,4.199]],["title/classes/TryToLogOut.html",[0,0.279,56,2.439]],["body/classes/TryToLogOut.html",[0,0.548,1,3.435,2,0.508,3,0.022,4,0.022,5,0.026,6,2.23,7,1.672,8,1.067,9,4.098,10,1.138,11,1.095,12,3.262,13,2.957,14,0.951,15,0.162,16,0.362,17,0.844,18,1.332,19,1.225,20,0.187,21,0.181,23,2.935,24,0.12,27,0.005,31,0.446,32,0.389,33,2.341,34,0.085,35,0.371,36,3.237,37,1.925,38,2.254,39,1.925,40,0.06,41,0.59,42,2.179,43,3.3,44,1.153,45,2.186,46,3.584,47,2.765,48,3.84,49,3.03,50,4.769,51,4.099,52,3.584,53,2.284,54,3.507,55,2.664,56,3.834,57,3.348,58,3.584,59,3.584,60,1.458,61,3.584,62,2.284,63,3.3,64,3.607,65,3.664,66,1.962,67,2.284,68,2.001,69,1.854,70,1.002,71,2.341,72,2.935,73,1.138,74,2.284,75,2.284,76,2.042,77,3.3,78,2.284,79,2.284,80,3.3,81,3.118,82,1.925,83,1.484,84,1.962,85,0.869,86,1.962,87,2.001,88,1.672,89,2.341,90,2.341,91,3.364,92,3.281,93,1.92,94,3.281,95,1.367,96,1.367,97,1.278,98,2.341,99,2.341,100,2.284,101,2.086,102,2.341,103,2.086,104,1.7,105,2.284,106,2.23,107,3.75,108,3.281,109,3.062,110,1.353,111,2.086,112,2.284,113,0.59,114,2.341,115,2.284,116,2.341,117,2.284,118,1.594,119,2.341,120,2.341,121,2.341,122,2.876,123,2.341,124,2.341,125,2.341,126,2.23,127,0.002,128,0.003,129,0.002,4818,4.297]],["title/components/TypeAheadSettingsComponent.html",[234,0.984,385,1.702]],["body/components/TypeAheadSettingsComponent.html",[0,0.2,3,0.018,4,0.028,5,0.033,14,0.522,15,0.136,16,0.318,17,0.363,20,0.19,21,0.152,24,0.29,26,0.625,27,0.005,28,0.639,29,0.625,31,0.753,32,0.836,34,0.085,35,0.31,40,0.022,44,0.965,73,0.952,85,0.753,110,1.79,127,0.002,128,0.002,129,0.002,138,2.078,146,0.836,181,1.328,197,2.522,219,1.059,220,1.594,234,1.276,235,1.218,236,1.782,237,1.254,238,1.552,239,1.273,240,1.273,242,2.342,243,1.2,244,3.497,245,2.473,247,1.889,249,2.481,251,1.247,252,3.031,254,2.685,268,2.251,269,2.579,271,0.646,273,1.959,285,1.293,286,1.273,287,1.293,288,1.293,289,1.293,290,1.293,291,2.385,292,2.083,293,1.293,294,1.293,295,1.293,296,1.254,297,1.2,298,1.273,299,1.293,300,1.293,301,1.293,302,0.828,303,1.293,304,1.103,305,1.918,306,1.889,307,1.15,308,2.567,309,1.273,310,1.273,311,1.218,312,1.273,313,1.218,314,1.998,315,1.918,316,1.218,317,1.918,318,1.218,319,1.273,320,1.2,321,1.273,322,3.314,323,1.273,324,2.567,325,1.218,326,1.273,327,1.183,328,1.918,329,1.218,330,1.2,331,1.183,332,1.254,333,1.273,334,1.218,335,1.889,336,1.273,337,1.236,338,1.166,339,1.918,340,1.218,341,1.273,342,2.567,343,1.183,344,1.273,345,1.218,346,1.218,347,1.254,348,1.2,349,1.273,350,1.218,351,1.218,352,1.273,353,1.2,354,1.273,355,1.218,356,1.273,357,1.236,358,1.218,359,1.2,360,1.273,361,1.218,362,1.044,363,1.273,364,1.218,365,2.272,366,3.409,367,2.307,368,1.218,369,1.273,370,1.218,371,1.273,372,1.218,373,1.273,374,1.183,375,1.218,376,1.134,377,1.273,378,1.218,379,1.808,380,1.218,381,1.218,382,1.472,383,1.218,384,1.273,385,2.455,386,3.172,387,1.218,388,0.893,389,1.2,390,1.2,391,1.273,392,1.2,393,1.273,394,1.2,395,1.254,396,1.273,518,1.254,548,0.99,549,1.017,701,2.38,924,4.054,1275,4.287,1397,3.853,1528,2.264,1614,3.852,1615,5.117,1617,5.117,1618,4.419,1619,6.949,1620,5.117,1621,6.303,1622,5.117,1623,4.832,1624,5.768,1625,5.768,1626,5.117,1627,5.117,1628,5.117,1633,3.822,1635,3.822,1638,3.822,1639,4.565,1641,3.822,1645,4.598,1660,2.538,1796,2.344,1968,3.301,2015,7.013,2780,2.658,2781,2.658,2782,2.658,2787,2.658,2788,2.658,2789,2.658,2790,2.658,2791,2.658,2792,2.658,2793,2.658,2794,2.658,2795,2.658,2796,2.658,2797,2.658,2798,2.658,2799,2.658,2802,2.658,2806,4.222,3748,2.984,3749,3.227,3750,4.222,3751,5.847,3752,3.227,4007,3.227,4009,4.86,4090,3.227,4091,2.984,4092,3.227,4093,3.227,4819,5.415,4820,6.514,4821,3.596,4822,3.596,4823,3.596,4824,5.415,4825,3.596,4826,3.596,4827,3.596,4828,3.596,4829,3.596,4830,3.596,4831,3.596,4832,3.596,4833,3.596,4834,3.596,4835,3.596,4836,3.596,4837,3.596,4838,3.596]],["title/components/TypeFilterComponent.html",[234,0.984,387,1.702]],["body/components/TypeFilterComponent.html",[0,0.223,3,0.02,4,0.03,5,0.036,8,0.417,13,1.643,14,0.566,15,0.151,16,0.345,17,0.405,20,0.184,21,0.169,24,0.252,26,0.276,27,0.005,28,0.549,29,0.276,31,0.417,32,0.363,34,0.113,35,0.346,40,0.024,44,1.077,45,1.214,73,1.063,97,0.508,110,1.864,127,0.002,128,0.003,129,0.002,146,0.907,169,1.486,179,2.965,181,2.211,189,1.701,219,1.182,220,1.73,234,1.362,235,1.36,236,1.934,237,1.4,238,1.732,239,1.422,240,1.422,242,2.5,243,1.34,244,3.521,245,2.684,247,2.05,249,2.436,251,1.354,252,2.838,268,1.581,269,1.64,271,0.721,273,2.187,285,1.443,286,1.422,287,1.443,288,1.443,289,1.443,290,1.443,291,1.802,292,2.447,293,1.443,294,1.443,295,1.443,296,1.4,297,1.34,298,1.422,299,1.443,300,1.443,301,1.443,302,0.925,303,1.443,304,1.231,305,2.081,306,2.05,307,1.284,308,2.71,309,1.422,310,1.422,311,1.36,312,1.422,313,1.36,314,2.132,315,2.081,316,1.36,317,2.081,318,1.36,319,1.422,320,1.34,321,1.422,322,1.36,323,1.422,324,2.71,325,1.36,326,1.422,327,1.321,328,2.081,329,1.36,330,1.34,331,1.321,332,1.4,333,1.422,334,1.36,335,2.05,336,1.422,337,1.38,338,1.302,339,2.081,340,1.36,341,1.422,342,2.71,343,1.321,344,1.422,345,1.36,346,1.36,347,1.4,348,1.34,349,1.422,350,1.36,351,1.36,352,1.422,353,1.34,354,1.422,355,1.36,356,1.422,357,1.38,358,1.36,359,1.34,360,1.422,361,1.36,362,1.166,363,1.422,364,1.36,365,2.05,366,1.36,367,2.462,368,1.36,369,1.422,370,1.36,371,1.422,372,1.36,373,1.422,374,1.321,375,1.36,376,1.266,377,1.422,378,1.36,379,1.34,380,1.36,381,1.36,382,1.598,383,1.36,384,1.422,385,1.36,386,1.36,387,2.592,388,2.284,389,1.34,390,1.34,391,1.422,392,1.34,393,1.422,394,1.34,395,1.4,396,1.422,459,2.25,518,1.4,540,2.243,547,1.12,548,1.106,549,1.135,562,1.106,592,2.833,593,4.581,596,2.374,601,3.603,635,2.035,841,3.377,846,2.617,847,2.528,848,2.374,849,2.447,851,2.245,856,2.447,900,1.422,917,2.374,924,4.278,932,5.128,988,3.129,1114,2.083,1258,1.701,1327,2.718,1428,2.617,1528,4.377,1614,4.111,1618,4.238,1623,4.525,1639,2.528,1655,3.129,1656,4.581,1657,2.968,1658,2.833,1675,3.129,1677,3.129,1679,3.129,1687,3.129,1688,3.129,1811,3.7,1880,5.657,2010,6.49,2082,2.833,2193,2.968,2504,2.968,2512,4.345,2545,3.603,2546,3.332,2550,5.401,2714,2.133,2856,2.718,2932,3.129,2957,8.253,2958,8.253,3055,2.968,3058,2.968,3383,6.24,3387,3.603,3551,2.968,3688,7.309,4063,6.24,4064,5.77,4066,6.351,4072,3.332,4073,3.332,4076,3.332,4077,5.77,4079,3.332,4082,3.603,4083,3.332,4086,3.332,4091,3.332,4364,3.603,4365,3.603,4839,6.952,4840,4.014,4841,4.014,4842,4.014,4843,4.014,4844,5.877,4845,4.014,4846,4.014,4847,4.014,4848,4.014,4849,4.014,4850,4.014,4851,4.014,4852,4.014,4853,4.014,4854,4.014,4855,4.014,4856,4.014,4857,4.014,4858,4.014,4859,4.014,4860,4.014,4861,4.014,4862,4.014,4863,4.014,4864,5.877,4865,5.877,4866,5.877,4867,5.877,4868,5.877,4869,8.144,4870,4.014,4871,6.952,4872,5.877,4873,4.014,4874,4.014,4875,4.014,4876,5.877,4877,6.952,4878,5.877,4879,4.014]],["title/classes/UnAuthenticationFromImplicitFlow.html",[0,0.279,77,2.295]],["body/classes/UnAuthenticationFromImplicitFlow.html",[0,0.549,1,3.445,2,0.511,3,0.022,4,0.022,5,0.026,6,2.242,8,1.065,9,3.985,10,1.144,11,1.101,12,3.264,13,2.966,14,0.952,15,0.163,16,0.364,17,0.845,18,1.336,19,1.226,20,0.187,21,0.182,23,2.946,24,0.121,27,0.005,31,0.449,32,0.391,33,2.354,34,0.085,35,0.373,36,3.247,37,1.935,38,2.263,39,1.935,40,0.06,41,0.593,42,2.191,43,3.31,44,1.159,45,2.193,46,3.595,47,2.776,48,3.852,49,2.996,50,4.777,51,4.109,52,3.595,53,2.296,54,3.518,55,2.675,56,3.518,57,3.356,58,3.595,59,3.595,60,1.464,61,3.595,62,2.296,63,3.31,64,3.616,65,3.675,66,1.973,67,2.296,68,2.012,69,1.864,70,1.008,71,2.354,72,2.946,73,1.144,74,2.296,75,2.296,76,2.054,77,3.616,78,2.296,79,2.296,80,3.31,81,3.128,82,1.935,83,1.487,84,1.973,85,0.871,86,1.973,87,2.012,88,1.681,89,2.354,90,2.354,91,3.377,92,3.294,93,1.927,94,3.294,95,1.368,96,1.368,97,1.279,98,2.354,99,2.354,100,2.296,101,2.097,102,2.354,103,2.097,104,1.709,105,2.296,106,2.242,107,3.216,108,2.296,109,3.074,110,1.358,111,2.097,112,2.296,113,0.593,114,2.354,115,2.296,116,2.354,117,2.296,118,1.602,119,2.354,120,2.354,121,2.354,122,2.887,123,2.354,124,3.377,125,2.354,126,2.242,127,0.002,128,0.003,129,0.002,4880,4.321]],["title/classes/UnableToRefreshOrGetToken.html",[0,0.279,80,2.295]],["body/classes/UnableToRefreshOrGetToken.html",[0,0.549,1,3.445,2,0.511,3,0.022,4,0.022,5,0.026,6,2.242,8,1.065,9,3.985,10,1.144,11,1.101,12,3.264,13,2.966,14,0.952,15,0.163,16,0.364,17,0.845,18,1.336,19,1.226,20,0.187,21,0.182,23,2.946,24,0.121,27,0.005,31,0.449,32,0.391,33,2.354,34,0.085,35,0.373,36,3.247,37,1.935,38,2.263,39,1.935,40,0.06,41,0.593,42,2.191,43,3.31,44,1.159,45,2.193,46,3.595,47,2.776,48,3.852,49,2.996,50,4.777,51,4.109,52,3.595,53,2.296,54,3.518,55,2.675,56,3.518,57,3.356,58,3.595,59,3.595,60,1.464,61,3.595,62,2.296,63,3.31,64,3.616,65,3.675,66,1.973,67,2.296,68,2.012,69,1.864,70,1.008,71,2.354,72,2.946,73,1.144,74,2.296,75,2.296,76,2.054,77,3.31,78,2.296,79,2.296,80,3.616,81,3.128,82,1.935,83,1.487,84,1.973,85,0.871,86,1.973,87,2.012,88,1.681,89,2.354,90,2.354,91,3.377,92,3.294,93,1.927,94,3.294,95,1.368,96,1.368,97,1.279,98,2.354,99,2.354,100,2.296,101,2.097,102,2.354,103,2.097,104,1.709,105,2.296,106,2.242,107,3.216,108,2.296,109,3.074,110,1.358,111,2.097,112,2.296,113,0.593,114,2.354,115,2.296,116,2.354,117,2.296,118,1.602,119,2.354,120,2.354,121,2.354,122,2.887,123,2.354,124,2.354,125,3.377,126,2.242,127,0.002,128,0.003,129,0.002,4881,4.321]],["title/classes/UpdateALightCard.html",[0,0.279,467,2.251]],["body/classes/UpdateALightCard.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.444,468,3.074,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,2.874,496,1.968,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,4882,5.921,4883,4.056]],["title/classes/UpdateAnAction.html",[0,0.279,468,2.209]],["body/classes/UpdateAnAction.html",[0,0.559,2,0.479,3,0.021,4,0.021,5,0.025,8,1.063,10,2.166,11,1.034,12,1.279,14,0.973,15,0.153,16,0.347,17,0.597,18,1.635,19,1.25,20,0.193,21,0.381,22,1.06,24,0.196,26,0.279,27,0.005,28,0.273,29,0.279,31,0.421,32,0.367,34,0.091,35,0.35,40,0.061,41,0.557,45,1.227,60,0.958,70,1.907,83,1.661,85,0.799,93,1.261,95,1.286,96,1.286,97,1.202,113,1.21,118,1.504,127,0.002,128,0.003,129,0.002,146,1.482,150,0.825,153,1.893,185,2.304,199,1.007,272,1.354,302,1.364,406,1.481,408,2.233,411,1.72,416,1.611,417,0.995,418,1.034,419,1.162,420,1.162,421,1.578,423,1.147,424,1.261,434,3.132,435,3.581,436,1.889,437,1.852,440,1.968,441,2.583,442,1.261,443,1.244,444,1.928,445,1.852,446,1.75,447,3.193,448,4.782,449,3.132,450,1.782,451,3.017,452,2.758,453,1.928,454,1.504,455,3.132,456,3.132,457,1.261,458,3.017,459,3.269,460,1.75,461,3.132,462,1.889,463,3.132,464,3.132,465,1.928,466,1.928,467,3.132,468,3.38,469,3.132,470,1.719,471,1.782,472,3.132,473,1.415,474,3.132,475,1.928,476,3.132,477,1.889,478,3.132,479,1.688,480,1.604,481,1.968,482,1.968,483,1.968,484,1.75,485,1.968,486,1.968,487,1.968,488,1.631,489,1.968,490,1.968,491,1.968,492,1.968,493,1.553,494,1.968,495,1.968,496,2.874,497,1.928,498,1.928,499,1.968,500,1.968,501,1.968,502,1.968,503,1.968,504,1.889,4884,5.921,4885,4.056]],["title/classes/UpdateAnActionFailure.html",[0,0.279,469,2.251]],["body/classes/UpdateAnActionFailure.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,2.794,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.049,459,3.29,460,1.782,461,3.165,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.473,470,1.75,471,1.815,472,3.165,473,1.44,474,3.165,475,1.963,476,3.165,477,1.923,478,3.165,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.004,486,2.004,487,2.004,488,1.661,489,2.004,490,2.004,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.912,500,2.004,501,2.004,502,2.004,503,2.004,504,1.923,4886,5.999]],["title/classes/UpdateArchiveFilter.html",[0,0.279,908,3.063]],["body/classes/UpdateArchiveFilter.html",[0,0.531,2,0.689,3,0.03,4,0.03,5,0.035,8,1.026,10,2.016,14,0.938,15,0.22,16,0.446,17,0.767,18,1.684,19,1.217,20,0.193,21,0.246,22,1.524,24,0.237,26,0.401,27,0.005,28,0.393,29,0.401,31,0.606,32,0.528,34,0.1,35,0.503,40,0.06,41,0.8,83,1.695,85,0.606,95,1.319,96,1.319,97,1.233,113,1.163,127,0.003,128,0.003,129,0.003,146,1.175,150,1.548,209,2.385,228,1.946,302,1.343,314,2.932,388,1.448,413,3.949,416,1.952,417,1.43,418,1.486,419,1.671,420,1.671,437,2.245,441,1.763,442,1.813,443,1.788,457,1.813,459,2.232,488,2.345,534,3.349,714,4.662,872,5.012,887,3.176,901,3.801,902,5.166,903,5.012,907,3.67,908,5.477,1032,3.801,1035,4.114,1036,5.336,1037,3.801,1038,5.166,1039,5.372,1040,4.114,1041,4.114,1042,3.947,1043,4.114,1044,4.114,1045,3.947,4887,7.612,4888,5.83]],["title/classes/UpdateArchivePage.html",[0,0.279,903,2.971]],["body/classes/UpdateArchivePage.html",[0,0.531,2,0.689,3,0.03,4,0.03,5,0.035,8,1.026,10,2.016,14,0.938,15,0.22,16,0.446,17,0.767,18,1.684,19,1.217,20,0.193,21,0.246,22,1.524,24,0.237,26,0.401,27,0.005,28,0.393,29,0.401,31,0.606,32,0.528,34,0.1,35,0.503,40,0.06,41,0.8,83,1.695,85,0.606,95,1.319,96,1.319,97,1.233,113,1.163,127,0.003,128,0.003,129,0.003,146,1.175,150,1.548,209,2.385,228,1.946,302,1.343,314,2.932,388,1.448,413,3.949,416,1.952,417,1.43,418,1.486,419,1.671,420,1.671,437,2.245,441,1.763,442,1.813,443,1.788,457,1.813,459,2.232,488,2.345,534,3.349,714,4.662,872,5.012,887,3.176,901,3.801,902,5.166,903,5.313,907,3.67,908,5.166,1032,3.801,1035,4.114,1036,5.336,1037,3.801,1038,5.166,1039,4.114,1040,4.114,1041,4.114,1042,3.947,1043,5.372,1044,4.114,1045,3.947,4889,7.612,4890,5.83]],["title/classes/UpdateTimeReference.html",[0,0.279,2842,3.276]],["body/classes/UpdateTimeReference.html",[0,0.511,2,0.734,3,0.032,4,0.032,5,0.038,7,2.416,8,1.027,10,2.438,14,0.887,15,0.234,16,0.465,17,0.881,18,1.604,19,1.172,20,0.189,21,0.262,22,1.624,24,0.244,26,0.427,27,0.005,28,0.419,29,0.427,31,0.645,32,0.562,34,0.109,35,0.535,38,2.895,39,2.781,40,0.059,41,0.852,55,2.68,69,2.68,83,1.632,88,2.416,93,2.716,109,3.079,113,1.088,127,0.003,128,0.004,129,0.003,228,2.073,236,2.043,382,2.643,411,1.804,437,2.314,473,2.166,526,4.152,533,4.591,851,3.472,1397,4.213,1414,3.62,1467,4.205,1550,4.049,1918,4.383,2810,5.169,2811,4.383,2812,4.383,2813,4.841,2814,7.174,2815,4.591,2816,4.841,2819,4.841,2820,4.049,2821,4.383,2822,3.785,2823,4.383,2824,4.841,2825,5.441,2826,4.841,2827,5.596,2828,4.841,2829,6.458,2830,6.458,2831,4.841,2832,4.841,2833,6.181,2834,4.591,2835,4.205,2836,4.841,2837,4.841,2838,4.591,2839,4.841,2840,4.205,2841,4.591,2842,5.695,2843,4.841,2844,4.841,2845,4.591,4891,7.929,4892,6.21,4893,6.21]],["title/classes/UpdateTranslation.html",[0,0.279,3878,3.063]],["body/classes/UpdateTranslation.html",[0,0.532,2,0.752,3,0.032,4,0.032,5,0.038,8,1.032,10,2.132,14,0.942,15,0.24,16,0.472,17,0.812,18,1.65,19,1.224,20,0.194,21,0.268,22,1.663,24,0.247,26,0.437,27,0.005,28,0.429,29,0.437,31,0.661,32,0.576,34,0.095,35,0.548,40,0.06,41,0.873,83,1.566,85,0.661,113,1.105,127,0.003,128,0.004,129,0.003,136,3.608,150,1.637,152,3.023,437,2.339,479,2.648,480,2.516,577,3.654,731,4.004,1459,3.379,1469,5.845,2935,4.306,3873,5.758,3874,4.306,3875,4.701,3877,4.146,3878,5.659,3879,5.384,3880,4.488,3881,5.384,3882,4.488,3883,5.384,3884,4.488,3885,4.488,3886,5.951,3887,4.306,3888,4.701,3889,4.701,3890,4.306,3891,4.701,3892,4.146,4894,8.05,4895,6.359]],["title/classes/UpdateTranslationFailed.html",[0,0.279,3881,3.063]],["body/classes/UpdateTranslationFailed.html",[0,0.532,2,0.752,3,0.032,4,0.032,5,0.038,8,1.032,10,2.132,14,0.942,15,0.24,16,0.472,17,0.812,18,1.65,19,1.224,20,0.194,21,0.268,22,1.663,24,0.247,26,0.437,27,0.005,28,0.429,29,0.437,31,0.661,32,0.576,34,0.095,35,0.548,40,0.06,41,0.873,83,1.566,85,0.661,113,1.105,127,0.003,128,0.004,129,0.003,136,3.608,150,1.637,152,3.023,437,2.339,479,2.648,480,2.516,577,3.654,731,4.004,1459,3.379,1469,5.845,2935,4.306,3873,5.758,3874,4.306,3875,4.701,3877,4.146,3878,5.384,3879,5.384,3880,4.488,3881,5.659,3882,4.488,3883,5.384,3884,4.488,3885,4.488,3886,4.701,3887,4.306,3888,4.701,3889,4.701,3890,4.306,3891,5.951,3892,4.146,4896,8.05,4897,6.359]],["title/classes/UpdateTranslationSuccessful.html",[0,0.279,3879,3.063]],["body/classes/UpdateTranslationSuccessful.html",[0,0.532,2,0.752,3,0.032,4,0.032,5,0.038,8,1.032,10,2.132,14,0.942,15,0.24,16,0.472,17,0.812,18,1.65,19,1.224,20,0.194,21,0.268,22,1.663,24,0.247,26,0.437,27,0.005,28,0.429,29,0.437,31,0.661,32,0.576,34,0.095,35,0.548,40,0.06,41,0.873,83,1.566,85,0.661,113,1.105,127,0.003,128,0.004,129,0.003,136,3.608,150,1.637,152,3.023,437,2.339,479,2.648,480,2.516,577,3.654,731,4.004,1459,3.379,1469,5.845,2935,4.306,3873,5.758,3874,4.306,3875,4.701,3877,4.146,3878,5.384,3879,5.659,3880,4.488,3881,5.384,3882,4.488,3883,5.384,3884,4.488,3885,4.488,3886,4.701,3887,4.306,3888,4.701,3889,5.951,3890,4.306,3891,4.701,3892,4.146,4898,8.05,4899,6.359]],["title/classes/UpdatedSubscription.html",[0,0.279,461,2.251]],["body/classes/UpdatedSubscription.html",[0,0.56,2,0.488,3,0.021,4,0.021,5,0.025,8,1.065,10,2.182,11,1.052,12,1.302,14,0.975,15,0.156,16,0.352,18,1.586,19,1.252,20,0.191,21,0.39,24,0.168,27,0.005,31,0.429,32,0.374,34,0.091,35,0.356,40,0.061,41,0.567,45,1.249,60,0.975,70,1.921,83,1.668,85,0.806,93,1.284,95,1.291,96,1.291,97,1.207,113,1.217,118,1.531,127,0.002,128,0.003,129,0.002,146,1.487,150,0.84,153,1.918,185,2.334,199,1.026,272,1.378,302,1.382,406,1.508,408,2.252,411,1.743,416,1.627,417,1.013,418,1.052,419,1.183,420,1.183,421,1.607,423,1.168,424,1.284,434,3.165,435,3.291,436,1.923,440,2.004,441,2.599,442,1.284,443,1.266,444,1.963,445,1.886,446,1.782,447,3.226,448,4.793,449,3.165,450,1.815,451,3.049,452,2.794,453,1.963,454,1.531,455,3.165,456,3.165,457,1.284,458,3.049,459,3.29,460,1.782,461,3.473,462,1.923,463,3.165,464,3.165,465,1.963,466,1.963,467,3.165,468,3.106,469,3.165,470,1.75,471,1.815,472,3.165,473,1.44,474,3.165,475,1.963,476,3.165,477,1.923,478,3.165,479,1.719,480,1.633,481,2.004,482,2.004,483,2.004,484,1.782,485,2.004,486,2.004,487,2.004,488,1.661,489,2.004,490,2.912,491,2.004,492,2.004,493,1.581,494,2.004,495,2.004,496,2.004,497,1.963,498,1.963,499,2.004,500,2.004,501,2.004,502,2.004,503,2.004,504,1.923,4900,5.999]],["title/classes/UselessAuthAction.html",[0,0.279,65,2.548]],["body/classes/UselessAuthAction.html",[0,0.549,1,3.445,2,0.511,3,0.022,4,0.022,5,0.026,6,2.242,8,1.065,9,3.985,10,1.144,11,1.101,12,3.264,13,2.966,14,0.952,15,0.163,16,0.364,17,0.845,18,1.336,19,1.226,20,0.187,21,0.182,23,2.946,24,0.121,27,0.005,31,0.449,32,0.391,33,2.354,34,0.085,35,0.373,36,3.247,37,1.935,38,2.263,39,1.935,40,0.06,41,0.593,42,2.191,43,3.31,44,1.159,45,2.193,46,3.595,47,2.776,48,3.852,49,2.996,50,4.777,51,4.109,52,3.595,53,2.296,54,3.518,55,2.675,56,3.518,57,3.356,58,3.595,59,3.595,60,1.464,61,3.595,62,2.296,63,3.31,64,3.616,65,4.016,66,1.973,67,2.296,68,2.012,69,1.864,70,1.008,71,2.354,72,2.946,73,1.144,74,2.296,75,2.296,76,2.054,77,3.31,78,2.296,79,2.296,80,3.31,81,3.128,82,1.935,83,1.487,84,1.973,85,0.871,86,1.973,87,2.012,88,1.681,89,2.354,90,2.354,91,3.377,92,3.294,93,1.927,94,3.294,95,1.368,96,1.368,97,1.279,98,2.354,99,2.354,100,2.296,101,2.097,102,2.354,103,2.097,104,1.709,105,2.296,106,2.242,107,3.216,108,2.296,109,3.074,110,1.358,111,2.097,112,2.296,113,0.593,114,2.354,115,2.296,116,2.354,117,2.296,118,1.602,119,2.354,120,2.354,121,3.377,122,2.887,123,2.354,124,2.354,125,2.354,126,2.242,127,0.002,128,0.003,129,0.002,4901,4.321]],["title/classes/User.html",[0,0.279,49,1.584]],["body/classes/User.html",[0,0.432,2,0.92,3,0.04,4,0.04,5,0.047,17,0.918,19,1.189,20,0.146,21,0.384,24,0.218,26,0.535,27,0.005,28,0.525,29,0.535,40,0.047,49,2.871,85,1.066,127,0.004,128,0.004,129,0.004,1095,4.902,1444,7.098,1446,7.098,4902,7.785,4903,6.987,4904,7.785,4905,6.987,4906,6.987,4907,6.987]],["title/classes/UserApplicationNotRegistered.html",[0,0.279,2306,3.063]],["body/classes/UserApplicationNotRegistered.html",[0,0.529,2,0.682,3,0.029,4,0.029,5,0.035,8,1.024,14,0.936,15,0.218,16,0.444,17,0.763,18,1.681,19,1.215,20,0.193,21,0.243,22,1.51,24,0.236,26,0.397,27,0.005,28,0.389,29,0.397,31,0.6,32,0.522,34,0.089,35,0.498,40,0.06,41,0.792,49,3.315,60,1.363,83,1.691,95,1.292,96,1.292,97,1.208,113,1.334,127,0.003,128,0.003,129,0.003,416,1.943,417,1.416,418,1.471,419,1.654,420,1.654,437,2.234,526,4.417,1115,3.228,1148,4.716,1228,4.12,2087,3.317,2300,5.142,2301,3.764,2304,4.074,2305,5.142,2306,5.456,2307,5.142,2308,5.142,2309,3.145,2310,3.764,2311,4.074,2312,5.338,2313,4.074,2314,4.074,2315,4.074,2316,3.764,4908,7.563,4909,5.773]],["title/classes/UserApplicationRegistered.html",[0,0.279,2305,3.063]],["body/classes/UserApplicationRegistered.html",[0,0.529,2,0.682,3,0.029,4,0.029,5,0.035,8,1.024,14,0.936,15,0.218,16,0.444,17,0.763,18,1.681,19,1.215,20,0.193,21,0.243,22,1.51,24,0.236,26,0.397,27,0.005,28,0.389,29,0.397,31,0.6,32,0.522,34,0.089,35,0.498,40,0.06,41,0.792,49,3.315,60,1.363,83,1.691,95,1.292,96,1.292,97,1.208,113,1.334,127,0.003,128,0.003,129,0.003,416,1.943,417,1.416,418,1.471,419,1.654,420,1.654,437,2.234,526,4.417,1115,3.228,1148,4.716,1228,4.12,2087,3.317,2300,5.142,2301,3.764,2304,4.074,2305,5.456,2306,5.142,2307,5.142,2308,5.142,2309,3.145,2310,3.764,2311,5.338,2312,4.074,2313,4.074,2314,4.074,2315,4.074,2316,3.764,4910,7.563,4911,5.773]],["title/classes/UserContext.html",[0,0.279,2579,3.917]],["body/classes/UserContext.html",[0,0.429,2,0.913,3,0.039,4,0.039,5,0.047,19,1.223,20,0.145,21,0.382,24,0.216,26,0.531,27,0.005,28,0.521,29,0.531,40,0.047,81,3.91,85,1.082,127,0.004,128,0.004,129,0.004,1095,4.862,1444,7.064,1446,7.064,2579,7.064,2684,6.93,4903,6.93,4905,6.93,4906,6.93,4907,6.93,4912,9.062,4913,7.722,4914,7.722]],["title/injectables/UserEffects.html",[830,4.171,862,1.402]],["body/injectables/UserEffects.html",[0,0.241,1,3.452,3,0.022,4,0.022,5,0.026,8,0.988,15,0.163,16,0.364,20,0.157,21,0.183,24,0.235,26,0.298,27,0.005,28,0.292,29,0.298,31,0.824,32,0.718,34,0.114,35,0.374,40,0.026,42,2.199,49,3.258,70,2.099,81,2.682,110,1.914,113,1.199,127,0.002,128,0.003,129,0.002,150,0.882,165,2.274,169,2.112,181,2.333,202,4.198,249,1.924,271,0.779,382,1.69,479,2.587,518,1.513,521,4.435,526,4.52,540,2.582,547,1.21,548,1.194,549,1.226,553,3.381,562,1.194,581,3.622,830,5.158,862,1.734,863,1.906,871,6.184,873,5.158,879,5.599,880,5.464,882,4.322,894,2.362,895,2.25,897,1.906,898,2.061,900,1.536,917,3.675,1115,2.425,1148,3.475,1157,5.599,1228,3.386,1258,4.121,1458,5.662,1488,5.289,1548,5.578,2087,2.492,2088,3.206,2300,5.326,2305,5.118,2306,4.427,2307,5.485,2308,4.427,2310,6.001,2316,2.827,2714,3.302,2903,6.584,3520,5.578,3941,6.653,3994,3.892,4915,4.336,4916,7.264,4917,7.264,4918,7.264,4919,4.336,4920,6.215,4921,7.933,4922,6.215,4923,6.215,4924,7.933,4925,7.12,4926,6.215,4927,6.215,4928,6.215,4929,6.215,4930,4.336,4931,6.215,4932,6.215,4933,6.215,4934,7.933,4935,6.215,4936,8.738,4937,6.215,4938,6.215,4939,6.215,4940,6.215,4941,6.215,4942,6.215,4943,6.215,4944,4.336,4945,6.215,4946,9.51,4947,6.215,4948,6.215,4949,4.336,4950,7.933,4951,6.215,4952,4.336,4953,4.336]],["title/injectables/UserService.html",[862,1.402,3941,3.715]],["body/injectables/UserService.html",[0,0.365,3,0.034,4,0.034,5,0.04,7,2.556,15,0.248,16,0.482,19,1.105,20,0.176,21,0.346,24,0.263,26,0.616,27,0.005,28,0.604,29,0.616,34,0.114,40,0.04,49,3.11,85,1.005,104,3.25,127,0.003,128,0.004,129,0.003,169,1.756,251,1.892,268,1.869,271,1.18,540,2.664,547,1.834,561,3.579,562,1.81,628,3.409,668,5.173,771,3.409,772,3.491,862,2.293,863,2.888,1105,5.595,1106,4.637,1115,3.673,1147,5.799,2099,4.448,3941,6.074,4022,5.897,4925,7.374,4954,6.57,4955,8.965,4956,8.965,4957,8.965,4958,8.217,4959,8.217,4960,6.57,4961,8.217,4962,6.57,4963,6.57,4964,8.217,4965,6.57,4966,6.57,4967,6.57]],["title/interfaces/UserState.html",[747,1.955,761,4.171]],["body/interfaces/UserState.html",[3,0.039,4,0.039,5,0.047,15,0.29,16,0.53,20,0.169,27,0.005,40,0.055,85,0.998,127,0.004,128,0.004,129,0.004,138,2.753,165,1.841,170,2.81,179,2.532,747,2.995,748,4.193,761,7.972,1228,5.505,4968,7.697,4969,10.106,4970,7.697]],["title/modules/UtilitiesModule.html",[604,2.209,618,3.402]],["body/modules/UtilitiesModule.html",[0,0.379,3,0.035,4,0.043,5,0.051,17,0.688,27,0.005,34,0.112,40,0.041,57,3.565,68,3.178,73,1.808,127,0.003,128,0.004,129,0.003,271,1.225,275,3.541,285,2.454,286,2.417,287,2.454,288,2.454,289,2.454,290,2.454,291,2.093,292,2.182,293,2.454,294,2.454,295,2.454,296,2.381,297,2.278,298,2.417,299,2.454,300,2.454,301,2.454,302,1.572,303,2.454,304,2.093,307,2.182,372,3.534,390,3.483,604,3,606,3.46,607,3.921,608,5.559,609,4.035,610,4.846,618,6.999,619,4.974,620,4.16,622,3.718,624,4.583,629,5.297,632,4.035,1000,5.32,1323,4.817,4971,6.125,4972,6.125,4973,6.125,4974,6.825,4975,6.825,4976,6.825,4977,6.825,4978,6.825]],["title/pipes/XAxisTickFormatPipe.html",[1258,2.13,2946,3.917]],["body/pipes/XAxisTickFormatPipe.html",[0,0.241,3,0.022,4,0.022,5,0.026,9,2.84,14,0.418,20,0.136,24,0.203,26,0.499,27,0.005,28,0.566,29,0.499,31,0.646,32,0.906,34,0.086,40,0.026,85,1.078,88,3.088,127,0.002,128,0.003,129,0.002,165,1.898,169,2.259,206,2.589,243,1.449,251,1,268,1.653,271,0.779,302,1.432,450,3.488,561,4.762,562,1.196,920,4.297,939,2.646,951,4.389,1051,3.458,1258,2.635,1383,3.388,1384,4.905,1414,2.84,2457,7.255,2480,4.848,2493,3.896,2725,6.187,2825,4.693,2946,4.848,2971,7.123,2972,7.123,2973,7.123,3444,4.389,3699,7.845,4515,3.896,4979,4.34,4980,4.34,4981,6.219,4982,6.219,4983,10.221,4984,4.34,4985,8.741,4986,7.936,4987,8.741,4988,4.34,4989,6.219,4990,4.34,4991,6.219,4992,6.219,4993,6.219,4994,6.219,4995,6.219,4996,4.34,4997,6.219,4998,4.34,4999,6.219,5000,7.267,5001,7.267,5002,7.267,5003,10.308,5004,6.219,5005,8.4,5006,7.267,5007,7.267,5008,6.219,5009,6.219,5010,6.219,5011,6.219,5012,7.267,5013,6.219,5014,6.219,5015,7.936,5016,4.34,5017,4.34,5018,4.34,5019,4.34,5020,7.267,5021,7.267,5022,4.34,5023,4.34,5024,4.34,5025,4.34,5026,7.936,5027,6.219,5028,6.219,5029,4.34,5030,4.34,5031,4.34,5032,4.34,5033,4.34,5034,4.34,5035,6.219]],["title/dependencies.html",[607,3.478,5036,4.18]],["body/dependencies.html",[4,0.034,20,0.124,27,0.005,35,0.713,36,2.976,37,2.976,110,1.455,127,0.003,128,0.004,129,0.003,189,2.815,271,1.193,273,4.507,274,4.05,275,4.293,386,2.25,423,1.879,445,3.034,545,5.839,546,5.602,547,1.854,607,3.817,619,3.928,632,3.928,635,3.369,645,4.468,646,3.294,648,5.514,649,5.514,651,5.514,652,7.024,653,6.867,656,5.514,657,5.514,658,5.514,668,4.183,669,4.331,670,4.331,682,4.05,685,3.817,763,4.689,895,3.447,1112,4.689,1113,5.839,1414,3.778,2121,4.498,2590,5.514,2822,4.05,2966,5.963,2967,5.963,4048,5.963,5037,6.644,5038,10.14,5039,6.644,5040,6.644,5041,6.644,5042,6.644,5043,6.644,5044,6.644,5045,6.644,5046,6.644,5047,6.644,5048,9.431,5049,6.644,5050,6.644,5051,6.644,5052,6.644,5053,6.644,5054,6.644,5055,6.644,5056,6.644,5057,6.644,5058,6.644,5059,6.644,5060,6.644,5061,6.644,5062,6.644,5063,6.644,5064,6.644,5065,6.644,5066,6.644,5067,8.274,5068,6.644,5069,6.644,5070,6.644,5071,6.644,5072,6.644,5073,6.644,5074,6.644]],["title/miscellaneous/enumerations.html",[5075,3.259,5076,5.432]],["body/miscellaneous/enumerations.html",[1,1.589,3,0.017,6,1.735,8,0.782,10,2.406,11,0.852,12,3.068,13,2.549,15,0.126,27,0.005,32,0.971,42,2.598,43,1.526,44,1.672,45,2.113,46,1.658,47,2.295,48,3.311,49,3.118,50,4.395,51,3.624,52,1.658,53,1.776,54,1.622,55,2.688,56,1.622,57,2.96,58,1.658,59,1.658,60,2.109,61,1.658,62,1.776,63,2.845,64,2.845,65,1.695,66,1.526,67,1.776,70,1.756,75,1.776,76,1.589,77,1.526,78,1.776,79,1.776,80,1.526,81,3.013,82,1.497,84,2.34,86,2.34,87,2.386,93,1.04,113,1.171,118,1.24,127,0.002,128,0.002,129,0.002,132,1.977,134,3.123,136,2.837,138,0.958,146,1.564,153,1.638,172,1.871,177,3.123,178,3.123,193,1.869,218,3.123,219,0.984,220,0.984,221,2.038,222,2.038,223,2.038,224,1.557,302,1.435,314,2.437,338,2.021,362,2.709,376,1.616,382,2.047,388,1.548,399,1.821,400,1.977,404,2.944,405,1.821,406,1.871,407,1.695,408,2.843,409,1.869,410,1.869,411,2.541,412,1.776,413,3.907,414,1.869,415,1.869,416,1.905,417,2.029,418,2.108,419,2.277,420,2.277,421,2.424,422,1.977,434,1.497,435,1.557,436,2.386,441,1.011,446,2.211,447,1.526,448,4.653,449,1.497,450,1.469,451,1.443,452,1.557,453,1.589,454,1.9,455,1.497,456,1.497,457,2.342,458,1.443,459,3.166,460,1.443,461,1.497,462,1.557,463,1.497,464,1.497,465,1.589,466,1.589,467,1.497,468,1.469,469,1.497,470,1.417,471,1.469,472,1.497,473,1.166,474,1.497,475,1.589,476,1.497,477,1.557,478,1.497,479,2.133,480,2.027,526,3.579,534,1.921,554,2.105,577,1.921,599,2.359,687,3.394,701,4.144,712,2.105,714,1.735,728,1.497,731,2.105,750,4.395,841,1.921,842,2.472,848,3.03,850,3.788,851,2.865,852,2.606,853,2.263,854,2.359,872,1.977,901,3.34,902,2.038,903,1.977,908,2.038,910,2.359,911,2.775,912,4.599,940,4.599,941,3,942,3,943,3,944,3,945,3,946,3,947,3,948,3,1032,2.179,1036,3.923,1037,2.179,1038,2.038,1094,2.359,1127,3.616,1148,3.483,1167,1.921,1228,2.791,1459,1.776,1469,4.397,1522,2.472,1528,3.226,1531,2.105,1571,3.469,1573,3.788,1651,1.921,1781,2.775,1794,4.253,1795,2.606,1796,2.179,2025,3,2026,4.599,2030,4.253,2039,2.775,2087,2.944,2136,2.775,2193,2.472,2217,2.606,2253,2.179,2278,3,2279,4.599,2281,3,2282,3,2294,4.253,2300,2.038,2301,2.179,2305,2.038,2306,2.038,2307,2.038,2308,2.038,2309,2.791,2310,2.179,2411,3.579,2413,1.921,2714,1.776,2810,2.179,2811,2.359,2823,3.616,2825,3.03,2827,3.616,2842,2.179,2929,1.921,2930,3.123,2935,2.263,3040,3,3055,3.788,3058,4.606,3078,3,3079,3,3080,3,3081,3,3082,3,3102,2.359,3113,2.105,3117,3.03,3118,1.921,3119,1.869,3120,1.977,3121,1.977,3122,1.977,3137,2.105,3141,1.977,3142,1.977,3143,4.062,3144,1.977,3145,1.977,3444,2.359,3450,2.359,3451,2.606,3455,4.253,3456,2.359,3462,2.775,3463,5.796,3468,4.253,3469,2.775,3697,3,3702,3,3873,2.179,3874,2.263,3877,3.34,3878,2.038,3879,2.038,3880,2.359,3881,2.038,3882,2.359,3883,2.038,3884,2.359,3885,2.359,4580,3,4589,4.599,4637,3,4638,3,4639,3,4640,3,4641,3,4642,3,4643,3,4644,3,5075,2.606,5076,3,5077,4.599,5078,3,5079,3,5080,3,5081,3.343,5082,3,5083,6.268,5084,3,5085,3.343,5086,3.343,5087,3.343,5088,3,5089,3.343,5090,3,5091,3.343,5092,3,5093,3,5094,3.343,5095,3.343,5096,3,5097,3]],["title/index.html",[15,0.189,5098,4.51]],["body/index.html",[2,0.512,27,0.005,57,1.836,127,0.002,128,0.003,129,0.002,205,3.955,235,2.459,236,1.425,275,2.248,304,1.329,311,3.047,313,2.459,316,2.459,318,2.459,320,2.423,322,2.459,325,3.047,327,2.96,329,2.459,330,3.003,334,2.459,337,2.495,340,2.459,343,2.96,345,3.047,346,2.459,348,3.003,350,2.459,351,2.459,353,2.423,355,2.459,357,2.495,358,2.459,359,2.423,361,2.459,364,2.459,366,2.459,368,2.459,370,2.459,372,3.047,374,2.388,375,2.459,378,2.459,380,2.459,381,2.459,383,2.459,385,2.459,387,2.459,389,1.446,390,3.003,392,2.423,394,2.423,519,5.367,521,4.059,604,1.904,605,7.638,606,2.197,607,2.489,608,2.641,609,2.562,610,2.302,611,3.888,612,3.888,613,3.888,614,3.888,615,5.367,616,7.671,617,6.206,618,6.516,619,3.672,620,2.641,684,2.825,728,1.94,748,2.36,771,3.767,863,1.904,867,4.733,920,4.293,1063,7.877,1064,3.888,1065,3.888,1066,3.888,1067,5.367,1068,7.292,1258,1.836,1899,4.059,2100,5.124,2197,3.888,2198,3.888,2200,3.888,2201,3.888,2202,5.367,2233,5.367,2485,3.058,2882,5.367,2941,8.207,2942,3.888,2943,3.888,2944,3.888,2945,3.888,2946,5.659,2947,5.367,3937,3.888,3938,3.888,3939,5.367,3940,5.659,3941,5.367,3995,7.877,3996,3.888,3997,3.888,3998,3.888,3999,5.367,4041,3.888,4042,3.888,4174,6.81,4175,3.888,4176,3.888,4177,3.888,4178,5.367,4480,3.888,4971,3.888,4972,3.888,4973,3.888,5098,3.888,5099,4.333,5100,4.333,5101,4.333,5102,4.333,5103,4.333]],["title/modules.html",[606,3.494]],["body/modules.html",[27,0.004,127,0.003,128,0.004,129,0.003,470,4.25,546,7.058,605,5.529,606,3.792,615,5.529,616,5.529,617,5.529,618,5.064,652,8.126,1063,5.83,1067,5.529,1068,5.279,2941,5.83,2947,5.529,3995,5.83,3999,5.529,4174,5.83,4178,5.529,5104,10.424,5105,10.611,5106,10.029]],["title/routes.html",[684,4.493]],["body/routes.html",[27,0.004,127,0.004,128,0.004,129,0.004,684,5.431]],["title/miscellaneous/typealiases.html",[5075,3.259,5107,6.053]],["body/miscellaneous/typealiases.html",[1,2.887,6,3.152,15,0.229,20,0.114,27,0.005,43,2.774,46,3.013,52,3.013,54,2.948,56,2.948,58,3.013,59,3.013,61,3.013,65,3.08,77,2.774,80,2.774,122,2.829,126,4.056,127,0.003,128,0.004,129,0.003,132,3.592,183,4.766,184,3.703,399,3.31,400,3.592,405,3.31,407,3.08,409,3.397,410,3.397,412,3.228,414,3.397,415,3.397,416,2.265,433,4.766,434,2.721,435,2.829,436,3.641,447,2.774,449,2.721,451,2.621,455,2.721,456,2.721,458,2.621,461,2.721,463,2.721,464,2.721,467,2.721,468,2.67,469,2.721,472,2.721,474,2.721,476,2.721,478,2.721,504,3.641,554,3.825,841,3.491,842,4.491,853,4.113,857,4.113,861,6.095,872,3.592,902,3.703,903,3.592,908,3.703,1032,3.961,1038,3.703,1045,5.293,1531,3.825,1651,3.491,2253,3.961,2300,3.703,2301,3.961,2305,3.703,2306,3.703,2307,3.703,2308,3.703,2316,5.097,2413,3.491,2810,3.961,2811,4.288,2825,3.592,2842,3.961,2845,5.78,2929,3.491,3102,4.288,3109,5.78,3113,3.825,3118,3.491,3119,3.397,3120,3.592,3121,3.592,3122,3.592,3136,5.097,3137,3.825,3141,3.592,3142,3.592,3144,3.592,3145,3.592,3153,5.097,3450,4.288,3451,4.736,3456,4.288,3460,6.489,3873,3.961,3874,4.113,3878,3.703,3879,3.703,3881,3.703,3883,3.703,3892,5.097,5075,4.736,5077,5.453,5078,5.453,5079,5.453,5080,5.453,5082,5.453,5083,5.453,5084,5.453,5088,5.453,5090,5.453,5092,5.453,5093,5.453,5096,5.453,5097,5.453,5108,6.075]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1051,"title":{},"body":{"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0${value}`.slice",{"_index":2470,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["0.3rem",{"_index":4875,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["0.5",{"_index":4644,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.0",{"_index":5043,"title":{},"body":{"dependencies.html":{}}}],["0.5.27",{"_index":5065,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":3691,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["0.9.1",{"_index":5074,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":728,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.14",{"_index":5066,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":5060,"title":{},"body":{"dependencies.html":{}}}],["1.2.27",{"_index":5044,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":5072,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2193,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["100",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["1000",{"_index":1129,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["11.0.1",{"_index":5049,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2867,"title":{},"body":{"components/FeedComponent.html":{}}}],["120",{"_index":5102,"title":{},"body":{"index.html":{}}}],["13",{"_index":5103,"title":{},"body":{"index.html":{}}}],["13.0.2",{"_index":5053,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":5099,"title":{},"body":{"index.html":{}}}],["15",{"_index":4478,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["150",{"_index":2353,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["16",{"_index":4476,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":3381,"title":{},"body":{"components/IconComponent.html":{}}}],["1m",{"_index":2937,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["2",{"_index":712,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":297,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2.0.1",{"_index":5067,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":5062,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":5055,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":5064,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":5059,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":2356,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["2020",{"_index":287,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["25",{"_index":5101,"title":{},"body":{"index.html":{}}}],["2px",{"_index":4872,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2485,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/DateTimeNgb.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"index.html":{}}}],["3.6.1",{"_index":5070,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4480,"title":{},"body":{"components/TimeLineComponent.html":{},"index.html":{}}}],["30px",{"_index":1892,"title":{},"body":{"components/CardComponent.html":{}}}],["31536000000",{"_index":2157,"title":{},"body":{"injectables/CardService.html":{}}}],["32",{"_index":2351,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["32px",{"_index":3380,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":4642,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["362",{"_index":3907,"title":{},"body":{"components/ResizableComponent.html":{}}}],["39",{"_index":5100,"title":{},"body":{"index.html":{}}}],["4",{"_index":3112,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":5052,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":5061,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":5063,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":5046,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":5057,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1881,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1583,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["404",{"_index":3519,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["48",{"_index":2139,"title":{},"body":{"injectables/CardService.html":{}}}],["5",{"_index":2275,"title":{"classes/HandleUnexpectedError-5.html":{}},"body":{"interfaces/ConfigState.html":{}}}],["5.12.1",{"_index":5045,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1585,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":2257,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1883,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":2864,"title":{"classes/HandleUnexpectedError-6.html":{}},"body":{"components/FeedComponent.html":{}}}],["6.3.3",{"_index":5068,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2136,"title":{},"body":{"injectables/CardService.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["60000",{"_index":2906,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["64px",{"_index":3378,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":2870,"title":{},"body":{"components/FeedComponent.html":{}}}],["7.1.0",{"_index":5048,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":5047,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":4505,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["8",{"_index":1216,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["8.0.4",{"_index":5056,"title":{},"body":{"dependencies.html":{}}}],["8.2.14",{"_index":5038,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":5040,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["90",{"_index":3445,"title":{},"body":{"components/InfoComponent.html":{}}}],["9999px",{"_index":2566,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["_",{"_index":1114,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(tmpmoment",{"_index":4572,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":4530,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(array.from(currentinputversions",{"_index":4778,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":4084,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":4085,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(inputpublishers",{"_index":4763,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(uncachedpublishers",{"_index":4771,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":3794,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":1172,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":3066,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1698,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":4858,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.isequal(status",{"_index":4144,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["_.isequal(thirdactionstatus",{"_index":3500,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["_defaultfilters",{"_index":3041,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":3416,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":4064,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":2576,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1802,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":3157,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["_locale:string",{"_index":3314,"title":{},"body":{"injectables/I18nService.html":{}}}],["_modalservice",{"_index":262,"title":{},"body":{"components/ActionComponent.html":{}}}],["_resizesubject",{"_index":1703,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["_selectediframeurl",{"_index":3393,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":3762,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":3417,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":3298,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":3315,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":3418,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":2046,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":3291,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["above",{"_index":2917,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["abstractcontrol",{"_index":2537,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["accept",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(auth",{"_index":1509,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authenticationinfo",{"_index":1497,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":1511,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(this.authservice.providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1545,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":58,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":59,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":1485,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":1097,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["accessors",{"_index":1811,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":4986,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":1467,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["account",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["accumulated",{"_index":2936,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accumulation",{"_index":2916,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["action'},{'name",{"_index":310,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["action(null",{"_index":182,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["action).pipe",{"_index":4147,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.buttonstyle",{"_index":2670,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":2671,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.component.html",{"_index":248,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.component.scss",{"_index":246,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.key",{"_index":4151,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.label.key",{"_index":284,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.payload",{"_index":873,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["action.payload.actionkey",{"_index":3491,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.actions",{"_index":3507,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.card",{"_index":3481,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.cardid",{"_index":3489,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.event.url.indexof(\"/archives/cards/\")>=0",{"_index":2387,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":2383,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":2394,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":2397,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.id",{"_index":3509,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":3656,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":3655,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":2389,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":2382,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":2892,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":2891,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.user",{"_index":4936,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload.versions",{"_index":4697,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["action.service",{"_index":277,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["action.service.ts",{"_index":4113,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:104",{"_index":4135,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:122",{"_index":4131,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:33",{"_index":4119,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:40",{"_index":4128,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:49",{"_index":4133,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:65",{"_index":4126,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:80",{"_index":4123,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.updatestatebeforeaction",{"_index":4167,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actioncomponent",{"_index":235,"title":{"components/ActionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["actionid",{"_index":2597,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionkey",{"_index":498,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionreducermap",{"_index":769,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["actions/archive.actions",{"_index":909,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["actions?:map",{"_index":3466,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["actionsappear",{"_index":1803,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardState.html":{}}}],["actionservice",{"_index":260,"title":{},"body":{"components/ActionComponent.html":{}}}],["actionstatus",{"_index":185,"title":{"classes/ActionStatus.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionstatus(null",{"_index":187,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsurlpath",{"_index":1804,"title":{},"body":{"components/CardComponent.html":{}}}],["actiontype",{"_index":134,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["actionurl",{"_index":4114,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionurlpath",{"_index":255,"title":{},"body":{"components/ActionComponent.html":{}}}],["activate",{"_index":2715,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":2426,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":856,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":3028,"title":{},"body":{"classes/Filter.html":{}}}],["active_from_param",{"_index":945,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["active_to_param",{"_index":947,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activedetail",{"_index":2710,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":2716,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activefrom",{"_index":946,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activeto",{"_index":948,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":396,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualizedaction",{"_index":3501,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["add",{"_index":421,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CardOperation.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addactionsappear",{"_index":399,"title":{"classes/AddActionsAppear.html":{}},"body":{"classes/AddActionsAppear.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addactionsappear(this.lightcard.id",{"_index":1865,"title":{},"body":{"components/CardComponent.html":{}}}],["addactionsappear(urlparts[3",{"_index":2023,"title":{},"body":{"components/CardListComponent.html":{}}}],["addauthheadersifnecessary",{"_index":4662,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":4666,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1951,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["adding",{"_index":4453,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["addlightcardfailure",{"_index":434,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":2072,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["adds",{"_index":465,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addthirdactions",{"_index":464,"title":{"classes/AddThirdActions.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addthirdactions({card",{"_index":3517,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["administrator",{"_index":2357,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["af.payload.name",{"_index":2076,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":2080,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":2689,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ahead",{"_index":386,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["alarm",{"_index":3055,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1699,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":2674,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":5108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1893,"title":{},"body":{"components/CardComponent.html":{}}}],["allowed",{"_index":1743,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["allows",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":479,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":2442,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":668,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":5037,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":5039,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":628,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":5041,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":271,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":1756,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ConfirmModalComponent.html":{}}}],["anymore",{"_index":1392,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["anyway",{"_index":2163,"title":{},"body":{"injectables/CardService.html":{},"components/ConfirmModalComponent.html":{}}}],["api",{"_index":4254,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["apiversion",{"_index":4276,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["app",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationEffects.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["app/modules/utilities/components/resizable/resizable.component",{"_index":2020,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["appcomponent",{"_index":311,"title":{"components/AppComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":2728,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":393,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":422,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"directives/DraggableDirective.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["appeffects",{"_index":834,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["application/x",{"_index":1212,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["applied",{"_index":3685,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["applies",{"_index":3025,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":1527,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{}}}],["applyfilter",{"_index":841,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":3014,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":2900,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":837,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":605,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":395,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":835,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":1324,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["approutingmodule",{"_index":615,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":548,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["archive",{"_index":314,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archive.filters.{{filterpath",{"_index":2562,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["archive.search",{"_index":981,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveactions",{"_index":1045,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/typealiases.html":{}}}],["archiveactiontypes",{"_index":901,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveactiontypes.archivequerysuccess",{"_index":1035,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.handleunexpectederror",{"_index":1041,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.selectarchivedlightcard",{"_index":1044,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.sendarchivequery",{"_index":1040,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivefilter",{"_index":1039,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivepage",{"_index":1043,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archived",{"_index":413,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveeffects",{"_index":825,"title":{"injectables/ArchiveEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{}}}],["archivefilterscomponent",{"_index":313,"title":{"components/ArchiveFiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archiveform",{"_index":915,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveinitialstate",{"_index":1049,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["archivelistcomponent",{"_index":316,"title":{"components/ArchiveListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivelistpagecomponent",{"_index":318,"title":{"components/ArchiveListPageComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivepath",{"_index":688,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["archivequerysuccess",{"_index":902,"title":{"classes/ArchiveQuerySuccess.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archivequerysuccess({resultpage",{"_index":878,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["archivereducer",{"_index":799,"title":{},"body":{"interfaces/AppState.html":{}}}],["archives",{"_index":689,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":321,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":1072,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":1054,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":1053,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":320,"title":{"components/ArchivesComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":1063,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":1067,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivestate",{"_index":751,"title":{"interfaces/ArchiveState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{}}}],["archivesurl",{"_index":2090,"title":{},"body":{"injectables/CardService.html":{}}}],["args",{"_index":3252,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1",{"_index":3254,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1])[args[2",{"_index":3255,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":3264,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":2741,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["arise",{"_index":1389,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["array",{"_index":2612,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":3793,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array.from(actions.entries",{"_index":1873,"title":{},"body":{"components/CardComponent.html":{}}}],["array.from(calcelements",{"_index":1777,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(currentcachedversions",{"_index":4779,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["array.from(fixedelements",{"_index":1765,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(versions.values()).map(version",{"_index":4719,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["arrow::after",{"_index":4879,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["asc",{"_index":1964,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["ask",{"_index":1132,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askcreateuser",{"_index":4956,"title":{},"body":{"injectables/UserService.html":{}}}],["askcreateuser(userdata",{"_index":4959,"title":{},"body":{"injectables/UserService.html":{}}}],["askfori18njson",{"_index":4286,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["askfori18njson(publisher",{"_index":4247,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["askforoauthaccesstoken",{"_index":1370,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfromcode(code",{"_index":1229,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfrompassword(login",{"_index":1243,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenurl",{"_index":1133,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askuserapplicationregistered",{"_index":4957,"title":{},"body":{"injectables/UserService.html":{}}}],["askuserapplicationregistered(user",{"_index":4961,"title":{},"body":{"injectables/UserService.html":{}}}],["assets/i18n",{"_index":3319,"title":{},"body":{"injectables/I18nService.html":{}}}],["assets/styles/_variables.scss",{"_index":3387,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":1170,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["async",{"_index":1026,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["attachaction",{"_index":2580,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":2595,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["attribute",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["auth",{"_index":1264,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.firstname",{"_index":1260,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.lastname",{"_index":1262,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticate",{"_index":1554,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":1544,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["authentication/authentication.service",{"_index":2122,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":100,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.implicitallyauthenticated",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":112,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologin",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologout",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.unabletorefreshorgettoken",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.unauthenticationfromimplicitflow",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.uselessauthaction",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationeffects",{"_index":780,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{}}}],["authenticationguard",{"_index":695,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationmodehandler",{"_index":1145,"title":{"interfaces/AuthenticationModeHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticationreducer",{"_index":767,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["authentificated",{"_index":4931,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authinfo",{"_index":1505,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":1447,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authmodehandler",{"_index":1144,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authobject",{"_index":1093,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization",{"_index":1329,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization_code",{"_index":1235,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authservice",{"_index":1458,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{}}}],["authstate",{"_index":752,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authstate.firstname",{"_index":2630,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.identifier",{"_index":2628,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.lastname",{"_index":2631,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.token",{"_index":2629,"title":{},"body":{"components/DetailComponent.html":{}}}],["auto",{"_index":1004,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["autoscale",{"_index":4485,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":470,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["availableheight",{"_index":1774,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["availableheight}px",{"_index":1780,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["await",{"_index":1321,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["axis",{"_index":2973,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":3292,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":732,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["background",{"_index":4878,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["backwardconf",{"_index":4498,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["badge",{"_index":1891,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":323,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["base64",{"_index":2333,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["based",{"_index":1745,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["basehref",{"_index":3370,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":3373,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":4635,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":4632,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":4634,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":322,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:27",{"_index":2782,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":2780,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":2781,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":2797,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":2799,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":2798,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":2796,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:34",{"_index":2795,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:40",{"_index":2792,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:70",{"_index":2791,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:75",{"_index":2794,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:79",{"_index":2789,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:83",{"_index":2787,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:88",{"_index":2788,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:94",{"_index":2790,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:98",{"_index":2793,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1617,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basically",{"_index":4251,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["bearer",{"_index":1330,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["bearing",{"_index":1752,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["beat",{"_index":2830,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":1962,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"interfaces/TimelineState.html":{}}}],["behaviour",{"_index":2995,"title":{},"body":{"classes/Filter.html":{}}}],["being",{"_index":1963,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardService.html":{}}}],["best",{"_index":4978,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["beware",{"_index":1236,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["big",{"_index":3377,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":2581,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":2599,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":2766,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"interfaces/CardState.html":{},"classes/ChangeSort.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":275,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":274,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["border",{"_index":988,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2994,"title":{},"body":{"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["bottom",{"_index":1882,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1386,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{}}}],["breaks",{"_index":743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["bright",{"_index":3350,"title":{},"body":{"components/IconComponent.html":{}}}],["bright:string",{"_index":3366,"title":{},"body":{"components/IconComponent.html":{}}}],["browse",{"_index":5105,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":3910,"title":{},"body":{"components/ResizableComponent.html":{}}}],["btn",{"_index":3595,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3469,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":4569,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["build",{"_index":1147,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["buildconfigselector",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TimeLineComponent.html":{}}}],["buildfilterselector",{"_index":2932,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":3204,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"components/TimeLineComponent.html":{}}}],["buildsettingsselector",{"_index":1653,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":1464,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1861,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailComponent.html":{}}}],["button.addeventlistener('click",{"_index":2673,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":2665,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":2669,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":2672,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1869,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":139,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["buttontitle",{"_index":4496,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["c",{"_index":286,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["cachedpublishers",{"_index":4760,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification",{"_index":4769,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification.foreach(third",{"_index":4772,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions",{"_index":4757,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions[third",{"_index":4776,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["calc",{"_index":1000,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calcelements",{"_index":1760,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight",{"_index":1704,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight(parentid",{"_index":1718,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightclass",{"_index":1705,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightdirective",{"_index":390,"title":{"directives/CalcHeightDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["calcheightdirective]'},{'name",{"_index":391,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["calculate",{"_index":1770,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculated",{"_index":1750,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["calculation",{"_index":1747,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["call",{"_index":1198,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["call.pipe",{"_index":1248,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["called",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["calling",{"_index":720,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{}}}],["callmodalandhandleresponse",{"_index":4115,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalandhandleresponse(modalservice",{"_index":4120,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary",{"_index":4116,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary(lightcardid",{"_index":4125,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["canactivate",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["cancel",{"_index":2281,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cancel,ok,dismiss",{"_index":2295,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["caps",{"_index":1888,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":146,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":326,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card.actions",{"_index":1575,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["card.actions.ts",{"_index":436,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:107",{"_index":3110,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:110",{"_index":3111,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:115",{"_index":3895,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:117",{"_index":3896,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:122",{"_index":505,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:124",{"_index":506,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:129",{"_index":4882,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:131",{"_index":4883,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:136",{"_index":4884,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:138",{"_index":4885,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:143",{"_index":4886,"title":{},"body":{"classes/UpdateAnActionFailure.html":{}}}],["card.actions.ts:150",{"_index":4110,"title":{},"body":{"classes/ThirdActionAlreadyLoaded.html":{}}}],["card.actions.ts:157",{"_index":4111,"title":{},"body":{"classes/ThirdActionAlreadyUpdated.html":{}}}],["card.actions.ts:164",{"_index":2570,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:166",{"_index":2571,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:171",{"_index":3471,"title":{},"body":{"classes/LightCardAlreadyUpdated.html":{}}}],["card.actions.ts:39",{"_index":3578,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:44",{"_index":2809,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:48",{"_index":3582,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:51",{"_index":3583,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:56",{"_index":3579,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:64",{"_index":3580,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:67",{"_index":3581,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:73",{"_index":3927,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:76",{"_index":3928,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:83",{"_index":2228,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:90",{"_index":438,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:93",{"_index":439,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:98",{"_index":4900,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.component.html",{"_index":1801,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1800,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1911,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":810,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":3473,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:120",{"_index":3487,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:35",{"_index":3478,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:45",{"_index":3508,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:58",{"_index":3505,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:93",{"_index":3521,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":3070,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id",{"_index":1855,"title":{},"body":{"components/CardComponent.html":{},"injectables/LightCardEffects.html":{}}}],["card.id.indexof(selectedcardid",{"_index":2051,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":443,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3463,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:12",{"_index":3465,"title":{},"body":{"classes/LightCard.html":{}}}],["card.model.ts:68",{"_index":4648,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.process",{"_index":163,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":4202,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisher}.${card.publisherversion",{"_index":1840,"title":{},"body":{"components/CardComponent.html":{}}}],["card.reducer",{"_index":788,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":3947,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":3062,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":3071,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.state",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card1.lttd",{"_index":1980,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1984,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1974,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2",{"_index":1973,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.lttd",{"_index":1981,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1983,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1975,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card:card",{"_index":2687,"title":{},"body":{"classes/DetailContext.html":{}}}],["card:lightcard",{"_index":3067,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":433,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":404,"title":{},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.addactionsappear",{"_index":403,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.clearcard",{"_index":425,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":432,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcard",{"_index":429,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardfailure",{"_index":430,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardsuccess",{"_index":431,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":426,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":427,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":428,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":325,"title":{"components/CardComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":327,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":775,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":755,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardid",{"_index":497,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cardids",{"_index":2031,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":2196,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":329,"title":{"components/CardListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":2024,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperation.converttypeintoenum",{"_index":2174,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":777,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":2091,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":2030,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":2065,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":2068,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":2038,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":789,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":493,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":349,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards.map(card",{"_index":4738,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cards/cards.module",{"_index":1080,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1083,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1086,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1905,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":867,"title":{"injectables/CardService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1068,"title":{"modules/CardsModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":753,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardsurl",{"_index":2092,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":3001,"title":{},"body":{"classes/Filter.html":{}}}],["careful",{"_index":3802,"title":{},"body":{"components/NavbarComponent.html":{}}}],["case",{"_index":1384,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["case('logout",{"_index":1395,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["case('token_refresh_error",{"_index":1394,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch",{"_index":1366,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch(error",{"_index":4158,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["catcherror",{"_index":897,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror((err",{"_index":1935,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((error",{"_index":879,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":1023,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":4258,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["catcherror(errorresponse",{"_index":1498,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["catcherror(function",{"_index":1221,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["category",{"_index":1471,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":880,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["causes",{"_index":3915,"title":{},"body":{"components/ResizableComponent.html":{}}}],["cell",{"_index":4869,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1894,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":4494,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":3019,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":3007,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":3017,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":851,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"components/CustomLogoComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changed",{"_index":2296,"title":{},"body":{"components/ConfirmModalComponent.html":{},"components/TimeFilterComponent.html":{}}}],["changelocale",{"_index":3159,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":3179,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":3224,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changes",{"_index":2698,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":2723,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changesort",{"_index":853,"title":{"classes/ChangeSort.html":{}},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"components/SeveritySortComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["changing",{"_index":2813,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":4236,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":1215,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["chart",{"_index":4657,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":339,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2970,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2969,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2979,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2964,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2967,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["check",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":1450,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkauthentication(token",{"_index":1205,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkauthenticationstatus",{"_index":46,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":1451,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkelement",{"_index":949,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkelement(filterdatetypes",{"_index":968,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone(formerstatus",{"_index":4127,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["checkimplicitflowauthentication",{"_index":1452,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkimplicitflowauthenticationstatus",{"_index":61,"title":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checking",{"_index":1409,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checks",{"_index":1199,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenresponse",{"_index":1410,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenurl",{"_index":1130,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkuserapplication",{"_index":4916,"title":{},"body":{"injectables/UserEffects.html":{}}}],["child",{"_index":2451,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1087,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["choose",{"_index":1155,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["chosen",{"_index":2002,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["cid",{"_index":1090,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["circle",{"_index":4874,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["claim",{"_index":1180,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":3815,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"index.html":{}}}],["clear",{"_index":406,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":1284,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clearcard",{"_index":405,"title":{"classes/ClearCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearcardselection",{"_index":1924,"title":{},"body":{"injectables/CardEffects.html":{}}}],["clearlightcardselection",{"_index":458,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clicked",{"_index":1567,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1562,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":1137,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clock",{"_index":2833,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":3008,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":3029,"title":{},"body":{"classes/Filter.html":{}}}],["closedetails",{"_index":1898,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cluster",{"_index":4987,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":1064,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":1065,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":1066,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":2197,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":2198,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":2200,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_imports",{"_index":2199,"title":{},"body":{"modules/CardsModule.html":{}}}],["cluster_cardsmodule_providers",{"_index":2201,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":2942,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":2943,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":2945,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":2944,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":3937,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":3938,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":3996,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3997,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":3998,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":4041,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":4042,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":4175,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":4176,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":4177,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule",{"_index":4971,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_declarations",{"_index":4972,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":4973,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":4983,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":4495,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["codeflow",{"_index":3603,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":3598,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1957,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["collectionsize",{"_index":1009,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["collectionsize]=\"collectionsize",{"_index":1027,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["color",{"_index":3688,"title":{},"body":{"components/MenuLinkComponent.html":{},"components/TypeFilterComponent.html":{}}}],["combinelatest",{"_index":931,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["combinelatest,observable",{"_index":3313,"title":{},"body":{"injectables/I18nService.html":{}}}],["commonmodule",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{}}}],["comparebylttd(card1",{"_index":1979,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1988,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttdpublishdate(card1",{"_index":1991,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1982,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1990,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1976,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1986,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1985,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1972,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["complex",{"_index":2441,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["compliant",{"_index":3058,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["component",{"_index":234,"title":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsRoutingModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component'},{'name",{"_index":333,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":309,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":236,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/action/action.component",{"_index":2215,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/action/confirm",{"_index":2216,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/archive",{"_index":1070,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["components/card",{"_index":2209,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":2208,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/detail/detail.component",{"_index":2211,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":2210,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/login/login.component",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/custom",{"_index":664,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/icon/icon.component",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/info/info.component",{"_index":659,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/menus/menu",{"_index":661,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2950,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/resizable/resizable.component",{"_index":4976,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["components/settings/base",{"_index":4002,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":4004,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":4005,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":4006,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":4001,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":4003,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":4008,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2953,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":4616,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{}}}],["computed",{"_index":3131,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computeddate",{"_index":1850,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates",{"_index":1806,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1816,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":4587,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":4630,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":4627,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":3527,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":3751,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":4581,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":4595,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":4610,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":4598,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":4611,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":4592,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":4609,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":4582,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":4601,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":1357,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["computetextvalidators",{"_index":2775,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":4287,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":4234,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":4260,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["concatall",{"_index":4689,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["conf",{"_index":4396,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key",{"_index":4576,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key].foreach(value",{"_index":4574,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":750,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["config.i18n.supported.locales",{"_index":2264,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["config:any",{"_index":2276,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":2255,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":3109,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1571,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":3105,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":3106,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":3107,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":3108,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":815,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":2277,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":791,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":2233,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":754,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":2893,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":2894,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configue",{"_index":4411,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["configuration",{"_index":1167,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["configured",{"_index":719,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CustomLogoComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["configurl",{"_index":2267,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":331,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["confirmmodalcomponent",{"_index":330,"title":{"components/ConfirmModalComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["confzoom",{"_index":4397,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connect",{"_index":1436,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["connect/logout?redirect_uri=${redirect",{"_index":1602,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["connection",{"_index":1226,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["consequence",{"_index":1486,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1947,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error(\"no",{"_index":2361,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["console.error('an",{"_index":2180,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error('error",{"_index":4699,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["console.error(`error",{"_index":2176,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(err",{"_index":1514,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":1222,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1592,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(\"calcheightdirective",{"_index":1776,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["console.log(\"menulinkcomponent",{"_index":3683,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["console.log(\"ok",{"_index":4939,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"transitioncreateuserapplication",{"_index":4947,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"user",{"_index":4964,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('card",{"_index":2677,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log('listsettingcomponent.isequal",{"_index":3555,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["console.log('no",{"_index":1396,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":4105,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["console.log('unknown",{"_index":4165,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["console.log('your",{"_index":1352,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log(`card",{"_index":2678,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(`error",{"_index":3339,"title":{},"body":{"injectables/I18nService.html":{}}}],["console.log(`location",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`no",{"_index":3504,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.log(`something",{"_index":1917,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["console.log(`this",{"_index":2645,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":4226,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.log(error",{"_index":3520,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["console.log(new",{"_index":1380,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log(this.disabled",{"_index":2803,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["consolidatethirdandversions",{"_index":4790,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions",{"_index":4800,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions:transitionalthirdwithitsversion",{"_index":4751,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["const",{"_index":165,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constants",{"_index":2933,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["constructmomentobj",{"_index":4399,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructmomentobj(mommentojb",{"_index":4402,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_modalservice",{"_index":258,"title":{},"body":{"components/ActionComponent.html":{}}}],["constructor(access_token",{"_index":1099,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3405,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["constructor(authservice",{"_index":4664,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(card",{"_index":2685,"title":{},"body":{"classes/DetailContext.html":{}}}],["constructor(currenttime",{"_index":4336,"title":{},"body":{"classes/TickPayload.html":{}}}],["constructor(date",{"_index":2461,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["constructor(details",{"_index":4039,"title":{},"body":{"classes/State.html":{}}}],["constructor(domsanitizationservice",{"_index":2335,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["constructor(el",{"_index":1710,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["constructor(element",{"_index":2588,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":4067,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":3009,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":2099,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":4171,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":3863,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":3295,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":397,"title":{},"body":{"classes/ActionStatus.html":{},"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":4903,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(message",{"_index":3698,"title":{},"body":{"classes/Message.html":{}}}],["constructor(modal",{"_index":2283,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["constructor(name",{"_index":4107,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":2028,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(platformlocation",{"_index":3352,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor(protected",{"_index":1660,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(readonly",{"_index":2474,"title":{},"body":{"classes/DateTimeNgb.html":{},"classes/DetailContext.html":{},"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":4585,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1812,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(start",{"_index":4647,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":3871,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/SeveritySortComponent.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["constructor(sub",{"_index":2222,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(third",{"_index":4685,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["constructor(thirdsservice",{"_index":4187,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":3177,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":2572,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(totalpages",{"_index":3847,"title":{},"body":{"classes/Page.html":{}}}],["constructor(translateservice",{"_index":3739,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["constructor(type",{"_index":133,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1782,"title":{},"body":{"classes/Card.html":{},"classes/LightCard.html":{}}}],["constructor(url",{"_index":3923,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["constructorcheckimplicitflowauthenticationstatus",{"_index":1578,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["contain",{"_index":2868,"title":{},"body":{"components/FeedComponent.html":{}}}],["containing",{"_index":2407,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["contains",{"_index":473,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["content",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Page.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["contentchildren",{"_index":2706,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":2703,"title":{},"body":{"components/DetailsComponent.html":{}}}],["context",{"_index":3183,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["context.model",{"_index":2621,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["context.model.ts",{"_index":2684,"title":{},"body":{"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["context.model.ts:12",{"_index":2686,"title":{},"body":{"classes/DetailContext.html":{}}}],["context.model.ts:9",{"_index":4913,"title":{},"body":{"classes/UserContext.html":{}}}],["control",{"_index":3536,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["controlvalueaccessor",{"_index":2505,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["convert",{"_index":1275,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":1310,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["convert(value",{"_index":1633,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1691,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertjsontoi18nobject",{"_index":4288,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["convertjsontoi18nobject(locale",{"_index":4243,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["convertspeedintoenum",{"_index":4583,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":4604,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":2027,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":2033,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":2035,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":298,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["copyright",{"_index":285,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["core",{"_index":653,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correct",{"_index":4995,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["correctly",{"_index":1231,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":1407,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":1148,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["createentityadapter",{"_index":1969,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["createformgroup",{"_index":4066,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createnotification",{"_index":3831,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createnotification(title",{"_index":3835,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createuserapplication",{"_index":2300,"title":{"classes/CreateUserApplication.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplication({user",{"_index":4948,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonfailure",{"_index":2308,"title":{"classes/CreateUserApplicationOnFailure.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonfailure({error",{"_index":4943,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonsuccess",{"_index":2307,"title":{"classes/CreateUserApplicationOnSuccess.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonsuccess({user",{"_index":4941,"title":{},"body":{"injectables/UserEffects.html":{}}}],["creation",{"_index":2310,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["criteria",{"_index":2001,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["css",{"_index":2640,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":157,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":2635,"title":{},"body":{"components/DetailComponent.html":{}}}],["curr",{"_index":1768,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["current",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["currentactionpath",{"_index":250,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["currentauthmodehandler",{"_index":1268,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentauthmodehandler.extracttoken",{"_index":1269,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentcachedversions",{"_index":4775,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentcard",{"_index":2577,"title":{},"body":{"components/DetailComponent.html":{}}}],["currentdate",{"_index":4650,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currenthreflocation",{"_index":1607,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["currentinputversions",{"_index":4773,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentlocationhref",{"_index":3409,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentlocationhref.indexof(searchcodestring",{"_index":1427,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentlocationhref.substring(foundindex",{"_index":1430,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currently",{"_index":1586,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentmoment",{"_index":4432,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["currentpage",{"_index":1015,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["currentpath",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["currentrouter",{"_index":718,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["currentrouter.navigate([lastdestination",{"_index":735,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["currentselected",{"_index":1854,"title":{},"body":{"components/CardComponent.html":{}}}],["currentstatus",{"_index":4145,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["currenttime",{"_index":2839,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["currenttimefilter",{"_index":2921,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":2922,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":2924,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":2923,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":4341,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["currentuser",{"_index":4942,"title":{},"body":{"injectables/UserEffects.html":{}}}],["custom",{"_index":335,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customlogo",{"_index":2369,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["customlogocomponent",{"_index":334,"title":{"components/CustomLogoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["customroutereffects",{"_index":803,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":2420,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":337,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["d",{"_index":3973,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TimeLineComponent.html":{}}}],["d.end",{"_index":4540,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.includes(currentselected",{"_index":1856,"title":{},"body":{"components/CardComponent.html":{}}}],["d.map(domain",{"_index":4522,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.start",{"_index":4538,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dark",{"_index":3383,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dat",{"_index":5008,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["data",{"_index":454,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["data:image/svg+xml;base64,${data",{"_index":3797,"title":{},"body":{"components/NavbarComponent.html":{}}}],["date",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date(),\"authentification",{"_index":1381,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date().valueof",{"_index":2135,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1307,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(0",{"_index":1448,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":1318,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(minus2hour.valueof",{"_index":2138,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":2134,"title":{},"body":{"injectables/CardService.html":{}}}],["date(this.oauthservice.getaccesstokenexpiration",{"_index":1376,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(value",{"_index":3274,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.format",{"_index":5022,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format(clusterlevel",{"_index":5014,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hour",{"_index":5028,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":5025,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes",{"_index":5027,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.now",{"_index":1313,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date.seconds",{"_index":5029,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.valueof",{"_index":5020,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.year",{"_index":2488,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateformat",{"_index":3975,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dateinsidetooltipsmonth",{"_index":5013,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsweek",{"_index":5004,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonday",{"_index":5026,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateondaynewyear",{"_index":5030,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonmonth",{"_index":5034,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonweek",{"_index":5033,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonyear",{"_index":5035,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateparts",{"_index":2475,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateparts.length",{"_index":2478,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["datesimplifliedonday",{"_index":5032,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedondaynewyear",{"_index":5031,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datestring",{"_index":969,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetime",{"_index":341,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["datetimefiltercomponent",{"_index":340,"title":{"components/DatetimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["datetimeform",{"_index":2513,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["datetimeformat",{"_index":3976,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["datetimengb",{"_index":934,"title":{"classes/DateTimeNgb.html":{}},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["datetimengb(date",{"_index":955,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetodisplay",{"_index":1805,"title":{},"body":{"components/CardComponent.html":{}}}],["day",{"_index":2480,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["days",{"_index":4466,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd",{"_index":4515,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd/mm",{"_index":4517,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deactivate",{"_index":2718,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1656,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":1721,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["debouncetime(300",{"_index":1724,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["debug",{"_index":3702,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declaration",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["declarations",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["decode",{"_index":1113,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":1364,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["decoration",{"_index":3690,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["decorators",{"_index":882,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["deep",{"_index":4091,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default_height",{"_index":2326,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["default_width",{"_index":2327,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["defaultfilters",{"_index":3042,"title":{},"body":{"injectables/FilterService.html":{}}}],["defaultpath",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defaultpublisher').set('size",{"_index":2192,"title":{},"body":{"injectables/CardService.html":{}}}],["define",{"_index":1744,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":1237,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delay",{"_index":2251,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["delay(500",{"_index":3486,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delay(this.retrydelay",{"_index":2263,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delayedlightcardupdate",{"_index":476,"title":{"classes/DelayedLightCardUpdate.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["delayupdatelightcard",{"_index":3474,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delegateurl",{"_index":1140,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delete",{"_index":2039,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":3732,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["demand",{"_index":1581,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["dentifier",{"_index":1301,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dependencies",{"_index":607,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":4410,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deprecation",{"_index":3916,"title":{},"body":{"components/ResizableComponent.html":{}}}],["desc",{"_index":1966,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserService.html":{}}}],["description$|async",{"_index":3441,"title":{},"body":{"components/InfoComponent.html":{}}}],["deserializable",{"_index":1203,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["desired",{"_index":4061,"title":{},"body":{"modules/StateModule.html":{}}}],["destination",{"_index":726,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["destination.includes(archivepath",{"_index":734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detail",{"_index":147,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":344,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":2721,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":2575,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":2707,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":343,"title":{"components/DetailComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detailcontext",{"_index":2619,"title":{"classes/DetailContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["detailcontext(this.card,null",{"_index":2653,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcontext):observable",{"_index":3228,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["details",{"_index":176,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["details'},{'name",{"_index":328,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1085,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1897,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":2690,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1896,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1903,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1904,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1900,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":1902,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":1901,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1091,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1084,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["detailscomponent",{"_index":345,"title":{"components/DetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detect",{"_index":4933,"title":{},"body":{"injectables/UserEffects.html":{}}}],["devtools",{"_index":4048,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["didn't",{"_index":1737,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["directive",{"_index":307,"title":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["directives",{"_index":389,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["disabled",{"_index":2514,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["disableinfos",{"_index":3954,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dismiss",{"_index":2282,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dispalyinfos",{"_index":3955,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["dispatch",{"_index":1397,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1635,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1692,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["dispatchappstateactionfromoauth2events(event",{"_index":1378,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatchauthactionfromoauthevents",{"_index":1367,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatched",{"_index":4372,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["dispatchupdatethirdaction",{"_index":4117,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["dispatchupdatethirdaction(updatethirdaction",{"_index":4130,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["display",{"_index":1528,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3470,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["displaydate",{"_index":4537,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["displays",{"_index":2938,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["distinctuntilchanged",{"_index":1657,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1677,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged()).subscribe(value",{"_index":4529,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["distributed",{"_index":300,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["divide",{"_index":1758,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":3268,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["document.getelementbyid(this.parentid",{"_index":1734,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["doesn't",{"_index":2679,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":239,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":4412,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domain7dayconf",{"_index":4426,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainmonthconf",{"_index":4429,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domains",{"_index":4398,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainweekconf",{"_index":4428,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainyearconf",{"_index":4430,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":3710,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":3714,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizationservice",{"_index":2328,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["domsanitizer",{"_index":2336,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":2863,"title":{},"body":{"components/FeedComponent.html":{}}}],["down",{"_index":1795,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":2866,"title":{},"body":{"components/FeedComponent.html":{}}}],["drag",{"_index":2745,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":2731,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":2772,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2977,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":2727,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:14",{"_index":2740,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:15",{"_index":2739,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:16",{"_index":2738,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":2751,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:25",{"_index":2744,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:35",{"_index":2748,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:47",{"_index":2750,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":392,"title":{"directives/DraggableDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":2729,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":2732,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":2733,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":4092,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":3816,"title":{},"body":{"components/NavbarComponent.html":{}}}],["due",{"_index":1541,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["duration",{"_index":4625,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":4628,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1955,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":5042,"title":{},"body":{"dependencies.html":{}}}],["e.type",{"_index":1349,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["each",{"_index":4414,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["earliest",{"_index":1965,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["effect",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":1944,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":4046,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":4055,"title":{},"body":{"modules/StateModule.html":{}}}],["el",{"_index":1713,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["elapsed",{"_index":2831,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":2841,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsofar",{"_index":2876,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":306,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["element.length",{"_index":973,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["elementref",{"_index":1711,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/DetailComponent.html":{}}}],["elements",{"_index":1742,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["email",{"_index":347,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":346,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":1484,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2550,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emitevent:false",{"_index":4370,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["emits",{"_index":1558,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":1526,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["emittedby",{"_index":1523,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["empty",{"_index":450,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptyaction",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptyactionstatus",{"_index":186,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptylightcards",{"_index":449,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":3227,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["enable",{"_index":741,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enabledrag",{"_index":4482,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":737,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":4483,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":4237,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":1169,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddate",{"_index":1787,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":4492,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day",{"_index":4436,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day.valueof",{"_index":4507,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj",{"_index":4464,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj.valueof",{"_index":4493,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth",{"_index":4446,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth.valueof",{"_index":4514,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr",{"_index":4460,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr.valueof",{"_index":4504,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek",{"_index":4441,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek.valueof",{"_index":4512,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear",{"_index":4451,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear.valueof",{"_index":4519,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":2440,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":424,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1970,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["entitystate",{"_index":1948,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entries.map(([key",{"_index":1874,"title":{},"body":{"components/CardComponent.html":{}}}],["entry",{"_index":2416,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":4222,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.length",{"_index":4223,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entrycomponents",{"_index":2204,"title":{},"body":{"modules/CardsModule.html":{}}}],["enum",{"_index":41,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["enumeration",{"_index":950,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["enumerations",{"_index":5076,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":772,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":771,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["environment.production",{"_index":838,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.production?prodi18npath:i18npath",{"_index":3323,"title":{},"body":{"injectables/I18nService.html":{}}}],["environment.urls.actions",{"_index":4138,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["environment.urls.auth}/check_token",{"_index":1131,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/code/redirect_uri=${this.computeredirecturi",{"_index":1335,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/token",{"_index":1134,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.cards}/archives",{"_index":2131,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cards",{"_index":2129,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":2127,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":2272,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":4199,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":4022,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UserService.html":{}}}],["environment.urls.users}/users",{"_index":1136,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["equality",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["equally",{"_index":1759,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["equals",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["err",{"_index":1516,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["error(\"light",{"_index":3513,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error('no",{"_index":4225,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":2071,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.status",{"_index":3518,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error.tostring",{"_index":2179,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":3696,"title":{},"body":{"interfaces/MenuState.html":{}}}],["error:string",{"_index":3694,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":1476,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":1473,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1591,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1582,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":2178,"title":{},"body":{"injectables/CardService.html":{}}}],["etc",{"_index":4369,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["evaluate",{"_index":2999,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":2121,"title":{},"body":{"injectables/CardService.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{},"dependencies.html":{}}}],["event\",event",{"_index":1382,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["event('resize",{"_index":3912,"title":{},"body":{"components/ResizableComponent.html":{}}}],["event.detail",{"_index":3736,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.target.value",{"_index":2561,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["event.type",{"_index":1379,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["event.wheeldelta",{"_index":3735,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":2737,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":2107,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":2184,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":2183,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":2175,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":2169,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":2182,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":2105,"title":{},"body":{"injectables/CardService.html":{}}}],["eventtype",{"_index":1116,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["evt",{"_index":3918,"title":{},"body":{"components/ResizableComponent.html":{}}}],["evt.inituievent('resize",{"_index":3920,"title":{},"body":{"components/ResizableComponent.html":{}}}],["example",{"_index":1390,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":3706,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":3160,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":3182,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":2680,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["existing",{"_index":466,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["exists",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["exp",{"_index":1190,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expandedmenu",{"_index":3763,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":3787,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":3764,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":3788,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":1270,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expirationdate",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["expire",{"_index":2164,"title":{},"body":{"injectables/CardService.html":{}}}],["expireclaim",{"_index":1139,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expired",{"_index":1512,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":1098,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["explicit",{"_index":1542,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["explicitly",{"_index":2358,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["extended",{"_index":453,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1968,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":1166,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus",{"_index":3523,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(action.payload.status",{"_index":3493,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus(currentstatus",{"_index":4142,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(formerstatus",{"_index":4139,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(taction",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractactionstatusfrompseudoactionstatus(thirdactiontoupdate",{"_index":3499,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extracted",{"_index":1159,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extracti18ntoupdate",{"_index":4791,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extracti18ntoupdate(versions",{"_index":4734,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractidentificationinformation",{"_index":1302,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extractparams",{"_index":2423,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":2425,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom",{"_index":4792,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4747,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards",{"_index":4793,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4737,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractstate",{"_index":4106,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":162,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractthirdtoupdate",{"_index":4794,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractthirdtoupdate(versioninput",{"_index":4756,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extracttoken",{"_index":1267,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["f5",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":4873,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["faclock",{"_index":2961,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":411,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":3882,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["failtoupdatetimereference",{"_index":2810,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":2828,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2309,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":1739,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["false",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeFilterComponent.html":{},"interfaces/UserState.html":{}}}],["family_name",{"_index":1187,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["familynameclaim",{"_index":1142,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["fasignoutalt",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["fatoggleoff",{"_index":2962,"title":{},"body":{"modules/FeedModule.html":{}}}],["fatoggleon",{"_index":2963,"title":{},"body":{"modules/FeedModule.html":{}}}],["fctargs[fctargs.length",{"_index":3267,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":687,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/ChangeSort.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2949,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":2848,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":2847,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":4392,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":4391,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":4393,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":4865,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":4864,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.compliant.label",{"_index":4866,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.information.label",{"_index":4867,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":4868,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.sort.lttdpub",{"_index":4038,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["feed.sort.severitylttdpub",{"_index":4037,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["feed.timefilter.followclocktick",{"_index":2934,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["feedactions",{"_index":861,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":850,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":845,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.changesort",{"_index":860,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":858,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":348,"title":{"components/FeedComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":811,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":2008,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":2941,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":2947,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":2855,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1919,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmap",{"_index":4289,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmap(publisher",{"_index":4275,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard",{"_index":4290,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard(card",{"_index":4273,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetcharchivedcards",{"_index":2094,"title":{},"body":{"injectables/CardService.html":{}}}],["fetcharchivedcards(filters",{"_index":2102,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation",{"_index":2095,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":2104,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":2268,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":4291,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":4230,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchlightcard",{"_index":3522,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["fetchthird",{"_index":4292,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":4212,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":4014,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":4090,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["fields",{"_index":2558,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":3388,"title":{},"body":{"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["filter",{"_index":388,"title":{"classes/Filter.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":4843,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":342,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1676,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":2262,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":2920,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":2380,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":2075,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t",{"_index":4264,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(time",{"_index":2915,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(v=>!!v",{"_index":2897,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(x",{"_index":2907,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":1077,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["filter.component.css",{"_index":2511,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filter.component.html",{"_index":2512,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":4063,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2504,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:21",{"_index":3744,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":3742,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:23",{"_index":3741,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:25",{"_index":3740,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":4073,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":4072,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":4069,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":4365,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":3743,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":4842,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":2544,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:35",{"_index":2546,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2524,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:37",{"_index":2543,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2523,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:42",{"_index":4363,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":2545,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:47",{"_index":2541,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:51",{"_index":2529,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:54",{"_index":4840,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":2532,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":2534,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:60",{"_index":4841,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":2538,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":4071,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":2527,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":4070,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:75",{"_index":2526,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:97",{"_index":4362,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":847,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"classes/ChangeSort.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2992,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:23",{"_index":3011,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":3012,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:29",{"_index":3013,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:33",{"_index":3026,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:44",{"_index":3015,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:57",{"_index":3018,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:68",{"_index":3023,"title":{},"body":{"classes/Filter.html":{}}}],["filter/datetime",{"_index":1079,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filter/multi",{"_index":1076,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filter/tags",{"_index":2981,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2960,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2958,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filterdatetypes",{"_index":940,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtered",{"_index":2898,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":2405,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{}}}],["filterpath",{"_index":2522,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filters",{"_index":887,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["filters'},{'name",{"_index":315,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component",{"_index":1074,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["filters.component.css",{"_index":913,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.html",{"_index":914,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/FiltersComponent.html":{}}}],["filters.component.ts",{"_index":912,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filters.component.ts:47",{"_index":930,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:48",{"_index":928,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:49",{"_index":929,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:50",{"_index":927,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:52",{"_index":921,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:66",{"_index":922,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:76",{"_index":925,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:98",{"_index":923,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.effects",{"_index":813,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":2875,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:26",{"_index":2885,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:29",{"_index":2884,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:32",{"_index":2883,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:45",{"_index":2905,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:55",{"_index":2901,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:76",{"_index":2928,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.foreach((values",{"_index":2187,"title":{},"body":{"injectables/CardService.html":{}}}],["filters.set('page",{"_index":890,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":3076,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":3074,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":3072,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters/archive",{"_index":911,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/enumerations.html":{}}}],["filters/datetime",{"_index":1078,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filters/multi",{"_index":1075,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filters[key",{"_index":967,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filterscomponent",{"_index":350,"title":{"components/FiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":2882,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filterstomap",{"_index":916,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filtertype",{"_index":848,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":4087,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":2077,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":4859,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["find",{"_index":4977,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["fires",{"_index":2412,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":2056,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":917,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"interfaces/CardFeedState.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["first.tostring",{"_index":980,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["firstmovestartofunit",{"_index":4508,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["firstname",{"_index":1444,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname:string",{"_index":4906,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname?:string",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["fixed",{"_index":1746,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedelements",{"_index":1748,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedheightclass",{"_index":1706,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["flatmap",{"_index":1538,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["flow",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["flow.config",{"_index":1123,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["flowmode",{"_index":1532,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["fluent",{"_index":4253,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fn",{"_index":2530,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["followclocktick",{"_index":2877,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["following",{"_index":69,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["font",{"_index":1885,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["foreach((x",{"_index":1778,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["forkjoin",{"_index":4688,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.maplanguages(thirdswiththeirversions)).pipe",{"_index":4698,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapthirds(locale",{"_index":4709,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapversions(locale",{"_index":4716,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["form",{"_index":291,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["form.action",{"_index":4861,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":4860,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.compliant",{"_index":4862,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":4388,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.information",{"_index":4863,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":4387,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":4088,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1641,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":3556,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":2457,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2974,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":4980,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:23",{"_index":4998,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:62",{"_index":4990,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:86",{"_index":4984,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatdatetime",{"_index":2458,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formatted",{"_index":4985,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":3278,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":3281,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatticks",{"_index":4500,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formattime",{"_index":2459,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formattooltipsdate",{"_index":4516,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formb",{"_index":1639,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1697,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["formb.setting",{"_index":3557,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":4068,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":4074,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":932,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":3757,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null",{"_index":4101,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":1207,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["former",{"_index":4163,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formerstatus",{"_index":4129,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formgroup",{"_index":924,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":2446,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":2205,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":656,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forward",{"_index":4467,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardconf",{"_index":4497,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwarddayconf",{"_index":4471,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardmonthconf",{"_index":4469,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardref",{"_index":2509,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["forwardtrconf",{"_index":4472,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardweekconf",{"_index":4470,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardyearconf",{"_index":4468,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":3134,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["foundindex",{"_index":1426,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["france.com",{"_index":290,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["freeze",{"_index":774,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(this.authservice.initandloadauth()).pipe",{"_index":1539,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["from(ts",{"_index":4263,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":762,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":836,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":1089,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["function",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":3289,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":3257,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2997,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":1411,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["future",{"_index":1416,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["g",{"_index":3286,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2993,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":1227,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gently",{"_index":709,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getactions",{"_index":1807,"title":{},"body":{"components/CardComponent.html":{}}}],["getauthenticationmode",{"_index":1398,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getcardoperation",{"_index":2096,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":3090,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":3091,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":3425,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":4364,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":2614,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1832,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getimage",{"_index":2331,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["getitem",{"_index":1306,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getlocale",{"_index":3309,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":1328,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getselectediframeurl",{"_index":3397,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":3784,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":3427,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":3311,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":4186,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":4189,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":3423,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":1225,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["given_name",{"_index":1184,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["givennameclaim",{"_index":1141,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gives",{"_index":1201,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["grand",{"_index":1158,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["grant",{"_index":1422,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["granted",{"_index":3844,"title":{},"body":{"injectables/NotifyService.html":{}}}],["graph",{"_index":5106,"title":{},"body":{"modules.html":{}}}],["group",{"_index":4969,"title":{},"body":{"interfaces/UserState.html":{}}}],["guid",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["guid.create",{"_index":3096,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":1304,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["guidservice",{"_index":1109,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["h",{"_index":5005,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":4643,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handelactionbuttontext",{"_index":2582,"title":{},"body":{"components/DetailComponent.html":{}}}],["handelactionbuttontext(label",{"_index":2601,"title":{},"body":{"components/DetailComponent.html":{}}}],["handle",{"_index":417,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":2590,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":3256,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":3284,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":3270,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":3261,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":3249,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":3244,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":3271,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('json",{"_index":3241,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":3282,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":3277,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":3263,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":3266,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":3251,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.safestring(json.stringify(obj",{"_index":3243,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":3203,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":2202,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1808,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1819,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerrorontokengeneration",{"_index":1455,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":1470,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":1524,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlenewtoken(call",{"_index":1247,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["handler",{"_index":3885,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["handlerejectedlogin",{"_index":1456,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlerejectedlogin(errormsg",{"_index":1474,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":416,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{}},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":881,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":744,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailComponent.html":{}}}],["haschanged",{"_index":4143,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["hashlength",{"_index":724,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hashlocationstrategy",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["header",{"_index":1327,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":1210,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["headers}).pipe",{"_index":1219,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["heardbeat",{"_index":2155,"title":{},"body":{"injectables/CardService.html":{}}}],["heart",{"_index":2829,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":4342,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":2166,"title":{},"body":{"injectables/CardService.html":{}}}],["heatbeat",{"_index":2151,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TypeFilterComponent.html":{}}}],["height.directive",{"_index":4975,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["height.directive.ts",{"_index":1702,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:22",{"_index":1716,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:25",{"_index":1715,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:28",{"_index":1714,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:30",{"_index":1712,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:42",{"_index":1717,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:46",{"_index":1719,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height:auto",{"_index":2568,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["heights",{"_index":1763,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["helper",{"_index":1308,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["here",{"_index":2141,"title":{},"body":{"injectables/CardService.html":{}}}],["hh[h]mm",{"_index":4501,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":3599,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetags",{"_index":3084,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["hidetimeline",{"_index":2849,"title":{},"body":{"components/FeedComponent.html":{}}}],["homedomainextraticks",{"_index":4509,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["horizontal",{"_index":4994,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hostlistener",{"_index":1720,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlistener('document:dragstart",{"_index":2770,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":3727,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":3724,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":3729,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":2753,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":2757,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":2760,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('window:resize",{"_index":1729,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlisteners",{"_index":1708,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hou",{"_index":5007,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hour",{"_index":2500,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["hours",{"_index":4459,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hoursonly",{"_index":5015,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":2639,"title":{},"body":{"components/DetailComponent.html":{}}}],["href=\"javascript:void(0",{"_index":3817,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hrefsofcsslink",{"_index":2578,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":305,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":2596,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":2587,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlelement",{"_index":1733,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["http",{"_index":1326,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":303,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http://www.rte",{"_index":289,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http_interceptors",{"_index":3945,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpclient",{"_index":1105,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":3316,"title":{},"body":{"injectables/I18nService.html":{}}}],["httpclientmodule",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":4672,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":4670,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":1106,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":1211,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["httpinterceptor",{"_index":4673,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":2123,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set(\"apiversion",{"_index":4277,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('locale",{"_index":4248,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('publisher",{"_index":2191,"title":{},"body":{"injectables/CardService.html":{}}}],["httpparams().set('version",{"_index":4241,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams.set",{"_index":4250,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":4667,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":2445,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/ngrx/platform/issues/898",{"_index":1999,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":3705,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":4192,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":136,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["i18n('login.error.token.expiration",{"_index":1513,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":1503,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":1518,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":4355,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(i18n['key",{"_index":213,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(key",{"_index":1595,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n['parameters",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nbundleversionloaded",{"_index":4692,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["i18nlabelkey",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":4353,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":4354,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18npath",{"_index":3318,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nprefix",{"_index":256,"title":{},"body":{"components/ActionComponent.html":{},"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":2724,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nservice",{"_index":519,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["i18nservice.loadedlocales.add(locale",{"_index":3337,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nservice.loadedlocales.has(this._locale",{"_index":3327,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nservice.localurl",{"_index":3322,"title":{},"body":{"injectables/I18nService.html":{}}}],["i18nservice.localurl}${locale}.json",{"_index":3341,"title":{},"body":{"injectables/I18nService.html":{}}}],["iarchivefilter",{"_index":1047,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["icon",{"_index":3343,"title":{},"body":{"components/IconComponent.html":{},"components/MenuLinkComponent.html":{}}}],["icon'},{'name",{"_index":352,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":3345,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":3344,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":3364,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":351,"title":{"components/IconComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":3346,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":3369,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":2666,"title":{},"body":{"components/DetailComponent.html":{}}}],["identifier",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":2415,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["identityclaims",{"_index":1373,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["identityclaims['sub",{"_index":1375,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ie",{"_index":3913,"title":{},"body":{"components/ResizableComponent.html":{}}}],["if(!!control.value",{"_index":3558,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":4380,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":4375,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!parent",{"_index":1740,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["if(!this.form",{"_index":1663,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":3293,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":2890,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(args.length",{"_index":3253,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(changes['card'].currentvalue",{"_index":2722,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(ismoment(realnow",{"_index":4612,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":2037,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":3225,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["if(newelapsedsofar>=this.refreshthreshold",{"_index":2912,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(realm",{"_index":1599,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["if(result",{"_index":1989,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1987,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":3236,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(this.active",{"_index":3034,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":3036,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.expandedmenu[index",{"_index":3809,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":3812,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":4633,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":4620,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":3331,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":3290,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":3789,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(v",{"_index":3679,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe",{"_index":3681,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe_url",{"_index":3133,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":3390,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":354,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":4180,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":3392,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":3391,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":353,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":3402,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["implement",{"_index":2000,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["implementation",{"_index":1419,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implemented",{"_index":2676,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":1463,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["implicit",{"_index":63,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitallyauthenticated",{"_index":75,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitauthenticationconfigfallback",{"_index":1121,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler",{"_index":1194,"title":{"classes/ImplicitAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler(this",{"_index":1163,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitconf",{"_index":1146,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitlyauthenticated",{"_index":122,"title":{"classes/ImplicitlyAuthenticated.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import('./modules/archives/archives.module').then(m",{"_index":696,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/feed/feed.module').then(m",{"_index":692,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/settings/settings.module').then(m",{"_index":702,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/thirdparty/thirdparty.module').then(m",{"_index":699,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":622,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["impossible",{"_index":3340,"title":{},"body":{"injectables/I18nService.html":{}}}],["include",{"_index":4060,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":2807,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":3641,"title":{},"body":{"classes/Map.html":{}}}],["indicates",{"_index":1960,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":356,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":3415,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":3414,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":355,"title":{"components/InfoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["informatios",{"_index":1289,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["inherit",{"_index":3689,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["inheritance",{"_index":3004,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":2015,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inhibe",{"_index":2154,"title":{},"body":{"injectables/CardService.html":{}}}],["iniitialized",{"_index":1333,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["init",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["initandloadauth",{"_index":1342,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initauthstatus",{"_index":43,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code",{"_index":1429,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initchartcomponent",{"_index":357,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":852,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":857,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":2904,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1621,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1690,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initializeauthentication",{"_index":1399,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializeauthentication(currenthreflocation",{"_index":1418,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializeauthentication(currentlocationhref",{"_index":1424,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initialized",{"_index":1232,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializehandlebarstemplates",{"_index":2583,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":2584,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialnavigation",{"_index":740,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":2432,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initsupportedlocales",{"_index":2232,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["initsupportedlocales(config",{"_index":2236,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["inittagfilter",{"_index":3043,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":2878,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":3044,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":3450,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittimeline({data",{"_index":4531,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["inittypefilter",{"_index":3045,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":2250,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":2256,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":862,"title":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["injectables",{"_index":863,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injected",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["inline",{"_index":3443,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":225,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputpublishers",{"_index":4758,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["inputs",{"_index":254,"title":{},"body":{"components/ActionComponent.html":{},"components/ArchiveListComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":218,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":2765,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":1309,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instanciate",{"_index":1666,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":3003,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":2638,"title":{},"body":{"components/DetailComponent.html":{}}}],["instantiateauthmodehandler(mode",{"_index":1160,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instantiateimplicitflowconfiguration",{"_index":1195,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["intercept",{"_index":4663,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":4669,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":2143,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":2144,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":4660,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":3946,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":747,"title":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/ImplicitAuthenticationHandler.html":{},"interfaces/MenuState.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/UserState.html":{}}}],["interfaces",{"_index":748,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsInputs.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["internal",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":3333,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this._locale",{"_index":3279,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":1202,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["invalidform",{"_index":2557,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isauthenticated",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isauthmodecodeorimplicitflow",{"_index":1405,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isdisabled",{"_index":2535,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isequal",{"_index":1622,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1638,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":1282,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isimplicitlyauthenticated",{"_index":1445,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isinthefuture(expirationdate",{"_index":1280,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isinthefuture(time",{"_index":1417,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ismoment",{"_index":4607,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":1278,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnan(tointeger(value",{"_index":2473,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnotanumber",{"_index":1277,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnumber(date.day",{"_index":2491,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(date.month",{"_index":2489,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[0",{"_index":2479,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[1",{"_index":2483,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[2",{"_index":2486,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.hour",{"_index":2495,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.minute",{"_index":2497,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(value",{"_index":2469,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["issue",{"_index":420,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["issuer",{"_index":1197,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["issupported",{"_index":3832,"title":{},"body":{"injectables/NotifyService.html":{}}}],["issupported(window",{"_index":3837,"title":{},"body":{"injectables/NotifyService.html":{}}}],["istanbul",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["isvirtualtimeundefine",{"_index":4584,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":1521,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["items",{"_index":2443,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["iterate",{"_index":4704,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["j",{"_index":4489,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["january",{"_index":2869,"title":{},"body":{"components/FeedComponent.html":{}}}],["jnlp",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":5058,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":4280,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["json.length>1",{"_index":4281,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["json.parse(json",{"_index":4282,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["jwksvalidationhandler",{"_index":1118,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt",{"_index":1112,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":1189,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.family",{"_index":1186,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.given",{"_index":1183,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.login",{"_index":1179,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.expireclaim",{"_index":1314,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.familynameclaim",{"_index":1320,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.givennameclaim",{"_index":1319,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode",{"_index":1111,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode(token",{"_index":1365,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["keep",{"_index":2052,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/Map.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{}}}],["know",{"_index":3803,"title":{},"body":{"components/NavbarComponent.html":{}}}],["l",{"_index":4424,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["label",{"_index":135,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label.parameters",{"_index":2682,"title":{},"body":{"components/DetailComponent.html":{}}}],["label1",{"_index":4321,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":4324,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":4329,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":4191,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["language",{"_index":3890,"title":{},"body":{"classes/RefreshTranslation.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["languages",{"_index":4705,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["large",{"_index":4058,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1889,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1950,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1949,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastdestination",{"_index":733,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lastname",{"_index":1446,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname:string",{"_index":4907,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname?:string",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["later",{"_index":477,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["latest",{"_index":1967,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":448,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["leaves",{"_index":4162,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["left",{"_index":2565,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["left:0",{"_index":983,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["legacy",{"_index":1421,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["legend",{"_index":304,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["legend.accessibility",{"_index":2563,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["less",{"_index":4656,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":3699,"title":{},"body":{"classes/Message.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"modules/FeedModule.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["library.add(faclock",{"_index":2986,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fatoggleoff",{"_index":2988,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(fatoggleon",{"_index":2987,"title":{},"body":{"modules/FeedModule.html":{}}}],["license",{"_index":295,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["light",{"_index":459,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard",{"_index":441,"title":{"classes/LightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard):boolean",{"_index":3033,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":3027,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.actions",{"_index":3514,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["lightcard.id",{"_index":2055,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcard.summary.key",{"_index":1878,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.title.key",{"_index":1877,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":504,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":446,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":440,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.addthirdactions",{"_index":494,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":489,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.delayedlightcardupdate",{"_index":502,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":482,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":491,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.lightcardalreadyupdated",{"_index":503,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":481,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":485,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":486,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":483,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":492,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":487,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyloaded",{"_index":500,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyupdated",{"_index":501,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatealightcard",{"_index":495,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanaction",{"_index":496,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanactionfailure",{"_index":499,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":490,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1992,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":2009,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardalreadyupdated",{"_index":478,"title":{"classes/LightCardAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardeffects",{"_index":200,"title":{"injectables/LightCardEffects.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/AppState.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lightcardid",{"_index":257,"title":{},"body":{"components/ActionComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["lightcardreducer",{"_index":786,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":484,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":2050,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["limit",{"_index":2368,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limited",{"_index":2370,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limitsize",{"_index":2334,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["limitsize!=undefined",{"_index":3804,"title":{},"body":{"components/NavbarComponent.html":{}}}],["limitsize:boolean",{"_index":3801,"title":{},"body":{"components/NavbarComponent.html":{}}}],["line",{"_index":3444,"title":{},"body":{"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":384,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2955,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":4395,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":4394,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:231",{"_index":4404,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:256",{"_index":4409,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":4419,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:277",{"_index":4406,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":4420,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:30",{"_index":4417,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:31",{"_index":4418,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:32",{"_index":4401,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:35",{"_index":4407,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/custom",{"_index":2968,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/directives/app",{"_index":2726,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/directives/mouse",{"_index":2975,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/init",{"_index":2978,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/tick",{"_index":2971,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["line/time",{"_index":2954,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["link",{"_index":2411,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":363,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["link.component",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["link.component.html",{"_index":3666,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.scss",{"_index":3665,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts",{"_index":3664,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:21",{"_index":3672,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:22",{"_index":3673,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:23",{"_index":3676,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:24",{"_index":3675,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:25",{"_index":3671,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:30",{"_index":3674,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link/button",{"_index":1566,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link/menu",{"_index":662,"title":{},"body":{"modules/AppModule.html":{},"components/MenuLinkComponent.html":{}}}],["link1",{"_index":4322,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":4325,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":4330,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["linkauthenticationstatus",{"_index":1604,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linkauthenticationstatus(linker",{"_index":1401,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linker",{"_index":1609,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["list",{"_index":220,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":317,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1073,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["list.component.html",{"_index":993,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.scss",{"_index":992,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":991,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:24",{"_index":995,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:25",{"_index":994,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:26",{"_index":2014,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:29",{"_index":996,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:32",{"_index":2017,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/archive",{"_index":990,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/card",{"_index":2011,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":2956,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":3083,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:21",{"_index":3085,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:25",{"_index":3086,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/severity",{"_index":2983,"title":{},"body":{"modules/FeedModule.html":{},"components/SeveritySortComponent.html":{}}}],["list/filters/tags",{"_index":2980,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2959,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2957,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":221,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1556,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":1481,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":358,"title":{"components/ListSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":437,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiFilterComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["little",{"_index":2769,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":408,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/I18nService.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadarchivedbyid",{"_index":1925,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcard",{"_index":412,"title":{"classes/LoadArchivedCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcard(id",{"_index":2109,"title":{},"body":{"injectables/CardService.html":{}}}],["loadarchivedcard({id",{"_index":2390,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadarchivedcardfailure",{"_index":415,"title":{"classes/LoadArchivedCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardfailure(err",{"_index":1936,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcardsuccess",{"_index":414,"title":{"classes/LoadArchivedCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardsuccess({card",{"_index":1934,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadbyid",{"_index":1926,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcard",{"_index":407,"title":{"classes/LoadCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":2111,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":2054,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":410,"title":{"classes/LoadCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1941,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":409,"title":{"classes/LoadCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1940,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":691,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":554,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":2253,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":2243,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1531,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":2242,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess.payload.config.security.oauth2.flow.mode",{"_index":1533,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["loadconfiguration",{"_index":2230,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"injectables/LightCardEffects.html":{},"classes/RefreshTranslation.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["loadedcardaction.payload.lightcards",{"_index":4725,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["loadedlocales",{"_index":3299,"title":{},"body":{"injectables/I18nService.html":{}}}],["loader",{"_index":5051,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":2879,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nformenuentries",{"_index":4314,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":4331,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loading",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{}}}],["loadlightcards",{"_index":447,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":452,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":455,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsfailure({error",{"_index":3512,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["loadlightcardssuccess",{"_index":451,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":2066,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadlocale",{"_index":3301,"title":{},"body":{"injectables/I18nService.html":{}}}],["loadlocale(locale",{"_index":3304,"title":{},"body":{"injectables/I18nService.html":{}}}],["loadlocale(locale:string",{"_index":3335,"title":{},"body":{"injectables/I18nService.html":{}}}],["loadmenu",{"_index":3118,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":3120,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":3651,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":3119,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":3650,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":2058,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":3141,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":3142,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":3984,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":3978,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":2929,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":3983,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth",{"_index":1256,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["local",{"_index":2649,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":3181,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales",{"_index":158,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales.map(locale",{"_index":4708,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["localestorage",{"_index":1271,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage",{"_index":1266,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.clear",{"_index":1285,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1276,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":1303,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":1305,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":1298,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":1296,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":1292,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":1294,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorageauthcontent",{"_index":1127,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["localurl",{"_index":3300,"title":{},"body":{"injectables/I18nService.html":{}}}],["location.href",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":1359,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname",{"_index":1362,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname.length",{"_index":1361,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["locationstrategy",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":140,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":189,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":1095,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["login'},{'name",{"_index":360,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":3597,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1584,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1588,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1589,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":3634,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":3635,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":3637,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":3638,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":3636,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["login:id",{"_index":1685,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":4905,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["loginclaim",{"_index":1138,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["logincomponent",{"_index":359,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["loginmessage",{"_index":3600,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":3639,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":2323,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo'},{'name",{"_index":336,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["logo.component",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["logo.component.css",{"_index":2324,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.html",{"_index":2325,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts",{"_index":2322,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:18",{"_index":2338,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:20",{"_index":2340,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:21",{"_index":2339,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:22",{"_index":2341,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:24",{"_index":2346,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:25",{"_index":2347,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:27",{"_index":2349,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:28",{"_index":2337,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:30",{"_index":2348,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:38",{"_index":2344,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:53",{"_index":2345,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:63",{"_index":2342,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo/custom",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"components/CustomLogoComponent.html":{}}}],["logout",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["long",{"_index":2161,"title":{},"body":{"injectables/CardService.html":{}}}],["longtext",{"_index":223,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["loose",{"_index":2148,"title":{},"body":{"injectables/CardService.html":{}}}],["lttd",{"_index":1790,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":3260,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":3272,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/TimeLineComponent.html":{}}}],["m.archivesmodule",{"_index":697,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.feedmodule",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.format(options.hash.format",{"_index":3276,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level",{"_index":3619,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this._locale",{"_index":3275,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.settingsmodule",{"_index":703,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.thirdpartymodule",{"_index":700,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mainrecipient",{"_index":1788,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":2159,"title":{},"body":{"injectables/CardService.html":{},"components/ResizableComponent.html":{}}}],["makes",{"_index":1753,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["manage",{"_index":706,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":4357,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":74,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["manager",{"_index":1462,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":2245,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["managment",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["mandatory",{"_index":226,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":150,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ChangeSort.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{}}}],["map(([action",{"_index":886,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(([action,configtags",{"_index":2889,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":2927,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([haschanged",{"_index":4149,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((a",{"_index":2045,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":2903,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["map((auth",{"_index":1251,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map((card",{"_index":1933,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["map((cards",{"_index":4727,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((config",{"_index":2240,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((currentstatus",{"_index":4140,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((loadconfigsuccess",{"_index":1530,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map((loadedcardaction",{"_index":4724,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((loadedmenusaction:loadmenusuccess)=>loadedmenusaction.payload.menu",{"_index":4743,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((menus:thirdmenu[])=>translateeffects.extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4744,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversion",{"_index":4732,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversions:map>)=>translateeffects.sendtranslateaction(publisherandversions",{"_index":4746,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((resultpage",{"_index":877,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map((settings",{"_index":3982,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map((storedcard",{"_index":3483,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["map((user",{"_index":4923,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(a=>new",{"_index":3986,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(auth",{"_index":1508,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(authenticationinfo",{"_index":1496,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(check",{"_index":1220,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(currentuser",{"_index":4938,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1249,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(elem",{"_index":4700,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map(id=>{return",{"_index":1684,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":1433,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(lightcard",{"_index":2053,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3649,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(menuentry",{"_index":4228,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(object.entries(obj",{"_index":4283,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":2063,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(params",{"_index":876,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(s=>handlebars.compile(s",{"_index":3239,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":3990,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":4266,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(context",{"_index":3230,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(this.convertjsontoi18nobject(locale",{"_index":4257,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(timeref",{"_index":4350,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":1259,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(url",{"_index":3657,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":2899,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":3438,"title":{},"body":{"components/InfoComponent.html":{}}}],["map(x",{"_index":1766,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["map>)=>this.extracti18ntoupdate(versions",{"_index":4745,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["maplanguages",{"_index":4795,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["maplanguages(thirdsandversions",{"_index":4706,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapped",{"_index":2895,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["mapthirds",{"_index":4796,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapthirds(locale",{"_index":4712,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapversions",{"_index":4797,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapversions(locale",{"_index":4718,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["margin",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["matching",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["materials",{"_index":3884,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["math.max",{"_index":3733,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":3734,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1879,"title":{},"body":{"components/CardComponent.html":{}}}],["max_height",{"_index":2329,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["max_width",{"_index":2330,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["maxedretries",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":227,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["maxsize]=\"3",{"_index":1030,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["means",{"_index":4368,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["medium",{"_index":3379,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":1579,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu",{"_index":362,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":3814,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":3822,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id}}.{{menu.version}}.{{menuentry.label",{"_index":3687,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menu.logout",{"_index":3823,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":3821,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":3820,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu_entry_id",{"_index":3130,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":3129,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":4182,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":2400,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":3136,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":3117,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":3116,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":3123,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":3124,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":3125,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":3128,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":3135,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":3132,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":807,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":159,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":3670,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menuentry.url",{"_index":4229,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":3695,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menulinkcomponent",{"_index":361,"title":{"components/MenuLinkComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["menureducer",{"_index":795,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":4272,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TranslateEffects.html":{}}}],["menus.map(menu",{"_index":4749,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["menus.push(menu",{"_index":4271,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menusopeninboth",{"_index":3667,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopeniniframes",{"_index":3668,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopenintabs",{"_index":3669,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menustate",{"_index":756,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["mergemap",{"_index":4690,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mergemap((action",{"_index":4695,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["message",{"_index":38,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["message('the",{"_index":1501,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":1517,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1594,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1573,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":3701,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":1502,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceholder",{"_index":1626,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":243,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":770,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":840,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["methods",{"_index":251,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["milliseconds",{"_index":2158,"title":{},"body":{"injectables/CardService.html":{}}}],["min",{"_index":5001,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["minus",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["minus2hour",{"_index":2133,"title":{},"body":{"injectables/CardService.html":{}}}],["minute",{"_index":2501,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["minutes",{"_index":2939,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["minutesonly",{"_index":5006,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["miscellaneous",{"_index":5075,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":5023,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["modal",{"_index":332,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["modal.component",{"_index":2218,"title":{},"body":{"modules/CardsModule.html":{},"injectables/ThirdActionService.html":{}}}],["modal.component.html",{"_index":2280,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts",{"_index":2279,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modal.component.ts:15",{"_index":2285,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:16",{"_index":2289,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:17",{"_index":2287,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:21",{"_index":2288,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:25",{"_index":2286,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal/confirm",{"_index":2217,"title":{},"body":{"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["modalservice",{"_index":4124,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["mode",{"_index":1143,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mode.tolowercase",{"_index":1161,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["modern",{"_index":3909,"title":{},"body":{"components/ResizableComponent.html":{}}}],["modification",{"_index":1954,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["modify",{"_index":889,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["module",{"_index":604,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["modules",{"_index":606,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["modules/cards/components/action/confirm",{"_index":4136,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["modules/utilities/utilities.module",{"_index":660,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":2207,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":1414,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0",{"_index":4463,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0).add(1",{"_index":4465,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).add(10",{"_index":4461,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).subtract(2",{"_index":4458,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment",{"_index":4434,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('month",{"_index":4444,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('week",{"_index":4439,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('year",{"_index":4449,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(date).startof('year",{"_index":5019,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":3273,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":4624,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":5000,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":4631,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":4626,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(l",{"_index":4425,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment.locale(this._locale",{"_index":3329,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.moment",{"_index":2840,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["moment.tz.setdefault(timezone",{"_index":3334,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":2861,"title":{},"body":{"components/FeedComponent.html":{}}}],["momentnow",{"_index":4597,"title":{},"body":{"classes/TimeReference.html":{}}}],["mommentojb",{"_index":4405,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[0",{"_index":4553,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[1",{"_index":4555,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[2",{"_index":4557,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[3",{"_index":4559,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[4",{"_index":4561,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[5",{"_index":4563,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[6",{"_index":4565,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mon",{"_index":5010,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mono.svg",{"_index":3385,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":2482,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/TimeLineComponent.html":{}}}],["more",{"_index":708,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":3722,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":3704,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":3716,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":394,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":3708,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":3707,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":3720,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":3709,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":1403,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movement",{"_index":2767,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{}}}],["movetocodeflowloginpage",{"_index":1332,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movetoimplicitflowloginpage",{"_index":1337,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mozilla",{"_index":294,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["mpl",{"_index":299,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["multi",{"_index":365,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multifiltercomponent",{"_index":364,"title":{"components/MultiFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent",{"_index":366,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:25",{"_index":4825,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":4823,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":4821,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":4822,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":4837,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":4838,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":4824,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":4836,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:34",{"_index":4835,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":4826,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:40",{"_index":4832,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:70",{"_index":4831,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:75",{"_index":4834,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:79",{"_index":4829,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:83",{"_index":4827,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:88",{"_index":4828,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:94",{"_index":4830,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:98",{"_index":4833,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":4532,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":4550,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimelinetimespans",{"_index":4545,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":4548,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimelinetimespans",{"_index":4536,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["navbar",{"_index":704,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":369,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":3761,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":3760,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.thirdmenus.type",{"_index":3684,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["navbarcollapsed",{"_index":3765,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":368,"title":{"components/NavbarComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["navigate",{"_index":1483,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":2374,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":3662,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetoarchivedcard",{"_index":2375,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetocard",{"_index":2376,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":2377,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":2406,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":3126,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":4049,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":4053,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":2435,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":710,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["nbofpublishers",{"_index":4783,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["nbw",{"_index":5012,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["necessary",{"_index":1868,"title":{},"body":{"components/CardComponent.html":{}}}],["need",{"_index":731,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RefreshTranslation.html":{},"classes/RouterStateUrl.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["needed",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["needing",{"_index":4729,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["neutraltimereference",{"_index":4651,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":4645,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["newdate",{"_index":4571,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.add(conf[key",{"_index":4577,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.startof(value",{"_index":4575,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.subtract(conf[key",{"_index":4578,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newelapsedsofar",{"_index":2910,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["newtitle",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["next",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":4674,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":3037,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":4849,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":4847,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.compliant",{"_index":4851,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":4379,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.information",{"_index":4853,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":4374,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":3038,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":3039,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":273,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["ng_validators",{"_index":2510,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ng_value_accessor",{"_index":2507,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ngafterviewinit",{"_index":2013,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ngb.model",{"_index":936,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ngb.model.ts",{"_index":2455,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:23",{"_index":2462,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:29",{"_index":2467,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:42",{"_index":2463,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:50",{"_index":2465,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:56",{"_index":2464,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbactivemodal",{"_index":2284,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":3819,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbdateparserformatter",{"_index":2456,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbdatestruct",{"_index":937,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngbmodal",{"_index":259,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["ngbmodule",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2989,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngbtimestruct",{"_index":938,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngmodule",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["ngonchanges",{"_index":2585,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":2696,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1623,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":252,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":423,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":895,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":445,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":763,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1618,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2965,"title":{},"body":{"modules/FeedModule.html":{}}}],["nomarginrow",{"_index":982,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["none",{"_index":1796,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nopaddingrow",{"_index":985,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["normal",{"_index":4618,"title":{},"body":{"classes/TimeReference.html":{}}}],["normalizedcurrentstatus",{"_index":4141,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["noselectioncomponent",{"_index":370,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":4676,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":2815,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["notif",{"_index":2872,"title":{},"body":{"components/FeedComponent.html":{}}}],["notification",{"_index":3840,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification(title",{"_index":3845,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification.requestpermission(status",{"_index":3842,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notify",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["notifyservice",{"_index":2100,"title":{"injectables/NotifyService.html":{}},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/NotifyService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["now",{"_index":1751,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["null",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/UserState.html":{}}}],["number",{"_index":228,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/DateTimeNgb.html":{},"classes/Detail.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{}}}],["oauth",{"_index":1156,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["oauth2.client",{"_index":1173,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.delagate",{"_index":1177,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.mode",{"_index":1192,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2conf",{"_index":1168,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthevent",{"_index":1119,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthmodule",{"_index":667,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":673,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":1120,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthtype",{"_index":1117,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["obj",{"_index":3242,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["obj.date",{"_index":4567,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.day",{"_index":4558,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.hour",{"_index":4560,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.minute",{"_index":4562,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.month",{"_index":4554,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.second",{"_index":4564,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.startof",{"_index":4566,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.week",{"_index":4556,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.year",{"_index":4552,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object",{"_index":197,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object.keys(cachedversions",{"_index":4761,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(conf).foreach(key",{"_index":4573,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(filters).foreach(key",{"_index":966,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object.keys(thirdsandversion",{"_index":4714,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(this.domains).includes(domain",{"_index":4523,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(translationreferencestoupdate).length",{"_index":4784,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(untrackedversions).length",{"_index":4780,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(versioninput",{"_index":4759,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.setprototypeof(params",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["object.setprototypeof(t",{"_index":4209,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object.values(enumeration).includes(value",{"_index":952,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object[publisher",{"_index":4245,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[publisher][version",{"_index":4246,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["observable.create(observer",{"_index":2168,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":2181,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":2172,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":2173,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":301,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["oc",{"_index":3906,"title":{},"body":{"components/ResizableComponent.html":{}}}],["occurred",{"_index":2177,"title":{},"body":{"injectables/CardService.html":{}}}],["of(0",{"_index":1024,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["of([]))).subscribe(d",{"_index":4521,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["of([new",{"_index":4317,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(auth",{"_index":1265,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(error",{"_index":1540,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(new",{"_index":1510,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(null",{"_index":1224,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(template",{"_index":3237,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":4206,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":1500,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(translateeffects.extractthirdtoupdate(versions",{"_index":4735,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(true",{"_index":4332,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":3541,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["of(v.label",{"_index":3544,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["ofactions/archive.actions",{"_index":904,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/authentication.actions",{"_index":1108,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofactions/card.actions",{"_index":1576,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/config.actions",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":2082,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1574,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/menu.actions",{"_index":2419,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/settings.actions",{"_index":1652,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":2931,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":4421,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofactions/translate.actions",{"_index":4691,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofeffects/archive.effects",{"_index":826,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/authentication.effects",{"_index":781,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":778,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":776,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":816,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":804,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":812,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":809,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":808,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":820,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":823,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/translate.effects",{"_index":833,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/user.effects",{"_index":831,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":151,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmap.prototype",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/archive",{"_index":1048,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["ofmodel/card",{"_index":2085,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":148,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofmodel/datetime",{"_index":935,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofmodel/detail",{"_index":2620,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["ofmodel/feed",{"_index":846,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"classes/ChangeSort.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":149,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":442,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":152,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["ofmodel/message.model",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["ofmodel/page.model",{"_index":907,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["ofmodel/thirds.model",{"_index":272,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/time.model",{"_index":2821,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user",{"_index":2623,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{}}}],["ofmodel/user.model",{"_index":1115,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["ofselectors/archive.selectors",{"_index":906,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{}}}],["ofselectors/authentication.selectors",{"_index":1126,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":2084,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["ofselectors/feed.selectors",{"_index":2856,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":3400,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1654,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":3205,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["ofselectors/time.selectors",{"_index":3431,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofservices/authentication/auth",{"_index":1122,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofservices/authentication/authentication.service",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["ofservices/card.service",{"_index":896,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":2252,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":849,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ChangeSort.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":1082,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":1110,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/notify.service",{"_index":2124,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":3948,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/third",{"_index":276,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/thirds.service",{"_index":1906,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/time.service",{"_index":939,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ofservices/user.service",{"_index":4953,"title":{},"body":{"injectables/UserEffects.html":{}}}],["ofstates/archive.state",{"_index":824,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/authentication.state",{"_index":801,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":802,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":814,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":783,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":806,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":818,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":821,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":817,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/user.state",{"_index":829,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/actions/archive.actions",{"_index":933,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofstore/actions/authentication.actions",{"_index":3994,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/actions/card.actions",{"_index":1835,"title":{},"body":{"components/CardComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/actions/light",{"_index":1907,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{}}}],["ofstore/actions/user.actions",{"_index":2088,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/index",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["ofstore/reducers/archive.reducer",{"_index":800,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":768,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":790,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":792,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":787,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":796,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":794,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":798,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":785,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/user.reducer",{"_index":828,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/archive.selectors",{"_index":999,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1837,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/config.selectors",{"_index":1019,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1834,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/selectors/settings.x.config.selectors",{"_index":4422,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofstore/state.module",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":765,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":894,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(archiveactiontypes.sendarchivequery",{"_index":870,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(archiveactiontypes.updatearchivepage",{"_index":884,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":4920,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":1478,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":1489,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":1551,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1563,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.unabletorefreshorgettoken",{"_index":1568,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadarchivedcard",{"_index":1930,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1938,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":2238,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":2260,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":1529,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":2074,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.addthirdactions",{"_index":3506,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.clearlightcardselection",{"_index":1928,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(lightcardactiontypes.delayedlightcardupdate",{"_index":3479,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":2044,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(lightcardactiontypes.updateanaction",{"_index":3488,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":3647,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.loadmenusuccess",{"_index":4742,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":3653,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":2385,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":2379,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":3980,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":2887,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":3988,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":2909,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(translateactionstypes.updatetranslation",{"_index":4694,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(useractionstypes.createuserapplication",{"_index":4935,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.createuserapplicationonsuccess",{"_index":4951,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationnotregistered",{"_index":4945,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationregistered",{"_index":2060,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oidc",{"_index":670,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["ok",{"_index":1522,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/FeedFiltersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":3914,"title":{},"body":{"components/ResizableComponent.html":{}}}],["omit",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/ResizableComponent.html":{}}}],["onchange",{"_index":2516,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchange(event",{"_index":2525,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchanges",{"_index":2517,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1614,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":2771,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":302,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":1128,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ongoing",{"_index":1953,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":242,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":3711,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":3718,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":3725,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":3728,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":3730,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":2754,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":2758,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":2761,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onresize",{"_index":1730,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["onsubmit",{"_index":3604,"title":{},"body":{"components/LoginComponent.html":{}}}],["ontouched",{"_index":2515,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["open",{"_index":1810,"title":{},"body":{"components/CardComponent.html":{}}}],["open(confirmmodalcomponent",{"_index":4155,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["operation",{"_index":2298,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["operation.cardids",{"_index":2070,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":2067,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":779,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":2041,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:33",{"_index":2043,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:42",{"_index":2073,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:74",{"_index":2081,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:93",{"_index":2057,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":2086,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":2026,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:11",{"_index":2032,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:22",{"_index":2034,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":2064,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":2059,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":3246,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["optimization",{"_index":1997,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["option",{"_index":1757,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":3248,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":3280,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["order",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["otherwise",{"_index":742,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":2752,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":2730,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":1281,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["overflow",{"_index":1001,"title":{},"body":{"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["overflow:hidden",{"_index":2569,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["override",{"_index":4249,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["overview",{"_index":5098,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":5036,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["padnumber(date.day",{"_index":2492,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(date.month",{"_index":2490,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.hour",{"_index":2496,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.minute",{"_index":2498,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(value",{"_index":2468,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["page",{"_index":714,"title":{"classes/Page.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/Page.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["page'},{'name",{"_index":319,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["page(1",{"_index":1050,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["page.component",{"_index":1071,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["page.component.html",{"_index":1008,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.scss",{"_index":1007,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts",{"_index":1006,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:25",{"_index":1016,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:26",{"_index":1017,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:27",{"_index":1011,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:29",{"_index":1012,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:38",{"_index":1014,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.tostring",{"_index":891,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["page/archive",{"_index":1005,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["page]=\"first",{"_index":1028,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pagechange)=\"updateresultpage($event",{"_index":1029,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pair",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["paload",{"_index":1560,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":5069,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":231,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":1515,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2996,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["params.append('client_secret",{"_index":1246,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('clientid",{"_index":1238,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('code",{"_index":1233,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('grant_type",{"_index":1234,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('password",{"_index":1245,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('redirect_uri",{"_index":1239,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('username",{"_index":1244,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append(key",{"_index":2189,"title":{},"body":{"injectables/CardService.html":{}}}],["params.set('page",{"_index":979,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('size",{"_index":976,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('version",{"_index":4255,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.set(key",{"_index":971,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.tostring",{"_index":1242,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params['error",{"_index":1590,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parent",{"_index":1732,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["parent.clientheight",{"_index":1775,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(calcheightclass",{"_index":1761,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(fixedheightclass",{"_index":1749,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentform",{"_index":3738,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["parentid",{"_index":1707,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentmodule",{"_index":3950,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2460,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/StateModule.html":{}}}],["parse(value",{"_index":2466,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["parseint(`${value",{"_index":2472,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["part",{"_index":1193,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["party",{"_index":2410,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":3006,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["passes",{"_index":3016,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":72,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["passwordorcodeauthenticationhandler",{"_index":1423,"title":{"classes/PasswordOrCodeAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["passwordorcodeauthenticationhandler(this",{"_index":1165,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["patch",{"_index":3143,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1651,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1696,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":3145,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":3992,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":3144,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":3991,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":4015,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":4018,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":4025,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":690,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":1360,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pathmatch",{"_index":1088,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["pathname",{"_index":722,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathname.length",{"_index":725,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathname.substr(1",{"_index":727,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2776,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["payload",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["payload.access_token",{"_index":1317,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid",{"_index":1316,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid.tostring",{"_index":1299,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":1297,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expires_in",{"_index":1312,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.identifier",{"_index":1293,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.password).pipe",{"_index":1553,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":1295,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload:tickpayload",{"_index":2837,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{cardstimeline",{"_index":3459,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["payload:{data",{"_index":3457,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":859,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":855,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":2844,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":23,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["payloadforsuccessfulauthentication(identifier",{"_index":1377,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":1315,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["perform",{"_index":2297,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["performance",{"_index":1996,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["performpost",{"_index":4157,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["periodstarttoend",{"_index":4400,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["periodstarttoend(conf",{"_index":4408,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["permission",{"_index":3830,"title":{},"body":{"injectables/NotifyService.html":{}}}],["pertinent",{"_index":2437,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pick",{"_index":184,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["picture",{"_index":2362,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["pieces",{"_index":4062,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":1258,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":1491,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(concatall",{"_index":4711,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(filter(e",{"_index":1348,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pipe(first",{"_index":1673,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map((actions",{"_index":3516,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["pipe(map((json",{"_index":4279,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(map(config",{"_index":1846,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(i18n",{"_index":4721,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(map(pulse",{"_index":4346,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(oftype(authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":1537,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1670,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{}}}],["pipe(tap(menus",{"_index":3791,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe/x",{"_index":2972,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["pipes",{"_index":4979,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":4999,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["place",{"_index":716,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["placeholder",{"_index":1620,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":3353,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":3371,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":2137,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":2439,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":2734,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":2742,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":2743,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":2735,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":2747,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":2736,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":2749,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":4877,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["position:absolute",{"_index":2564,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["possible",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["postaction",{"_index":4121,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postaction$.subscribe",{"_index":4154,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary",{"_index":4118,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary(lightcardid",{"_index":4132,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postdata",{"_index":1206,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.append('token",{"_index":1209,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.tostring",{"_index":1218,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["preloadallmodules",{"_index":681,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":738,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":3526,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["present",{"_index":1413,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["prev",{"_index":1769,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["previous",{"_index":2832,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["primary",{"_index":3596,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":249,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["process",{"_index":166,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["process.states[card.state",{"_index":168,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":161,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1789,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1956,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["prodi18npath",{"_index":3320,"title":{},"body":{"injectables/I18nService.html":{}}}],["promise.resolve",{"_index":1346,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["properties",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["property",{"_index":1994,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["protected",{"_index":1619,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["provide",{"_index":677,"title":{},"body":{"modules/AppModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":1735,"title":{},"body":{"directives/CalcHeightDirective.html":{},"modules/StateModule.html":{}}}],["providedin",{"_index":3052,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1372,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["provider",{"_index":3625,"title":{},"body":{"components/LoginComponent.html":{}}}],["providers",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":4057,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"modules/UtilitiesModule.html":{}}}],["publication",{"_index":1859,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":2029,"title":{},"body":{"classes/CardOperation.html":{}}}],["publish_date_from_param",{"_index":941,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publish_date_to_param",{"_index":943,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdate",{"_index":1785,"title":{},"body":{"classes/Card.html":{},"interfaces/CardFeedState.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publishdatefrom",{"_index":942,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdateto",{"_index":944,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publisher",{"_index":1783,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["publisher/${card.publisher}/process/${card.processid}/states/${card.state}/actions",{"_index":1852,"title":{},"body":{"components/CardComponent.html":{}}}],["publisherversion",{"_index":1784,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":3234,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["purpose",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["push",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["pushed",{"_index":2171,"title":{},"body":{"injectables/CardService.html":{}}}],["put",{"_index":1323,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/UtilitiesModule.html":{}}}],["putting",{"_index":2156,"title":{},"body":{"injectables/CardService.html":{}}}],["query",{"_index":1036,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["queryarchivedcards",{"_index":865,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["queryarchivedcardspage",{"_index":866,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["querylist",{"_index":2702,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":4293,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":4215,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":2434,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":3161,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":3185,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":3231,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":4294,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":4203,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["querythirdfromcard",{"_index":4295,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythirdfromcard(card",{"_index":4200,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["r",{"_index":4244,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["radius",{"_index":987,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["radius:5px",{"_index":989,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["raise",{"_index":4934,"title":{},"body":{"injectables/UserEffects.html":{}}}],["rangeend",{"_index":2115,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":2117,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":19,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":1536,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":4617,"title":{},"body":{"classes/TimeReference.html":{}}}],["realm",{"_index":1597,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["realnow",{"_index":4600,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":4603,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":4614,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":4613,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":4487,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":3005,"title":{},"body":{"classes/Filter.html":{}}}],["reasons",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/CardFeedState.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["received",{"_index":4526,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["receivedcard",{"_index":3480,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["recipient_filter",{"_index":3079,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["reconnecting",{"_index":2150,"title":{},"body":{"injectables/CardService.html":{}}}],["recursion",{"_index":3021,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":3020,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":713,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":705,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["redirecttocurrentlocation",{"_index":1577,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["redirecttocurrentlocation(currentrouter",{"_index":721,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecttocurrentlocation(this.router",{"_index":1495,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reduce",{"_index":4193,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus",{"_index":4270,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":766,"title":{},"body":{"interfaces/AppState.html":{}}}],["ref",{"_index":4623,"title":{},"body":{"classes/TimeReference.html":{}}}],["reference",{"_index":2827,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencetime",{"_index":4591,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["refreshed",{"_index":2935,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["refreshifselectedcard",{"_index":2042,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshthreshold",{"_index":2880,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["refreshtranslation",{"_index":3873,"title":{"classes/RefreshTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["regarding",{"_index":1412,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["registerarrayatindex",{"_index":3162,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":3163,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":3164,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":3165,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":3166,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":1228,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["registeri18n",{"_index":3167,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerjson",{"_index":3168,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":3169,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":3170,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":3171,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registeronchange",{"_index":2518,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registeronchange(fn",{"_index":2528,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched",{"_index":2519,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched(fn",{"_index":2531,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerpreservespace",{"_index":3172,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":3173,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":3174,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":3175,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":3176,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":2586,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":1525,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectlogin",{"_index":52,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1593,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":1453,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["related",{"_index":419,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":1300,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["reload",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":463,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":2069,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["rendered",{"_index":1958,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":2641,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":3000,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":2816,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1466,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":4682,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":4675,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requestpermission",{"_index":3833,"title":{},"body":{"injectables/NotifyService.html":{}}}],["required",{"_index":4454,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["requiredfield",{"_index":1627,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["rerouting",{"_index":1543,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reset",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resetform",{"_index":3605,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":1457,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resizable",{"_index":3898,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable'},{'name",{"_index":373,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["resizable.component.css",{"_index":3899,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable.component.html",{"_index":3900,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizablecomponent",{"_index":372,"title":{"components/ResizableComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resizablecomponent:17",{"_index":2019,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:19",{"_index":2018,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:34",{"_index":2016,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resize",{"_index":3904,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resized",{"_index":2012,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["resolvethirdpartylink",{"_index":3645,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":2647,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":4238,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":4242,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":1408,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["responsetype",{"_index":4233,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["restart",{"_index":2165,"title":{},"body":{"injectables/CardService.html":{}}}],["result",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result[u.third",{"_index":4753,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["resultpage",{"_index":1042,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["results",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":2047,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":2248,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":2231,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":2234,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":2444,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":268,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["reverse",{"_index":2477,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["right",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["right:0",{"_index":984,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["right:7px",{"_index":986,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["root",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":312,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["rotate]=\"true",{"_index":1031,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["route",{"_index":2414,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":682,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":805,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":2373,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:28",{"_index":2378,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:35",{"_index":2396,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:50",{"_index":2393,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:72",{"_index":2403,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:86",{"_index":2384,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigated",{"_index":2417,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":2404,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":2418,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":782,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":683,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1092,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":736,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":2386,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":757,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":2381,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":2431,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":2391,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":2402,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":2399,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":2401,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":2448,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":2388,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":2422,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":2429,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":764,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":2449,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":684,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":711,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":680,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":4876,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":229,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":288,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["rules",{"_index":1465,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":1273,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["rvalue",{"_index":3258,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":900,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["s",{"_index":2152,"title":{},"body":{"injectables/CardService.html":{}}}],["safe",{"_index":2646,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":2642,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":2650,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":2648,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":2608,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":2617,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2343,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["same",{"_index":715,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":2591,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":2865,"title":{},"body":{"components/FeedComponent.html":{}}}],["save",{"_index":1288,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["saveauthenticationinformation(payload",{"_index":1291,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["scope",{"_index":3002,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":2660,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":2663,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":2662,"title":{},"body":{"components/DetailComponent.html":{}}}],["sea",{"_index":4455,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["search",{"_index":1736,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["searchcodestring",{"_index":1425,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searchcodestring.length",{"_index":1431,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searches",{"_index":729,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sec",{"_index":5002,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["second",{"_index":2502,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["secondedsonly",{"_index":5016,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["secret",{"_index":1175,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["security",{"_index":2140,"title":{},"body":{"injectables/CardService.html":{}}}],["securityheader",{"_index":4680,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["see",{"_index":1998,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/ResizableComponent.html":{}}}],["select",{"_index":457,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectsortedfilteredlightcards",{"_index":2857,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectarchivecount",{"_index":1022,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["select(selectarchivelightcards",{"_index":1060,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["select(selectconfigloaded",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["selectarchivecount",{"_index":1018,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["selectarchivedlightcard",{"_index":1038,"title":{"classes/SelectArchivedLightCard.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectarchivedlightcard({selectedcardid",{"_index":2392,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectarchivefilters",{"_index":905,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["selectarchivelightcards",{"_index":998,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{}}}],["selectarchivelightcardselection",{"_index":1058,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectauthenticationstate",{"_index":2622,"title":{},"body":{"components/DetailComponent.html":{}}}],["selectcardactionsappearstate",{"_index":1836,"title":{},"body":{"components/CardComponent.html":{}}}],["selectcardstateselectedid",{"_index":2083,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1572,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":2254,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":3430,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":2691,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":2699,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":471,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selected_iframe_url",{"_index":3693,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":488,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":3394,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":232,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":1124,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selectidentifier",{"_index":1659,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":460,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":371,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2952,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":3826,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3825,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:15",{"_index":3827,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":3828,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2951,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":4870,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectisimplicitlyauthenticated",{"_index":1125,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selectlightcard",{"_index":456,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":2395,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":2413,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":2398,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":3122,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":3659,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":3121,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":3658,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":3786,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":3399,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":3615,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":244,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selector:'confirm",{"_index":2290,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["selectors",{"_index":2006,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["selectrouterstate",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["selectsortedfilterlightcardids",{"_index":2007,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["selecttimereference",{"_index":4358,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectusernameoridentifier",{"_index":3429,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ConfirmModalComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["sendarchivequery",{"_index":872,"title":{"classes/SendArchiveQuery.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendarchivequery({params",{"_index":892,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{}}}],["sendquery",{"_index":919,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sendtranslateaction",{"_index":4798,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["sendtranslateaction(versiontoupdate",{"_index":4785,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["sense",{"_index":1754,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sent",{"_index":2926,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sequentially",{"_index":3024,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":2424,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":2428,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":4054,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserService.html":{}}}],["services/handlebars.service",{"_index":2213,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":2212,"title":{},"body":{"modules/CardsModule.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":616,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":675,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":1353,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["session_terminated",{"_index":1350,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage",{"_index":1164,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.clear",{"_index":1286,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.setitem('flow",{"_index":1340,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["set",{"_index":2714,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/InitTimeline.html":{},"components/NavbarComponent.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":4231,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":4213,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set([u.version",{"_index":4755,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["set(untrackedversions",{"_index":4782,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["setcarddatatimeline",{"_index":3456,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setcarddatatimeline({cardstimeline",{"_index":4551,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["setdisabledstate",{"_index":2520,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2533,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2553,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setheaders",{"_index":4681,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["setheightandwidth",{"_index":2332,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["sets",{"_index":739,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["setsize",{"_index":3348,"title":{},"body":{"components/IconComponent.html":{}}}],["setsprites",{"_index":3349,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":2656,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":3810,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":3813,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1615,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":324,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":2801,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1616,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1613,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":2777,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":4096,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:23",{"_index":4095,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":3530,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:25",{"_index":3529,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1632,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1630,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1631,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1648,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1650,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1649,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1647,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":1629,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:36",{"_index":4097,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":1643,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:47",{"_index":4099,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":3532,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:51",{"_index":4098,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:58",{"_index":3531,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:65",{"_index":3534,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:69",{"_index":3533,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:70",{"_index":1642,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:74",{"_index":3535,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:75",{"_index":1646,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:79",{"_index":1637,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:83",{"_index":1634,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:88",{"_index":1636,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:94",{"_index":1640,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:98",{"_index":1644,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1612,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":2774,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":3525,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":2800,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1628,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":701,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":367,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":4007,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.html",{"_index":3750,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":4820,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":3749,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":3752,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":3754,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":3753,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":3755,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":2806,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":3748,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":4009,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":3150,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1694,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":3153,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":2930,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":3140,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":3146,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":3147,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":3148,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":3149,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":3151,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":3152,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":374,"title":{"components/SettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":819,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":4028,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsinputs",{"_index":3960,"title":{"interfaces/SettingsInputs.html":{}},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["settingsmodule",{"_index":3995,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":793,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":3999,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":3939,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":758,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["settitle",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle(newtitle",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":376,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":3057,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":3056,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.compliant",{"_index":3059,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.information",{"_index":3060,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1971,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1977,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1978,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3467,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severitysortcomponent",{"_index":375,"title":{"components/SeveritySortComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["shift",{"_index":2834,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["showgridlines",{"_index":4486,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":2616,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["size",{"_index":918,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size.tostring",{"_index":977,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["size:string",{"_index":3367,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon",{"_index":3351,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon:string",{"_index":3365,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":3944,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1887,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["snapshot",{"_index":2438,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":2812,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sometimes",{"_index":2149,"title":{},"body":{"injectables/CardService.html":{}}}],["sort",{"_index":854,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"components/SeveritySortComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sort'},{'name",{"_index":377,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sort.component",{"_index":2985,"title":{},"body":{"modules/FeedModule.html":{}}}],["sort.component.html",{"_index":4030,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["sort.component.ts",{"_index":4029,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["sort.component.ts:18",{"_index":4033,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["sort.component.ts:22",{"_index":4034,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["sort.component.ts:25",{"_index":4035,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["sort/severity",{"_index":2984,"title":{},"body":{"modules/FeedModule.html":{},"components/SeveritySortComponent.html":{}}}],["sortbyseverity",{"_index":1959,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortcomparer",{"_index":1993,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sorted",{"_index":1961,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sorting",{"_index":2005,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortonkey(key",{"_index":3288,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3468,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["space",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["special",{"_index":4991,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["specifically",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["speed",{"_index":4588,"title":{},"body":{"classes/TimeReference.html":{}}}],["sprites",{"_index":3347,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":3368,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../archive",{"_index":5085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../archive.actions.ts",{"_index":5078,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.actions.ts",{"_index":5079,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":5087,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":5081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":5080,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":5095,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":5082,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":5091,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../feed.actions.ts",{"_index":5084,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":5086,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":5083,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":5088,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":5089,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":5090,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":5077,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.actions.ts",{"_index":5092,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":5094,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":5093,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../translate.actions.ts",{"_index":5096,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.actions.ts",{"_index":5097,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":679,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/login/login.component.ts",{"_index":3594,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":3611,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":3614,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":3613,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":3612,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":3606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":3608,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":3609,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:61",{"_index":3610,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:65",{"_index":3607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/custom",{"_index":2321,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts",{"_index":3342,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:19",{"_index":3356,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:20",{"_index":3357,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:21",{"_index":3355,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:23",{"_index":3361,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:24",{"_index":3362,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:25",{"_index":3354,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:32",{"_index":3358,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:37",{"_index":3359,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:53",{"_index":3360,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":3413,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":3422,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":3421,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:29",{"_index":3419,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:34",{"_index":3420,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:45",{"_index":3424,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:49",{"_index":3426,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:53",{"_index":3428,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/menus/menu",{"_index":3663,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":3759,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":3781,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":3782,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":3776,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":3775,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:34",{"_index":3778,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":3779,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:37",{"_index":3777,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":3780,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":3783,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:40",{"_index":3769,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:45",{"_index":3771,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:82",{"_index":3770,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:86",{"_index":3785,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:90",{"_index":3773,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:96",{"_index":3774,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":2025,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1781,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":1792,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":2573,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/datetime",{"_index":2454,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["src/app/model/detail",{"_index":2683,"title":{},"body":{"classes/DetailContext.html":{}}}],["src/app/model/feed",{"_index":2991,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":3294,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:11",{"_index":3296,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3462,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":3640,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:9",{"_index":3643,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":3697,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:11",{"_index":3700,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/page.model.ts",{"_index":3846,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/page.model.ts:12",{"_index":3849,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/thirds.model.ts",{"_index":132,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/model/thirds.model.ts:102",{"_index":398,"title":{},"body":{"classes/ActionStatus.html":{}}}],["src/app/model/thirds.model.ts:13",{"_index":4108,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:153",{"_index":3461,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:170",{"_index":3851,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:27",{"_index":4109,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:38",{"_index":4173,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:48",{"_index":4172,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:58",{"_index":3872,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:66",{"_index":4040,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:82",{"_index":144,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":4580,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":4590,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:18",{"_index":4605,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:26",{"_index":4593,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:27",{"_index":4596,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:28",{"_index":4599,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:40",{"_index":4602,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:63",{"_index":4606,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user",{"_index":4912,"title":{},"body":{"classes/UserContext.html":{}}}],["src/app/model/user.model.ts",{"_index":4902,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:9",{"_index":4904,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":1081,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":1052,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:24",{"_index":1057,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:25",{"_index":1055,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:29",{"_index":1056,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":1069,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/archives/components/archive",{"_index":910,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":2203,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:46",{"_index":2206,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/action/action.component.ts",{"_index":241,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:22",{"_index":263,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:23",{"_index":265,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:24",{"_index":266,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:25",{"_index":264,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:26",{"_index":261,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:33",{"_index":267,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:37",{"_index":270,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/confirm",{"_index":2278,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/components/card",{"_index":1895,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1799,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:100",{"_index":1818,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:107",{"_index":1825,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:118",{"_index":1833,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:122",{"_index":1822,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1815,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1814,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:33",{"_index":1830,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:34",{"_index":1826,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:35",{"_index":1831,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:36",{"_index":1829,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:37",{"_index":1827,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:38",{"_index":1828,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:40",{"_index":1813,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:50",{"_index":1823,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:75",{"_index":1817,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:90",{"_index":1820,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:94",{"_index":1824,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":2574,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:113",{"_index":2600,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:130",{"_index":2598,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:145",{"_index":2602,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:29",{"_index":2610,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:30",{"_index":2594,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:31",{"_index":2593,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:32",{"_index":2611,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":2613,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:34",{"_index":2609,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:35",{"_index":2592,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:45",{"_index":2606,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:57",{"_index":2605,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:62",{"_index":2604,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:78",{"_index":2603,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:94",{"_index":2615,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:98",{"_index":2607,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":2688,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:21",{"_index":2704,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:22",{"_index":2694,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:23",{"_index":2693,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:29",{"_index":2695,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:38",{"_index":2701,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:48",{"_index":2700,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":2705,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:61",{"_index":2697,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":3156,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:114",{"_index":3188,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:120",{"_index":3200,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:129",{"_index":3194,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:143",{"_index":3187,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:149",{"_index":3198,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:166",{"_index":3199,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:208",{"_index":3192,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:234",{"_index":3201,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:252",{"_index":3190,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:266",{"_index":3191,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:274",{"_index":3196,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:28",{"_index":3202,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:281",{"_index":3195,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:288",{"_index":3197,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:29",{"_index":3178,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:53",{"_index":3180,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:61",{"_index":3184,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:66",{"_index":3186,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:79",{"_index":3193,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:85",{"_index":3189,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":2010,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":3824,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":2725,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2990,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":2846,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:27",{"_index":2853,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:28",{"_index":2854,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:29",{"_index":2850,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:34",{"_index":2852,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:55",{"_index":2851,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":2948,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1611,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":2773,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":3524,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":3747,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":3953,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":3962,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":3963,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:22",{"_index":3961,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:23",{"_index":3959,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:24",{"_index":3957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:28",{"_index":3958,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":4094,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":4819,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":4010,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":4000,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":3389,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:22",{"_index":3395,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:28",{"_index":3396,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:36",{"_index":3398,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":4181,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":4179,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/modules/utilities/calc",{"_index":1701,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts",{"_index":3897,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:17",{"_index":3901,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:19",{"_index":3903,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:34",{"_index":3902,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/utilities.module.ts",{"_index":4974,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["src/app/services/authentication/authentication.service.ts",{"_index":1094,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication/authentication.service.ts:428",{"_index":1100,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:431",{"_index":1101,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:432",{"_index":1103,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:433",{"_index":1102,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:434",{"_index":1104,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:444",{"_index":2223,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:446",{"_index":2226,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:447",{"_index":2225,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:448",{"_index":2224,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:467",{"_index":1606,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:469",{"_index":1608,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:471",{"_index":1605,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:473",{"_index":1610,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:481",{"_index":3852,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:487",{"_index":3854,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:496",{"_index":3855,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:501",{"_index":3853,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:505",{"_index":3856,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:514",{"_index":3406,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:520",{"_index":3408,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:526",{"_index":3410,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:530",{"_index":3407,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:534",{"_index":3411,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/card.service.ts",{"_index":2089,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:103",{"_index":2103,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:25",{"_index":2120,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:26",{"_index":2118,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:27",{"_index":2119,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:28",{"_index":2101,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:42",{"_index":2112,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:46",{"_index":2108,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:63",{"_index":2113,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:67",{"_index":2106,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:93",{"_index":2116,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:99",{"_index":2110,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":2266,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:18",{"_index":2269,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:25",{"_index":2270,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":3040,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:19",{"_index":3046,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:25",{"_index":3047,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:30",{"_index":3051,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:54",{"_index":3049,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:63",{"_index":3050,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:85",{"_index":3048,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":3089,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:17",{"_index":3092,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:23",{"_index":3093,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:27",{"_index":3094,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":3297,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:22",{"_index":3306,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:23",{"_index":3307,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:24",{"_index":3308,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:25",{"_index":3302,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:39",{"_index":3303,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:57",{"_index":3310,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:61",{"_index":3312,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:66",{"_index":3305,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":4661,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:15",{"_index":4665,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":4671,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":4668,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/notify.service.ts",{"_index":3829,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:14",{"_index":3834,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:18",{"_index":3838,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:21",{"_index":3839,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:29",{"_index":3836,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/services.module.ts",{"_index":3942,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:51",{"_index":3943,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":4011,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":4020,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:20",{"_index":4016,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:28",{"_index":4017,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:32",{"_index":4019,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/third",{"_index":4112,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":4184,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:104",{"_index":4297,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:124",{"_index":4299,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:139",{"_index":4302,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:143",{"_index":4301,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:161",{"_index":4188,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:166",{"_index":4190,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:21",{"_index":4310,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:22",{"_index":4311,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":4296,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:31",{"_index":4309,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:35",{"_index":4307,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:52",{"_index":4304,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:60",{"_index":4305,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:78",{"_index":4303,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:88",{"_index":4298,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:95",{"_index":4300,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/user.service.ts",{"_index":4954,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":4958,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":4962,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":4960,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/store/actions/archive.actions.ts",{"_index":1032,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/archive.actions.ts:24",{"_index":4887,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:26",{"_index":4888,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:30",{"_index":3935,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:31",{"_index":3936,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:36",{"_index":3098,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:39",{"_index":3099,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:43",{"_index":1033,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:45",{"_index":1034,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:50",{"_index":4889,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:52",{"_index":4890,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:56",{"_index":3925,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/archive.actions.ts:58",{"_index":3926,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:101",{"_index":3893,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:104",{"_index":3894,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:113",{"_index":130,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:125",{"_index":131,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:130",{"_index":2221,"title":{},"body":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:135",{"_index":4901,"title":{},"body":{"classes/UselessAuthAction.html":{}}}],["src/app/store/actions/authentication.actions.ts:141",{"_index":3412,"title":{},"body":{"classes/ImplicitlyAuthenticated.html":{}}}],["src/app/store/actions/authentication.actions.ts:146",{"_index":4880,"title":{},"body":{"classes/UnAuthenticationFromImplicitFlow.html":{}}}],["src/app/store/actions/authentication.actions.ts:151",{"_index":4881,"title":{},"body":{"classes/UnableToRefreshOrGetToken.html":{}}}],["src/app/store/actions/authentication.actions.ts:33",{"_index":3864,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:34",{"_index":3868,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:35",{"_index":3865,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:36",{"_index":3870,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:37",{"_index":3866,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:38",{"_index":3867,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:39",{"_index":3869,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:49",{"_index":3446,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:51",{"_index":3447,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:60",{"_index":2220,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:69",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:72",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:81",{"_index":4816,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:84",{"_index":4817,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:92",{"_index":4818,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":400,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:25",{"_index":2227,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:28",{"_index":3567,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:31",{"_index":3568,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:34",{"_index":3569,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:37",{"_index":3570,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:41",{"_index":3571,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:44",{"_index":3572,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:48",{"_index":3561,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:51",{"_index":3562,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:54",{"_index":3563,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:57",{"_index":3564,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:61",{"_index":3565,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:64",{"_index":3566,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:69",{"_index":3100,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:72",{"_index":3101,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:76",{"_index":401,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/card.actions.ts:78",{"_index":402,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":3102,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:19",{"_index":3573,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:22",{"_index":3574,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:25",{"_index":3575,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:30",{"_index":3576,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:33",{"_index":3577,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:39",{"_index":3103,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/config.actions.ts:41",{"_index":3104,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":842,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/ChangeSort.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":843,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:22",{"_index":844,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:26",{"_index":3448,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:28",{"_index":3449,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:32",{"_index":2219,"title":{},"body":{"classes/ChangeSort.html":{}}}],["src/app/store/actions/light",{"_index":435,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":3113,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:23",{"_index":3584,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:30",{"_index":3585,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:33",{"_index":3586,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:38",{"_index":3587,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:41",{"_index":3588,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:46",{"_index":3114,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:49",{"_index":3115,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:60",{"_index":3929,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:63",{"_index":3930,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:71",{"_index":3933,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:74",{"_index":3934,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:82",{"_index":3931,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:85",{"_index":3932,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":3137,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:25",{"_index":3589,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:28",{"_index":3590,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:31",{"_index":3591,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:36",{"_index":3592,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:39",{"_index":3593,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":3857,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:45",{"_index":3858,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:48",{"_index":3859,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:51",{"_index":3860,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:56",{"_index":3861,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:59",{"_index":3862,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:65",{"_index":3138,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/settings.actions.ts:67",{"_index":3139,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":2811,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":4333,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":4334,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:32",{"_index":4337,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:33",{"_index":4338,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:34",{"_index":4339,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:43",{"_index":4891,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:44",{"_index":4892,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:53",{"_index":2817,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:54",{"_index":2818,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":3451,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":3452,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:18",{"_index":3453,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":3951,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:23",{"_index":3952,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/translate.actions.ts",{"_index":3874,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/translate.actions.ts:20",{"_index":4894,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:22",{"_index":4895,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:27",{"_index":4815,"title":{},"body":{"classes/TranslationUpToDate.html":{}}}],["src/app/store/actions/translate.actions.ts:31",{"_index":4898,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:33",{"_index":4899,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:38",{"_index":4896,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:40",{"_index":4897,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:46",{"_index":3876,"title":{},"body":{"classes/RefreshTranslation.html":{}}}],["src/app/store/actions/user.actions.ts",{"_index":2301,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/user.actions.ts:23",{"_index":4910,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:24",{"_index":4911,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:29",{"_index":4908,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:30",{"_index":4909,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:35",{"_index":2302,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:36",{"_index":2303,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:42",{"_index":2319,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:43",{"_index":2320,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:48",{"_index":2317,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:49",{"_index":2318,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:55",{"_index":3154,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/actions/user.actions.ts:56",{"_index":3155,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/effects/archive.effects.ts",{"_index":864,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:29",{"_index":868,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:36",{"_index":883,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:51",{"_index":893,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":1449,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:125",{"_index":1565,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:146",{"_index":1480,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:165",{"_index":1549,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:189",{"_index":1519,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:247",{"_index":1546,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:264",{"_index":1570,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:273",{"_index":1472,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:295",{"_index":1475,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:301",{"_index":1477,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:46",{"_index":1461,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:70",{"_index":1534,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:98",{"_index":1555,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":2040,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1923,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:34",{"_index":1927,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:42",{"_index":1942,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:55",{"_index":1937,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:68",{"_index":1929,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":2229,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:23",{"_index":2235,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:58",{"_index":2244,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:76",{"_index":2247,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:78",{"_index":2237,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":2372,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":2874,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":3472,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":3644,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:28",{"_index":3646,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:39",{"_index":3652,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:62",{"_index":3660,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":3977,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:30",{"_index":3979,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:43",{"_index":3985,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:55",{"_index":3987,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:61",{"_index":3993,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":4340,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:26",{"_index":4344,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:42",{"_index":4348,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:56",{"_index":4356,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/translate.effects.ts",{"_index":4684,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:115",{"_index":4802,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:119",{"_index":4804,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:129",{"_index":4814,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:141",{"_index":4803,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:150",{"_index":4801,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:163",{"_index":4805,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:191",{"_index":4810,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:200",{"_index":4686,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:201",{"_index":4687,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:32",{"_index":4799,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:42",{"_index":4811,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:45",{"_index":4812,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:67",{"_index":4807,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:76",{"_index":4808,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:86",{"_index":4809,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:98",{"_index":4813,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/user.effects.ts",{"_index":4915,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:106",{"_index":4952,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:30",{"_index":4919,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:45",{"_index":4930,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:66",{"_index":4949,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:81",{"_index":4944,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/index.ts",{"_index":749,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":4043,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:34",{"_index":4044,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/archive.state.ts",{"_index":1046,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":1443,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":2195,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":2274,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1946,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":3692,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":2421,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:38",{"_index":3924,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:49",{"_index":2430,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:56",{"_index":2427,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":4027,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":4649,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":4654,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/app/store/states/user.state.ts",{"_index":4968,"title":{},"body":{"interfaces/UserState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":4313,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:12",{"_index":4315,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:21",{"_index":4316,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":2142,"title":{},"body":{"injectables/CardService.html":{}}}],["sso",{"_index":1391,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["st",{"_index":3498,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["start",{"_index":2746,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdate",{"_index":1786,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":4490,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day",{"_index":4433,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.minutes(0).second(0).millisecond(0",{"_index":4435,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.valueof",{"_index":4506,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj",{"_index":4462,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj.valueof",{"_index":4491,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth",{"_index":4443,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.minutes(0).second(0).millisecond(0",{"_index":4445,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.valueof",{"_index":4513,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr",{"_index":4457,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr.valueof",{"_index":4503,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek",{"_index":4438,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.minutes(0).second(0).millisecond(0",{"_index":4440,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.valueof",{"_index":4511,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear",{"_index":4448,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.hour(0).minutes(0).second(0).millisecond(0",{"_index":4450,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.valueof",{"_index":4518,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startof",{"_index":4403,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":5018,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":5021,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["state.actions[actionid",{"_index":2667,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":2452,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":2450,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":617,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":674,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":224,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"injectables/I18nService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["statically",{"_index":1995,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["status",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/NotifyService.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":3063,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":3061,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.compliant",{"_index":3064,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":3069,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.information",{"_index":3065,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":3068,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":4343,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":1272,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stillvalid",{"_index":1279,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stitle",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["stitle.subscribe(data",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["stops",{"_index":3022,"title":{},"body":{"classes/Filter.html":{}}}],["storage",{"_index":1437,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["store",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"injectables/SettingsService.html":{},"components/SeveritySortComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["store.select(buildconfigselector('security",{"_index":1150,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storeconfig",{"_index":839,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":730,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storedcard",{"_index":3484,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["storedevtoolsmodule",{"_index":4047,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":4056,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":773,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":4045,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":4051,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":4050,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":4052,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":3233,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":4059,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":2637,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":4235,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":238,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":245,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":1181,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subject",{"_index":292,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["submission",{"_index":2808,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":253,"title":{},"body":{"components/ActionComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{}}}],["submit(lightcardid",{"_index":4134,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["submitted",{"_index":1561,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1624,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1351,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["subscribe(([locale,timezone",{"_index":3326,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe(([realm",{"_index":1598,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["subscribe((maxedretries",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1909,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1848,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":4086,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(linker",{"_index":1434,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(loaded",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m",{"_index":3620,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1686,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1680,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":1151,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(provider",{"_index":3623,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(v",{"_index":3678,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["subscribe(x",{"_index":1725,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["subscription",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1890,"title":{},"body":{"components/CardComponent.html":{}}}],["subtract",{"_index":4413,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subtracting",{"_index":1771,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["success",{"_index":60,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":2246,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":1037,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":3880,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":1290,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["sufficiently",{"_index":2160,"title":{},"body":{"injectables/CardService.html":{}}}],["sum",{"_index":1762,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sumfixelemheights",{"_index":1764,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["summary",{"_index":1791,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super",{"_index":2021,"title":{},"body":{"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{}}}],["super(store",{"_index":2802,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":2804,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":3548,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":5104,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":3905,"title":{},"body":{"components/ResizableComponent.html":{}}}],["svg",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":3269,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2966,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1383,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":3259,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":222,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switched",{"_index":2003,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["switchmap",{"_index":898,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(([lightcards",{"_index":2049,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":1493,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":871,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":3989,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":2078,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth",{"_index":1254,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["switchmap((lightcard",{"_index":3511,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((versions",{"_index":4730,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["switchmap(action",{"_index":1931,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(third",{"_index":4220,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts",{"_index":4262,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["t",{"_index":3642,"title":{},"body":{"classes/Map.html":{},"classes/Page.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.i18nlabelkey",{"_index":4269,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":4265,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":4268,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":2713,"title":{},"body":{"components/DetailsComponent.html":{},"components/MenuLinkComponent.html":{}}}],["tab.active",{"_index":2712,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":4871,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":2719,"title":{},"body":{"components/DetailsComponent.html":{}}}],["taction['buttonstyle",{"_index":215,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['hidden",{"_index":214,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['label",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockaction",{"_index":217,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestatebeforeaction",{"_index":216,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["tag",{"_index":2896,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":3080,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":4065,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":379,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":378,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["takes",{"_index":2436,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1658,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1675,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4386,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":2062,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":997,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t",{"_index":4208,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":3240,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(this.saveauthenticationinformation",{"_index":1253,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":2886,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":2902,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["team",{"_index":4456,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tells",{"_index":1482,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":237,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":3158,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":3206,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1798,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":156,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":247,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":3363,"title":{},"body":{"components/IconComponent.html":{}}}],["terminated",{"_index":1354,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["terms",{"_index":293,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["test",{"_index":66,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["test_filter",{"_index":3082,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":219,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":380,"title":{"components/TextSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:22",{"_index":2779,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:23",{"_index":2778,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:29",{"_index":2784,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:36",{"_index":2783,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:47",{"_index":2786,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:51",{"_index":2785,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that's",{"_index":4252,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["that.time.currenttime().valueof",{"_index":3283,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["then(performpost",{"_index":4156,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["they're",{"_index":1755,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["third",{"_index":153,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["third.extractstate(this.card",{"_index":1915,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":4221,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third.prototype",{"_index":4210,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third:string",{"_index":4788,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdaction",{"_index":444,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["thirdactionalreadyloaded",{"_index":472,"title":{"classes/ThirdActionAlreadyLoaded.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactionalreadyupdated",{"_index":474,"title":{"classes/ThirdActionAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactioncomporentmodalreturn",{"_index":2294,"title":{},"body":{"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["thirdactioncomporentmodalreturn.cancel",{"_index":4159,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactioncomporentmodalreturn.dismiss",{"_index":4161,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactionkey",{"_index":3490,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions",{"_index":3495,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.get(thirdactionkey",{"_index":3497,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.set(thirdactionkey",{"_index":3502,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactionservice",{"_index":205,"title":{"injectables/ThirdActionService.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"index.html":{}}}],["thirdactionstatus",{"_index":3492,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactiontoupdate",{"_index":3496,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdcache",{"_index":4196,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":173,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenu('t1",{"_index":4318,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":4326,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":4267,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu[]):map",{"_index":4748,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenuentry",{"_index":160,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"components/MenuLinkComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":4320,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":4323,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":4328,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":4217,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":4306,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":3768,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":4216,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuversion).pipe",{"_index":4219,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":4308,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":4204,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":698,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":4174,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":4178,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":2589,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds+version",{"_index":4726,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds.map(third",{"_index":4715,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion",{"_index":4713,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion[third",{"_index":4717,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions",{"_index":4710,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions.foreach(u",{"_index":4752,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdservice",{"_index":3477,"title":{},"body":{"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsi18nloader",{"_index":4183,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":4285,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":4284,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1899,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":4312,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":4194,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdswiththeirversions",{"_index":4696,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirparty",{"_index":3127,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this._defaultfilters",{"_index":3053,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":3434,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":4077,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":4385,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4082,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":4079,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":2654,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1839,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":3226,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this._modalservice",{"_index":283,"title":{},"body":{"components/ActionComponent.html":{}}}],["this._resizesubject",{"_index":1722,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.asobservable().pipe",{"_index":1723,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.next",{"_index":1731,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._selectediframeurl",{"_index":3403,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":3806,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":3790,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":3436,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":3332,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":3432,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.action",{"_index":282,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actions",{"_index":1488,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":869,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":1547,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.actionsappear",{"_index":1857,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionservice.submit",{"_index":280,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionsurlpath",{"_index":1851,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionurl",{"_index":4137,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.actionurlpath}/${this.action.key",{"_index":279,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.active",{"_index":3031,"title":{},"body":{"classes/Filter.html":{}}}],["this.archiveform",{"_index":957,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.archivesurl",{"_index":2130,"title":{},"body":{"injectables/CardService.html":{}}}],["this.askforoauthaccesstoken",{"_index":1355,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":1152,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.attachaction(button",{"_index":2668,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authenticationservice.getauthenticationmode().tolowercase",{"_index":1438,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initandloadauth",{"_index":1439,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initializeauthentication",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.linkauthenticationstatus",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.movetocodeflowloginpage",{"_index":1435,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.movetoimplicitflowloginpage",{"_index":1442,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler",{"_index":1153,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.initializeauthentication(window.location.href",{"_index":1400,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.linkauthenticationstatus(linker",{"_index":1402,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.move",{"_index":1404,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":1494,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1552,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(this.authservice.extracttoken",{"_index":1490,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.clearauthenticationinformation",{"_index":1548,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.computeredirecturi",{"_index":1600,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1506,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.getsecurityheader",{"_index":2147,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["this.authservice.isexpirationdateover",{"_index":1504,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.loaduserdata(authinfo",{"_index":1507,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.base64",{"_index":2359,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.basesettings",{"_index":1693,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.bindactions(third",{"_index":2659,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.bright",{"_index":3382,"title":{},"body":{"components/IconComponent.html":{}}}],["this.calcheight(this.parentid",{"_index":1726,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.calcheightclass",{"_index":1728,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.callmodalandhandleresponse(modalservice",{"_index":4153,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.callmodalifnecessary(lightcardid",{"_index":4169,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.card",{"_index":1910,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1920,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1921,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion).subscribe(third",{"_index":1914,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.cardoperationsurl",{"_index":2126,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":2146,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1603,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":2128,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":3223,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.checkifreceivedstatusisdifferentfromcurrentone(action",{"_index":4148,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.clientid",{"_index":1171,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.clientsecret",{"_index":1174,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.codeprovider",{"_index":3624,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.collectionsize",{"_index":1020,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["this.computedisplayeddates(config",{"_index":1847,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":3549,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":3756,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":4615,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computeredirecturi",{"_index":1240,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.computetextvalidators",{"_index":4100,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":4481,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":2271,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom.push(this.domains[domain",{"_index":4524,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.consolidatethirdandversions(thirdsandversions",{"_index":4740,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.constructmomentobj([0",{"_index":4427,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.constructmomentobj([1",{"_index":4431,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":1252,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.createformgroup",{"_index":4076,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentactionpath",{"_index":278,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.currentpath",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":4360,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.customlogo",{"_index":3796,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.datetimeform.disable",{"_index":2554,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.enable",{"_index":2555,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.get('date').valuechanges.subscribe(val",{"_index":2559,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.setvalue(val",{"_index":2549,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valid",{"_index":2556,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valuechanges.subscribe(fn",{"_index":2551,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetodisplay",{"_index":1849,"title":{},"body":{"components/CardComponent.html":{}}}],["this.decodetoken(payload.access_token",{"_index":1311,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.default_height",{"_index":2350,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.default_width",{"_index":2352,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.delegateurl",{"_index":1176,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.delegateurl}&redirect_uri=${this.computeredirecturi",{"_index":1336,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.detail",{"_index":2632,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":2633,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":2634,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1912,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":2709,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":2711,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1916,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":2720,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.disabled",{"_index":2560,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.disableinfos",{"_index":3969,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.dispalyinfos",{"_index":3972,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.dispatchappstateactionfromoauth2events(e",{"_index":1369,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchauthactionfromoauthevents",{"_index":1356,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchupdatethirdaction(updatethirdaction",{"_index":4160,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.dispatchupdatethirdaction(updatethirdactionaction",{"_index":4152,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.domains",{"_index":4488,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.domsanitizationservice.bypasssecuritytrusturl(this.base64",{"_index":2371,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.dragend.emit(event",{"_index":2762,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":2755,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":2759,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":2756,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.el.nativeelement",{"_index":1741,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.elapsedsofar",{"_index":2913,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.elapsedsofar+tick.payload.elapsedsincelast",{"_index":2911,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":2664,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":2661,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":3792,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":3808,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":3811,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":1188,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.extracti18ntoupdate(versions",{"_index":4731,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.extractparams(child",{"_index":2453,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":2447,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extracttoken",{"_index":1331,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.familynameclaim",{"_index":1185,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.fetchactionmap(card.publisher",{"_index":4274,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchcardoperation(new",{"_index":2145,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchthird(thirdname",{"_index":4207,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.filterpath",{"_index":3746,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.filterstomap(value",{"_index":974,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.first",{"_index":964,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.first$.subscribe(first",{"_index":978,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.fixedheightclass",{"_index":1727,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.followclocktick",{"_index":2908,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.form",{"_index":1661,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value",{"_index":4104,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":3758,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":3554,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1674,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.format()}t${this.formattime",{"_index":2503,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["this.formbuilder.group",{"_index":4089,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":3030,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":3035,"title":{},"body":{"classes/Filter.html":{}}}],["this.getauthenticationmode",{"_index":1406,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.getcurrentguid().tostring",{"_index":3097,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["this.givennameclaim",{"_index":1182,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guid",{"_index":3095,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":1250,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":2125,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":2652,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1863,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1858,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1860,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1862,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse",{"_index":1499,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":1241,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.height",{"_index":2363,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.hide",{"_index":3626,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidetags",{"_index":3087,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.hidetimeline",{"_index":2860,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":2644,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${i18nservice.localurl}${locale}.json`).subscribe(translation",{"_index":3336,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.httpclient.get(`${this.actionurl}${currentactionpath}`).pipe",{"_index":4168,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.get(`${this.archivesurl}/${id",{"_index":2186,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":2132,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":2273,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":4214,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/${process}/${state}/actions",{"_index":4278,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":4256,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":4232,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":4261,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":1257,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":4024,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.get(`${this.userurl}/users/${user",{"_index":4965,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get>(`${this.archivesurl",{"_index":2194,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":4026,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":2185,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(`${this.actionurl}${currentactionpath",{"_index":4146,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":1217,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.put(`${this.userurl}/users/${userdata.login",{"_index":4967,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iconpath",{"_index":3372,"title":{},"body":{"components/IconComponent.html":{}}}],["this.implicitconf",{"_index":1196,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.initfilters",{"_index":3054,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1662,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":2625,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":2624,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initsupportedlocales(config",{"_index":2241,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.inittagfilter",{"_index":3077,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":3075,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":3073,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.instantiateauthmodehandler(this.mode",{"_index":1154,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.instantiateimplicitflowconfiguration",{"_index":1162,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.isauthenticated",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1678,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.issupported(window",{"_index":3841,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.isvirtualtimeundefine",{"_index":4622,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.lightcard",{"_index":1838,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.actions",{"_index":1872,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.id",{"_index":1867,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcardid",{"_index":281,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.lightcards",{"_index":1059,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":4528,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.limitsize",{"_index":2365,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.loadlocale(this._locale",{"_index":3328,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.loaduserdata(auth",{"_index":1255,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.locales",{"_index":3964,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.loginclaim",{"_index":1178,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.loginmessage",{"_index":3621,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.max_height",{"_index":2354,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.max_width",{"_index":2355,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.maxedretries",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menusopeninboth",{"_index":3686,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopeniniframes",{"_index":3682,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopenintabs",{"_index":3680,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.modal.close(thirdactioncomporentmodalreturn.ok",{"_index":2292,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.cancel",{"_index":2293,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.dismiss",{"_index":2291,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.mode",{"_index":1191,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.mousewheelfunc(event",{"_index":3726,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":3737,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1688,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1687,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe.complete",{"_index":1876,"title":{},"body":{"components/CardComponent.html":{}}}],["this.ngunsubscribe.next",{"_index":1875,"title":{},"body":{"components/CardComponent.html":{}}}],["this.notifyservice.createnotification(`new",{"_index":2170,"title":{},"body":{"injectables/CardService.html":{}}}],["this.notifyservice.requestpermission",{"_index":2873,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.oauthservice.configure(this.implicitconf",{"_index":1338,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events",{"_index":1347,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1368,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":1371,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":1374,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":1345,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.initimplicitflow",{"_index":1341,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.loaddiscoverydocument",{"_index":1339,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.logout",{"_index":1287,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":1343,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":1344,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.trylogin",{"_index":1322,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.onchanges",{"_index":2548,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.ontouched",{"_index":2552,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.parentform",{"_index":3745,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.pattern",{"_index":4102,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.periodstarttoend(domain7dayconf",{"_index":4437,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainmonthconf",{"_index":4447,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainweekconf",{"_index":4442,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainyearconf",{"_index":4452,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.permission",{"_index":3843,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.placeholder",{"_index":1681,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.postactionandupdateifnecessary(lightcardid",{"_index":4166,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.preparedlist",{"_index":3538,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":3559,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":3545,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.push({value",{"_index":3540,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.processes",{"_index":960,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.processes[card.process",{"_index":164,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(context.card.publisher,context.card.publisherversion,templatename).pipe",{"_index":3229,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(card.publisher",{"_index":4201,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.querythird(thirdmenuid",{"_index":4218,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":4619,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.refreshthreshold",{"_index":2914,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.registerarrayatindex",{"_index":3215,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":3218,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":3219,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":3210,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":3209,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":3212,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerjson",{"_index":3221,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":3216,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":3220,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":3208,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":3207,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":3214,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":3213,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":3217,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":3211,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":2658,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":3552,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1564,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.resized",{"_index":3922,"title":{},"body":{"components/ResizableComponent.html":{}}}],["this.retryconfigurationloading",{"_index":2259,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":2258,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":1866,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/login",{"_index":1479,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":2655,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":2643,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":3404,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":2717,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1061,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":3648,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetcharchivedcards(new",{"_index":875,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":2239,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":4349,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":3981,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":2061,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.isauthmodecodeorimplicitflow",{"_index":3617,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.loadarchivedcard(action.payload.id",{"_index":1932,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1939,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.move",{"_index":3633,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":4345,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":3654,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":2079,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setheightandwidth",{"_index":2366,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.setsize",{"_index":3374,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setsprites",{"_index":3375,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setting",{"_index":1668,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1671,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.settitle(data",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["this.size",{"_index":962,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/IconComponent.html":{}}}],["this.size$.subscribe(size",{"_index":975,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.sizeicon",{"_index":3376,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":4629,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":3384,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":3386,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":3032,"title":{},"body":{"classes/Filter.html":{}}}],["this.storage.getitem('access_token",{"_index":1441,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.dispatch",{"_index":1428,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SeveritySortComponent.html":{},"components/TimeLineComponent.html":{},"injectables/UserEffects.html":{}}}],["this.store.dispatch(updatethirdaction",{"_index":4170,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.store.pipe",{"_index":1021,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.store.pipe(select(buildconfigselector('feed.timeline.domains",{"_index":4520,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(feedselectors.selectfeed",{"_index":4525,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":1432,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectisimplicitlyauthenticated)).subscribe(linker",{"_index":1440,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.first",{"_index":965,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.size",{"_index":963,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.process.list",{"_index":961,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.tags.list",{"_index":959,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1845,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.notify')).subscribe",{"_index":2871,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick')).subscribe(x",{"_index":2940,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide')).subscribe",{"_index":2859,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":3967,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":3965,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('logo.base64')).subscribe",{"_index":3795,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.height')).subscribe",{"_index":3798,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.limitsize')).subscribe",{"_index":3800,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.width')).subscribe",{"_index":3799,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('navbar.thirdmenus.type",{"_index":3677,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":3622,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.provider",{"_index":1596,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.store.select(buildconfigselector('settings.infos')).subscribe((d",{"_index":3971,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('settings.infos.disable",{"_index":3970,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('settings.tags.hide",{"_index":3088,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.store.select(buildconfigselector('title",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1682,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":4078,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":4367,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":4845,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":3324,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale')).subscribe",{"_index":4423,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale')).subscribe(locale",{"_index":3222,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":3325,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":3435,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1669,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1908,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":2858,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(fetchlightcard(lightcardid",{"_index":3510,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(lightcardid)).pipe",{"_index":3494,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(receivedcard.id)).pipe",{"_index":3482,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(selectarchivelightcardselection",{"_index":1062,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["this.store.select(selectauthenticationstate).subscribe(authstate",{"_index":2626,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.store.select(selectcardactionsappearstate).subscribe(d",{"_index":1853,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":3437,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1841,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectidentifier",{"_index":1683,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":4023,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":3401,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m",{"_index":3618,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":4359,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":3433,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.subscription",{"_index":4527,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":4579,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":4075,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":4081,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":4080,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tags",{"_index":958,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.templatecache[key",{"_index":3235,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":4205,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirdcache.set(key",{"_index":4211,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":2636,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":3238,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.askfori18njson(publisher",{"_index":4720,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.thirdservice.fetchactionmapfromlightcard(lightcard",{"_index":3515,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1913,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":4198,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time",{"_index":2499,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1864,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":4366,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":4382,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":4381,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":4384,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":4377,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":4376,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":4383,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":3439,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":4390,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":4389,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":4378,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":4373,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.predefinedformat(date",{"_index":5003,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.timeservice.tongbtimestamp(datestring",{"_index":972,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.timezones",{"_index":3966,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["this.title",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titleservice.settitle(newtitle",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toggleactive",{"_index":4036,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["this.transformactionmaptoarray",{"_index":1871,"title":{},"body":{"components/CardComponent.html":{}}}],["this.translate.addlangs(config.i18n.supported.locales",{"_index":2265,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.translate.currentlang",{"_index":4702,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.getlangs",{"_index":4707,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.instant(`${this.card.publisher}.${this.card.publisherversion}.${label.key",{"_index":2681,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.translate.settranslation(locale",{"_index":4722,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.settranslation(locale,translation,true",{"_index":3338,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translate.use(this._locale",{"_index":3330,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":3546,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.typefilterform",{"_index":4844,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":4848,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true,{emitevent",{"_index":4855,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":4846,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true,{emitevent",{"_index":4854,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('compliant').setvalue(!next.active",{"_index":4850,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('compliant').setvalue(true,{emitevent",{"_index":4856,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('information').setvalue(!next.active",{"_index":4852,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('information').setvalue(true,{emitevent",{"_index":4857,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":2167,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":2708,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1672,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":4197,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":4239,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeorimplicitflow",{"_index":3616,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usercontext",{"_index":2627,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.userform",{"_index":3627,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":3629,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":3630,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":3632,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":3628,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.askcreateuser(user",{"_index":4937,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.askuserapplicationregistered(userpayload.identifier",{"_index":4922,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.usersurl",{"_index":4021,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.userurl",{"_index":4963,"title":{},"body":{"injectables/UserService.html":{}}}],["this.values",{"_index":3539,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.verifyexpirationdate",{"_index":1283,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.virtualtime",{"_index":4636,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.width",{"_index":2364,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["those",{"_index":1943,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["threshold",{"_index":2918,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["throught",{"_index":4932,"title":{},"body":{"injectables/UserEffects.html":{}}}],["throw",{"_index":1664,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":1107,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":1230,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(err",{"_index":4227,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":1223,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(new",{"_index":4224,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":1204,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["thus",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["tick",{"_index":2825,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":4347,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":2824,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["tickpayload",{"_index":2838,"title":{"classes/TickPayload.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":4993,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["ticks15minconf",{"_index":4477,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks30minconf",{"_index":4479,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks4hoursconf",{"_index":4473,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksconf",{"_index":4499,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksdayconf",{"_index":4474,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tickshalfmonthconf",{"_index":4475,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":382,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["time$|async",{"_index":3442,"title":{},"body":{"components/InfoComponent.html":{}}}],["time's",{"_index":4415,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time).formatdatetime",{"_index":956,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["time_filter",{"_index":3081,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":2845,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":2823,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":2819,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":4335,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":4893,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":822,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":381,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":4361,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeformat",{"_index":3974,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["timeinitialstate",{"_index":4652,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":338,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":3460,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":3455,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":3454,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":3458,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":383,"title":{"components/TimeLineComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":4659,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":784,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":760,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timeout",{"_index":1393,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["timer",{"_index":1655,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1679,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":797,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":4352,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":2820,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":4646,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":4653,"title":{},"body":{"interfaces/TimeState.html":{}}}],["times",{"_index":1922,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/ConfirmModalComponent.html":{}}}],["timescale",{"_index":4658,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":920,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["timespan",{"_index":2835,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/LightCard.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3464,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["timespeed",{"_index":4589,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":4621,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":4608,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1821,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":4594,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":759,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timestruct",{"_index":2494,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["timezone",{"_index":2822,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":3956,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["title",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"injectables/NotifyService.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1794,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titleservice",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["titlestyle",{"_index":1797,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":4319,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":4327,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":3818,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":2190,"title":{},"body":{"injectables/CardService.html":{},"components/TimeLineComponent.html":{}}}],["tmpmoment",{"_index":4568,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tmpmoment.date(2",{"_index":4570,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["toggle",{"_index":4093,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["toggleactive",{"_index":4031,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["togglemenu",{"_index":3766,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":3772,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":3807,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglesort",{"_index":4032,"title":{},"body":{"components/SeveritySortComponent.html":{}}}],["toggleusermenu",{"_index":3767,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tointeger(dateparts[0",{"_index":2481,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[1",{"_index":2484,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[2",{"_index":2487,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(value",{"_index":2471,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["token:string",{"_index":4914,"title":{},"body":{"classes/UserContext.html":{}}}],["token_error",{"_index":1387,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["token_received",{"_index":1385,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["token_refresh_error",{"_index":1388,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tokeninjector",{"_index":3940,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["total",{"_index":1772,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["totalelements",{"_index":3848,"title":{},"body":{"classes/Page.html":{}}}],["totalpages",{"_index":3850,"title":{},"body":{"classes/Page.html":{}}}],["tr",{"_index":4502,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["trace",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":2493,"title":{},"body":{"classes/DateTimeNgb.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":4982,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformactionmaptoarray",{"_index":1809,"title":{},"body":{"components/CardComponent.html":{}}}],["transformadvanced",{"_index":4988,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":4989,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":4996,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":4997,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformtotimestamp",{"_index":954,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transformtotimestamp(date",{"_index":970,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transition",{"_index":4950,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2createuserapplication",{"_index":4917,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2userapplicationregistered",{"_index":4918,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transitionalthirdwithitsversion",{"_index":4683,"title":{"classes/TransitionalThirdWithItSVersion.html":{}},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(card.publisher,card.publisherversion",{"_index":4739,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(menu.id,menu.version",{"_index":4750,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translate",{"_index":1459,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translate/core",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":5050,"title":{},"body":{"dependencies.html":{}}}],["translateactions",{"_index":3892,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/typealiases.html":{}}}],["translateactionstypes",{"_index":3877,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translateactionstypes.refreshtranslation",{"_index":3875,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.translationuptodate",{"_index":3888,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslation",{"_index":3886,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationfailed",{"_index":3891,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationsuccessful",{"_index":3889,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateeffects",{"_index":832,"title":{"injectables/TranslateEffects.html":{}},"body":{"interfaces/AppState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4728,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.i18nbundleversionloaded",{"_index":4736,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.sendtranslateaction(publisherandversion",{"_index":4733,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateloader",{"_index":4185,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot",{"_index":676,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1460,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateservice,private",{"_index":3317,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":1469,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translationreferencestoupdate",{"_index":4764,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[publisher",{"_index":4768,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[third",{"_index":4781,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationuptodate",{"_index":3883,"title":{"classes/TranslationUpToDate.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transorm",{"_index":926,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["tree",{"_index":240,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":3661,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ResizableComponent.html":{},"components/TimeFilterComponent.html":{}}}],["triggered",{"_index":2409,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":2675,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":1535,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":953,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SeveritySortComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["try",{"_index":55,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1665,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["trylogout",{"_index":1487,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":54,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":3631,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":56,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":5071,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2998,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsInputs.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":2836,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":2843,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":3078,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2982,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":385,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":5107,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1580,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":387,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":4839,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":951,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["typeof(event",{"_index":3908,"title":{},"body":{"components/ResizableComponent.html":{}}}],["typeof(limitsize",{"_index":3805,"title":{},"body":{"components/NavbarComponent.html":{}}}],["types/jwt",{"_index":5054,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["typically",{"_index":2408,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":2768,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":1261,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u.lastname",{"_index":1263,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u00a0",{"_index":3287,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["ui/assets/i18n",{"_index":3321,"title":{},"body":{"injectables/I18nService.html":{}}}],["uid",{"_index":1793,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1559,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unabletorefreshorgettoken",{"_index":80,"title":{"classes/UnableToRefreshOrGetToken.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unabletorefreshtoken",{"_index":1454,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unauthenticationfromimplicitflow",{"_index":77,"title":{"classes/UnAuthenticationFromImplicitFlow.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unavailable",{"_index":1587,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncachedpublishers",{"_index":4762,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.foreach(publisher",{"_index":4765,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.length",{"_index":4770,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unchanged",{"_index":475,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["uncomment",{"_index":2763,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2360,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":3010,"title":{},"body":{"classes/Filter.html":{}}}],["undone",{"_index":2299,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["unexpected",{"_index":418,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":1149,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["unit",{"_index":4416,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["unselectedvalues",{"_index":233,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":2764,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsorted",{"_index":2004,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["unsubscribe",{"_index":2093,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":2097,"title":{},"body":{"injectables/CardService.html":{}}}],["untouched",{"_index":4164,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["untrackedversions",{"_index":4777,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unused",{"_index":1945,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["updatealightcard",{"_index":467,"title":{"classes/UpdateALightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatealightcard({card",{"_index":3485,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updateanaction",{"_index":468,"title":{"classes/UpdateAnAction.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateanactionfailure",{"_index":469,"title":{"classes/UpdateAnActionFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter",{"_index":908,"title":{"classes/UpdateArchiveFilter.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter({filters",{"_index":874,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updatearchivepage",{"_index":903,"title":{"classes/UpdateArchivePage.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivepage({page",{"_index":1025,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updatearchivepage).payload.page",{"_index":888,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updateasync",{"_index":2692,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updateathirdaction",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatecard",{"_index":3503,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatecardsubscriptionwithdates",{"_index":2098,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":2114,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":480,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatedsubscription",{"_index":461,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":2881,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":3551,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updateresultpage",{"_index":1010,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updateresultpage(currentpage",{"_index":1013,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updates",{"_index":2925,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updatestatebeforeaction",{"_index":141,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":462,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatethirdaction",{"_index":4122,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactionaction",{"_index":4150,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactions",{"_index":3475,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatetimereference",{"_index":2842,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":4351,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":2826,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["updatetranslateservice",{"_index":4693,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslation",{"_index":3878,"title":{"classes/UpdateTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslation({versions",{"_index":4787,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationfailed",{"_index":3881,"title":{"classes/UpdateTranslationFailed.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationfailed({error",{"_index":4703,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationsuccessful",{"_index":3879,"title":{"classes/UpdateTranslationSuccessful.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationsuccessful({language",{"_index":4701,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatevalue",{"_index":1625,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1645,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1689,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["uploadactions",{"_index":3476,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["upon",{"_index":2249,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uribase",{"_index":1358,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["uribase}${pathend",{"_index":1363,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/enumerations.html":{}}}],["url.endswith('/auth/check_token",{"_index":4677,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":4679,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":4678,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":1843,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["urlcleaner",{"_index":4195,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":1214,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["urlparts",{"_index":1842,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["urlparts[1",{"_index":1844,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["urlparts[3",{"_index":2022,"title":{},"body":{"components/CardListComponent.html":{}}}],["urlsearchparams",{"_index":1208,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url}/auth/realms/${realm}/protocol/openid",{"_index":1601,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["usable",{"_index":1325,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["use",{"_index":1420,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeorimplicitflow",{"_index":3601,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["useexisting",{"_index":2508,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["useful",{"_index":717,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["useless",{"_index":4539,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["uselessauthaction",{"_index":65,"title":{"classes/UselessAuthAction.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":49,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user(userpayload.identifier",{"_index":4926,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.login",{"_index":4940,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.service",{"_index":3949,"title":{},"body":{"modules/ServicesModule.html":{}}}],["useractions",{"_index":2316,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["useractionstypes",{"_index":2087,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["useractionstypes.createuserapplication",{"_index":2304,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonfailure",{"_index":2314,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonsuccess",{"_index":2313,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.handleunexpectederror",{"_index":2315,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationnotregistered",{"_index":2312,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationregistered",{"_index":2311,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["userapplicationnotregistered",{"_index":2306,"title":{"classes/UserApplicationNotRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationnotregistered({error",{"_index":4929,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userapplicationregistered",{"_index":2305,"title":{"classes/UserApplicationRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationregistered({user",{"_index":4924,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercontext",{"_index":2579,"title":{"classes/UserContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["userdata",{"_index":4925,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["userdata.login",{"_index":4966,"title":{},"body":{"injectables/UserService.html":{}}}],["userdatapayload",{"_index":4946,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userdataurl",{"_index":1135,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["usereffects",{"_index":830,"title":{"injectables/UserEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/UserEffects.html":{}}}],["userform",{"_index":3602,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":4012,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userinitialstate",{"_index":4970,"title":{},"body":{"interfaces/UserState.html":{}}}],["username",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitlyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["username$|async",{"_index":3440,"title":{},"body":{"components/InfoComponent.html":{}}}],["userpayload",{"_index":4921,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.firstname",{"_index":4927,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.lastname",{"_index":4928,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userreducer",{"_index":827,"title":{},"body":{"interfaces/AppState.html":{}}}],["userservice",{"_index":3941,"title":{"injectables/UserService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["userstate",{"_index":761,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/UserState.html":{}}}],["usersurl",{"_index":4013,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userurl",{"_index":4955,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1557,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["utc",{"_index":1415,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["utilities/utilities.module",{"_index":2214,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["utilitiesmodule",{"_index":618,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["v",{"_index":296,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["v.label",{"_index":3542,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label.parameters",{"_index":3547,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label|async",{"_index":3560,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.value",{"_index":3543,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v1",{"_index":3245,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":3247,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2542,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":4546,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publishdate",{"_index":4549,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisher",{"_index":4542,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisherversion",{"_index":4543,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":4541,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":4547,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans",{"_index":4533,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.foreach(d",{"_index":4535,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.length",{"_index":4534,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.title",{"_index":4544,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":1200,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["validate",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UselessAuthAction.html":{}}}],["validate(c",{"_index":2536,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validationerrors",{"_index":2539,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validator",{"_index":2506,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validators",{"_index":2547,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":3550,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":2805,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":4103,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":3553,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":1520,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ChangeSort.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitlyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/SeveritySortComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UnableToRefreshOrGetToken.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":3285,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1695,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":3265,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.trim().split",{"_index":2476,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["value:string",{"_index":2036,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":3262,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":3250,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":4083,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":3537,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":3528,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":230,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{}}}],["values.foreach(value",{"_index":2188,"title":{},"body":{"injectables/CardService.html":{}}}],["var",{"_index":308,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1886,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":1468,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":1274,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["verifytranslationneeded",{"_index":4723,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus",{"_index":4789,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus:observable",{"_index":4741,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version:'${version",{"_index":4259,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":3232,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput",{"_index":4806,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["versioninput[publisher",{"_index":4767,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput[third",{"_index":4774,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versionparam",{"_index":4240,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versions",{"_index":3887,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["versions.add(u.version",{"_index":4754,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versions2update",{"_index":4766,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versiontoupdate",{"_index":4786,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["virtual",{"_index":2814,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":4586,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":707,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":269,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/SeveritySortComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["w",{"_index":4510,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":2657,"title":{},"body":{"components/DetailComponent.html":{}}}],["want",{"_index":2367,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["warning",{"_index":3917,"title":{},"body":{"components/ResizableComponent.html":{}}}],["way",{"_index":2153,"title":{},"body":{"injectables/CardService.html":{},"injectables/TimeEffects.html":{}}}],["weather",{"_index":4655,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["web",{"_index":1096,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["wee",{"_index":5009,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["week",{"_index":2862,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["weeknumberonly",{"_index":5017,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["weirdly",{"_index":1870,"title":{},"body":{"components/CardComponent.html":{}}}],["went",{"_index":1918,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":3723,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2976,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":3703,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:18",{"_index":3713,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:20",{"_index":3712,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:23",{"_index":3717,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:28",{"_index":3715,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:33",{"_index":3719,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:41",{"_index":3721,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":1952,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["width",{"_index":1880,"title":{},"body":{"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["width:100px",{"_index":2567,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["window",{"_index":1773,"title":{},"body":{"directives/CalcHeightDirective.html":{},"injectables/NotifyService.html":{},"components/ResizableComponent.html":{}}}],["window.alert(this.translate.instant(\"login.error.disconnected",{"_index":1569,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["window.dispatchevent(evt",{"_index":3921,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.dispatchevent(new",{"_index":3911,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.document.createevent('uievents",{"_index":3919,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.event",{"_index":3731,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location",{"_index":746,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.hash",{"_index":723,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.href",{"_index":1334,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["window.location.pathname",{"_index":2433,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["window:resize",{"_index":1709,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["within",{"_index":745,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["withlatestfrom",{"_index":899,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":2888,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2919,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectarchivefilters",{"_index":885,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":2048,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":1492,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":2261,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":1667,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["won't",{"_index":4371,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["word",{"_index":1884,"title":{},"body":{"components/CardComponent.html":{}}}],["workflow",{"_index":1157,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserEffects.html":{}}}],["works",{"_index":1700,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{}}}],["writevalue",{"_index":2521,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["writevalue(val",{"_index":2540,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["wrong",{"_index":1550,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/IconComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wrote",{"_index":4992,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["www",{"_index":1213,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["x",{"_index":1002,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["x.getboundingclientrect().height).reduce((prev",{"_index":1767,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x.style.height",{"_index":1779,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x1",{"_index":4637,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":4639,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":4638,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":4641,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":4640,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":4981,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":2946,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":1003,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/TimeLineComponent.html":{}}}],["yea",{"_index":5011,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":2162,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["yes",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/I18n.html":{},"classes/LightCard.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["yield",{"_index":1738,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["yy",{"_index":5024,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":2618,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythirdfromcard(this.card",{"_index":2651,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":5073,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":3968,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsInputs.html":{}}}],["zoom",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["zoomonbutton",{"_index":4484,"title":{},"body":{"components/TimeLineComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:113\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:113\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:125\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, lockAction: boolean, updateStateBeforeAction: boolean, called: boolean, key?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/action.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-action\n            \n\n            \n                styleUrls\n                ./action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentActionPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionUrlPath\n                            \n                            \n                                i18nPrefix\n                            \n                            \n                                lightCardId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_modalService: NgbModal, actionService: ThirdActionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/action.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ThirdActionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         Action\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionUrlPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n                \n                    \n                        Type :         I18n\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lightCardId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentActionPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Action} from \"@ofModel/thirds.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ThirdActionService} from \"@ofServices/third-action.service\";\n\n@Component({\n    selector: 'of-action',\n    templateUrl: './action.component.html',\n    styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n\n    @Input()  action: Action;\n    @Input()  i18nPrefix: I18n;\n    @Input()  lightCardId: string;\n    @Input()  actionUrlPath: string;\n    private currentActionPath: string;\n    /* istanbul ignore next */\n    constructor(\n        private _modalService: NgbModal\n        , private actionService: ThirdActionService) {\n    }\n\n    ngOnInit(): void {\n        this.currentActionPath = `${this.actionUrlPath}/${this.action.key}`;\n    }\n\n    submit() {\n        this.actionService.submit(\n            this.lightCardId\n            , this.currentActionPath\n            , this.action\n            , this._modalService);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n{{i18nPrefix + action.label.key}}\n\n    \n\n    \n                \n                    ./action.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{i18nPrefix + action.label.key}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionStatus.html":{"url":"classes/ActionStatus.html","title":"class - ActionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, hidden: boolean, buttonStyle: string, updateStateBeforeAction: boolean, lockAction: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddActionsAppear.html":{"url":"classes/AddActionsAppear.html","title":"class - AddActionsAppear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddActionsAppear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.AddActionsAppear\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:90\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddThirdActions.html":{"url":"classes/AddThirdActions.html","title":"class - AddThirdActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddThirdActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddThirdActions\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService, titleService: Title, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {buildConfigSelector, selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    readonly title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,\n                private i18nService: I18nService,\n                private titleService: Title\n        , private authenticationService: AuthenticationService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`);\n        this.authenticationService.initializeAuthentication();\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.authenticationService.linkAuthenticationStatus(\n            (isAuthenticated: boolean) => {\n                this.isAuthenticated$ = isAuthenticated;\n            });\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries => this.maxedRetries = maxedRetries));\n        this.store.dispatch(new LoadConfig());\n\n        const sTitle = this.store.select(buildConfigSelector('title', this.title));\n        sTitle.subscribe(data => {\n            this.setTitle(data);\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n        Application is loading ...\n    \n        \n        Application is not available yet, please reload later (F5)\n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.button {margin-right: 8px;}\n\n.app-content {\n  height: 100%; //This allows to take up all the space in body, minus padding\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Application is loading ...                    Application is not available yet, please reload later (F5)        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CustomLogoComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuLinkComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {IconComponent} from './components/navbar/icon/icon.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faExternalLinkAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {InfoComponent} from './components/navbar/info/info.component';\nimport {UtilitiesModule} from './modules/utilities/utilities.module';\nimport {MenuLinkComponent} from './components/navbar/menus/menu-link/menu-link.component';\nimport {CustomLogoComponent} from './components/navbar/custom-logo/custom-logo.component';\nimport {OAuthModule} from 'angular-oauth2-oidc';\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        OAuthModule.forRoot(),\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(),\n        FontAwesomeModule,\n        UtilitiesModule,\n        AppRoutingModule\n    ],\n    declarations: [AppComponent,\n        NavbarComponent,\n        LoginComponent,\n        IconComponent,\n        InfoComponent,\n        MenuLinkComponent,\n        CustomLogoComponent],\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, Router, RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\n\nconst defaultPath = '/feed';\nconst archivePath = 'archives';\n\nconst routes: Routes = [\n    {\n        path: 'feed',\n        loadChildren: () => \"import('./modules/feed/feed.module').then(m => m.FeedModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: archivePath,\n        loadChildren: () => \"import('./modules/archives/archives.module').then(m => m.ArchivesModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: () => \"import('./modules/thirdparty/thirdparty.module').then(m => m.ThirdpartyModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: () => \"import('./modules/settings/settings.module').then(m => m.SettingsModule)\",\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: defaultPath}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n/**\n * Redirect the page to the same place.\n * Useful for page refresh action\n * @param currentRouter - the router configured in the object calling this function\n */\nexport function redirectToCurrentLocation(currentRouter: Router): void {\n    const pathname = window.location.hash;\n    const hashLength = pathname.length;\n    const destination = (hashLength > 2) ? pathname.substr(1, hashLength - 1) : defaultPath;\n    // as archive searches are not stored need to got back to archives root path\n    const lastDestination = (destination.includes(archivePath)) ? archivePath : destination;\n    currentRouter.navigate([lastDestination]);\n}\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {\n            enableTracing: false, preloadingStrategy:\n            PreloadAllModules,\n            /* sets initialNavigation to false is needed to enable authentication implicit flow\n            * otherwise HashLocationStrategy breaks it by handling '#' within `window.location`.\n            */\n            initialNavigation: false\n        })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archive\n                                \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archive\n                                    \n                                \n                                \n                                    \n                                        archive:         ArchiveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArchiveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {reducer as archiveReducer} from '@ofStore/reducers/archive.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\nimport {ArchiveState} from \"@ofStates/archive.state\";\nimport {ArchiveEffects} from \"@ofEffects/archive.effects\";\n\nimport {reducer as userReducer} from '@ofStore/reducers/user.reducer';\nimport {UserState} from \"@ofStates/user.state\";\nimport {UserEffects} from \"@ofEffects/user.effects\";\n\nimport {TranslateEffects} from \"@ofEffects/translate.effects\";\n\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n    archive: ArchiveState;\n    user: UserState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects,\n    ArchiveEffects,\n    UserEffects,\n    TranslateEffects\n];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer,\n    archive: archiveReducer,\n    user: userReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n    ChangeSort = '[Feed] Change sort order'\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport class ChangeSort implements Action {\n    readonly type = FeedActionTypes.ChangeSort;\n    /* istanbul ignore next */\n    constructor(){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter\n    | ChangeSort;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveEffects.html":{"url":"injectables/ArchiveEffects.html","title":"injectable - ArchiveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/archive.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryArchivedCards\n                            \n                            \n                                queryArchivedCardsPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/archive.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCardsPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {\n    ArchiveActionTypes,\n    ArchiveQuerySuccess,\n    HandleUnexpectedError,\n    SendArchiveQuery,\n    UpdateArchivePage\n} from '@ofActions/archive.actions';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {selectArchiveFilters} from '@ofSelectors/archive.selectors';\nimport {Page} from '@ofModel/page.model';\nimport {UpdateArchiveFilter} from '../actions/archive.actions';\n\n@Injectable()\nexport class ArchiveEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private actions$: Actions, private service: CardService) {\n    }\n\n    @Effect()\n    queryArchivedCards: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n    @Effect()\n    queryArchivedCardsPage: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveFiltersComponent.html":{"url":"components/ArchiveFiltersComponent.html","title":"component - ArchiveFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-filters\n            \n\n            \n                styleUrls\n                ./archive-filters.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive-filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveForm\n                            \n                            \n                                filtersToMap\n                            \n                            \n                                first$\n                            \n                            \n                                processes$\n                            \n                            \n                                size$\n                            \n                            \n                                tags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsendQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersToMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:76\n                            \n                        \n\n                \n                    \n                        Transorm the filters list to Map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable, combineLatest} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SendArchiveQuery } from '@ofStore/actions/archive.actions';\nimport { DateTimeNgb } from '@ofModel/datetime-ngb.model';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TimeService } from '@ofServices/time.service';\n\nexport enum FilterDateTypes {\n  PUBLISH_DATE_FROM_PARAM = 'publishDateFrom',\n  PUBLISH_DATE_TO_PARAM = 'publishDateTo',\n  ACTIVE_FROM_PARAM = 'activeFrom',\n  ACTIVE_TO_PARAM = 'activeTo'\n\n}\n\nexport const checkElement = (enumeration: typeof FilterDateTypes, value: string): boolean => {\n  let result = false;\n  if (Object.values(enumeration).includes(value)) {\n    result = true;\n  }\n  return result;\n};\n\nexport const transformToTimestamp = (date: NgbDateStruct, time: NgbTimeStruct): string => {\n  return new DateTimeNgb(date, time).formatDateTime();\n};\n\n@Component({\n  selector: 'of-archive-filters',\n  templateUrl: './archive-filters.component.html',\n  styleUrls: ['./archive-filters.component.css']\n})\nexport class ArchiveFiltersComponent implements OnInit {\n\n  tags$: Observable;\n  processes$: Observable;\n  size$: Observable;\n  first$: Observable;\n\n  archiveForm: FormGroup;\n\n  constructor(private store: Store, private timeService: TimeService) {\n    this.archiveForm = new FormGroup({\n      tags: new FormControl(''),\n      process: new FormControl(),\n      publishDateFrom: new FormControl(''),\n      publishDateTo: new FormControl(''),\n      activeFrom: new FormControl(''),\n      activeTo: new FormControl(''),\n    });\n  }\n\n\n  ngOnInit() {\n    this.tags$ = this.store.select(buildConfigSelector('archive.filters.tags.list'));\n    this.processes$ = this.store.select(buildConfigSelector('archive.filters.process.list'));\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  /**\n   * Transorm the filters list to Map\n   */\n  filtersToMap = (filters: any): Map => {\n    const params = new Map();\n    Object.keys(filters).forEach(key => {\n      const element = filters[key];\n        // if the form element is date\n      if (element) {\n        if (checkElement(FilterDateTypes, key)) {\n          const {date, time} = element;\n          if (date) {\n            const dateString = transformToTimestamp(date, time);\n            params.set(key, [this.timeService.toNgBTimestamp(dateString)]);\n          }\n        } else {\n          if (element.length) {\n            params.set(key, element);\n          }\n        }\n      }\n    });\n    return params;\n  }\n\n  sendQuery(): void {\n    const {value} = this.archiveForm;\n    const params = this.filtersToMap(value);\n    this.size$.subscribe(size => params.set('size', [size.toString()]));\n    this.first$.subscribe(first => params.set('page', [first.toString()]));\n    this.store.dispatch(new SendArchiveQuery({params}));\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            archive.search\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-filters.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  .archive-filter {\n    padding-right:7px;\n    padding-left:0;\n  }\n  .archive-radius {\n    border-radius:5px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                      archive.search                              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListComponent.html":{"url":"components/ArchiveListComponent.html","title":"component - ArchiveListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list\n            \n\n            \n                styleUrls\n                ./archive-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable, of} from 'rxjs';\nimport { AppState } from '@ofStore/index';\nimport { Store, select } from '@ngrx/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { selectArchiveLightCards } from '@ofStore/selectors/archive.selectors';\n\n@Component({\n  selector: 'of-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.scss']\n})\nexport class ArchiveListComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n      \n        \n      \n    \n    \n\n\n\n    \n\n    \n                \n                    ./archive-list.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListPageComponent.html":{"url":"components/ArchiveListPageComponent.html","title":"component - ArchiveListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list-page\n            \n\n            \n                styleUrls\n                ./archive-list-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionSize$\n                            \n                            \n                                first$\n                            \n                            \n                                size$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateResultPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateResultPage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateResultPage(currentPage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionSize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UpdateArchivePage} from '@ofActions/archive.actions';\nimport {Store, select} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport { selectArchiveCount } from '@ofStore/selectors/archive.selectors';\nimport { tap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-archive-list-page',\n  templateUrl: './archive-list-page.component.html',\n  styleUrls: ['./archive-list-page.component.scss']\n})\nexport class ArchiveListPageComponent implements OnInit {\n\n  collectionSize$: Observable;\n  first$: Observable;\n  size$: Observable;\n  constructor(private store: Store) {}\n  ngOnInit(): void {\n    this.collectionSize$ = this.store.pipe(\n      select(selectArchiveCount),\n      catchError(err => of(0))\n    );\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  updateResultPage(currentPage): void {\n    this.store.dispatch(new UpdateArchivePage({page: currentPage - 1}));\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n (size$ | async)\"\n  [collectionSize]=\"collectionSize$ | async\"\n  [page]=\"first$ | async\"\n  (pageChange)=\"updateResultPage($event)\"\n  [maxSize]=\"3\"\n  [rotate]=\"true\">\n\n\n    \n\n    \n                \n                    ./archive-list-page.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' (size$ | async)\"  [collectionSize]=\"collectionSize$ | async\"  [page]=\"first$ | async\"  (pageChange)=\"updateResultPage($event)\"  [maxSize]=\"3\"  [rotate]=\"true\">'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveQuerySuccess.html":{"url":"classes/ArchiveQuerySuccess.html","title":"class - ArchiveQuerySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveQuerySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.ArchiveQuerySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArchiveState.html":{"url":"interfaces/ArchiveState.html","title":"interface - ArchiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArchiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/archive.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filters\n                                \n                                \n                                        loading\n                                \n                                \n                                        resultPage\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultPage\n                                    \n                                \n                                \n                                    \n                                        resultPage:     Page\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Page\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n// import { IArchiveFilter } from '@ofModel/archive-filter.model';\n\nexport interface ArchiveState {\n    selectedCardId: string;\n    resultPage: Page;\n    filters: Map;\n    loading: boolean;\n}\n\nexport const archiveInitialState: ArchiveState = {\n        selectedCardId: null,\n        resultPage: new Page(1, 0 , []),\n        filters: new Map(),\n        loading: false\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {select, Store} from '@ngrx/store';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {selectArchiveLightCards, selectArchiveLightCardSelection} from '@ofSelectors/archive.selectors';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  lightCards$: Observable;\n  selection$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.lightCards$ = this.store.pipe(\n        select(selectArchiveLightCards),\n        catchError(err => of([]))\n    );\n    this.selection$ = this.store.select(selectArchiveLightCardSelection);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n    \n\n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchiveFiltersComponent\n                        \n                        \n                            ArchiveListComponent\n                        \n                        \n                            ArchiveListPageComponent\n                        \n                        \n                            ArchivesComponent\n                        \n                        \n                            DatetimeFilterComponent\n                        \n                        \n                            MultiFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                        \n                            CardsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport { ArchiveListPageComponent } from './components/archive-list/archive-list-page/archive-list-page.component';\nimport {ArchivesComponent} from './archives.component';\nimport {ArchiveListComponent} from './components/archive-list/archive-list.component';\nimport { ArchiveFiltersComponent } from './components/archive-filters/archive-filters.component';\nimport { MultiFilterComponent } from './components/archive-filters/multi-filter/multi-filter.component';\nimport { DatetimeFilterComponent } from './components/archive-filters/datetime-filter/datetime-filter.component';\nimport {CardsModule} from '../cards/cards.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArchivesRoutingModule,\n    CardsModule,\n    TranslateModule,\n    NgbModule\n  ],\n  declarations: [\n    ArchivesComponent,\n    ArchiveListComponent,\n    ArchiveFiltersComponent,\n    MultiFilterComponent,\n    ArchiveListPageComponent,\n    DatetimeFilterComponent\n  ]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n        ]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:428\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:431\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:433\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:432\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:434\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        isImplicitlyAuthenticated\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isImplicitlyAuthenticated\n                                    \n                                \n                                \n                                    \n                                        isImplicitlyAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n    isImplicitlyAuthenticated: boolean;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null,\n    isImplicitlyAuthenticated: false\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                CheckImplicitFlowAuthentication\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                            \n                                UnableToRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice handling request of cards\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nobject to get translation \n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:146\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        redirectToCurrentLocation(this.router);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => {\n                                            redirectToCurrentLocation(this.router);\n                                            return new AcceptLogIn(auth);\n                                        })\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:189\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:70\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckImplicitFlowAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => redirectToCurrentLocation(this.router)),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:247\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:165\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:98\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:125\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UnableToRefreshToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.UnableToRefreshOrGetToken),\n            switchMap(() => {\n                window.alert(this.translate.instant(\"login.error.disconnected\"));\n                return of(new TryToLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:264\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {from, Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    CheckImplicitFlowAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '@ofServices/authentication/authentication.service';\nimport {catchError, flatMap, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {Router} from '@angular/router';\nimport {ConfigActionTypes, LoadConfigSuccess} from '@ofActions/config.actions';\nimport {selectCode} from '@ofSelectors/authentication.selectors';\nimport {Message, MessageLevel} from '@ofModel/message.model';\nimport {I18n} from '@ofModel/i18n.model';\nimport {Map} from '@ofModel/map';\nimport {CardService} from '@ofServices/card.service';\nimport {EmptyLightCards} from '@ofActions/light-card.actions';\nimport {ClearCard} from '@ofActions/card.actions';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\nimport {redirectToCurrentLocation} from \"../../app-routing.module\";\nimport { combineLatest } from 'rxjs';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructorCheckImplicitFlowAuthenticationStatus\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param cardService - service handling request of cards\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     * @param translate - object to get translation \n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router,\n                private translate: TranslateService) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogIn\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut flow on demand\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        redirectToCurrentLocation(this.router);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => {\n                                            redirectToCurrentLocation(this.router);\n                                            return new AcceptLogIn(auth);\n                                        })\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n\n    @Effect()\n    CheckImplicitFlowAuthentication: Observable =\n        this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => redirectToCurrentLocation(this.router)),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }));\n    @Effect()\n    UnableToRefreshToken: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.UnableToRefreshOrGetToken),\n            switchMap(() => {\n                window.alert(this.translate.instant(\"login.error.disconnected\"));\n                return of(new TryToLogOut());\n            })\n        );\n\n    handleErrorOnTokenGeneration(errorResponse, category: string) {\n        let message, key;\n        const params = new Map();\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        this.authService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    private resetState() {\n        this.authService.clearAuthenticationInformation();\n        combineLatest(\n            this.store.select(buildConfigSelector('security.provider-realm')),\n            this.store.select(buildConfigSelector('security.provider-url'))\n        ).subscribe(([realm, url]) => {\n            if(realm && url) {\n                const redirect = this.authService.computeRedirectUri();\n                window.location.href = `${url}/auth/realms/${realm}/protocol/openid-connect/logout?redirect_uri=${redirect}`;\n            }\n        });\n        this.cardService.unsubscribeCardOperation();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationModeHandler.html":{"url":"interfaces/AuthenticationModeHandler.html","title":"interface - AuthenticationModeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationModeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                interface to handle the mode of authentication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extractToken\n                                \n                                \n                                    initializeAuthentication\n                                \n                                \n                                    linkAuthenticationStatus\n                                \n                                \n                                    move\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \nextractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:471\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentHrefLocation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:467\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentHrefLocation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:469\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:473\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html'\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CalcHeightDirective.html":{"url":"directives/CalcHeightDirective.html","title":"directive - CalcHeightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CalcHeightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/utilities/calc-height.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [calcHeightDirective]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resizeSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                calcHeightClass\n                            \n                            \n                                fixedHeightClass\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/calc-height.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        calcHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fixedHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:22\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:42\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calcHeight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixedHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    calcHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizeSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive, ElementRef,\n    Input, HostListener, OnInit\n} from '@angular/core';\nimport {debounceTime} from \"rxjs/operators\";\nimport {Subject} from \"rxjs\";\n\n@Directive({\n    selector: '[calcHeightDirective]'\n})\nexport class CalcHeightDirective {\n\n    @Input()\n    parentId: any;\n\n    @Input()\n    fixedHeightClass: any;\n\n    @Input()\n    calcHeightClass: any;\n\n    private _resizeSubject$: Subject;\n\n    constructor(private el: ElementRef) {\n\n        this._resizeSubject$ = new Subject();\n        this._resizeSubject$.asObservable().pipe(\n            debounceTime(300),\n        ).subscribe(x => this.calcHeight(this.parentId, this.fixedHeightClass, this.calcHeightClass));\n\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        this._resizeSubject$.next();\n    }\n\n    private calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string) {\n\n        let parent : HTMLElement;\n\n        parent = document.getElementById(this.parentId);\n\n        //If no parentId was provided or search didn't yield any element, fallback is element calling the directive\n        if(!parent){\n            parent = this.el.nativeElement;\n        }\n\n        if(!parent){\n            return;\n        }\n\n        //Get elements that should be allowed to define their own height (based on content), which are then \"fixed\" for this calculation\n        const fixedElements = parent.getElementsByClassName(fixedHeightClass);\n\n        //Get elements that for which the height should be calculated\n        //For now all elements bearing the calcHeightClass will have their height updated to the same calculated value\n        //Which makes sense if they're next to one another, but another option would be to divide the available height equally\n        const calcElements = parent.getElementsByClassName(calcHeightClass);\n\n        if (!calcElements) return;\n\n        //Sum heights of fixed elements\n        const sumFixElemHeights = Array.from(fixedElements)\n            .map(x => x.getBoundingClientRect().height).reduce((prev, curr) => {\n                return prev + curr;\n            }, 0);\n\n        // Calculate available height by subtracting the heights of fixed elements from the total window height\n        let availableHeight = parent.clientHeight - sumFixElemHeights;\n\n        //console.log(\"CalcHeightDirective \"+fixedHeightClass+\" \"+parent.clientHeight+\" \"+sumFixElemHeights+\" \"+availableHeight);\n\n        // Apply height and overflow\n        Array.from(calcElements)\n            .forEach((x: HTMLElement) => x.style.height = `${availableHeight}px`\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _i18nPrefix\n                            \n                            \n                                    Private\n                                actions\n                            \n                            \n                                actionsAppear\n                            \n                            \n                                actionsUrlPath\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                            \n                                    Private\n                                ngUnsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                getActions\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                transformActionMapToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformActionMapToArray\n                        \n                        \n                    \n                \n            \n            \n                \ntransformActionMapToArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsAppear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsUrlPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:118\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TimeService} from '@ofServices/time.service';\nimport {Action} from '@ofModel/thirds.model';\nimport {Subject} from 'rxjs';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\nimport { selectCardActionsAppearState } from '@ofStore/selectors/card.selectors';\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    protected _i18nPrefix: string;\n    dateToDisplay: string;\n    actionsUrlPath: string;\n    private actions: Action[];\n    actionsAppear = false;\n\n    private ngUnsubscribe: Subject = new Subject();\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService\n    ) {\n    }\n\n    ngOnInit() {\n        const card = this.lightCard;\n        this._i18nPrefix = `${card.publisher}.${card.publisherVersion}.`;\n        this.store.select(selectCurrentUrl).subscribe(url => {\n            if (url) {\n                const urlParts = url.split('/');\n                this.currentPath = urlParts[1];\n            }\n        });\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n        // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, card)))\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe(computedDate => this.dateToDisplay = computedDate);\n\n        this.actionsUrlPath = `/publisher/${card.publisher}/process/${card.processId}/states/${card.state}/actions`;\n        // check if the current card is in the store\n        this.store.select(selectCardActionsAppearState).subscribe(d => {\n            const currentSelected = card.id;\n            if (d.includes(currentSelected)) {\n                this.actionsAppear = true;\n            }\n        });\n    }\n\n    computeDisplayedDates(config: string, lightCard: LightCard): string {\n        switch (config) {\n            case 'NONE':\n                return '';\n            case 'LTTD':\n                return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION':\n                return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START':\n                return this.handleDate(lightCard.startDate);\n            default:\n                return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp: number): string {\n        return this.time.formatDateTime(timeStamp);\n    }\n\n    public select() {\n        this.store.dispatch(new AddActionsAppear(this.lightCard.id));\n        this.router.navigate(['/' + this.currentPath, 'cards', this.lightCard.id]);\n    }\n\n    /* necessary otherwise action buttons are weirdly refresh */\n    getActions() {\n        if (!this.actions) {\n            this.actions = this.transformActionMapToArray();\n        }\n        return this.actions;\n    }\n\n    transformActionMapToArray() {\n        const actions = this.lightCard.actions;\n        if (actions) {\n            const entries = Array.from(actions.entries());\n            return entries.map(([key, action]: [string, Action]) => {\n                return {...action, key: key}\n            });\n        }\n        return [];\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix + lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix + lightCard.summary.key}}\n                \n                    \n                    \n                \n        \n    \n\n    \n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix + lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix + lightCard.summary.key}}                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                currentPath\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDetails\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport { ClearLightCardSelection } from '@ofStore/actions/light-card.actions';\nimport { Router } from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n    currentPath: any;\n\n    constructor(private store: Store,\n        private thirdsService: ThirdsService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if (card) {\n                    if (card.details) {\n                        this.details = [...card.details];\n                    } else {\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion).subscribe(third => {\n                            if (third) {\n                                const state = third.extractState(this.card);\n                                if (state != null) {\n                                    this.details.push(...state.details);\n                                }\n                            }\n                        },\n                        error => console.log(`something went wrong while trying to fetch third for ${this.card.publisher} with ${this.card.publisherVersion} version.`))\n                    ;\n                }\n            });\n            this.store.select(selectCurrentUrl).subscribe(url => {\n                if (url) {\n                    const urlParts = url.split('/');\n                    this.currentPath = urlParts[1];\n                }\n            });\n    }\n    closeDetails() {\n        this.store.dispatch(new ClearLightCardSelection());\n        this.router.navigate(['/' + this.currentPath, 'cards']);\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      &times;\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ×          '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clearCardSelection\n                            \n                            \n                                loadArchivedById\n                            \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadArchivedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from '@ofStore/index';\nimport {CardActionTypes,\n        LoadArchivedCard, LoadArchivedCardFailure,\n        LoadArchivedCardSuccess,\n        LoadCard,\n        LoadCardFailure,\n        LoadCardSuccess,\n        ClearCard} from '@ofActions/card.actions';\nimport {Card} from '@ofModel/card.model';\nimport { ClearLightCardSelection, LightCardActionTypes } from '@ofStore/actions/light-card.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {}\n\n    @Effect()\n    loadById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    loadArchivedById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    clearCardSelection: Observable = this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: whether there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\nsortBySeverity: Indicates whether the cards in the feed should be sorted by severity before being sorted by\nlttd (asc = earliest first) then publishDate (desc = latest first)\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                                \n                                        sortBySeverity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBySeverity\n                                    \n                                \n                                \n                                    \n                                        sortBySeverity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: whether there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n *  * sortBySeverity: Indicates whether the cards in the feed should be sorted by severity before being sorted by\n *    lttd (asc = earliest first) then publishDate (desc = latest first)\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n    sortBySeverity: boolean;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card2.publishDate - card1.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport function compareByLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    /* The sortComparer property can only be defined statically for performance optimization reasons.\n    * See https://github.com/ngrx/platform/issues/898\n    * So to implement a sort criteria chosen by the user, I switched to an unsorted EntityAdapter and did the sorting\n    * in the selectors (see selectSortedFilterLightCardIds) */\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map(),\n        sortBySeverity: true\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n            \n                styleUrls\n                ./card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:34\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:17\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from 'rxjs';\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss']\n})\nexport class CardListComponent extends ResizableComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.store.select(selectCurrentUrl).subscribe(url => {\n      if (url) {\n          const urlParts = url.split('/');\n          if (urlParts[3]) {\n              this.store.dispatch(new AddActionsAppear(urlParts[3]));\n          }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./card-list.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                    LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                archivesUrl\n                            \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchArchivedCards\n                            \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadArchivedCard\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, notifyService: NotifyService, guidService: GuidService, timeService: TimeService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArchivedCards\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArchivedCards(filters: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadArchivedCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadArchivedCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            archivesUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {Card} from '@ofModel/card.model';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\nimport { TimeService } from '@ofServices/time.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n    readonly archivesUrl: string;\n\n\n    constructor(private httpClient: HttpClient,\n                private notifyService: NotifyService,\n                private guidService: GuidService,\n                private timeService: TimeService,\n                private authService: AuthenticationService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n        this.archivesUrl = `${environment.urls.cards}/archives`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        const minus2Hour = new Date(new Date().valueOf() - 2 * 60 * 60 * 1000);\n        const plus48Hours = new Date(minus2Hour.valueOf() + 48 * 60 * 60 * 1000);\n        // security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {\n                headers: this.authService.getSecurityHeader(),\n                // We loose sometimes cards  when reconnecting after a heatbeat timeout\n                // there 's no way to inhibe this heardbeat timeout so putting it to 31536000000 milliseconds make it sufficiently long (1 year)\n                // Anyway the token will expire long before and the connection will restart \n                \n                heartbeatTimeout: 31536000000\n            }));\n    }\n\n\n    unsubscribeCardOperation() {\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    this.notifyService.createNotification(`New cards are being pushed`);\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data, CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`);\n                };\n\n            } catch (error) {\n                console.error('an error occurred', error);\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        });\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number): Observable {\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart: rangeStart, rangeEnd: rangeEnd});\n    }\n\n    loadArchivedCard(id: string): Observable {\n        return this.httpClient.get(`${this.archivesUrl}/${id}`);\n    }\n\n    fetchArchivedCards(filters: Map): Observable> {\n        let params = new HttpParams();\n        filters.forEach((values, key) => values.forEach(value => params = params.append(key, value)));\n        // const tmp = new HttpParams().set('publisher', 'defaultPublisher').set('size', '10');\n        return this.httpClient.get>(`${this.archivesUrl}/`, {params});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionsAppear\n                                \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionsAppear\n                                    \n                                \n                                \n                                    \n                                        actionsAppear:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from '@ofModel/card.model';\n\nexport interface CardState {\n    selected: Card;\n    loading: boolean;\n    error: string;\n    actionsAppear: string[];\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null,\n    actionsAppear: []\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nActionComponent\n\nActionComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {ActionComponent} from './components/action/action.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ConfirmModalComponent} from \"./components/action/confirm-modal/confirm-modal.component\";\n\n@NgModule({\n  declarations: [CardComponent\n      , CardDetailsComponent\n      , DetailsComponent\n      , DetailComponent\n      , ActionComponent\n      , ConfirmModalComponent],\n  imports: [\n    CommonModule,\n      TranslateModule,\n      UtilitiesModule,\n      NgbModule\n  ],\n    exports: [CardComponent\n        , CardDetailsComponent\n        , DetailsComponent\n        , DetailComponent\n        , ConfirmModalComponent\n    ],\n    providers: [HandlebarsService],\n    entryComponents: [ConfirmModalComponent]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeSort.html":{"url":"classes/ChangeSort.html","title":"class - ChangeSort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeSort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ChangeSort\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n    ChangeSort = '[Feed] Change sort order'\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport class ChangeSort implements Action {\n    readonly type = FeedActionTypes.ChangeSort;\n    /* istanbul ignore next */\n    constructor(){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter\n    | ChangeSort;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckImplicitFlowAuthenticationStatus.html":{"url":"classes/CheckImplicitFlowAuthenticationStatus.html","title":"class - CheckImplicitFlowAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckImplicitFlowAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:130\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:444\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:448\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:447\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:446\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initSupportedLocales\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, translate: TranslateService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSupportedLocales\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSupportedLocales(config: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/config.effects.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                this.initSupportedLocales(config);\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:58\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:76\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                private translate: TranslateService,\n\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                this.initSupportedLocales(config);\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n\n    private initSupportedLocales(config: any) {\n        if (config.i18n.supported.locales) this.translate.addLangs(config.i18n.supported.locales);\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmModalComponent.html":{"url":"components/ConfirmModalComponent.html","title":"component - ConfirmModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-modal-component\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                dismiss\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Component} from \"@angular/core\";\n\n@Component({\n    selector:'confirm-modal-component',\n    templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n    dismiss(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.DISMISS);\n    }\n\n    ok(){\n        this.modal.close(ThirdActionComporentModalReturn.OK);\n    }\n\n    cancel(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.CANCEL);\n    }\n}\n\nexport enum ThirdActionComporentModalReturn{\n    CANCEL,OK,DISMISS\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    Action Status Changed\n    \n        &times;\n    \n\n\n    The status of the Action your are about to perform has changed\" \n    Either you send another time the action or you just update the new status.\n        This operation can not be undone.\n    \n\n\n    Save action\n    Send action anyway\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Action Status Changed            ×        The status of the Action your are about to perform has changed\"     Either you send another time the action or you just update the new status.        This operation can not be undone.        Save action    Send action anyway'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplication.html":{"url":"classes/CreateUserApplication.html","title":"class - CreateUserApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplication\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnFailure.html":{"url":"classes/CreateUserApplicationOnFailure.html","title":"class - CreateUserApplicationOnFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnSuccess.html":{"url":"classes/CreateUserApplicationOnSuccess.html","title":"class - CreateUserApplicationOnSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomLogoComponent.html":{"url":"components/CustomLogoComponent.html","title":"component - CustomLogoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomLogoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/custom-logo/custom-logo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-custom-logo\n            \n\n            \n                styleUrls\n                ./custom-logo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./custom-logo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DEFAULT_HEIGHT\n                            \n                            \n                                DEFAULT_WIDTH\n                            \n                            \n                                    Public\n                                domSanitizationService\n                            \n                            \n                                MAX_HEIGHT\n                            \n                            \n                                MAX_WIDTH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHeightAndWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                base64\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizationService: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizationService\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        base64\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limitSize\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeUrl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setHeightAndWidth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHeightAndWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domSanitizationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DomSanitizer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'of-custom-logo',\n  templateUrl: './custom-logo.component.html',\n  styleUrls: ['./custom-logo.component.css']\n})\nexport class CustomLogoComponent implements OnInit {\n\n  @Input() base64: string;\n\n  @Input() limitSize: boolean;\n  @Input() height: number;\n  @Input() width: number;\n\n  DEFAULT_HEIGHT: number;\n  DEFAULT_WIDTH: number;\n\n  MAX_HEIGHT: number;\n  MAX_WIDTH: number;\n\n  constructor(public domSanitizationService: DomSanitizer) { \n    this.DEFAULT_HEIGHT = 32;\n    this.DEFAULT_WIDTH = 150;\n  \n    this.MAX_HEIGHT = 32;\n    this.MAX_WIDTH = 200;\n  }\n\n  ngOnInit() {\n    // default value, Administrator has to change explicitly\n    if (this.base64 == undefined || this.base64 == '') {\n      console.error(\"no custom-logo base64 configured, no picture loaded\");\n    }\n    if (this.height == undefined)\n      this.height = this.DEFAULT_HEIGHT;\n    if (this.width == undefined)\n      this.width = this.DEFAULT_WIDTH;\n    if (this.limitSize == undefined)\n      this.limitSize = true;   \n\n    this.setHeightAndWidth();\n  }\n\n  private setHeightAndWidth() {\n    // in case, we want to limit the customLogo size. By default, it is limited.\n    if (this.limitSize) {\n      if (this.height > this.MAX_HEIGHT)\n        this.height = this.MAX_HEIGHT;\n      if (this.width > this.MAX_WIDTH)\n        this.width = this.MAX_WIDTH;\n    } \n  }\n\n  public getImage(): SafeUrl {\n    return this.domSanitizationService.bypassSecurityTrustUrl(this.base64);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./custom-logo.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomLogoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToArchivedCard\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToArchivedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:72\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {\n    ROUTER_NAVIGATED,\n    ROUTER_NAVIGATION,\n    ROUTER_REQUEST,\n    RouterNavigationAction,\n    RouterRequestAction\n} from \"@ngrx/router-store\";\nimport {filter, map, switchMap} from \"rxjs/operators\";\nimport {LoadArchivedCard, LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {SelectArchivedLightCard} from \"@ofActions/archive.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToArchivedCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeNgb.html":{"url":"classes/DateTimeNgb.html","title":"class - DateTimeNgb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeNgb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/datetime-ngb.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateParserFormatter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                formatDateTime\n                            \n                            \n                                formatTime\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: NgbDateStruct, time?: NgbTimeStruct)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/datetime-ngb.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    NgbTimeStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDateTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatDateTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgbDateParserFormatter, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nexport function padNumber(value: any) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\nexport class DateTimeNgb extends NgbDateParserFormatter {\n\n  /* istanbul ignore next */\n  constructor(readonly date?: NgbDateStruct, private time?: NgbTimeStruct) {\n    super();\n  }\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-').reverse();\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {day: toInteger(dateParts[0]), month: null, year: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n  format(): string {\n    const {date} = this;\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n\n  // a function that transform timestruct to string\n  formatTime(): string {\n    const {time} = this;\n    return time ?\n    `${isNumber(time.hour) ? padNumber(time.hour) : ''}:${isNumber(time.minute) ? padNumber(time.minute) : ''}` : '';\n  }\n\n  formatDateTime() {\n    let result = '';\n    const {date, time} = this;\n    // if date is present\n    if (date) {\n      if (!time) {\n        this.time = {hour: 0, minute: 0, second: 0};\n      }\n      result = `${this.format()}T${this.formatTime()}`;\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeFilterComponent.html":{"url":"components/DatetimeFilterComponent.html","title":"component - DatetimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                                {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                of-datetime-filter\n            \n\n            \n                styleUrls\n                ./datetime-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./datetime-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datetimeForm\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChanges\n                        \n                        \n                    \n                \n            \n            \n                \nonChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datetimeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {hour: 0, minute: 0}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  Validator} from '@angular/forms';\n\n@Component({\n  selector: 'of-datetime-filter',\n  templateUrl: './datetime-filter.component.html',\n  styleUrls: ['./datetime-filter.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatetimeFilterComponent),\n    multi: true\n  }, {\n   provide: NG_VALIDATORS,\n   useExisting: forwardRef(() => DatetimeFilterComponent),\n   multi: true\n }\n]\n})\nexport class DatetimeFilterComponent implements ControlValueAccessor, Validator {\n\n  disabled = true;\n  time = {hour: 0, minute: 0};\n  @Input() filterPath: string;\n  public datetimeForm: FormGroup = new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  });\n  constructor() {\n    this.onChanges();\n  }\n  /* istanbul ignore next */\n  public onTouched: () => void = () => {};\n  /* istanbul ignore next */\n  writeValue(val: any): void {\n    val && this.datetimeForm.setValue(val, { emitEvent: false });\n  }\n  /* istanbul ignore next */\n  registerOnChange(fn: any): void {\n    this.datetimeForm.valueChanges.subscribe(fn);\n  }\n  /* istanbul ignore next */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  /* istanbul ignore next */\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.datetimeForm.disable() : this.datetimeForm.enable();\n  }\n  /* istanbul ignore next */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this.datetimeForm.valid ? null : { invalidForm: {valid: false, message: 'datetimeForm fields are invalid'}};\n  }\n  /* istanbul ignore next */\n  onChanges(): void {\n    this.datetimeForm.get('date').valueChanges.subscribe(val => {\n      if (val) {\n        this.disabled = false;\n      }\n    });\n  }\n  /* istanbul ignore next */\n  onChange(event): void {\n    if (event.target.value === '') {\n      this.disabled = true;\n      this.time = {hour: 0, minute: 0};\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            archive.filters.{{filterPath}}\n            \n        \n        \n            Time\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./datetime-filter.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  legend.accessibility {\n    position:absolute;\n    left:-9999px;\n    width:100px;\n    height:auto;\n    overflow:hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        archive.filters.{{filterPath}}                                        Time                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelayedLightCardUpdate.html":{"url":"classes/DelayedLightCardUpdate.html","title":"class - DelayedLightCardUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelayedLightCardUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:164\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:166\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.DelayedLightCardUpdate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:164\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                currentCard\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                            \n                                    Private\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                handelActionButtonText\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handelActionButtonText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handelActionButtonText(label: I18n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                I18n\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:94\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, SimpleChanges, OnChanges} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {HandlebarsService} from '../../services/handlebars.service';\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from '@angular/platform-browser';\nimport {Action, Third} from '@ofModel/thirds.model';\nimport {zip} from 'rxjs';\nimport {DetailContext} from '@ofModel/detail-context.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectAuthenticationState} from '@ofSelectors/authentication.selectors';\nimport {UserContext} from '@ofModel/user-context.model';\nimport {TranslateService} from '@ngx-translate/core';\nimport {I18n} from '@ofModel/i18n.model';\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit, OnChanges {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    currentCard: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n    private userContext: UserContext;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer,\n                private store: Store,\n                private translate: TranslateService ) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n        this.store.select(selectAuthenticationState).subscribe(authState => {\n            this.userContext = new UserContext(\n                authState.identifier,\n                authState.token,\n                authState.firstName,\n                authState.lastName\n            );\n        });\n    }\n    ngOnChanges(): void {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                // needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}'\n                and with local version '${safeCssUrl.toLocaleString()}'`);\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThirdFromCard(this.card),\n        this.handlebars.executeTemplate(this.detail.templateName, new DetailContext(this.card,null)))\n            .subscribe(\n                ([third, html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (const button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if (!!state && !!state.actions[actionId]) {\n                        this.attachAction(button, state.actions[actionId], actionId);\n                    }\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (const c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n    private handelActionButtonText(label: I18n) {\n        if (label) {\n            if (this.card) {\n                console.log('card exists!');\n            } else {\n                console.log(`card doesn't exist yet`);\n            }\n            return this.translate.instant(`${this.card.publisher}.${this.card.publisherVersion}.${label.key}`, label.parameters);\n        }\n        return 'Undefined';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailContext.html":{"url":"classes/DetailContext.html","title":"class - DetailContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detail-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card, userContext: UserContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detail-context.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContext\n                                                  \n                                                        \n                                                                        UserContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\nexport class DetailContext{\n    constructor(readonly card:Card, readonly userContext: UserContext){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:34\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:17\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent extends ResizableComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n        super();\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      {{i18nPrefix+detailC.detail.title.key}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.calc-height-details {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{i18nPrefix+detailC.detail.title.key}}              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:14\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:25\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:35\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:47\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {TextSettingComponent} from '../text-setting/text-setting.component';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Validators} from '@angular/forms';\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html'\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    @Input() disabled: boolean;\n    constructor(protected store: Store) {\n        super(store);\n        console.log(this.disabled);\n    }\n\n    computeTextValidators() {\n      const validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, notifyService: NotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as moment from 'moment';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store, private notifyService: NotifyService) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectSortedFilteredLightCards),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide')).subscribe(\n            v => this.hideTimeLine = v\n        );\n        moment.updateLocale('en', { week: {\n            dow: 6, // First day of week is Saturday\n            doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n        }});\n        this.store.select(buildConfigSelector('feed.notify')).subscribe(\n            (notif) => {\n                if (notif) {\n                    this.notifyService.requestPermission();\n                }\n            }\n        );\n    }\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedSoFar\n                            \n                            \n                                    Private\n                                followClockTick\n                            \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                    Private\n                                refreshThreshold\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedSoFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            followClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:76\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    private followClockTick = false;\n\n    //Constants used by the updateFilterOnClockTick effect if the feed.timeFilter.followClockTick property is set to true\n    private elapsedSoFar = 0;\n    /*The time filter should only be refreshed once the accumulated shift in time is 1m\n    (since the time filter component only displays the time up to minutes)*/\n    private refreshThreshold = 60000;\n\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n\n        this.store.select(buildConfigSelector('feed.timeFilter.followClockTick')).subscribe(x => this.followClockTick = x);\n\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nSeveritySortComponent\n\nSeveritySortComponent\n\nFeedModule -->\n\nSeveritySortComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            SeveritySortComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock, faToggleOff, faToggleOn} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/time-line/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/tick-format-pipe/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/directives/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/directives/app-draggable\";\nimport {InitChartComponent} from \"./components/time-line/init-chart/init-chart.component\";\nimport {TagsFilterComponent} from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport { SeveritySortComponent } from './components/card-list/filters/severity-sort/severity-sort.component';\n\nlibrary.add(faClock);\nlibrary.add(faToggleOn);\nlibrary.add(faToggleOff);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent,\n        SeveritySortComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:44\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:57\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:68\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const compliant = Severity.COMPLIANT;\n        const information = Severity.INFORMATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.compliant && card.severity == compliant ||\n                    status.information && card.severity == information;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                compliant: true,\n                information: true\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html'\n})\nexport class FiltersComponent implements OnInit {\n\n  hideTags$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString(): string {\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:107\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-5.html":{"url":"classes/HandleUnexpectedError-5.html","title":"class - HandleUnexpectedError-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-6.html":{"url":"classes/HandleUnexpectedError-6.html","title":"class - HandleUnexpectedError-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerJson\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, context: DetailContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                DetailContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n    private _locale: string;\n\n    constructor(private time: TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService,\n                private store: Store){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n        this.registerJson();\n        this.store.select(buildSettingsOrConfigSelector('locale')).subscribe(locale => this.changeLocale(locale))\n    }\n\n    public changeLocale(locale:string){ \n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n    }\n\n    public executeTemplate(templateName: string, context: DetailContext):Observable {\n        return this.queryTemplate(context.card.publisher,context.card.publisherVersion,templateName).pipe(\n            map(t=>t(context)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this._locale;\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerJson() {\n        Handlebars.registerHelper('json', function (obj) {\n            return new Handlebars.SafeString(JSON.stringify(obj))\n        });\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (...args: any[]) {\n            if(args.length === 3)\n                return args[0].split(args[1]);\n            if(args.length === 4)\n                return args[0].split(args[1])[args[2]];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this._locale);\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this._locale, options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                            \n                                    Private\n                                    Static\n                                loadedLocales\n                            \n                            \n                                    Private\n                                    Static\n                                localUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                            \n                                    Private\n                                loadLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            loadedLocales\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            localUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:61\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {combineLatest,Observable} from \"rxjs\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n    private static loadedLocales = new Set();\n    private static localUrl = \"\";\n\n    constructor(private httpClient: HttpClient,private translate: TranslateService,private store: Store) {\n        const i18nPath = \"/assets/i18n/\"\n        const prodI18nPath = \"/ui/assets/i18n/\"\n        I18nService.localUrl = environment.production?prodI18nPath:i18nPath;\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n        if  (!I18nService.loadedLocales.has(this._locale)) this.loadLocale(this._locale);\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n\n   private loadLocale(locale:string ) {\n        this.httpClient.get(`${I18nService.localUrl}${locale}.json`).subscribe(translation => {\n            I18nService.loadedLocales.add(locale);\n            this.translate.setTranslation(locale,translation,true);\n        },\n        error => console.log(`Error : impossible to load locale ${I18nService.localUrl}${locale}.json`)); \n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSize\n                            \n                            \n                                    Private\n                                setSprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bright\n                            \n                            \n                                icon\n                            \n                            \n                                sizeIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/icon/icon.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bright\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSprites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSprites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() sizeIcon:string;\n  @Input() bright:string;\n\n  size:string;\n  sprites:string;\n  iconPath:string;\n\n  constructor(platformLocation: PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.setSize();\n    this.setSprites();\n  }\n\n  private setSize() {\n    switch (this.sizeIcon) {\n      case 'big':\n        this.size = '64px';\n        break;\n      case 'medium':\n        this.size = '32px';\n        break;\n      case 'small':\n        this.size = '16px';\n        break;\n      default:\n        this.size = '32px'  \n    }   \n  }\n\n  private setSprites() {\n    if (this.bright == 'dark' || this.bright == 'light') {\n      this.sprites='sprites-mono.svg'\n    } else {\n      this.bright = undefined; // wrong value set by the user\n      this.sprites='sprites.svg'\n    }\n  }\n  \n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {selectMenuStateSelectedIframeURL,} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n .fill-available {\n     height: 100%;\n     width: 100%;\n }\n .no-border {\n     border: none;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitAuthenticationHandler.html":{"url":"classes/ImplicitAuthenticationHandler.html","title":"class - ImplicitAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Implementation class of @Interface AuthenticationModeHandler\nuse the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n\n            \n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:514\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:530\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentLocationHref: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:520\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentLocationHref\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:526\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:534\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitlyAuthenticated.html":{"url":"classes/ImplicitlyAuthenticated.html","title":"class - ImplicitlyAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitlyAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.ImplicitallyAuthenticated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:141\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    {{userName$|async}}\n    {{description$|async}}\n    {{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.navbar-info-block {\n  display: inline-block;\n  line-height: 90%;\n\n  > .time {\n    font-size: small;\n  }\n\n  > .user-description {\n    font-size: small;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}    {{description$|async}}    {{time$|async}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n    ChangeSort = '[Feed] Change sort order'\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport class ChangeSort implements Action {\n    readonly type = FeedActionTypes.ChangeSort;\n    /* istanbul ignore next */\n    constructor(){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter\n    | ChangeSort;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:153\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCard.html":{"url":"classes/LightCard.html","title":"class - LightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, processId?: string, lttd?: number, title?: I18n, summary?: I18n, tags?: string[], timeSpans?: TimeSpan[], process?: string, state?: string, actions?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpans\n                                                  \n                                                        \n                                                                        TimeSpan[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", INFORMATION = \"INFORMATION\", COMPLIANT = \"COMPLIANT\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.COMPLIANT:\n            result = 2;\n            break;\n        case Severity.INFORMATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    INFORMATION, COMPLIANT\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCardAlreadyUpdated.html":{"url":"classes/LightCardAlreadyUpdated.html","title":"class - LightCardAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCardAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:171\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LightCardAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:171\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delayUpdateLightCard\n                            \n                            \n                                updateAThirdAction\n                            \n                            \n                                updateThirdActions\n                            \n                            \n                                uploadActions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delayUpdateLightCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAThirdAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateThirdActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (!lightCard) return of(new LoadLightCardsFailure({error: new Error(\"Light card not loaded in the store yet\")}));\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:93\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, delay, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    AddThirdActions,\n    DelayedLightCardUpdate,\n    LightCardActionTypes,\n    LightCardAlreadyUpdated,\n    LoadLightCardsFailure,\n    ThirdActionAlreadyLoaded,\n    ThirdActionAlreadyUpdated,\n    UpdateALightCard,\n    UpdateAnAction,\n    UpdateAnActionFailure\n} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {fetchLightCard} from \"@ofSelectors/feed.selectors\";\nimport {CardActionTypes, LoadCard} from \"@ofActions/card.actions\";\nimport {Action as ThirdAction, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateThirdActions: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        );\n\n    @Effect()\n    updateAThirdAction: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        );\n\n    @Effect()\n    uploadActions: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (!lightCard) return of(new LoadLightCardsFailure({error: new Error(\"Light card not loaded in the store yet\")}));\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        );\n    @Effect()\n    delayUpdateLightCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html'\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('ListSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}          {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCard.html":{"url":"classes/LoadArchivedCard.html","title":"class - LoadArchivedCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardFailure.html":{"url":"classes/LoadArchivedCardFailure.html","title":"class - LoadArchivedCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardSuccess.html":{"url":"classes/LoadArchivedCardSuccess.html","title":"class - LoadArchivedCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeOrImplicitFlow\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeOrImplicitFlow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {OAuthService} from \"angular-oauth2-oidc\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeOrImplicitFlow: boolean;\n    loginMessage: Message;\n    codeProvider: any;\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private service: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.useCodeOrImplicitFlow = this.service.isAuthModeCodeOrImplicitFlow();\n        this.store.select(selectMessage).pipe(filter(m => m != null && m.level === MessageLevel.ERROR))\n            .subscribe(m => this.loginMessage = m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider => this.codeProvider = {name: provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void {\n        this.service.move();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:62\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink,\n    SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuLinkComponent.html":{"url":"components/MenuLinkComponent.html","title":"component - MenuLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/menus/menu-link/menu-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-menu-link\n            \n\n            \n                styleUrls\n                ./menu-link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menusOpenInBoth\n                            \n                            \n                                menusOpenInIframes\n                            \n                            \n                                menusOpenInTabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                menuEntry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         ThirdMenu\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuEntry\n                    \n                \n                \n                    \n                        Type :         ThirdMenuEntry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInBoth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInIframes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInTabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-menu-link',\n  templateUrl: './menu-link.component.html',\n  styleUrls: ['./menu-link.component.scss']\n})\nexport class MenuLinkComponent implements OnInit {\n\n  @Input() public menu: ThirdMenu;\n  @Input() public menuEntry: ThirdMenuEntry;\n  menusOpenInTabs: boolean;\n  menusOpenInIframes: boolean;\n  menusOpenInBoth: boolean;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n    this.store.select(buildConfigSelector('navbar.thirdmenus.type', 'BOTH'))\n        .subscribe(v=> {\n          if(v == 'TAB') {\n            this.menusOpenInTabs = true;\n          } else if (v == 'IFRAME') {\n            this.menusOpenInIframes = true;\n          } else {\n            if (!(v == 'BOTH')) {\n              console.log(\"MenuLinkComponent - Property navbar.thirdmenus.type has an unexpected value: \"+v+\". Default (BOTH) will be applied.\")\n            }\n            this.menusOpenInBoth = true;\n          }\n        })\n  }\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n  \n    \n  \n\n    \n\n    \n                \n                    ./menu-link.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.text-link {\n    color: inherit;\n    text-decoration: none;\n}\n\n.icon-link {\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}  {{menu.id}}.{{menu.version}}.{{menuEntry.label}}        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:18\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:28\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:23\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:41\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiFilterComponent.html":{"url":"components/MultiFilterComponent.html","title":"component - MultiFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-filter\n            \n\n            \n                styleUrls\n                ./multi-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                            \n                                parentForm\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentForm\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { I18n } from '@ofModel/i18n.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'of-multi-filter',\n  templateUrl: './multi-filter.component.html',\n  styleUrls: ['./multi-filter.component.css']\n})\nexport class MultiFilterComponent implements OnInit {\n\n  preparedList: { value: string, label: Observable }[];\n  @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n  @Input() parentForm: FormGroup;\n\n  @Input() filterPath: string;\n  constructor(private translateService: TranslateService) {\n    this.parentForm = new   FormGroup({\n      [this.filterPath]: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.preparedList = [];\n    if (this.values) {\n      for (const v of this.values) {\n        if (typeof v === 'string') {\n          this.preparedList.push({value: v, label: of(v)});\n        } else if (typeof v.label === 'string') {\n          this.preparedList.push({value: v.value, label: of(v.label)});\n        } else {\n          this.preparedList.push({\n            value: v.value,\n            label: this.translateService.get(v.label.key, v.label.parameters)\n          });\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  archive.filters.{{filterPath}}\n  \n    {{v.label|async}}\n  \n\n\n    \n\n    \n                \n                    ./multi-filter.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archive.filters.{{filterPath}}      {{v.label|async}}  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html'\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                customLogo\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customLogo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:86\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    customLogo: string;\n    height: Number;\n    width: Number;\n    limitSize: Boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n\n        this.store.select(buildConfigSelector('logo.base64')).subscribe(\n            data => {\n              if (data) this.customLogo = `data:image/svg+xml;base64,${data}`\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.height')).subscribe(\n            height => {\n              if (height) this.height = height;\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.width')).subscribe(\n            width => {\n              if (width) this.width = width;\n            }\n        );\n        this.store.select(buildConfigSelector('logo.limitSize')).subscribe(\n            (limitSize:boolean) => {\n                // BE CAREFUL, as a boolean it has to be test with undefined value to know if it has been set.\n              if (limitSize!=undefined && typeof(limitSize) =='boolean') this.limitSize = limitSize;\n            }\n        );\n    }\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n       \n    \n    \n      \n        \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n                href=\"javascript:void(0)\"\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n          \n        \n        \n        \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate                href=\"javascript:void(0)\"        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                                                                                                                    menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifyService.html":{"url":"injectables/NotifyService.html","title":"injectable - NotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNotification\n                            \n                            \n                                isSupported\n                            \n                            \n                                requestPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notify.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNotification(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupported\n                        \n                        \n                    \n                \n            \n            \n                \nisSupported(window)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    window\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestPermission\n                        \n                        \n                    \n                \n            \n            \n                \nrequestPermission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notify.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NotifyService {\n\n    permission: string;\n    constructor() {\n    }\n\n    isSupported(window): boolean {\n        return 'Notification' in window;\n    }\n    requestPermission(): void {\n        if (this.isSupported(window)) {\n            Notification.requestPermission(status => {\n                this.permission = status;\n            });\n        }\n    }\n\n    createNotification(title: string) {\n        if (this.isSupported(window) && this.permission === 'granted') {\n            return new Notification(title);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Page.html":{"url":"classes/Page.html","title":"class - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/page.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(totalPages: number, totalElements: number, content: T[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/page.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        totalPages\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalElements\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Page {\n    /* istanbul ignore next */\n    constructor(\n        readonly totalPages: number,\n        readonly totalElements: number,\n        readonly content: T[]\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:170\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordOrCodeAuthenticationHandler.html":{"url":"classes/PasswordOrCodeAuthenticationHandler.html","title":"class - PasswordOrCodeAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordOrCodeAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Implementation class of @Interface AuthenticationModeHandler\nuse the OperatorFabric legacy code to manage the authentication in\nOAuth 2.0 password grant or code flow mode\n\n            \n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:481\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:501\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication(currentLocationHref: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:487\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentLocationHref\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:496\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:505\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    ImplicitlyAuthenticated,\n    InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow,\n    UnableToRefreshOrGetToken\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitlyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                this.authModeHandler = this.instantiateAuthModeHandler(this.mode);\n            });\n    }\n\n    /**\n     * Choose to handle the OAuth 2.0 using implicit workflow\n     * if mode equals to 'implicit' other manage password grand\n     * or code flow.\n     * @param mode - extracted from config web-service settings\n     */\n    instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n        if (mode.toLowerCase() === 'implicit') {\n            this.instantiateImplicitFlowConfiguration();\n            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n        }\n        return new PasswordOrCodeAuthenticationHandler(this, this.store);\n    }\n\n    /**\n     * extract Oauth 2.0 configuration from settings and store it in the service\n     * @param oauth2Conf - settings return by the back-end config service\n     */\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration(): void {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly iniitialized');\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n                    this.oauthService.tryLogin();\n                }\n            ).then(() => {\n                if (this.oauthService.hasValidAccessToken()) {\n                    return Promise.resolve();\n                }\n            });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        console.log(new Date(),\"Authentification event\",event);\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitlyAuthenticated());\n                break;\n            }\n            // We can have a token_error or token_refresh_error when it is not possible to refresh token \n            // This case arise for example when using a SSO and the session is not valid anymore (session timeout)\n            case ('token_error'): \n            case('token_refresh_error'):\n                this.store.dispatch(new UnableToRefreshOrGetToken());\n                break;\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public initializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication(window.location.href);\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n/**\n * interface to handle the mode of authentication\n */\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(currentHrefLocation: string): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the OperatorFabric legacy code to manage the authentication in\n * OAuth 2.0 password grant or code flow mode\n */\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        const searchCodeString = 'code=';\n        const foundIndex = currentLocationHref.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: currentLocationHref.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\n/**\n * Implementation class of @Interface AuthenticationModeHandler\n * use the Oidc Connect library to manage OAuth 2.0 implicit authentication mode\n */\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService\n        , private store: Store\n        , private storage: Storage) {\n    }\n\n    initializeAuthentication(currentLocationHref: string) {\n        if (this.authenticationService.getAuthenticationMode().toLowerCase() === 'implicit') {\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitlyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return this.storage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTranslation.html":{"url":"classes/RefreshTranslation.html","title":"class - RefreshTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.RefreshTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:101\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:115\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResizableComponent.html":{"url":"components/ResizableComponent.html","title":"component - ResizableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/utilities/components/resizable/resizable.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-resizable\n            \n\n            \n                styleUrls\n                ./resizable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./resizable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:34\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'of-resizable',\n  templateUrl: './resizable.component.html',\n  styleUrls: ['./resizable.component.css']\n})\nexport class ResizableComponent implements AfterViewInit {\n\n  resized: boolean;\n  constructor() { }\n  ngAfterViewInit() {\n    // Trigger resize event to make sure that height is calculated once parent height is available (see OC-362)\n    if (typeof(Event) === 'function') {\n      // modern browsers\n      window.dispatchEvent(new Event('resize'));\n    } else {\n      // for IE and other old browsers\n      // causes deprecation warning on modern browsers\n      const evt = window.document.createEvent('UIEvents');\n      evt.initUIEvent('resize', true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resized = true;\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n\n\n\n  resizable works!\n\n\n    \n\n    \n                \n                    ./resizable.component.css\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  resizable works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResizableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectArchivedLightCard.html":{"url":"classes/SelectArchivedLightCard.html","title":"class - SelectArchivedLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectArchivedLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SelectArchivedLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendArchiveQuery.html":{"url":"classes/SendArchiveQuery.html","title":"class - SendArchiveQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendArchiveQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SendArchiveQuery\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            NotifyService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdActionService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from '@ofServices/guid.service';\nimport {TimeService} from '@ofServices/time.service';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {FilterService} from '@ofServices/filter.service';\nimport {ConfigService} from '@ofServices/config.service';\nimport {I18nService} from '@ofServices/i18n.service';\nimport {SettingsService} from '@ofServices/settings.service';\nimport { UserService } from './user.service';\nimport {ThirdActionService} from '@ofServices/third-action.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService,\n        UserService,\n        ThirdActionService,\n        NotifyService\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disableInfos$\n                            \n                            \n                                dispalyInfos\n                            \n                            \n                                hideTags$\n                            \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableInfos$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispalyInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsInputs\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n  dispalyInfos: SettingsInputs;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n    this.store.select(buildConfigSelector('settings.infos')).subscribe((d: SettingsInputs) => {\n      this.dispalyInfos = d\n    });\n  }\n\n}\n\ninterface SettingsInputs {\n  email: boolean;\n  description: boolean;\n  language: boolean;\n  timezone: boolean;\n  timeformat: boolean;\n  dateformat: boolean;\n  datetimeformat: boolean;\n  tags: boolean;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:43\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:61\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess,\n    PatchSettings,\n    PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\nimport { AcceptLogIn } from '@ofStore/actions/authentication.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsInputs.html":{"url":"interfaces/SettingsInputs.html","title":"interface - SettingsInputs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsInputs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/components/settings/settings.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateformat\n                                \n                                \n                                        datetimeformat\n                                \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        language\n                                \n                                \n                                        tags\n                                \n                                \n                                        timeformat\n                                \n                                \n                                        timezone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateformat\n                                    \n                                \n                                \n                                    \n                                        dateformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datetimeformat\n                                    \n                                \n                                \n                                    \n                                        datetimeformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeformat\n                                    \n                                \n                                \n                                    \n                                        timeformat:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n  dispalyInfos: SettingsInputs;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n    this.store.select(buildConfigSelector('settings.infos')).subscribe((d: SettingsInputs) => {\n      this.dispalyInfos = d\n    });\n  }\n\n}\n\ninterface SettingsInputs {\n  email: boolean;\n  description: boolean;\n  language: boolean;\n  timezone: boolean;\n  timeformat: boolean;\n  dateformat: boolean;\n  datetimeformat: boolean;\n  tags: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {BaseSettingComponent} from './components/settings/base-setting/base-setting.component';\nimport {TextSettingComponent} from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {EmailSettingComponent} from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport {MultiSettingsComponent} from './components/settings/multi-settings/multi-settings.component';\nimport {TypeAheadSettingsComponent} from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeveritySortComponent.html":{"url":"components/SeveritySortComponent.html","title":"component - SeveritySortComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeveritySortComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/severity-sort/severity-sort.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-severity-sort\n            \n\n\n\n\n            \n                templateUrl\n                ./severity-sort.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toggleActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/severity-sort/severity-sort.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/severity-sort/severity-sort.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSort\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/severity-sort/severity-sort.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/severity-sort/severity-sort.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ChangeSort} from \"@ofActions/feed.actions\";\n\n@Component({\n  selector: 'of-severity-sort',\n  templateUrl: './severity-sort.component.html'\n})export class SeveritySortComponent implements OnInit {\n\n  toggleActive = true;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n  }\n\n  toggleSort(): void {\n    this.toggleActive = !this.toggleActive;\n    this.store.dispatch(new ChangeSort());\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    feed.sort.severityLttdPub\n    feed.sort.lttdPub\n \n\n \n     \n         \n     \n \n \n     \n         \n     \n \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    feed.sort.severityLttdPub    feed.sort.lttdPub                                           '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeveritySortComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[], {emitEvent: false});\n            } else {\n                this.tagFilterForm.get('tags').setValue([], {emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.tags-field {\n  ::ng-deep .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from '../base-setting/base-setting.component';\nimport {AppState} from '@ofStore/index';\nimport {Store} from '@ngrx/store';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html'\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern: string;\n    @Input() disabled: boolean;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup() {\n        const validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null, validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        const validators = [];\n        if (this.requiredField) {\n            validators.push(Validators.required);\n        }\n        if (this.pattern) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value, {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called');\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n\n    \n\n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyLoaded.html":{"url":"classes/ThirdActionAlreadyLoaded.html","title":"class - ThirdActionAlreadyLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:150\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyLoaded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:150\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyUpdated.html":{"url":"classes/ThirdActionAlreadyUpdated.html","title":"class - ThirdActionAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdActionService.html":{"url":"injectables/ThirdActionService.html","title":"injectable - ThirdActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/third-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                callModalAndHandleResponse\n                            \n                            \n                                callModalIfNecessary\n                            \n                            \n                                checkIfReceivedStatusIsDifferentFromCurrentOne\n                            \n                            \n                                dispatchUpdateThirdAction\n                            \n                            \n                                postActionAndUpdateIfNecessary\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/third-action.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalAndHandleResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfReceivedStatusIsDifferentFromCurrentOne\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formerStatus\n                                    \n                                                ActionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdateThirdAction\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdateThirdAction(updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postActionAndUpdateIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \npostActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(lightCardId: string, currentActionPath: string, action: Action, modalService: NgbModal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            actionUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/third-action.service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {Action, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport {map} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {\n    ConfirmModalComponent,\n    ThirdActionComporentModalReturn\n} from \"../modules/cards/components/action/confirm-modal/confirm-modal.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {UpdateAnAction} from \"@ofActions/light-card.actions\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ThirdActionService {\n    readonly actionUrl: string;\n\n    constructor(private httpClient: HttpClient\n        , private store: Store) {\n        this.actionUrl = `${environment.urls.actions}`;\n    }\n\n    checkIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus) {\n        const status = extractActionStatusFromPseudoActionStatus(formerStatus);\n        return map((currentStatus: ActionStatus) => {\n            const normalizedCurrentStatus = extractActionStatusFromPseudoActionStatus(currentStatus);\n            const hasChanged = !_.isEqual(status, normalizedCurrentStatus);\n            return [hasChanged, currentStatus];\n        });\n    }\n\n    postActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action) {\n        return this.httpClient.post(`${this.actionUrl}${currentActionPath}`, action).pipe(\n            this.checkIfReceivedStatusIsDifferentFromCurrentOne(action),\n            map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n                if (hasChanged) {\n                    const updateThirdActionAction = new UpdateAnAction({\n                        cardId: lightCardId,\n                        actionKey: action.key\n                        , status: currentStatus\n                    });\n                    this.dispatchUpdateThirdAction(updateThirdActionAction);\n                }\n            })\n        );\n    }\n\n    callModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable) {\n        return map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n            if (hasChanged) {\n                const updateThirdAction = new UpdateAnAction({\n                    cardId: lightCardId\n                    , actionKey: actionKey\n                    , status: currentStatus\n                });\n                this.callModalAndHandleResponse(modalService, postAction$, updateThirdAction);\n            } else {\n                postAction$.subscribe();\n            }\n        });\n    }\n\n    callModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction) {\n        modalService\n            .open(ConfirmModalComponent)\n            .result\n            .then(performPost => {\n                if (performPost) postAction$.subscribe()\n            })\n            .catch(error => {\n                switch (error) {\n                    case ThirdActionComporentModalReturn.CANCEL: {\n                        // save new status of action and do nothing\n                        this.dispatchUpdateThirdAction(updateThirdAction);\n                        break;\n                    }\n                    case ThirdActionComporentModalReturn.DISMISS: {\n                        // do nothing leaves the former action status untouched\n                        break;\n                    }\n                    default:\n                        console.log('unknown error from update action status modal', error);\n                }\n            });\n    }\n\n    submit(lightCardId: string\n        , currentActionPath: string\n        , action: Action\n        , modalService: NgbModal) {\n\n        const postAction$ = this.postActionAndUpdateIfNecessary(lightCardId, currentActionPath, action);\n\n        if (action.updateStateBeforeAction) {\n            this.httpClient.get(`${this.actionUrl}${currentActionPath}`).pipe(\n                this.checkIfReceivedStatusIsDifferentFromCurrentOne(action as ActionStatus),\n                this.callModalIfNecessary(lightCardId, action.key, modalService, postAction$)\n            ).subscribe();\n        } else {\n            postAction$.subscribe();\n        }\n    }\n\n    /* istanbul ignore next */\n    dispatchUpdateThirdAction(updateThirdAction: UpdateAnAction) {\n        this.store.dispatch(updateThirdAction);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third {\n    /* istanbul ignore next */\n    constructor(\n        readonly name: string,\n        readonly version: string,\n        readonly i18nLabelKey: string,\n        readonly templates?: string[],\n        readonly csses?: string[],\n        readonly locales?: string[],\n        readonly menuEntries?: ThirdMenuEntry[],\n        readonly processes?: OfMap\n    ) {\n    }\n\n    public extractState(card: Card): State {\n        if (card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if (card.state && process.states[card.state]) {\n                return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly label: string,\n        readonly url: string\n    ) {\n    }\n}\n\nexport class ThirdMenu {\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]) {\n    }\n}\n\nexport class Process {\n    /* istanbul ignore next */\n    constructor(\n        readonly states?: OfMap\n    ) {\n    }\n}\n\nexport class State {\n    /* istanbul ignore next */\n    constructor(\n        readonly details?: Detail[],\n        readonly actions?: OfMap\n    ) {\n    }\n}\n\nexport enum ActionType {\n    EXTERNAL = 'EXTERNAL',\n    JNLP = 'JNLP',\n    URL = 'URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly lockAction: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly key?: string\n    ) {\n    }\n\n}\n\nexport const emptyAction = new Action(null, null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus {\n    constructor(\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly updateStateBeforeAction: boolean = false,\n        readonly lockAction: boolean = false,\n    ) {\n    }\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction: object): ActionStatus {\n    let label = new I18n('');\n    const i18n = tAction['label'];\n    if (i18n) {\n        const params = i18n['parameters'];\n        if (params) {\n            Object.setPrototypeOf(params, OfMap.prototype);\n            label = new I18n(i18n['key'], params);\n        } else {\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        , tAction['buttonStyle']\n        , tAction['updateStateBeforeAction']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IframeDisplayComponent} from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:161\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t => \n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            // json empty in this case no action \n            if (json.length>1)\n                {\n                const obj = JSON.parse(json);\n                return new Map(Object.entries(obj));\n                }\n            return new Map();\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askForI18nJson\n                            \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                    Private\n                                convertJsonToI18NObject\n                            \n                            \n                                fetchActionMap\n                            \n                            \n                                fetchActionMapFromLightCard\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                queryThirdFromCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askForI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \naskForI18nJson(publisher: string, locale: string, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertJsonToI18NObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertJsonToI18NObject(locale, publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (r: any) => {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMap\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMap(publisher: string, process: string, state: string, apiVersion?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    process\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMapFromLightCard\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMapFromLightCard(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThirdFromCard\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThirdFromCard(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t => \n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            // json empty in this case no action \n            if (json.length>1)\n                {\n                const obj = JSON.parse(json);\n                return new Map(Object.entries(obj));\n                }\n            return new Map();\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: TickPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        TickPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TickPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickPayload.html":{"url":"classes/TickPayload.html","title":"class - TickPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clock tick (heart beat) payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                elapsedSinceLast\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentTime: moment.Moment, elapsedSinceLast: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentTime\n                                                  \n                                                        \n                                                                    moment.Moment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedSinceLast\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elapsedSinceLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:42\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:56\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {UserActionsTypes} from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n\n        //Update the values of the filter form if the state of the filter has been changed by other means (timeline, followClockTick, etc.)\n        //With {emitEvent:false}, this update won't trigger a valueChanges, so no ApplyFilter action will be dispatched\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start), {emitEvent:false});\n                    else\n                        this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end) {\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end), {emitEvent: false});\n                    }\n                    else\n                        this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n            }\n        });\n\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                    Public\n                                domains\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructMomentObj\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                periodStartToEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            constructMomentObj\n                        \n                        \n                    \n                \n            \n            \n                \nconstructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mommentOjb\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startOf\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            periodStartToEnd\n                        \n                        \n                    \n                \n            \n            \n                \nperiodStartToEnd(conf, future: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:256\n                \n            \n\n\n            \n                \n                    return a moment\nadd time to moment depending of configue object when future is true. compute a domain end\nsubtract time when future is false\nuse startOf function on each time's unit pass in list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    future\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domains\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\nimport { buildSettingsOrConfigSelector } from '@ofStore/selectors/settings.x.config.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom = [];\n    public domains: any;\n\n    constructor(private store: Store) {}\n    ngOnInit() {\n        this.store.select(buildSettingsOrConfigSelector('locale')).subscribe(\n            l => moment.locale(l)\n        )\n        // DOMAIN CONF from moment() to our conf\n        const domain7DayConf = this.constructMomentObj([0, 0, 0, 8, 0, 0, 0], ['day'], null);\n        const domainWeekConf = this.constructMomentObj([0, 0, 1, 0, 0, 0, 0], ['week'], null);\n\n        const domainMonthConf = this.constructMomentObj([0, 1, 0, 0, 0, 0, 0], ['month'], null);\n        const domainYearConf = this.constructMomentObj([1, 0, 0, 0, 0, 0, 0], ['year'], null);\n        const currentMoment = moment();\n\n        const startDomain7Day = moment(currentMoment);\n        startDomain7Day.minutes(0).second(0).millisecond(0);\n        const endDomain7Day = this.periodStartToEnd(domain7DayConf, true);\n\n        const startDomainWeek = moment(currentMoment.startOf('week'));\n        startDomainWeek.minutes(0).second(0).millisecond(0);\n        const endDomainWeek = this.periodStartToEnd(domainWeekConf, true);\n\n        const startDomainMonth = moment(currentMoment.startOf('month'));\n        startDomainMonth.minutes(0).second(0).millisecond(0);\n        const endDomainMonth = this.periodStartToEnd(domainMonthConf, true);\n\n        const startDomainYear = moment(currentMoment.startOf('year'));\n        startDomainYear.hour(0).minutes(0).second(0).millisecond(0);\n        const endDomainYear = this.periodStartToEnd(domainYearConf, true);\n\n        // Adding two domains required by SEA Team\n        const startDomainTR = moment().minutes(0).second(0).millisecond(0).subtract(2, 'hours');\n        const endDomainTR = moment().minutes(0).second(0).millisecond(0).add(10, 'hours');\n\n        const startDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0);\n        const endDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0).add(1, 'days');\n        // FORWARD CONF (movement on domain)\n        const forwardYearConf = {\n            start: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n        };\n        const forwardMonthConf = {\n            start: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0])\n        };\n        const forwardWeekConf = {\n            start: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n        };\n        const forwardDayConf = {\n            start: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n        };\n        const forwardTRConf = {\n            start: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n        };\n\n        const ticks4HoursConf = this.constructMomentObj([0, 0, 0, 0, 4, 0, 0]);\n\n        const ticksDayConf = this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]);\n        const ticksHalfMonthConf = this.constructMomentObj([0, 0, 0, 0, 0, 0, 0], null, [1, 16]);\n\n        const ticks15minConf = this.constructMomentObj([0, 0, 0, 0, 0, 15, 0]);\n        const ticks30minConf = this.constructMomentObj([0, 0, 0, 0, 0, 30, 0]);\n\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            zoomOnButton: true,\n            autoScale: false,\n            showGridLines: true,\n            realTimeBar: true,\n        };\n\n        this.domains = {\n            J: {\n                startDomain: startDomainJ.valueOf(),\n                endDomain: endDomainJ.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'J',\n                forwardConf: forwardDayConf,\n                backwardConf: forwardDayConf,\n                ticksConf: ticks30minConf,\n                formatTicks: 'HH[h]mm'\n            }, TR: {\n                startDomain: startDomainTR.valueOf(),\n                endDomain: endDomainTR.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'TR',\n                forwardConf: forwardTRConf,\n                backwardConf: forwardTRConf,\n                ticksConf: ticks15minConf\n            }, '7D': {\n                startDomain: startDomain7Day.valueOf(),\n                endDomain: endDomain7Day.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: '7D',\n                forwardConf: forwardDayConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: true,\n                firstMoveStartOfUnit: true,\n                homeDomainExtraTicks: true\n            }, 'W': {\n                startDomain: startDomainWeek.valueOf(),\n                endDomain: endDomainWeek.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'W',\n                forwardConf: forwardWeekConf,\n                backwardConf: forwardWeekConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, M: {\n                startDomain: startDomainMonth.valueOf(),\n                endDomain: endDomainMonth.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'M',\n                forwardConf: forwardMonthConf,\n                ticksConf: ticksDayConf,\n                // formatTicks: 'DD',\n                // formatTooltipsDate: 'DD/MM',\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, Y: {\n                startDomain: startDomainYear.valueOf(),\n                endDomain: endDomainYear.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'Y',\n                forwardConf: forwardYearConf,\n                ticksConf: ticksHalfMonthConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }\n        };\n        this.store.pipe(select(buildConfigSelector('feed.timeline.domains')), catchError(() => of([]))).subscribe(d => {\n            if (d) {\n                d.map(domain => {\n                    if (Object.keys(this.domains).includes(domain)) {\n                        this.confZoom.push(this.domains[domain]);\n                    }\n                });\n            }\n        });\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(value => {\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({data: []}));\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                if (val.timeSpans && val.timeSpans.length > 0) {\n                    val.timeSpans.forEach(d => {\n                        const myCardTimelineTimespans = {\n                            displayDate: d.start, publishDate: d.start, // useless\n                            startDate: d.start, // useless\n                            endDate: d.end, // useless\n                            severity: val.severity, publisher: val.publisher,\n                            publisherVersion: val.publisherVersion, summary: val.title\n                        };\n                        myCardsTimeline.push(myCardTimelineTimespans);\n                    });\n                } else {\n                    // val.endDate val.startDate val.severity\n                    const myCardTimeline = {\n                        displayDate: val.startDate,\n                        publishDate: val.publishDate, // useless\n                        startDate: val.startDate, // useless\n                        endDate: val.endDate, // useless\n                        severity: val.severity, publisher: val.publisher,\n                        publisherVersion: val.publisherVersion, summary: val.title\n                    };\n                    myCardsTimeline.push(myCardTimeline);\n                }\n            }\n            this.store.dispatch(new SetCardDataTimeline({cardsTimeline: myCardsTimeline}));\n        });\n    }\n\n    constructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array) {\n        const obj: any = {};\n        obj.year = mommentOjb[0];\n        obj.month = mommentOjb[1];\n        obj.week = mommentOjb[2];\n        obj.day = mommentOjb[3];\n        obj.hour = mommentOjb[4];\n        obj.minute = mommentOjb[5];\n        obj.second = mommentOjb[6];\n        if (startOf) {\n            obj.startOf = startOf;\n        }\n        if (date) {\n            obj.date = date;\n        }\n        return obj;\n    }\n    /**\n     * return a moment\n     * add time to moment depending of configue object when future is true. compute a domain end\n     * subtract time when future is false\n     * use startOf function on each time's unit pass in list\n     * @param conf\n     * @param future\n     */\n    periodStartToEnd(conf, future: boolean): moment.Moment {\n        const tmpMoment = moment();\n        // Test bug\n        // tmpMoment.date(2);\n        const newDate = _.cloneDeep(tmpMoment);\n        Object.keys(conf).forEach(key => {\n            if (key === 'startOf') {\n                conf[key].forEach(value => {\n                    newDate.startOf(value);\n                });\n            } else if (conf[key] > 0) {\n                if (future) {\n                    newDate.add(conf[key], key);\n                } else {\n                    newDate.subtract(conf[key], key);\n                }\n            }\n        });\n        return newDate;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, end?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", INFORMATION = \"INFORMATION\", COMPLIANT = \"COMPLIANT\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.COMPLIANT:\n            result = 2;\n            break;\n        case Severity.INFORMATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    INFORMATION, COMPLIANT\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nerror: last message during state processing before error\ndata: an array of data Card (less information than lightCard)\nwhich are use for display on the chart the number of card on timescale\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication/authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    constructor(private authService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const securityHeader = this.authService.getSecurityHeader();\n            const update = {setHeaders: securityHeader};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionalThirdWithItSVersion.html":{"url":"classes/TransitionalThirdWithItSVersion.html","title":"class - TransitionalThirdWithItSVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionalThirdWithItSVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                third\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(third: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:200\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            third\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    private static i18nBundleVersionLoaded = new Map>();\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n            return of(TranslateEffects.extractThirdToUpdate(versions, TranslateEffects.i18nBundleVersionLoaded));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        let thirdsAndVersions: TransitionalThirdWithItSVersion[];\n        thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        \n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n        \n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) {\n            TranslateEffects.i18nBundleVersionLoaded = {...TranslateEffects.i18nBundleVersionLoaded, ...versionToUpdate};\n            return new UpdateTranslation({versions: versionToUpdate});\n            }\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string, public version:string){}\n};\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateEffects.html":{"url":"injectables/TranslateEffects.html","title":"injectable - TranslateEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                i18nBundleVersionLoaded\n                            \n                            \n                                updateTranslateService\n                            \n                            \n                                verifyTranslationNeeded\n                            \n                            \n                                verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                consolidateThirdAndVersions\n                            \n                            \n                                    Private\n                                extractI18nToUpdate\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFrom\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFromCards\n                            \n                            \n                                    Static\n                                extractThirdToUpdate\n                            \n                            \n                                mapLanguages\n                            \n                            \n                                mapThirds\n                            \n                            \n                                mapVersions\n                            \n                            \n                                    Static\n                                sendTranslateAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, translate: TranslateService, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            consolidateThirdAndVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consolidateThirdAndVersions(thirdsAndVersions: TransitionalThirdWithItSVersion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                            TransitionalThirdWithItSVersion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractI18nToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractI18nToUpdate(versions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFromCards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractThirdToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionInput\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cachedVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapLanguages\n                        \n                        \n                    \n                \n            \n            \n                \nmapLanguages(thirdsAndVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapThirds\n                        \n                        \n                    \n                \n            \n            \n                \nmapThirds(locale: string, thirdsAndVersion: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdsAndVersion\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapVersions\n                        \n                        \n                    \n                \n            \n            \n                \nmapVersions(locale: string, publisher: string, versions: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    versions\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sendTranslateAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTranslateAction(versionToUpdate: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionToUpdate\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            i18nBundleVersionLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTranslateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:129\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    private static i18nBundleVersionLoaded = new Map>();\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n            return of(TranslateEffects.extractThirdToUpdate(versions, TranslateEffects.i18nBundleVersionLoaded));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        let thirdsAndVersions: TransitionalThirdWithItSVersion[];\n        thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        \n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n        \n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) {\n            TranslateEffects.i18nBundleVersionLoaded = {...TranslateEffects.i18nBundleVersionLoaded, ...versionToUpdate};\n            return new UpdateTranslation({versions: versionToUpdate});\n            }\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string, public version:string){}\n};\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationUpToDate.html":{"url":"classes/TranslationUpToDate.html","title":"class - TranslationUpToDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationUpToDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.TranslationUpToDate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout`\n *\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.tags-field {\n    ::ng-deep .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            compliant: new FormControl(),\n            information: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm, {emitEvent: false});\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action, {emitEvent: false});\n                this.typeFilterForm.get('compliant').setValue(!next.active || next.status.compliant, {emitEvent: false});\n                this.typeFilterForm.get('information').setValue(!next.active || next.status.information, {emitEvent: false});\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('action').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('compliant').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('information').setValue(true,{emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.compliant && form.information),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                \n                feed.filters.type.action.label\n            \n            \n                \n                \n                feed.filters.type.compliant.label\n            \n            \n                \n                \n                feed.filters.type.information.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.fa-circle {\n  margin-right: 0.3rem;\n}  \n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n::ng-deep .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        feed.filters.type.alarm.label                                                                        feed.filters.type.action.label                                                                        feed.filters.type.compliant.label                                                                        feed.filters.type.information.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'SeveritySortComponent', 'selector': 'of-severity-sort'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnAuthenticationFromImplicitFlow.html":{"url":"classes/UnAuthenticationFromImplicitFlow.html","title":"class - UnAuthenticationFromImplicitFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnAuthenticationFromImplicitFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UnAuthenticationFromImplicitFlow\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:146\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnableToRefreshOrGetToken.html":{"url":"classes/UnableToRefreshOrGetToken.html","title":"class - UnableToRefreshOrGetToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnableToRefreshOrGetToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UnableToRefreshOrGetToken\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:151\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateALightCard.html":{"url":"classes/UpdateALightCard.html","title":"class - UpdateALightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateALightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateALightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnAction.html":{"url":"classes/UpdateAnAction.html","title":"class - UpdateAnAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:138\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnActionFailure.html":{"url":"classes/UpdateAnActionFailure.html","title":"class - UpdateAnActionFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnActionFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:143\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnActionFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:143\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchiveFilter.html":{"url":"classes/UpdateArchiveFilter.html","title":"class - UpdateArchiveFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchiveFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchiveFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchivePage.html":{"url":"classes/UpdateArchivePage.html","title":"class - UpdateArchivePage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchivePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchivePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslation.html":{"url":"classes/UpdateTranslation.html","title":"class - UpdateTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationFailed.html":{"url":"classes/UpdateTranslationFailed.html","title":"class - UpdateTranslationFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationFailed\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationSuccessful.html":{"url":"classes/UpdateTranslationSuccessful.html","title":"class - UpdateTranslationSuccessful","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationSuccessful\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationSuccessful\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:98\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:98\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: { cardId: string, actionKey: string, status: ActionStatus }) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action {\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyLoaded implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n\n    constructor() {\n    }\n}\n\nexport class ThirdActionAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport class DelayedLightCardUpdate implements Action {\n    readonly type = LightCardActionTypes.DelayedLightCardUpdate;\n\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class LightCardAlreadyUpdated implements Action {\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n\n    constructor() {\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UselessAuthAction.html":{"url":"classes/UselessAuthAction.html","title":"class - UselessAuthAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UselessAuthAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UselessAuthAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:135\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status'\n    ,CheckAuthenticationStatus = '[Authentication] Check Authentication Status'\n    ,AcceptLogIn = '[Authentication] Accept the user log in attempt'\n    ,RejectLogIn = '[Authentication] Reject the user log in attempt'\n    ,TryToLogIn = '[Authentication] Try to log the user in'\n    ,TryToLogOut = '[Authentication] Try to log the user out'\n    ,AcceptLogOut = '[Authentication] Accept the user log out attempt'\n    ,AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt'\n    ,CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow'\n    ,UselessAuthAction = '[Authentication] Test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    ,ImplicitallyAuthenticated = '[Authentication] User is authentication using Implicit Flow' \n    ,UnAuthenticationFromImplicitFlow = '[Authentication] User is log out by implicit Flow internal managment'\n    ,UnableToRefreshOrGetToken = '[Authentication] The token can not be refresh or we cannot get a token'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n */\nexport class AcceptLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n */\nexport class TryToLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n */\nexport class RejectLogIn implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n */\nexport class AcceptLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n     \n    /* istanbul ignore next */\n     constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitlyAuthenticated implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\n\nexport class UnableToRefreshOrGetToken implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.UnableToRefreshOrGetToken;\n\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitlyAuthenticated\n    | UnAuthenticationFromImplicitFlow\n    | UnableToRefreshOrGetToken;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationNotRegistered.html":{"url":"classes/UserApplicationNotRegistered.html","title":"class - UserApplicationNotRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationNotRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationNotRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationRegistered.html":{"url":"classes/UserApplicationRegistered.html","title":"class - UserApplicationRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserContext.html":{"url":"classes/UserContext.html","title":"class - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, token: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user-context.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserContext{\n    constructor(\n        readonly login:string,\n        readonly token:string,\n        readonly firstName:string,\n        readonly lastName:string,\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/user.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserApplication\n                            \n                            \n                                CreateUserApplication\n                            \n                            \n                                transition2CreateUserApplication\n                            \n                            \n                                transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/user.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:45\n                            \n                        \n\n                \n                    \n                        after that the user is authentificated throught the token,\ndetect if the user is already registered in the application and raise the UserApplicationRegistered action\nif not, set the creation user workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:81\n                            \n                        \n\n                \n                    \n                        create the user application (first time in the application)\nraise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:66\n                            \n                        \n\n                \n                    \n                        transition to the creation user application workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:106\n                            \n                        \n\n                \n                    \n                        transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {UserService} from '@ofServices/user.service';\nimport {Observable} from 'rxjs';\nimport {\n    CreateUserApplication,\n    CreateUserApplicationOnFailure,\n    CreateUserApplicationOnSuccess,\n    UserActions,\n    UserActionsTypes,\n    UserApplicationNotRegistered,\n    UserApplicationRegistered\n} from '@ofStore/actions/user.actions';\nimport {AcceptLogIn, AuthenticationActionTypes} from '@ofStore/actions/authentication.actions';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {User} from '@ofModel/user.model';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\n\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private userService: UserService,\n                private authService: AuthenticationService\n    ) {\n    }\n\n    /**\n     * after that the user is authentificated throught the token,\n     * detect if the user is already registered in the application and raise the UserApplicationRegistered action\n     * if not, set the creation user workflow\n     */\n    @Effect()\n    checkUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        );\n\n    /**\n     * transition to the creation user application workflow\n     */\n    @Effect()\n    transition2CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        );\n\n    /**\n     * create the user application (first time in the application)\n     * raise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n     */\n    @Effect()\n    CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        );\n\n    /**\n     * transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n     */\n    @Effect()\n    transition2UserApplicationRegistered: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askCreateUser\n                            \n                            \n                                askUserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular build-in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askCreateUser\n                        \n                        \n                    \n                \n            \n            \n                \naskCreateUser(userData: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askUserApplicationRegistered\n                        \n                        \n                    \n                \n            \n            \n                \naskUserApplicationRegistered(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { environment } from '@env/environment';\nimport { Observable, of } from 'rxjs';\nimport { User } from '@ofModel/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class UserService {\n\n    readonly userUrl : string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     */\n    constructor(private httpClient : HttpClient) {\n        this.userUrl = `${environment.urls.users}`;\n    }\n\n    askUserApplicationRegistered(user : string) : Observable {\n        console.log(\"user in askUserApplicationRegistered service : \" + user);\n        return this.httpClient.get(`${this.userUrl}/users/${user}`);\n    }\n\n    askCreateUser(userData : User) : Observable {\n        console.log(\"user in askCreateUser service : \" + userData.login);\n        return this.httpClient.put(`${this.userUrl}/users/${userData.login}`, userData);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/user.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        registered\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserState {\n    registered : boolean,\n    group : string[]\n}\n\nexport const userInitialState : UserState = {\n    registered : false,\n    group : null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/utilities/utilities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2020, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalcHeightDirective } from \"./calc-height.directive\";\nimport { ResizableComponent } from './components/resizable/resizable.component';\n//TODO Find out where directive would be best put\n\n@NgModule({\n  declarations: [CalcHeightDirective, ResizableComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      CalcHeightDirective, ResizableComponent\n  ]\n})\nexport class UtilitiesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:86\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:62\n                \n            \n\n\n            \n                \n                    special format function used for wrote all ticks on one horizontal line\nif cluster level is correct return a string formatted from value\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:23\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  constructor(private timeService: TimeService) {\n  }\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n      const date = moment(value);\n      switch (clusterLevel) {\n        case 'Min':\n        case 'Sec': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') +\n              'h' + this.timeService.predefinedFormat(date, 'minutesOnly');\n        }\n        case 'Hou': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') + 'h';\n        }\n        case 'Day':\n        case 'Dat':\n        case 'Wee':\n        case 'Mon':\n        case 'Yea':\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * special format function used for wrote all ticks on one horizontal line\n   * if cluster level is correct return a string formatted from value\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        if (clusterLevel === 'Hou') {\n          return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n        } else if (clusterLevel === 'Min') {\n          return this.timeService.predefinedFormat(date, 'minutesOnly');\n        } else if (clusterLevel === 'Sec') {\n          return this.timeService.predefinedFormat(date, 'secondedsOnly');\n        } else if (clusterLevel === 'nbW') {\n          return this.timeService.predefinedFormat(date, 'weekNumberOnly');\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n      switch (clusterLevel) {\n        case 'Hou' : {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format( 'DD MMM YY');\n            // return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n          }\n          if (date.hours() === 0) {\n            return this.timeService.predefinedFormat(date, 'dateOnDay');\n          } else {\n            return this.timeService.predefinedFormat(date, 'hoursOnly');\n          }\n        }\n        case 'Min': {\n          if (date.minutes() === 0) {\n            if (date.hour() === 0) {\n              return this.timeService.predefinedFormat(date, 'dateOnDay');\n            } else {\n              return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n            }\n          }\n        }\n        case 'Sec': {\n          if (date.seconds() === 0) {\n            if (date.minutes() === 0) {\n              if (date.hour() === 0) {\n                return this.timeService.predefinedFormat(date, 'dateOnDay');\n              } else {\n                return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n              }\n            } else {\n              return this.timeService.predefinedFormat(date, 'minutesOnly');\n            }\n          }\n        }\n        case 'Day': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateOnDay');\n        }\n        case 'Dat': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDay');\n        }\n        case 'Wee': {\n          return this.timeService.predefinedFormat(date, 'dateOnWeek');\n        }\n        case 'Mon': {\n          return this.timeService.predefinedFormat(date, 'dateOnMonth');\n        }\n        case 'Yea': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @fortawesome/angular-fontawesome : ^0.5.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.27\n        \n            @fortawesome/free-solid-svg-icons : ^5.12.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.2.2\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            @types/jwt-decode : ^2.2.1\n        \n            angular-oauth2-oidc : ^8.0.4\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.15\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.27\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.1\n        \n            tslib : ^1.9.3\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            ArchiveActionTypes   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterDateTypes   (src/.../archive-filters.component.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            ThirdActionComporentModalReturn   (src/.../confirm-modal.component.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                        \n                            TranslateActionsTypes   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActionsTypes   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                Value : EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                Value : JNLP\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n                        \n                            \n                                Value : URL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/archive.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ArchiveActionTypes\n                    \n                \n                        \n                            \n                                 UpdateArchiveFilter\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update Filter\n                            \n                        \n                        \n                            \n                                 SendArchiveQuery\n                            \n                        \n                        \n                            \n                                Value : [Archive] Send Query\n                            \n                        \n                        \n                            \n                                 ArchiveQuerySuccess\n                            \n                        \n                        \n                            \n                                Value : [Archive] Query was successful\n                            \n                        \n                        \n                            \n                                 UpdateArchivePage\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update query result page\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Archive] Handle unexpected error related to archived card issue\n                            \n                        \n                        \n                            \n                                 SelectArchivedLightCard\n                            \n                        \n                        \n                            \n                                Value : [Archive] Select one archived light card\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 CheckImplicitFlowAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status specifically for the Implicit Flow\n                            \n                        \n                        \n                            \n                                 UselessAuthAction\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Test purpose action\n                            \n                        \n                        \n                            \n                                 ImplicitallyAuthenticated\n                            \n                        \n                        \n                            \n                                Value : [Authentication] User is authentication using Implicit Flow\n                            \n                        \n                        \n                            \n                                 UnAuthenticationFromImplicitFlow\n                            \n                        \n                        \n                            \n                                Value : [Authentication] User is log out by implicit Flow internal managment\n                            \n                        \n                        \n                            \n                                 UnableToRefreshOrGetToken\n                            \n                        \n                        \n                            \n                                Value : [Authentication] The token can not be refresh or we cannot get a token\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 LoadArchivedCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Success\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n                        \n                            \n                                 AddActionsAppear\n                            \n                        \n                        \n                            \n                                Value : [Card] Add Actions Appear\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 INFORMATION\n                            \n                        \n                        \n                            \n                                Value : INFORMATION\n                            \n                        \n                        \n                            \n                                 COMPLIANT\n                            \n                        \n                        \n                            \n                                Value : COMPLIANT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 INFORMATION\n                            \n                        \n                        \n                            \n                                 COMPLIANT\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n                        \n                            \n                                 ChangeSort\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change sort order\n                            \n                        \n            \n        \n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterDateTypes\n                    \n                \n                        \n                            \n                                 PUBLISH_DATE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateFrom\n                            \n                        \n                        \n                            \n                                 PUBLISH_DATE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateTo\n                            \n                        \n                        \n                            \n                                 ACTIVE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeFrom\n                            \n                        \n                        \n                            \n                                 ACTIVE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeTo\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n                        \n                            \n                                 AddThirdActions\n                            \n                        \n                        \n                            \n                                Value : [LCard] Adds some Third Actions to existing card\n                            \n                        \n                        \n                            \n                                 UpdateALightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update a Light Card\n                            \n                        \n                        \n                            \n                                 UpdateAnAction\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update one Action of a LightCard\n                            \n                        \n                        \n                            \n                                 UpdateAnActionFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] No actions where available to update for the current selected card in the state\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyLoaded\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card contains actions\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Third Action unchanged\n                            \n                        \n                        \n                            \n                                 DelayedLightCardUpdate\n                            \n                        \n                        \n                            \n                                Value : [LCard] update Light Card actions later\n                            \n                        \n                        \n                            \n                                 LightCardAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card already Updated\n                            \n                        \n            \n        \n\n    src/app/services/authentication/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ThirdActionComporentModalReturn\n                    \n                \n                        \n                            \n                                 CANCEL\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 DISMISS\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n    src/app/store/actions/translate.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TranslateActionsTypes\n                    \n                \n                        \n                            \n                                 UpdateTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation need an update\n                            \n                        \n                        \n                            \n                                 UpdateTranslationSuccessful\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation successfully updated\n                            \n                        \n                        \n                            \n                                 UpdateTranslationFailed\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation update failed\n                            \n                        \n                        \n                            \n                                 TranslationUpToDate\n                            \n                        \n                        \n                            \n                                Value : [i18n] all Translation materials are already loaded\n                            \n                        \n                        \n                            \n                                 RefreshTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] translate handler has been refreshed\n                            \n                        \n            \n        \n\n    src/app/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionsTypes\n                    \n                \n                        \n                            \n                                 UserApplicationRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application registered\n                            \n                        \n                        \n                            \n                                 UserApplicationNotRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application not registered\n                            \n                        \n                        \n                            \n                                 CreateUserApplication\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnSuccess\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on success\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnFailure\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on failure\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [User] Handle unexpected error related to user creation issue\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nSeveritySortComponent\n\nSeveritySortComponent\n\nFeedModule -->\n\nSeveritySortComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    39 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    120 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArchiveActions   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            Omit   (src/.../thirds.model.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                        \n                            TranslateActions   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActions   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/archive.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveActions\n                \n            \n            \n                \n                        UpdateArchiveFilter | SendArchiveQuery | HandleUnexpectedError | ArchiveQuerySuccess | UpdateArchivePage | SelectArchivedLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess | CheckImplicitFlowAuthenticationStatus | UselessAuthAction | ImplicitlyAuthenticated | UnAuthenticationFromImplicitFlow | UnableToRefreshOrGetToken\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | LoadArchivedCard | LoadArchivedCardSuccess | LoadArchivedCardFailure | HandleUnexpectedError | AddActionsAppear\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter | ChangeSort\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | AddThirdActions | UpdateALightCard | UpdateAnAction | UpdateAnActionFailure | ThirdActionAlreadyLoaded | ThirdActionAlreadyUpdated | DelayedLightCardUpdate | LightCardAlreadyUpdated | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/model/thirds.model.ts\n    \n    \n        \n            \n                \n                    \n                    Omit\n                \n            \n            \n                \n                        Pick>\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n    src/app/store/actions/translate.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TranslateActions\n                \n            \n            \n                \n                        UpdateTranslation | UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation\n\n                \n            \n        \n    \n    src/app/store/actions/user.actions.ts\n    \n    \n        \n            \n                \n                    \n                    UserActions\n                \n            \n            \n                \n                        UserApplicationRegistered | UserApplicationNotRegistered | CreateUserApplication | CreateUserApplicationOnSuccess | CreateUserApplicationOnFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
